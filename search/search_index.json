{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u624b\u6478\u624b Jenkins \u6218\u672f\u6559\u7a0b (\u5927\u5e08\u7248\uff09","text":"<p>Started at June 2020 By Jacob Xi </p> <p></p>"},{"location":"#_1","title":"\u5185\u5bb9\u7b80\u4ecb","text":"<p>\u672c\u4e66\u662f\u672c\u4eba\u7684\u201c\u624b\u6478\u624b\u6218\u672f\u6559\u7a0b\u201d\u7cfb\u5217\u7684\u7b2c\u4e00\u672c\uff0c\u5386\u7ecf\u4e09\u4e2a\u6708\u7684\u65f6\u95f4\uff0c\u7ec8\u4e8e\u5728\u672c\u4eba30\u5c81\u4e4b\u524d\u987a\u5229\u5b8c\u5de5\uff0c\u611f\u8c22\u5bb6\u4eba\uff0c\u670b\u53cb\uff0c\u540c\u4e8b\u4eec\u7684\u652f\u6301\u4e0e\u7406\u89e3\uff0c\u4e5f\u611f\u8c22\u6240\u5728team\u540c\u4e8b\u4eec\u7684\u5e2e\u52a9\u4e0e\u6307\u5bfc\u3002</p> <p>\u672c\u4e66\u7740\u91cd\u4ecb\u7ecd\u4e86Jenkins 2.x \u5728\u5b9e\u9645\u751f\u4ea7\u5de5\u4f5c\u4e2d\u7684\u5404\u79cd\u7528\u6cd5\u4e0e\u6d41\u6c34\u7ebf\u7684\u5f00\u53d1\uff0c\u8fd0\u7ef4\uff0c\u4ee5\u53ca\u4e0e\u5404\u4e2a\u5e38\u7528\u751f\u4ea7\u5de5\u5177\u7684\u6574\u5408\u3002</p> <p>\u672c\u4e66\u517115\u7ae0\uff0c\u4e3b\u8981\u5185\u5bb9\u5305\u62ec\uff1a</p> <ul> <li>Jenkins\u7684\u65e5\u5e38\u8fd0\u7ef4\u7ba1\u7406</li> <li>Jenkins\u6d41\u6c34\u7ebf\u7684\u7f16\u5199\u4e0eGroovy\u8bed\u6cd5</li> <li>\u6784\u5efa\u5de5\u5177\u96c6\u6210: Maven, Gradle, Ant, NPM, Ansible, SaltStack</li> <li>\u51ed\u8bc1\u7ba1\u7406: HashiCorp Vault</li> <li>\u7528\u6237\u8ba4\u8bc1\u96c6\u6210: LADP, Gitlab, Github</li> <li>\u4ee3\u7801\u8d28\u91cf\u5e73\u53f0\u96c6\u6210:  JUnit, JaCoCo, Taurus, SonarQube, Allure</li> <li>\u5236\u54c1\u5e93\u96c6\u6210: Sonatype Nexus, Jfrog Artifactory</li> <li>\u9700\u6c42\u7ba1\u7406\u5de5\u5177\u96c6\u6210: Jira, Gitlab</li> <li>\u5bb9\u5668\u96c6\u6210: Docker, Kubernetes</li> <li>\u81ea\u52a8\u5316\u63a5\u53e3\u6d4b\u8bd5: Jmeter</li> <li>\u6d41\u6c34\u7ebf\u6700\u4f73\u5b9e\u8df5: K8S, Gitlab, Maven, Java, Nodejs CI/CD \u6d41\u6c34\u7ebf</li> <li>\u76d1\u63a7\u4e0eAPI\u8c03\u7528: Prometheus, InfluxDB, Grafana, Python, REST, CORE API</li> </ul>"},{"location":"#salut-cest-moi","title":"Salut! C'est Moi","text":"<p>The man is not old as long as he is seeking something, A man is not old until regrets take the place of dreams.</p> <p>Hello, this is me, Jacob. Currently, I'm working as DevOps and Cloud Engineer in SAP, and I'm the certified AWS Solution Architect and Certified Azure Administrator, Kubernetes Specialist and CI/CD enthusiast. </p> <p>I was working as Backend Engineer in New York City and achieved my CS master degree in SIT, America. Believe it or not, I'll keep writing, more and more books will come out this year. </p> <p>If you have anything want to talk to me directly, you can reach out for via email xichao2015@outlook.com\u3002</p> <p>Salute, c'est moi, Jacob. Actuellement, je travaille en tant qu'ing\u00e9nieur DevOps et Cloud dans SAP, et je suis architecte de solution AWS certifi\u00e9 et administrateur Azure certifi\u00e9, sp\u00e9cialiste Kubernetes et passionn\u00e9 de CI/CD.</p> <p>Je travaillais en tant qu'ing\u00e9nieur backend \u00e0 New York et j'ai obtenu mon master CS \u00e0 SIT, en Am\u00e9rique. Croyez-le ou non, je continuerai \u00e0 \u00e9crire, de plus en plus de livres sortiront cette ann\u00e9e.</p>"},{"location":"#_2","title":"\u76ee\u5f55\u5927\u7eb2","text":"<ul> <li>\u7b2c\u4e00\u7ae0 Jenkins \u8fd0\u7ef4\u7ba1\u7406<ul> <li>\u7b2c\u4e00\u8282 Jenkins \u8fd0\u7ef4\u7ba1\u7406</li> <li>\u7b2c\u4e8c\u8282 \u5206\u5e03\u5f0f\u6784\u5efa\u4e0e\u5e76\u884c\u6784\u5efa</li> <li>\u7b2c\u4e09\u8282 \u53ef\u89c6\u5316\u6784\u5efa\u8bd5\u56fe</li> </ul> </li> <li>\u7b2c\u4e8c\u7ae0 Jenkins \u6d41\u6c34\u7ebf\u57fa\u7840<ul> <li>\u7b2c\u4e00\u8282 \u7f16\u5199 Jenkinsfile \u8fd0\u884c\u6d41\u6c34\u7ebf </li> <li>\u7b2c\u4e8c\u8282 \u58f0\u660e\u5f0f\u6d41\u6c34\u7ebf\u8bed\u6cd5</li> <li>\u7b2c\u4e09\u8282 \u811a\u672c\u5316Pipeline</li> <li>\u7b2c\u56db\u8282 Jenkins Pipeline \u6269\u5c55 \u2014\u2014 \u5171\u4eab\u5e93</li> <li>\u7b2c\u4e94\u8282 \u5982\u4f55\u5feb\u901f\u4e0a\u624bJenkinsfile\u7f16\u5199</li> <li>\u7b2c\u516d\u8282 \u811a\u672c\u5f0f\u7ba1\u9053\u4e0e\u58f0\u660e\u5f0f\u7ba1\u9053-\u56db\u4e2a\u5b9e\u9645\u5dee\u5f02</li> <li>\u7b2c\u4e03\u8282 \u4f7f\u7528Jenkins Git\u53c2\u6570\u5b9e\u73b0\u5206\u652f\u6807\u7b7e\u52a8\u6001\u9009\u62e9</li> </ul> </li> <li>\u7b2c\u4e09\u7ae0 Groovy \u57fa\u7840<ul> <li>\u7b2c\u4e00\u8282 Groovy \u7b80\u660e\u6559\u7a0b </li> <li>\u7b2c\u4e8c\u8282 Groovy \u57fa\u7840</li> </ul> </li> <li>\u7b2c\u56db\u7ae0 \u6784\u5efa\u5de5\u5177\u96c6\u6210<ul> <li>\u7b2c\u4e00\u8282 \u6784\u5efa\u5de5\u5177\u96c6\u6210 </li> <li>\u7b2c\u4e8c\u8282 \u96c6\u6210 SaltStack \u90e8\u7f72\u5de5\u5177</li> <li>\u7b2c\u4e09\u8282 Jenkins\u96c6\u6210Ansibe\u5b9e\u73b0\u81ea\u52a8\u5316\u90e8\u7f72</li> <li>\u7b2c\u56db\u8282 Jenkins\u96c6\u6210Ansibe\u5b9e\u6218\u624b\u518c \u2014\u2014 BB Mobile\uff082018\uff09</li> </ul> </li> <li>\u7b2c\u4e94\u7ae0 \u51ed\u8bc1\u7ba1\u7406<ul> <li>\u7b2c\u4e00\u8282 \u51ed\u8bc1\u7ba1\u7406 </li> <li>\u7b2c\u4e8c\u8282 \u51ed\u8bc1\u7ba1\u7406\u4f7f\u7528HashiCorp Vault</li> <li>\u7b2c\u4e8c\u8282(Extra) - Store Secrets using Hashicorp Vault with Docker</li> <li>\u7b2c\u4e09\u8282 \u5728Jenkins\u65e5\u5fd7\u4e2d\u9690\u85cf\u654f\u611f\u4fe1\u606f</li> </ul> </li> <li>\u7b2c\u516d\u7ae0 \u7528\u6237\u8ba4\u8bc1\u96c6\u6210<ul> <li>\u7b2c\u4e00\u8282 Ldap \u7528\u6237\u8ba4\u8bc1\u96c6\u6210</li> <li>\u7b2c\u4e8c\u8282 Jenkins\u96c6\u6210Gitlab SSO\u5355\u70b9\u767b\u5f55</li> <li>\u7b2c\u4e09\u8282 Jenkins\u96c6\u6210Github SSO\u5355\u70b9\u767b\u5f55</li> </ul> </li> <li>\u7b2c\u4e03\u7ae0 Gitlab \u7248\u672c\u63a7\u5236\u7cfb\u7edf\u96c6\u6210<ul> <li>\u7b2c\u4e00\u8282 Gitlab \u2013 Jenkins Integration</li> <li>\u7b2c\u4e8c\u8282 Gitlab-Jenkins \u7248\u672c\u63a7\u5236</li> <li>\u7b2c\u4e09\u8282 Gitlab-Jenkins \u7248\u672c\u63a7\u5236\uff08\u8865\u5145\uff09</li> </ul> </li> <li>\u7b2c\u516b\u7ae0 \u4ee3\u7801\u8d28\u91cf\u5e73\u53f0\u96c6\u6210<ul> <li>\u7b2c\u4e00\u8282 \u4ee3\u7801\u8d28\u91cf</li> <li>\u7b2c\u4e8c\u8282 SonarQube\uff1a\u6301\u7eed\u4ee3\u7801\u8d28\u91cf\u68c0\u67e5</li> <li>\u7b2c\u4e09\u8282 Allure\u6d4b\u8bd5\u62a5\u544a\uff1a\u66f4\u7f8e\u89c2\u7684\u6d4b\u8bd5\u62a5\u544a</li> <li>\u7b2c\u56db\u5b63 \u4ee3\u7801\u8d28\u91cf\u5e73\u53f0\u96c6\u6210(SonarQube Final Edition)</li> </ul> </li> <li>\u7b2c\u4e5d\u7ae0 \u5236\u54c1\u5e93\u96c6\u6210<ul> <li>\u7b2c\u4e00\u8282 Sonatype Nexus \u57fa\u672c\u4ecb\u7ecd\u4e0e\u5b89\u88c5 </li> <li>\u7b2c\u4e8c\u8282 \u5236\u54c1\u7ba1\u7406</li> <li>\u7b2c\u4e09\u8282 Nexus \u5236\u54c1\u4e0a\u4f20</li> <li>\u7b2c\u56db\u8282 Jenkins &amp; Jfrog Artifactory</li> </ul> </li> <li>\u7b2c\u5341\u7ae0 \u9700\u6c42\u7ba1\u7406\u5de5\u5177\u96c6\u6210<ul> <li>\u7b2c\u4e00\u8282 k8s \u5b89\u88c5\u672c\u5730 Jira \u670d\u52a1 </li> <li>\u7b2c\u4e8c\u8282 Jenkins \u914d\u7f6e\u7aef\u5230\u7aef\u6d41\u6c34\u7ebf \uff08Jira \u548c Gitlab\u7684\u96c6\u6210\uff09</li> </ul> </li> <li>\u7b2c\u5341\u4e00\u7ae0 Docker \u96c6\u6210<ul> <li>\u7b2c\u4e00\u8282 \u57fa\u4e8e Docker \u914d\u7f6e\u6784\u5efa\u8d44\u6e90\u6c60 </li> <li>\u7b2c\u4e8c\u8282 \u57fa\u4e8eDocker\u7684pipeline\u6d41\u6c34\u7ebf</li> <li>\u7b2c\u4e09\u8282 \u6784\u5efa\u5e94\u7528\u955c\u50cf\u5230\u955c\u50cf\u4ed3\u5e93\u7ba1\u7406</li> <li>\u7b2c\u56db\u8282 \u4f7f\u7528Groovy\u4ee3\u7801\u521d\u59cb\u5316Docker\u914d\u7f6e</li> </ul> </li> <li>\u7b2c\u5341\u4e8c\u7ae0 K8S \u5e73\u53f0\u96c6\u6210<ul> <li>\u7b2c\u4e00\u8282 K8S \u5e73\u53f0\u96c6\u6210(\u5168)</li> </ul> </li> <li>\u7b2c\u5341\u4e09\u7ae0 \u81ea\u52a8\u5316\u63a5\u53e3\u6d4b\u8bd5<ul> <li>\u7b2c\u4e00\u8282 Jmeter &amp; Ant \u81ea\u52a8\u5316\u6d4b\u8bd5</li> <li>\u7b2c\u4e8c\u8282 Jenkins\u3001Ant\u3001Jmeter \u81ea\u52a8\u5316\u6d4b\u8bd5</li> </ul> </li> <li>\u7b2c\u5341\u56db\u7ae0 \u6d41\u6c34\u7ebf\u6700\u4f73\u5b9e\u8df5<ul> <li>\u7b2c\u4e00\u8282 \u57fa\u4e8eJira\u7aef\u5230\u7aef\u6d41\u6c34\u7ebf\u7684\u6700\u4f73\u5b9e\u8df5</li> <li>\u7b2c\u4e8c\u8282 Jenkins K8S Gitlab \u96c6\u6210</li> <li>\u7b2c\u4e09\u8282 Jenkins + K8S + Gitlab \u6784\u5efa RLEASE \u6253\u5305\u53d1\u5e03\u66f4\u65b0\u6d41\u6c34\u7ebf\u5230K8S\u96c6\u7fa4</li> <li>\u7b2c\u56db\u8282 \u7248\u672c\u664b\u7ea7\u53ca\u53d1\u5e03\u6d41\u6c34\u7ebf</li> <li>\u7b2c\u4e94\u8282 \u524d\u7aef\u540e\u7aef\u9879\u76ee\u53d1\u5e03\u6d41\u6c34\u7ebf\uff08Java+Nodejs)</li> </ul> </li> <li>\u7b2c\u5341\u4e94\u7ae0 \u76d1\u63a7\u4e0eAPI\u8c03\u7528<ul> <li>\u7b2c\u4e00\u8282 \u4f7f\u7528 Prometheus \u76d1\u63a7 Jenkins</li> <li>\u7b2c\u4e8c\u8282 Jenkins+InfluxDB+Grafana \u6536\u96c6\u6784\u5efa\u6570\u636e</li> <li>\u7b2c\u4e09\u8282 Jenkins Python API \u5b9e\u8df5</li> <li>\u7b2c\u56db\u8282 Jenkins REST API \u4f7f\u7528\u5b9e\u8df5</li> <li>\u7b2c\u4e94\u8282 Jenkins Core Api &amp; Job DSL\u521b\u5efa\u9879\u76ee</li> </ul> </li> </ul>"},{"location":"#reference-code","title":"Reference Code:","text":"<ul> <li>JenkinslibTest(Shared Library functions)</li> <li>Jenkinsfiles for the book</li> <li>jenkins-maven-service(Gitlab: demo-maven-service)</li> <li>jmetertest(Gitlab: demo-interfacetest)</li> </ul>"},{"location":"#to-be-continue","title":"To be continue","text":"<p>\u672c\u4eba\u5c06\u5e26\u6765\u624b\u6478\u624b\u6218\u672f\u6559\u7a0b\u66f4\u591a\u7684\u5185\u5bb9\u548c\u6587\u7ae0\uff0c \u63a5\u4e0b\u6765\u7684\u5c06\u5728ES7, Chef, Azure900, Azure103, AWS Solution Arcitect, AWS Big Data Speciality, Istio, Python\u5e26\u6765\u66f4\u591a\u66f4\u5168\u9762\u7684\u7535\u5b50\u4e66\uff0c\u656c\u8bf7\u671f\u5f85\u3002(PS: \u4e0b\u9762\u7684\u56fe\u7247\u5355\u7eaf\u4e3a\u4e86\u597d\u73a9)</p> <p></p>"},{"location":"Mkdocs_github_travis/","title":"GitHub+Travis+Mkdocs\u81ea\u52a8\u5316\u6784\u5efa\u6587\u6863\u5e93","text":"<p>\u4e86\u89e3\u8fc7<code>Traefik</code>,<code>nginx-ingress</code>\u7684\u540c\u5b66\u90fd\u77e5\u9053\u4ed6\u4eec\u7684\u5b98\u65b9\u6587\u6863\u90fd\u662f\u57fa\u4e8e<code>mkdocs</code>\u548c<code>material</code>\u4e3b\u9898\u5236\u4f5c\u800c\u6210\uff0c\u4f60\u89c9\u5f97\u8fd9\u79cd\u6587\u6863\u5e93\u600e\u4e48\u6837\uff1f\u6709\u6ca1\u6709\u5fc3\u52a8\u628a\u81ea\u5df1\u7684\u6587\u6863\u4e5f\u6574\u6210\u90a3\u6837\u7684\uff1f\uff0c\u4e0b\u9762\u6211\u4eec\u76f4\u63a5\u52a8\u624b\u5e72\u8d77\u6765\u5427\u3002</p> <ul> <li> <p>Reference: https://squidfunk.github.io/mkdocs-material/getting-started/</p> </li> <li> <p>Traefik mkdocs.yml</p> </li> </ul>"},{"location":"Mkdocs_github_travis/#mkdocs","title":"\u5b89\u88c5<code>mkdocs</code>","text":"<pre><code>$ pip3 install mkdocs\n</code></pre> <p>\u521b\u5efa\u5e76\u8fd0\u884c\u4e00\u4e2a\u65b0\u7684\u6587\u6863\u5e93</p> <pre><code>$ mkdocs new mkdocstest\nINFO    -  Creating project directory: mkdocstest \nINFO    -  Writing config file: mkdocstest/mkdocs.yml \nINFO    -  Writing initial docs: mkdocstest/docs/index.md\n\n$ cd mkdocstest\n\nls\ndocs       mkdocs.yml\n</code></pre> <p>\u521b\u5efa\u4e00\u4e2a\u65b0\u7684GIT\u4ed3\u5e93 https://github.com/Chao-Xi/mkdocstest/</p> <p>\u914d\u7f6e\u901a\u8fc7SSH\u65e0\u5bc6\u8bbf\u95ee\u4ee3\u7801\u4ed3\u5e93</p> <pre><code>ssh-keygen -t rsa \n</code></pre> <p>\u7136\u540e\u5c06\u516c\u94a5\u62f7\u8d1d\u5230<code>GITHUB</code>\u7684<code>SSH-KEY</code>\u4e2d</p> <p></p> <p>\u6d4b\u8bd5\u672c\u5730\u662f\u5426\u53ef\u4ee5\u8fdc\u7a0b\u8fde\u63a5</p> <pre><code>$ ssh -T git@github.com\n\nHi Chao-Xi! You've successfully authenticated, but GitHub does not provide shell access.\n</code></pre> <pre><code>cd mkdocstest/\n$ git init\nInitialized empty Git repository in /Users/.../Devops_sap/mkdocstest/.git/\n\n$ git remote add origin https://github.com/Chao-Xi/mkdocstest.git\n\n$ mkdocs build --clean \nINFO    -  Cleaning site directory \nINFO    -  Building documentation to directory: /Users/i515190/Devops_sap/mkdocstest/site \nINFO    -  Documentation built in 0.10 seconds\n\n$ mkdocs gh-deploy --clean\nINFO    -  Cleaning site directory \nINFO    -  Building documentation to directory: /Users/i515190/Devops_sap/mkdocstest/site \nINFO    -  Documentation built in 0.07 seconds \nWARNING -  Version check skipped: No version specified in previous deployment. \nINFO    -  Copying '/Users/...../Devops_sap/mkdocstest/site' to 'gh-pages' branch and pushing to GitHub. \nINFO    -  Your documentation should shortly be available at: https://Chao-Xi.github.io/mkdocstest\n</code></pre> <p></p> <p>\u6b64\u65f6\uff0c\u5373\u53ef\u901a\u8fc7https://chao-xi.github.io/mkdocstest/ \u8bbf\u95ee</p> <pre><code>$ httpstat https://Chao-Xi.github.io/mkdocstest/\nConnected to 185.199.111.153:443 from 10.59.166.22:55172\n\nHTTP/1.1 301 Moved Permanently\nConnection: keep-alive\nContent-Length: 162\nServer: GitHub.com\nContent-Type: text/html\nLocation: https://chao-xi.github.io/mkdocstest/\nX-GitHub-Request-Id: E47A:4120:32AC47:3F1DAD:5ED9BB90\nAccept-Ranges: bytes\nDate: Fri, 05 Jun 2020 03:27:13 GMT\nVia: 1.1 varnish\nAge: 0\nX-Served-By: cache-hkg17928-HKG\nX-Cache: MISS\nX-Cache-Hits: 0\nX-Timer: S1591327633.042481,VS0,VE237\nVary: Accept-Encoding\nX-Fastly-Request-ID: 140827b789772d97c699c32dd8e355bdc9319a80\n\nBody stored in: /var/folders/r7/nml_dsbn44gcd2jlqh7s2w940000gn/T/tmpsm2mjr\n\n  DNS Lookup   TCP Connection   TLS Handshake   Server Processing   Content Transfer\n[    121ms   |      37ms      |     88ms      |       273ms       |        0ms       ]\n             |                |               |                   |                  |\n    namelookup:121ms          |               |                   |                  |\n                        connect:158ms         |                   |                  |\n                                    pretransfer:246ms             |                  |\n                                                      starttransfer:519ms            |\n                                                                                 total:519ms  \n</code></pre> <p>\u73b0\u5728\u5f00\u59cb\u4f18\u5316<code>mkdocs</code>\u4ee5\u53ca\u914d\u7f6e\u4e3b\u9898\u6837\u5f0f\u4e86\uff0c\u8fd9\u90e8\u5206\u5de5\u4f5c\u90fd\u5728<code>mkdocs.yml</code>\u4e2d\u5b8c\u6210</p> <p>\u8fd9\u91cc\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u7684\u6587\u6863 </p> <p>https://squidfunk.github.io/mkdocs-material/getting-started/</p> <pre><code>site_name: Jacob MKdoc Test\nsite_description: \"\u8fd9\u662f\u4e00\u4e2amkdocs\u7684demo\u6d4b\u8bd5\u77e5\u8bc6\u7f51\u7ad9\"\nsite_author: \"Jacob Xi\"\ncopyright: \"Copyright &amp;copy; 2016-2020 Jacob Xi\"\n\nplugins:\n  - search # necessary for search to work\n  - awesome-pages\nnav:\n  - 'Welcome': \"index.md\"\n  - 'Getting Started':\n    - '\u5173\u4e8e': 'about.md'\n    - '\u81ea\u52a8\u5316': 'devops.md'\n\nrepo_url: https://github.com/Chao-Xi/mkdocstest.git\nrepo_name: \"Opening on Github\"\n\ntheme: \n  language: zh\n  name: 'material'\n  include_sidebar: true\n  logo: 'images/logo.png'\n  favicon: 'images/logo.png'\n  feature:\n    tabs: false\n  palette:\n    primary: 'deep purple'\n    accent: 'deep purple'\n  i18n:\n    prev: 'Previous'\n    next: 'Next'\n</code></pre> <pre><code> tree docs/\ndocs/\n\u251c\u2500\u2500 about.md\n\u251c\u2500\u2500 devops.md\n\u251c\u2500\u2500 images\n\u2502   \u251c\u2500\u2500 azure-fundamentals-badge.png\n\u2502   \u2514\u2500\u2500 logo.png\n\u2514\u2500\u2500 index.md\n\n1 directory, 5 files\n</code></pre> <p>\u5176\u4e2d<code>theme</code>\u6307\u5b9a\u7684\u662f\u4f60\u7684\u4e3b\u9898\uff0c\u8fd9\u4e2a\u4e3b\u9898\u5c31\u662f\u6211\u4eec\u5e38\u89c1\u5230\u7684<code>traefik</code>,<code>nginx-ingress</code>\u7b49\u5728\u4f7f\u7528\u7684\u5b98\u65b9\u6587\u6863\u7684\u4e3b\u9898\uff0c\u5982\u679c\u4f7f\u7528\u5b83\uff0c\u4f60\u53ef\u80fd\u8fd8\u9700\u8981\u989d\u5916\u7684\u5b89\u88c5\u4e00\u4e0b</p> <pre><code>pip3 install mkdocs-material\n</code></pre> <p>\u5b89\u88c5\u4e4b\u540e\uff0c\u6267\u884c<code>mkdocs gh-deploy --clean</code>\u5373\u53ef\u8bbf\u95ee\u7f51\u7ad9\u7684\u4e3b\u9898:</p> <p></p> <p>\u6bcf\u6b21\u624b\u52a8\u90e8\u7f72\u90fd\u662f\u6bd4\u8f83\u9ebb\u70e6\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u5229\u7528\u6c38\u4e45\u514d\u8d39\u7684<code>travis</code>\u6765\u5e2e\u52a9\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898:</p> <pre><code>$ tree . -L 1 -a\n.\n\u251c\u2500\u2500 .git\n\u251c\u2500\u2500 .travis.yml\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 mkdocs.yml\n\u2514\u2500\u2500 site\n\n3 directories, 3 files\n</code></pre> <p><code>.travis.yml</code></p> <pre><code>language: python # Set the build language to Python\n\npython: 3.6 # Set the version of Python to use\n\nbranches: master # Set the branch to build from\n\ninstall:\n  - pip install mkdocs mkdocs-material pymdown-extensions pygments mkdocs-awesome-pages-plugin # Install the required dependencies\n\nscript: true # Skip script (Don't use this if one already exists)\n\nbefore_deploy:\n  - mkdocs build --verbose --clean --strict # Build a local version of the docs\n\ndeploy: # Deploy documentation to Github in the gh_pages branch\n  provider: pages\n  skip_cleanup: true\n  github_token: $GITHUB_API_KEY\n  local_dir: site\n  on:\n    branch: master\n</code></pre> <p>Remember <code>.travis.yml</code> needed to be pushed into github first, then can trigger travisCI to auto build</p> <p>\u7136\u540e\u6211\u4eec\u4f7f\u7528<code>GITHUB</code>\u7684\u8d26\u53f7\u767b\u5f55<code>travis</code>, \u5730\u5740\u662f:<code>https://travis-ci.org</code>\uff0c\u5728\u767b\u5f55\u8fdb\u53bb\u4e4b\u540e\uff0c\u6211\u4eec\u9009\u62e9\u5408\u9002\u7684\u542f\u7528<code>CICD</code></p> <p></p> <p>\u7136\u540e\u70b9\u51fbsetting\u8fdb\u5165\u4ed3\u5e93\u7684\u914d\u7f6e\u754c\u9762\uff0c\u8bbe\u7f6e\u4ee5\u4e0b\u4e09\u4e2a\u73af\u5883\u53d8\u91cf</p> <p></p> <p>\u5176\u4e2d,<code>GITHUB_API_KEY</code>\u662f\u4ece<code>gitub</code>\u4e0a\u83b7\u53d6\u7684<code>Access Token</code>,\u5269\u4e0b\u7684\u4e24\u4e2a\u662f\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u624b\u52a8\u7684\u89e6\u53d1\u4ee5\u4e0b\u6784\u5efa:</p> <p>Creating a personal access token for the command line</p> <p><code>Settings</code> -&gt; <code>Developer Settings</code> -&gt; <code>Personal access tokens.</code> -&gt; <code>Generate new token</code> -&gt; <code>Generate token.</code></p> <p></p> <p>\u7d27\u63a5\u7740\uff0c\u6211\u4eec\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u77e5\u9053\u6784\u5efa\u662f\u5426\u5b8c\u6210\uff0c\u6211\u4eec\u5728<code>README.md</code>\u6587\u4ef6\u4e0a\u6dfb\u52a0\u4e86\u4e00\u4e2a\u6784\u5efa\u7684\u72b6\u6001\u5c55\u793a: </p> <p></p> <p>\u7d27\u63a5\u7740\uff0c\u6211\u4eec\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u77e5\u9053\u6784\u5efa\u662f\u5426\u5b8c\u6210\uff0c\u6211\u4eec\u5728<code>README.md</code>\u6587\u4ef6\u4e0a\u6dfb\u52a0\u4e86\u4e00\u4e2a\u6784\u5efa\u7684\u72b6\u6001\u5c55\u793a:</p> <p></p> <p>\u590d\u5236<code>RESULT</code>\u4fe1\u606f\u5230<code>readme.md</code>\u4e2d\uff0c\u5373\u53ef\u663e\u793a\u6bcf\u6b21\u6784\u5efa\u7684\u72b6\u6001\u4fe1\u606f:</p> <p><code>readme.md</code></p> <pre><code>[![Build Status](https://travis-ci.org/Chao-Xi/mkdocstest.svg?branch=master)](https://travis-ci.org/Chao-Xi/mkdocstest)\n\n# Mkdocs Test\n\nThis is Mkdocs Test pages for my further research book\n</code></pre> <p></p> <p>\u67e5\u770b\u4e00\u4e0b\u6211\u4eec\u7684\u6784\u5efa\u5386\u53f2</p> <p></p> <p>\u8fd9\u6837\u6bcf\u6b21\u63a8\u52a8\u5230Git\u4ed3\u5e93\u4e4b\u540e\uff0c\u5c31\u4f1a\u81ea\u52a8\u7684\u7f16\u8bd1\u597d\u9759\u6001\u6587\u4ef6\u5230<code>gh-deploy</code>\u5206\u652f\u4e86.</p>"},{"location":"jk_chapter1/","title":"\u7b2c\u4e00\u8282 Jenkins \u8fd0\u7ef4\u7ba1\u7406","text":"<p><code>Jenkins</code>\u662f\u4e00\u4e2a\u81ea\u52a8\u5316\u670d\u52a1\u5668\uff0c\u76ee\u524d\u53d1\u5c55\u8d85\u8fc715\u5e74\uff0c\u6bd4\u8f83\u6210\u719f\u7684CI\u5de5\u5177\uff08\u4e5f\u53ef\u4ee5CD) \u80fd\u591f\u5b9e\u73b0\u81ea\u52a8\u5316\u96c6\u6210\u53d1\u5e03\u3002\u5efa\u7acb\u597d\u6d41\u6c34\u7ebf\u540e\uff0c\u671f\u95f4\u65e0\u9700\u4e13\u4e1a\u8fd0\u7ef4\u4eba\u5458\u4ecb\u5165\uff0c\u5f00\u53d1\u4eba\u5458\u968f\u65f6\u53d1\u5e03\u90e8\u7f72\uff0c\u4efb\u6027\uff01\u3002 </p> <p>\u90e8\u5206\u5e94\u7528\u573a\u666f\uff1a </p> <ul> <li>\u96c6\u6210<code>svn/git</code>\u5ba2\u6237\u7aef\u5b9e\u73b0\u6e90\u4ee3\u7801\u4e0b\u8f7d\u68c0\u51fa</li> <li>\u96c6\u6210<code>maven/ant/gradle/npm</code>\u7b49\u6784\u5efa\u5de5\u5177\u5b9e\u73b0\u6e90\u7801\u7f16\u8bd1\u6253\u5305\u5355\u5143\u6d4b\u8bd5 </li> <li>\u96c6\u6210<code>sonarqube</code>\u5bf9\u6e90\u4ee3\u7801\u8fdb\u884c\u8d28\u91cf\u68c0\u67e5\uff08\u574f\u5473\u9053\u3001\u590d\u6742\u5ea6\u3001\u65b0\u589ebug\u7b49\uff09 </li> <li>\u96c6\u6210<code>SaltStack/Ansibie</code>\u5b9e\u73b0\u81ea\u52a8\u5316\u90e8\u7f72\u53d1\u5e03 </li> <li>\u96c6\u6210<code>Jmeter/Soar/Kubernetes/</code>...... </li> <li>\u53ef\u4ee5\u81ea\u5b9a\u4e49\u63d2\u4ef6\u6216\u8005\u811a\u672c\u901a\u8fc7<code>jenkins</code>\u4f20\u53c2\u8fd0\u884c </li> <li>\u53ef\u4ee5\u8bf4<code>Jenkins</code>\u6bd4\u8f83\u7075\u6d3b\u63d2\u4ef6\u8d44\u6e90\u4e30\u5bcc\uff0c\u65e5\u5e38\u8fd0\u7ef4\u5de5\u4f5c\u90fd\u53ef\u4ee5\u81ea\u52a8\u5316\u3002 </li> </ul>"},{"location":"jk_chapter1/#2jenkins-how-to-install-jenkins","title":"2.Jenkins \u7b80\u4ecb\u4e0e\u90e8\u7f72 (How to install Jenkins)","text":""},{"location":"jk_chapter1/#linux","title":"\u865a\u62df\u673a\uff08Linux) \u5b89\u88c5","text":"<p>Jenkins \u5b89\u88c5\u51c6\u5907</p> <ul> <li><code>Jenkins</code>\u4f7f\u7528java\u8bed\u8a00\u5f00\u53d1\uff0c \u9700\u8981\u5b89\u88c5JDK\uff0c\u76ee\u524d\u5df2\u652f\u6301<code>jdk11</code>.</li> <li><code>Jenkins</code>\u7684\u5b89\u88c5\u53ef\u4ee5\u8de8\u5e73\u53f0 (Win/Linux/Mac) </li> <li>\u90e8\u7f72\uff0f\u66f4\u65b0\u6e90\uff1ahttps://mirrors.tuna.tsinghua.edu.cn/jenkins  </li> </ul> <p></p> <p>2-1 \u57fa\u4e8eWAR\u5305\u90e8\u7f72</p> <p>Jenkins\u7684web\u5e94\u7528\u7a0b\u5e8f<code>archive\uff08war\uff09</code>\u5305\u662f\u53ef\u4ee5\u5728\u4efb\u4f55\u652f\u6301<code>Java</code>\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\u3002 Jenkins\u6700\u65b0 war\u5305</p> <ul> <li>\u5c06\u4e0b\u8f7d\u7684war\u5305\u653e\u5230jenkins\u7684\u76ee\u5f55\u4e2d\uff08\u53ef\u4ee5\u81ea\u5b9a\u4e49)\u3002</li> <li>\u8fd0\u884c\u547d\u4ee4 java -jar jenkins.war\u542f\u52a8\u3002</li> <li>\u6b64\u65f6\u53ef\u4ee5\u770b\u5230Jenkins\u7684\u542f\u52a8\u65e5\u5fd7\uff0c\u67e5\u770b\u662f\u5426\u6709\u5f02\u5e38\u3002</li> <li>\u901a\u8fc7\u6d4f\u89c8\u5668\u8bbf\u95eehttp://localhost:8080\u3002</li> </ul> <p>\u6ce8\u610f\uff1a\u53ef\u4ee5\u901a\u8fc7 <code>--httpPort</code>\u65b9\u5f0f\u6307\u5b9a\u7aef\u53e3\uff0c<code>java -jar jenkins.war -httpPort=9090</code>\u3002</p> <p>2-2 \u57fa\u4e8e<code>MAC</code>\u7cfb\u7edf\u90e8\u7f72</p> <ul> <li>\u4e0b\u8f7d\u8f6f\u4ef6\u5305\u624b\u52a8\u5b89\u88c5</li> <li><code>brew install jenkins</code>#\u5b89\u88c5jenkins\u6700\u65b0\u7248\u672c</li> <li><code>brew install jenkins-lts</code> #\u5b89\u88c5jenkinsLTS\u7248\u672c</li> </ul> <p>2-3 \u57fa\u4e8e<code>Windows</code>\u7cfb\u7edf\u5b89\u88c5</p> <p>\u4e0b\u8f7d\u8f6f\u4ef6\u5305\u901a\u8fc7\u5411\u5bfc\u5b89\u88c5\u5373\u53ef\u3002</p> <p>2-4 \u57fa\u4e8eLinux\u7cfb\u7edf\u90e8\u7f72\uff08\u63a8\u8350\uff09</p> <ul> <li>\u4e0b\u8f7d\u8f6f\u4ef6\u5305</li> <li><code>rpm \u2013ivh jenkins-2.150.3-1.1.noarch.rpm</code> #\u5b89\u88c5</li> <li><code>service jenkins start</code> #\u542f\u52a8\u670d\u52a1</li> <li><code>chkconfig jenkins on</code> #\u5f00\u673a\u81ea\u542f</li> </ul> <pre><code>service jenkins start\nservice jenkins status\n\nps aux | grep java\n</code></pre>"},{"location":"jk_chapter1/#docker","title":"\u57fa\u4e8eDocker\u7684\u5b89\u88c5\u90e8\u7f72","text":"<p>\u5b89\u88c5\u7684\u8be6\u7ec6\u6b65\u9aa4\u53ef\u4ee5\u67e5\u770b\u6211\u539f\u6765\u7684\u6587\u7ae0 Quick Start Jenkins on Docker</p> <ul> <li>\u5b89\u88c5<code>docker</code>\u73af\u5883 (exp: Install Docker Engine on CentOS</li> <li>\u51c6\u5907\u597d<code>plugn.txt</code> \u4f5c\u4e3a<code>Jenkins</code>\u63d2\u4ef6\u5217\u8868 (exp: plugins.txt)</li> <li>\u51c6\u5907Dockerfile</li> </ul> <pre><code>FROM jenkins/jenkins:2.150.2\nCOPY plugins.txt /usr/share/jenkins/ref/plugins.txt\nRUN /usr/local/bin/install-plugins.sh &lt; /usr/share/jenkins/ref/plugins.txt\n</code></pre> <ul> <li>\u6784\u5efa\u955c\u50cf<code>docker build -t jenkins:v20200630 .</code></li> <li>\u4fee\u6539<code>var/lib/jenkins</code> \u6743\u9650</li> </ul> <pre><code>$ cd /var/lib/\n$ ls -la\ndrwxr-xr-x  2 root    root    4096 Jan 21 03:13 jenkins\n$ sudo chown 1000 jenkins/\n</code></pre> <ul> <li>\u542f\u52a8<code>docker container</code>:  </li> </ul> <pre><code>docker run -d -p 8080:8080 -p 50000:50000 --env=JAVA_OPTS=-Djenkins.install.runSetupWizard=false -v /var/lib/jenkins:/var/jenkins_home jenkins:v20200630\n</code></pre> <pre><code>$ docker ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                              NAMES\n1119ddfd13e6        jenkins:v20200531   \"/sbin/tini -- /usr/\u2026\"   34 hours ago        Up 34 hours         0.0.0.0:8080-&gt;8080/tcp, 0.0.0.0:50000-&gt;50000/tcp   elegant_varahamihira\n</code></pre>"},{"location":"jk_chapter1/#jenkins-operator","title":"\u57fa\u4e8e<code>Jenkins-operator</code>\u7684\u5b89\u88c5\u90e8\u7f72","text":"<p>https://jenkinsci.github.io/kubernetes-operator/docs/installation/</p>"},{"location":"jk_chapter1/#3-jenkins","title":"3. Jenkins \u7684\u57fa\u672c\u8bbe\u7f6e","text":""},{"location":"jk_chapter1/#jenkins_1","title":"Jenkins \u57fa\u672c\u914d\u7f6e","text":"<ul> <li>\u914d\u7f6e\u8bbf\u95ee\u7aef\u53e3: \u9ed8\u8ba4<code>8080</code></li> <li>\u914d\u7f6e<code>JENKINS HOME</code>: \u9ed8\u8ba4<code>/var/lib/jenkins</code> \u914d\u7f6e\u542f\u52a8\u7528\u6237</li> <li>\u9ed8\u8ba4<code>Jenkins</code> \u914d\u7f6e\u63d2\u4ef6\u66f4\u65b0\u6e90: \u9ed8\u8ba4\u5b98\u65b9\u6e90 -&gt; \u6e05\u534e\u6e90/Jenkins\u4e2d\u6587\u793e\u533a\u6e90 </li> <li>\u5b89\u88c5<code>pipeline</code>\u63d2\u4ef6 <code>pipeline/Git\uff0f\u7b49\u63d2\u4ef6</code></li> </ul> <p>3-1 \u89e3\u9501<code>Jenkins</code>\uff1a</p> <ul> <li>\u5f53\u60a8\u7b2c\u4e00\u6b21\u8bbf\u95eeJenkins\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u4f1a\u8981\u6c42\u60a8\u4f7f\u7528\u81ea\u52a8\u751f\u6210\u7684\u5bc6\u7801\u5bf9\u5176\u8fdb\u884c\u89e3\u9501\u3002</li> <li>\u89e3\u9501\u79d8\u94a5\u53ef\u4ee5\u901a\u8fc7<code>$JENKINS_HOME/secrets/initialAdminPassword</code>\u6587\u4ef6\u83b7\u53d6\u3002\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5728\u542f\u52a8\u65e5\u5fd7\u4e2d\u83b7\u53d6\u3002</li> </ul> <p></p> <p>3-2 \u81ea\u5b9a\u4e49<code>Jenkins</code>\u63d2\u4ef6</p> <ul> <li>\u89e3\u9501<code>Jenkins</code>\u4e4b\u540e\u518d\u81ea\u5b9a\u4e49<code>Jenkins</code>\u9875\u9762\uff0c\u60a8\u53ef\u4ee5\u5b89\u88c5\u4efb\u4f55\u6570\u91cf\u7684\u63d2\u4ef6\u4f5c\u4e3a\u521d\u59cb\u5316\u7684\u4e00\u90e8\u5206\u3002</li> <li>\u5206\u522b\u662f\u5b89\u88c5\u5efa\u8bae\u7684\u63d2\u4ef6\u548c\u9009\u62e9\u8981\u5b89\u88c5\u7684\u63d2\u4ef6\uff08\u5982\u679c\u4e0d\u786e\u5b9a\u8981\u5b89\u88c5\u90a3\u4e9b\u7684\u65f6\u5019\u53ef\u4ee5\u9009\u62e9\u6b64\u9009\u9879\uff0c\u7075\u6d3b\u7684\u81ea\u5b9a\u4e49\u5b89\u88c5\uff09\u3002</li> <li>\u63d2\u4ef6\u5b89\u88c5\u591a\u4e86\u4e5f\u6ca1\u5173\u7cfb\uff0c\u53ef\u4ee5\u540e\u9762\u518d<code>jenkins</code>\u63d2\u4ef6\u7ba1\u7406\u9875\u9762\u5220\u9664\u54e6</li> </ul> <p></p> <p>3-3 \u914d\u7f6e\u66f4\u65b0\u7ad9\u70b9</p> <ul> <li>\u7531\u4e8e\u4f7f\u7528\u5b98\u65b9\u7684\u7ad9\u70b9\u901f\u5ea6\u76f8\u5bf9\u5f88\u6162\uff0c\u8fd9\u91cc\u91c7\u7528\u6e05\u534e\u5927\u5b66\u7684jenkins\u66f4\u65b0\u7ad9\u70b9\u3002</li> <li>\u7ad9\u70b9\u5730\u5740: https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</li> </ul> <p></p> <p>3-4 \u7ba1\u7406\u9875\u9762</p> <p>\u7cfb\u7edf\u7ba1\u7406\u9875\u9762\u5305\u542b\u7cfb\u7edf\u7ba1\u7406\u3001\u5168\u5c40\u5b89\u5168\u7ba1\u7406\u3001\u5168\u5c40\u5de5\u5177\u914d\u7f6e\u3001\u8282\u70b9\u7ba1\u7406\u3001\u6388\u6743\u7ba1\u7406\u3001\u63d2\u4ef6\u7ba1\u7406\u3001\u7cfb\u7edf\u5907\u4efd\u7ba1\u7406\u3001\u65e5\u5fd7\u76d1\u63a7\u7ba1\u7406\u7b49</p> <p></p> <p>Jenkins \u9879\u76ee\u7ba1\u7406\u9875\u9762</p> <p></p> <p>Jenkins \u6784\u5efa\u9875\u9762</p> <p></p>"},{"location":"jk_chapter1/#4-jenkins-agent","title":"4. Jenkins \u6dfb\u52a0 Agent","text":"<p><code>Jenkins</code> \u662f\u4e00\u4e2a\u5355 <code>Master</code> \u591a <code>Slave</code> \u7684\u96c6\u7fa4\u67b6\u6784\uff08\u4ee5\u524d\u5927\u591a\u53eb <code>Slave</code>\uff0c\u73b0\u5728\u5927\u591a\u53eb <code>Agent</code>\uff09\u3002</p> <p>Jenkins \u7684 Agent \u5927\u6982\u5206\u4e24\u79cd\uff0c\u4e00\u662f\u57fa\u4e8e <code>SSH</code> \u7684\uff0c\u9700\u8981\u628a <code>Master</code> \u7684 <code>SSH</code> \u516c\u94a5\u914d\u7f6e\u5230\u6240\u6709\u7684 <code>Agent</code> \u5bbf\u4e3b\u673a\u4e0a\u53bb\u3002\u4e8c\u662f\u57fa\u4e8e <code>JNLP</code> \u7684\uff0c\u8d70 <code>HTTP</code>\u534f\u8bae\uff0c\u6bcf\u4e2a <code>Agent</code> \u9700\u8981\u914d\u7f6e\u4e00\u4e2a\u72ec\u7279\u7684\u5bc6\u7801\u3002\u57fa\u4e8e <code>SSH</code> \u7684\uff0c\u53ef\u4ee5\u7531 <code>Master</code> \u6765\u542f\u52a8\uff1b\u57fa\u4e8e <code>JNLP</code> \u7684\uff0c\u9700\u8981\u81ea\u5df1\u542f\u52a8\u3002</p> <ul> <li>\u4f7f\u7528<code>JNLP</code>\u534f\u8bae\u6dfb\u52a0<code>SLAVE</code></li> <li><code>Jenkins</code>\u914d\u7f6e\u56fa\u5b9a<code>SLAVE</code>\u901a\u4fe1\u7aef\u53e3 </li> </ul>"},{"location":"jk_chapter1/#slave","title":"\u5b89\u88c5<code>Slave</code> \u8282\u70b9","text":"<p>\u7cfb\u7edf\u7ba1\u7406 -&gt; \u8282\u70b9\u7ba1\u7406</p> <p></p> <p>\u521b\u5efa\u5b8c\u6210\u540e\u4f1a\u51fa\u73b0<code>slave</code>\u8282\u70b9\u542f\u52a8\u7684\u547d\u4ee4\uff0c\u4e0b\u8f7d<code>agent.jar</code>\uff0c\u7136\u540e\u542f\u52a8\u670d\u52a1\u3002</p> <p></p>"},{"location":"jk_chapter1/#_1","title":"\u542f\u52a8\u547d\u4ee4","text":"<pre><code>$ java -version\nopenjdk version \"1.8.0_252\"\nOpenJDK Runtime Environment (build 1.8.0_252-b09)\nOpenJDK 64-Bit Server VM (build 25.252-b09, mixed mode)\n\n\n$ mkdir workspace &amp;&amp; cd workspace\n$ wget http://192.168.33.11:8080/jnlpJars/agent.jar\n$  java -jar agent.jar -jnlpUrl http://192.168.33.11:8080/computer/hostmachine/slave-agent.jnlp -workDir \"/home/vagrant/workspace\"\n\n# This is will keep running we need this run in the background\n</code></pre> <p>Run in back ground</p> <pre><code>$ cd workspace\n$ vim startagent.sh\nnohup java -jar agent.jar -jnlpUrl http://192.168.33.11:8080/computer/hostmachine/slave-agent.jnlp -workDir \"/home/vagrant/workspace\" &amp;\n\n\nsource startagent.sh\n</code></pre> <p></p>"},{"location":"jk_chapter1/#5-jenkins","title":"5. Jenkins \u7528\u6237\u4e0e\u6743\u9650\u7ba1\u7406","text":"<p>\u64cd\u4f5c\u6dfb\u52a0\u5220\u9664\u66f4\u65b0\u7528\u6237\u3002\u4f7f\u7528\u63d2\u4ef6\u4e3a\u7528\u6237\u5206\u914d\u9879\u76ee\u6388\u6743\u3002</p> <p>\u7528\u6237\u8ba4\u8bc1\u65b9\u5f0f </p> <ul> <li>\u9ed8\u8ba4<code>Jenkins</code>\u81ea\u5e26\u6570\u636e\u5e93 </li> <li><code>LDAP</code>\u8ba4\u8bc1 </li> <li><code>ActiveDirctory</code>\u8ba4\u8bc1 </li> <li><code>Gitlab/GitHub</code>\u8ba4\u8bc1</li> </ul> <p>\u7528\u6237\u7ba1\u7406</p> <ul> <li>\u65b0\u589e\u7528\u6237 </li> <li>\u5220\u9664\u7528\u6237 </li> </ul>"},{"location":"jk_chapter1/#5-1","title":"5-1 \u7528\u6237\u7ba1\u7406","text":"<ul> <li>\u914d\u7f6e\u7528\u6237\u63a5\u5165\u5165\u53e3: \u7cfb\u7edf\u7ba1\u7406-&gt;\u5168\u5c40\u5b89\u5168\u914d\u7f6e\u3002</li> <li>\u9ed8\u8ba4\u4f7f\u7528\u7684\u662f<code>Jenkins</code>\u6570\u636e\u5e93\u5b58\u50a8\u3002</li> <li>\u53ef\u4ee5\u9009\u62e9\u96c6\u6210<code>LDAP</code>\u670d\u52a1\u6216\u8005\u662f<code>Gitlab</code>\u670d\u52a1\uff08\u9700\u8981\u5b89\u88c5\u63d2\u4ef6\u540e\u624d\u4f1a\u6709\uff09</li> </ul>"},{"location":"jk_chapter1/#5-2","title":"5-2 \u7528\u6237\u7ba1\u7406\u6743\u9650\u7ba1\u7406","text":"<p>\u5b89\u88c5\u6388\u6743\u63d2\u4ef6<code>Role-Basecd Strategy</code>\u7528\u6237\u9879\u76ee\u6388\u6743 </p> <p></p>"},{"location":"jk_chapter1/#5-3","title":"5-3  \u7ba1\u7406\u6743\u9650","text":"<ul> <li>\u7cfb\u7edf\u8bbe\u7f6e-&gt;<code>Manage and Assign Roles</code>-&gt;<code>Manage Roles</code></li> <li><code>Global roles</code>\uff1a\u6dfb\u52a0\u7528\u6237\u548c\u7528\u6237\u7ec4\uff0c\u5206\u914d\u67d0\u4e2a\u7528\u6237\u5c5e\u4e8e\u54ea\u4e2a\u7528\u6237\u7ec4\u3002</li> <li><code>Project roles</code>\uff1a\u6dfb\u52a0\u67d0\u4e2a\u5de5\u7a0b\u6216\u67d0\u4e00\u7ec4\u5de5\u7a0b\u7684\u7528\u6237\u6216\u7528\u6237\u7ec4</li> <li><code>Slave roles</code>\uff1a\u6dfb\u52a0\u67d0\u4e2a\u8282\u70b9\u6216\u67d0\u4e00\u7ec4\u8282\u70b9\u7684\u7528\u6237\u6216\u7528\u6237\u7ec4</li> </ul> <p>\u51ed\u636e\u53c2\u6570\u3001\u5b57\u7b26\u53c2\u6570\u3001\u5bc6\u7801\u53c2\u6570\u3001\u5e03\u5c14\u503c\u53c2\u6570\u3001\u6587\u4ef6\u53c2\u6570\u3001\u6587\u672c\u53c2\u6570\u3001\u8fd0\u884c\u65f6\u53c2\u6570\u3001\u9009\u9879\u53c2\u6570</p> <ul> <li>\u7cfb\u7edf\u8bbe\u7f6e-&gt;<code>Manage and Assign Roles</code>-&gt;<code>Assign Roles</code></li> </ul> <p></p>"},{"location":"jk_chapter1/#5-4","title":"5-4 \u5168\u5c40\u6743\u9650","text":""},{"location":"jk_chapter1/#5-5","title":"5-5 \u9879\u76ee\u6743\u9650","text":""},{"location":"jk_chapter1/#6-jenkins","title":"6. Jenkins \u51ed\u636e\u7ba1\u7406\u4e0e\u5e94\u7528","text":"<p>\u51ed\u8bc1\u53ef\u4ee5\u662f\u4e00\u6bb5\u5b57\u7b26\u4e32\u5982\u5bc6\u7801\uff0c\u79c1\u94a5\u6587\u4ef6\u7b49\uff0c\u662fJenkins \u8fdb\u884c\u53d7\u9650\u64cd\u4f5c\u65f6\u7684\u51ed\u636e\u3002\u6bd4\u5982 SSH \u767b\u5f55\u8fdc\u7a0b\u670d\u52a1\u5668\uff0c\u7528\u6237\u540d\uff0c\u5bc6\u7801\u6216 SSH key\u5c31\u662f\u51ed\u8bc1\u3002\u8fd9\u4e9b\u51ed\u636e\u4e0d\u8981\u660e\u6587\u5199\u5728 <code>Jenkinsfile</code> \u4e2d\uff0cJenkins\u6709\u4e13\u95e8\u7ba1\u7406\u51ed\u8bc1\u7684\u5730\u65b9\u548c\u63d2\u4ef6\u3002</p> <p>\u6dfb\u52a0\u51ed\u8bc1\u540e\uff0c\u9700\u8981\u5b89\u88c5<code>\"Credentials Binding Plugin\"</code>\u63d2\u4ef6\uff0c\u5c31\u53ef\u4ee5\u5728 <code>pipeline</code>\u4e2d\u4f7f\u7528<code>withCredentials</code> \u6b65\u9aa4\u4f7f\u7528\u51ed\u8bc1\u4e86\u3002</p>"},{"location":"jk_chapter1/#_2","title":"\u51ed\u636e\u7ba1\u7406","text":"<p>\u51ed\u636e\u53ef\u4ee5\u7528\u6765\u5b58\u50a8\u9700\u8981\u5bc6\u6587\u4fdd\u62a4\u7684\u6570\u636e\u5e93\u5bc6\u7801\u3001Gitlab\u5bc6\u7801\u4fe1\u606f\u3002</p> <p><code>\u51ed\u636e-&gt; \u7cfb\u7edf-&gt; \u5168\u5c40\u51ed\u636e</code></p>"},{"location":"jk_chapter1/#7-jenkins","title":"7. Jenkins \u9879\u76ee\u7ba1\u7406","text":"<p>\u7b80\u8ff0 Jenkins \u7684\u9879\u76ee\u7c7b\u578b\uff0c\u521b\u5efa\u5220\u9664\u9879\u76ee\u3002\u4f7f\u7528\u89c6\u56fe\u5bf9\u9879\u76ee\u8fdb\u884c\u5206\u7c7b\u3002</p>"},{"location":"jk_chapter1/#7-1","title":"7-1 \u9879\u76ee\u7ba1\u7406 \u2014\u2014 \u6d41\u6c34\u7ebf\u9879\u76ee\u7ba1\u7406","text":"<p>7-1-1 \u547d\u540d\u89c4\u8303</p> <p>\u4e1a\u52a1\u540d\u79f0-\u5e94\u7528\u540d\u79f0-\u5e94\u7528\u7c7b\u578b_\u73af\u5883\u7c7b\u578b\uff1a <code>jam-workzone-kops_TEST</code>, \u53ea\u6709\u547d\u540d\u89c4\u8303\u624d\u65b9\u4fbf\u7ba1\u7406\u9879\u76ee\u3002</p> <p>7-1-2 \u65b0\u5efa\u9879\u76ee</p> <p></p> <p>7-1-3 \u8bbe\u7f6e\u6784\u5efa\u5386\u53f2</p> <p></p> <p>7-1-4 \u9009\u62e9\u53c2\u6570\u5316\u6784\u5efa</p> <p></p> <p>7-1-5 \u8bbe\u7f6eJenkinsfile</p> <p></p>"},{"location":"jk_chapter1/#7-2","title":"7-2 \u9879\u76ee\u7ba1\u7406 \u2014\u2014 \u9879\u76ee\u57fa\u672c\u7ba1\u7406","text":""},{"location":"jk_chapter1/#7-3","title":"7-3 \u9879\u76ee\u7ba1\u7406 \u2014\u2014 \u9879\u76ee\u6587\u4ef6\u5939","text":"<ul> <li>\u4ee5\u4e1a\u52a1\u7b80\u79f0\u4e3a\u540d\uff0c\u521b\u5efa\u5de5\u7a0b\u6587\u4ef6\u5939\u3002\u5c06\u540c\u4e00\u4e2a\u4e1a\u52a1\u7684\u5de5\u7a0b\u5168\u90e8\u653e\u5230\u540c\u4e00\u4e2a\u6587\u4ef6\u5939\u4e2d\u3002</li> <li>\u79fb\u52a8\u9879\u76ee</li> </ul>"},{"location":"jk_chapter1/#7-4","title":"7-4 \u9879\u76ee\u7ba1\u7406 \u2014\u2014 \u89c6\u56fe","text":"<p>\u9ed8\u8ba4\u4f1a\u521b\u5efa\u4e00\u4e2aall\u89c6\u56fe\u91cc\u9762\u5b58\u653e\u6240\u6709\u7684\u9879\u76ee\u3002</p> <p></p> <p></p>"},{"location":"jk_chapter1_2/","title":"\u7b2c\u4e8c\u8282 \u5206\u5e03\u5f0f\u6784\u5efa\u4e0e\u5e76\u884c\u6784\u5efa","text":""},{"location":"jk_chapter1_2/#1-jenkins","title":"1. Jenkins\u67b6\u6784","text":"<p><code>Jenkins</code>\u91c7\u7528\u7684\u662f<code>\"master+agent\"</code>\u67b6\u6784\uff08\u6709\u65f6\u4e5f\u79f0\u4e3a<code>master+slave</code>\u67b6\u6784\uff09\uff0c<code>Jenkins master</code>\u8d1f\u8d23\u63d0\u4f9b\u754c\u9762\u3001\u5904\u7406HTTP\u8bf7\u6c42\u53ca\u7ba1\u7406\u6784\u5efa\u73af\u5883\u6784\u5efa\u7684\u6267\u884c\u5219\u7531<code>Jenkins agent</code>\u8d1f\u8d23\uff08\u65e9\u671f<code>agent</code>\u4e5f\u88ab\u79f0\u4e3a<code>slave</code>\u3002\u76ee\u524d\u8fd8\u6709\u4e00\u4e9b\u63d2\u4ef6\u6cbf\u7528<code>slave\u7684</code>\u6982\u5ff5\uff09\u3002 </p> <p>\u57fa\u4e8e\u8fd9\u6837\u7684\u67b6\u6784\u53ea\u9700\u8981\u589e\u52a0<code>agent</code>\u5c31\u53ef\u4ee5\u8f7b\u677e\u652f\u5f85\u66f4\u591a\u7684\u9879\u76ee\u540c\u65f6\u6267\u884c\u3002\u8fd9\u79cd\u65b9\u5f0f\u79f0\u4e3a<code>Jenkins agent</code>\u7684\u6a2a\u5411\u6269\u5bb9 </p> <p>\u5bf9\u4e8e<code>Jenkins matter</code>\u5b58\u5728\u5355\u8282\u70b9\u95ee\u9898\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u4f46\u662f\u76ee\u524d\u8fd8\u6ca1\u6709\u5f88\u597d\u7684\u89e3\u51b3\u65b9\u6848 </p> <p></p> <ul> <li><code>node</code>\uff1a\u8282\u70b9\uff0c\u6307\u5305\u542b<code>Jenkins</code>\u73af\u5883\u53ca\u6709\u80fd\u529b\u6267\u884c\u9879\u76ee\u7684\u673a\u5668\u3002<code>master</code>\u548c<code>agent</code>\u90fd\u88ab\u8ba4\u4e3a\u662f\u8282 \u70b9\u3002 </li> <li><code>executor</code>\uff1a\u6267\u884c\u5668\uff0c\u662f\u771f\u6b63\u6267\u884c\u9879\u76ee\u7684\u5355\u5143\u3002\u4e00\u4e2a\u6267\u884c\u5668\u53ef\u4ee5\u88ab\u7406\u89e3\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u8fdb\u7a0b\uff08\u4e8b \u5b9e\u4e0a\u662f\u7ebf\u7a0b\uff09\u3002\u5728\u4e00\u4e2a\u8282\u70b9\u4e0a\u53ef\u4ee5\u8fd0\u884c\u591a\u4e2a\u6267\u884c\u5668\u3002 </li> <li><code>agent</code>:\u4ee3\u7406\uff0c\u5728\u6982\u5ff5\u4e0a\u6307\u7684\u662f\u76f8\u5bf9\u4e8e<code>Jenkins master</code>\u7684\u4e00\u79cd\u89d2\u8272\uff0c\u5b9e\u9645\u4e0a\u662f\u6307\u8fd0\u884c\u5728\u673a\u5668\u6216 \u5bb9\u5668\u4e2d\u7684\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b83\u4f1a\u8fde\u63a5\u4e0a<code>Jenkins master</code>\uff0c\u5e76\u6267\u884c<code>Jenkins master</code>\u5206\u914d\u7ed9\u5b83\u7684\u4efb\u52a1\u3002</li> <li><code>slave</code>:\u4e0e<code>agent</code>\u8868\u8fbe\u7684\u662f\u4e00\u4e2a\u4e1c\u897f\uff0c\u53ea\u662f\u53eb\u6cd5\u4e0d\u540c\u3002 \u7406\u89e3<code>node</code> \u3001<code>executor</code>\u3001 <code>agent</code>\u3001 <code>slave</code>\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5bf9\u4e8e\u505a\u597d\u5206\u5e03\u5f0f\u6784\u5efa\u5f88\u91cd\u8981\u3002 </li> </ul> <p>\u603b\u800c\u8a00\u4e4b\uff0c<code>executor</code>\uff1a\u7684\u6982\u5ff5\u662f\u76f8\u5bf9\u4e8e<code>node</code>\u7684\uff0c\u6ca1\u6709<code>node</code>\u4e5f\u5c31\u8c08\u4e0d\u4e0a<code>executor</code>\u4e86\u3002<code>node</code>\u901a\u5e38\u6307\u7684\u662f\u673a\u5668\uff08\u4e0d\u8bba\u662f\u7269\u7406\u7684\u8fd8\u662f\u865a\u62df\u7684\uff09\u3002</p> <p><code>agent</code>\u6709\u65f6\u6307\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u6709\u65f6\u6307\u4e00\u79cd\u89d2\u8272\uff08\u76f8\u5bf9\u4e8e<code>master</code> \u800c\u8a00\uff09\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4e0a\u4e0b\u6587\u3002\u5bf9\u4e00\u4e8e<code>slave</code>\uff0c\u53ef\u4ee5\u7b49\u540c\u4e8e<code>agent</code></p> <p>\u603b\u800c\u8a00\u4e4b\uff0c<code>executor</code>\uff1a\u7684\u6982\u5ff5\u662f\u76f8\u5bf9\u4e8e<code>node</code>\u7684\uff0c\u6ca1\u6709node\u4e5f\u5c31\u8c08\u4e0d\u4e0aexecutor\u4e86\u3002node\u901a\u5e38\u6307 \u7684\u662f\u673a\u5668\uff08\u4e0d\u8bba\u662f\u7269\u7406\u7684\u8fd8\u662f\u865a\u62df\u7684\uff09\u3002<code>agent</code>\u6709\u65f6\u6307\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u6709\u65f6\u6307\u4e00\u79cd\u89d2\u8272\uff08\u76f8\u5bf9\u4e8e<code>master</code> \u800c\u8a00\uff09\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4e0a\u4e0b\u6587\u3002\u5bf9\u4e00\u4e8e<code>slave</code>\uff0c\u53ef\u4ee5\u7b49\u540c\u4e8e<code>agent</code></p>"},{"location":"jk_chapter1_2/#2-agent","title":"2 \u589e\u52a0agent","text":"<p>\u5b9e\u73b0\u5206\u5e03\u5f0f\u6784\u5efa\u6700\u5e38\u7528\u3001\u6700\u57fa\u672c\u7684\u65b9\u5f0f\u5c31\u662f\u589e\u52a0<code>agent</code>. <code>Jenkins agent</code>\u4f5c\u4e3a\u4e00\u4e2a\u8d1f\u8d23\u6267\u884c\u4efb\u52a1\u7684\u7a0b\u5e8f\uff0c\u5b83\u9700\u8981\u4e0e<code>Jenkins master</code>\u5efa\u7acb\u53cc\u5411\u8fde\u63a5\u3002\u8fde\u63a5\u65b9\u5f0f\u6709\u591a\u79cd\uff0c\u8fd9\u4e5f\u4ee3\u8868\u6709\u591a\u79cd\u589e\u52a0<code>agent</code>\u7684\u65b9\u5f0f\u3002 \u5728\u771f\u6b63\u4ecb\u7ecd\u5982\u4f55\u589e\u52a0agent\u524d\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u6807\u7b7e\uff08(label)\u5728\u5206\u5e03\u5f0f\u6784\u5efa\u4e2d\u7684\u4f5c\u7528\u3002 </p>"},{"location":"jk_chapter1_2/#2-1-agent","title":"2-1 \u5bf9<code>agent</code>\u6253\u6807\u7b7e","text":"<p>\u5f53<code>agent</code>\u6570\u91cf\u53d8\u591a\u65f6\uff0c\u5982\u4f55\u77e5\u9053\u54ea\u4e9b<code>agent</code>\u652f\u6301<code>JDK8</code>.\u54ea\u4e9b<code>agent</code>\u652f\u6301<code>Node.js</code>\u73af\u5883\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ed9<code>agent</code>\u6253\u6807\u7b7e\uff08\u6709\u65f6\u4e5f\u79f0\u4e3a<code>tag</code>\uff09\u6765\u786e\u5b9a\u3002 </p> <p>\u901a\u8fc7\u6807\u7b7e\u5c06\u591a\u4e2a<code>agent</code> \u5206\u914d\u5230\u540c\u4e00\u4e2a\u903b\u8f91\u7ec4\u4e2d\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u6253\u6807\u7b7e\u3002\u540c\u4e00\u4e2a<code>agent</code>\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a\u6807\u7b7e\u3002\u5728\u6807\u7b7e\u540d\u4e2d\u4e0d\u80fd\u5305\u542b\u7a7a\u683c\uff0c\u4e5f\u4e0d\u80fd\u5305\u542b<code>\uff01\u3001&amp;\u3001\uff5b\u3001\uff1c\u3001\uff1e\u3001\uff08\u3001\uff09</code>\u8fd9\u4e9b\u7279\u6b8a\u5b57\u7b26\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u3002\u56e0\u4e3a\u5305\u542b\u7279\u6b8a\u5b57\u7b26\u7684\u6807\u7b7e\u540d\u4e0e\u6807\u7b7e\u8868\u8fbe\u5f0f\uff08\u7528\u4e8e\u8fc7\u6ee4agent)\u51b2\u7a81\u3002 </p> <p>\u5bf9\u4e8e\u652f\u6301<code>JDK8</code>\u7684<code>agent</code>\uff0c\u6211\u4eec\u6253\u4e0a<code>jdk8</code>\u6807\u7b7e\uff1b\u5bf9\u4e8e\u652f\u6301<code>Node.js</code>\u7684<code>agent</code>\uff0c\u6211\u4eec\u6253\u4e0a<code>nodejs</code> \u6807\u7b7e\uff1b\u5982\u679c\u4e00\u4e2a<code>agen</code>\u540c\u65f6\u652f\u6301<code>JDK8</code>\u548c<code>Node.js</code>\uff0c\u90a3\u4e48\u5c31\u4e24\u4e2a\u6807\u7b7e\u90fd\u6253\u4e0a\u3002 </p> <p>\u5728\u6253\u6807\u7b7e\u65f6\uff0c\u53ef\u4ee5\u6839\u636e\u4ee5\u4e0b\u51e0\u4e2a\u7ef4\u5ea6\u6765\u8fdb\u884c\u3002 </p> <ul> <li>\u5de5\u5177\u94fe\uff1a<code>jdk\\nodejs\\ruby</code>\uff1b\u4e5f\u53ef\u4ee5\u52a0\u4e0a\u5de5\u5177\u7684\u7248\u672c\uff0c\u5982<code>jdk6</code>\u3001<code>jdk8</code>.</li> <li>\u64cd\u4f5c\u7cfb\u7edf\uff1alinux\u3001 windows\u3001 osx\uff1b\u6216\u8005\u52a0\u4e0a\u64cd\u4f5c\u7cfb\u7edf\u7684\u7248\u672c\uff0c\u5982ubuntul 8.04\u3001 centos7.30 </li> <li>\u7cfb\u7edf\u4f4d\u6570\uff1a32bit\u300164bit </li> </ul> <p>\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u9879\u76ee\u60c5\u51b5\u65b0\u589e\u7ef4\u5ea6\u3002 \u5bf9\u4e8e\u4e0d\u540c\u7684\u589e\u52a0agent\u7684\u65b9\u5f0f\uff0c\u6253\u6807\u7b7e\u7684\u65b9\u5f0f\u4e5f\u4e0d\u540c\u3002</p>"},{"location":"jk_chapter1_2/#2-2jnlpagent","title":"2-2\u901a\u8fc7JNLP\u534f\u8bae\u589e\u52a0<code>agent</code>","text":"<p>Java\u7f51\u7edc\u542f\u52a8\u534f\u8bae\uff08<code>JNLP</code>)\u662f\u79cd\u5141\u8bb8\u5ba2\u6237\u7aef\u542f\u52a8\u6258\u7ba1\u5728\u8fdc\u7a0b<code>Web</code>\u670d\u52a1\u5668\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u534f\u8bae\u3002<code>Jeakins master</code>\u4e0e<code>agent</code>\u901a\u8fc7<code>JNLP</code>\u534f\u8bae\u8fdb\u884c\u901a\u4fe1\u3002\u800c<code>Jana Web Start(JWS)</code>\u53ef\u4ee5\u88ab\u7406\u89e3\u4e3a JNLP\u534f\u8bae\u7684\u4e00\u4e2a\u5ba2\u6237\u7aef\u3002\u73b0\u5b9e\u4e2d\u4eba\u4eec\u5e38\u5e38\u5c06<code>JNLP</code>\u548c<code>JWS</code>\u770b\u6210\u662f\u4e00\u79cd\u4e1c\u897f </p> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u770b\u770b\u901a\u8fc7JNLP\u534f\u8bae\u57ce\u52a0agent\u7684\u5177\u4f53\u6b65\u9aa4 </p> <p>\u8fdb\u5165<code>Manage Jenkins</code> -&gt;  <code>Globa Security</code> -&gt; <code>TCP Port for JNLP</code>\u914d\u7f6e\u9875\u9762, \u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5f00\u653e\u56fa\u5b9a\u7aef\u53e3\u6216\u8005\u968f\u673a\u5f00\u653e<code>Jenkins Master</code>\u7684\u4e00\u4e2a\u7aef\u53e3\u6765\u63d0\u4f9b<code>JNLP</code>\u670d\u52a1 </p> <p></p> <p>\u968f\u673a\u5f00\u653e\u7aef\u53e3\u4e0d\u5229\u4e8e\u81ea\u52a8\u5316\u6240\u4ee5\u900f\u62e9\u5f00\u653e\u5468\u5b9a\u7aef\u53e3\u3002\u6b64\u7aef\u53e3\u7528\u4e8e<code>master</code>\u4e0e<code>agent</code>\u4e4b\u95f4\u7684 <code>TCP</code>\u901a\u4fe1\u4e0e\u8bbf\u95ee<code>Jenkins</code>\u754c\u9762\u65f6\u7684\u7aef\u53e3\u6709\u522b \u3002</p> <p></p> <ul> <li><code>Name</code>: <code>agent</code>\u540d\u79f0\u3002</li> <li><code>Remote root directory</code>: <code>agent</code>\u673a\u5668\u4e0a\u7684\u5de5\u4f5c\u76ee\u5f55\uff08<code>Jenkins master</code>\u4e0d\u5173\u5fc3\uff09\uff0c\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u3002 <code>/home/vagrant/workspace/</code></li> </ul> <pre><code>$ tree -L 1 workspace/\nworkspace/\n\u251c\u2500\u2500 Chapter2-5Script\n\u251c\u2500\u2500 Chapter2-5Script@tmp\n\u251c\u2500\u2500 Chapter2_test2\n\u251c\u2500\u2500 Chapter2_test2@tmp\n\u251c\u2500\u2500 HelloWorld\n\u2514\u2500\u2500 HelloWorld@tmp\n\n6 directories, 0 files\n</code></pre> <ul> <li><code>Labels</code>: <code>agent</code>\u7684\u6807\u7b7e\u3002</li> <li><code>Usage:</code> <code>agent</code>\u7684\u4f7f\u7528\u7b56\u7565\u3002\u6709\u4e24\u79cd\uff1a<ul> <li><code>Use this node as much as possible</code>\uff0c\u5c3d\u53ef\u80fd\u4f7f\u7528\u6b64<code>agent</code> \u3002</li> <li><code>Only build jobs with label expressions matching this node</code>\uff0c\u53ea\u6709\u5f53\u6784\u5efa\u4efb\u52a1\u7b26\u5408\u672c<code>agent</code> \u7684\u6807\u7b7e\u65f6\uff0c\u624d\u4f7f\u7528\u6b64<code>agent</code> </li> </ul> </li> <li><code>Launch method</code>: <code>agent</code>\u7684\u8fd0\u884c\u65b9\u5f0f\u3002<code>JNLP</code>\u534f\u8bae\u7684<code>agent</code>\u9009\u62e9<code>\u201cLaunch agent via Java Web Start\"</code> </li> </ul>"},{"location":"jk_chapter1_3/","title":"\u7b2c\u4e09\u8282 \u53ef\u89c6\u5316\u6784\u5efa\u8bd5\u56fe","text":""},{"location":"jk_chapter1_3/#green-balls","title":"Green Balls \u63d2\u4ef6","text":"<p>JUnit \u6709\u4e00\u53e5 slogan\uff1a </p> <p>Keep the bar green to keep the cork clean</p> <p><code>Green Balls</code> \u63d2\u4ef6\u7684\u4f5c\u7528\u5c31\u662f\u8ba9\u6784\u5efa\u6210\u529f\u7684\u72b6\u6001\u56fe\u6807\u53d8\u6210\u7eff\u8272\u7684\u3002 </p> <p></p>"},{"location":"jk_chapter1_3/#build-monitor-view","title":"Build Monitor View\u63d2\u4ef6","text":"<p><code>Build Monitor View\u63d2\u4ef6</code>(<code>https://plugins.jenkins.io/build-monitor-plugin</code>/\uff09\u53ef\u4ee5\u5c06Jenkins\u9879\u76ee \u4ee5\u4e00\u5757\"\u770b\u677f\u201d\u7684\u5f62\u5f0f\u5448\u73b0 </p> <p>\u5b89\u88c5\u8be5\u63d2\u4ef6\u540e\uff0c\u6211\u4eec\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u8fd9\u5757\u770b\u677f\u3002</p> <p>\u6b65\u9aa4\u5982\u4e0b </p> <ul> <li>(1) \u5355\u51fb<code>+</code>\u53f7\u6dfb\u52a0\u65b0\u89c6\u56fe</li> </ul> <p></p> <ul> <li>(2) \u8fdb\u4eba\u6dfb\u52a0\u8868\u5355\u540e\uff0c\u9009\u62e9\u201cBuild Monitor View\u201d\u9009\u9879</li> <li>(3\uff09\u8fdb\u4eba<code>\u201cBuild Monitor View\u201d</code>\u7f16\u8f91\u9875\uff0c\u53ef\u4ee5\u9009\u62e9\u5728\u89c6\u56fe\u4e2d\u663e\u793aI\u54ea\u4e9b<code>Job</code>\uff0c\u4ee5\u53ca\u5b83\u4eec\u7684\u6392\u5e8f\u89c4\u5219</li> </ul> <p></p> <p>\u5f53\u6784\u5efa\u5931\u8d25\u65f6\uff0c\u5c31\u4f1a\u51fa\u73b0\u7ea2\u5757\u3002 </p> <p>\u5982\u679c\u6761\u4ef6\u5141\u8bb8\uff0c\u8bf7\u5c06\u8fd9\u5757\u201c\u770b\u677f\u201d\u663e\u793a\u5728\u4eba\u4eba\u90fd\u53ef\u4ee5\u770b\u5230\u7684\u5927\u5c4f\u5e55\u4e0a\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff1a </p> <ul> <li>(1)\u5927\u5bb6\u63d0\u4ea4\u4ee3\u7801\u4f1a\u53d8\u5f97\u66f4\u4e25\u8c28\uff0c\u56e0\u4e3a\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u770b\u5230\u4f60\u7684\u6784\u5efa\u7ed3\u679c\u3002\u5728\u6ca1\u6709\u6301\u7eed\u96c6\u6210\u7ecf \u9a8c\u7684\u56e2\u961f\u4e2d\uff0c\u4e00\u5f00\u59cb\u5f00\u53d1\u4eba\u5458\u5e76\u4e0d\u4f1a\u5f88\u5728\u610f\u6784\u5efa\u7684\u6210\u529f\u4e0e\u5931\u8d25\u3002\u5373\u4f7f\u4e0a\u4e00\u6b21\u6784\u5efa\u5931\u8d25\u4e86\uff0c\u5176\u4ed6\u4eba \u4e5f\u4f1a\u7ee7\u7eed\u63a8\u9001\u4ee3\u7801\u3002\u8fd9\u6837\u7684\u64cd\u4f5c\u8fdd\u53cd\u4e86\u6301\u7eed\u96c6\u6210\u7684\u4e00\u4e2a\u539f\u5219\uff1a\u4e0d\u4fee\u590d\u5931\u8d25\u7684\u6784\u5efa\uff0c\u4e0d\u63d0\u4ea4\u4ee3\u7801\u3002 </li> <li>(2\uff09\u8ba9\u9879\u76ee\u4fe1\u606f\u6d41\u901a\u66f4\u987a\u7545\u3002\u4eba\u4eba\u90fd\u53ef\u4ee5\u770b\u5230\u6700\u8fd1\u6267\u884c\u4e86\u4ec0\u4e48\u6784\u5efa\u3002 </li> </ul>"},{"location":"chap1/1active_parameter/","title":"\u4f7f\u7528Active Choice Parameter\u53c2\u6570\u5316\u6784\u5efa","text":"<p>\u5728\u4f7f\u7528Pipeline\u9879\u76ee\u65f6 \u4e00\u822c\u90fd\u662f\u53c2\u6570\u5316\u6784\u5efa\u5de5\u4f5c\uff0c\u5728Jenkins\u7684\u6784\u5efa\u9700\u8981\u4f7f\u7528\u53c2\u6570\u7c7b\u578b\u6709\u590d\u9009\u6846\uff0c\u5355\u9009\u6309\u94ae\uff0c\u591a\u9009\u503c\u7b49\u8f93\u5165\u7684\u60c5\u666f</p> <p></p> <p>\u8f6c\u5230\u2192\u7ba1\u7406Jenkins\u2192\u9009\u62e9\u7ba1\u7406\u63d2\u4ef6\u2192\u9009\u62e9\u53ef\u7528\u9009\u9879\u5361\uff0c\u7136\u540e\u641c\u7d22\u4e3b\u52a8\u9009\u62e9\u63d2\u4ef6\u3002\u5b89\u88c5\u5e76\u91cd\u65b0\u542f\u52a8Jenkins\uff0c\u4ee5\u6b63\u786e\u5b89\u88c5\u63d2\u4ef6\u3002\u6211\u7684\u5df2\u7ecf\u5b89\u88c5\u597d\uff0c\u56e0\u6b64\u5728\u201c\u5df2\u5b89\u88c5\u201d\u6807\u7b7e\u4e2d\u5217\u51fa</p> <p>\u4e3b\u52a8\u9009\u62e9\u53c2\u6570</p> <p>\u4f7f\u7528Groovy\u811a\u672c\u6216Scriptler\u76ee\u5f55\u4e2d\u7684\u811a\u672c\u4e3a\u751f\u6210\u53c2\u6570\u52a8\u6001\u751f\u6210\u503c\u9009\u9879\u5217\u8868\u3002\u53c2\u6570\u53ef\u4ee5\u52a8\u6001\u66f4\u65b0\uff0c\u5448\u73b0\u4e3a\u7ec4\u5408\u6846\uff0c\u590d\u9009\u6846\uff0c\u5355\u9009\u6309\u94ae\u6216\u4e30\u5bcc\u7684HTML UI\u7a97\u53e3\u5c0f\u90e8\u4ef6\u3002</p> <p></p> <p>\u6309\u4f4fCtrl \u5c31\u53ef\u4ee5\u591a\u9009\u4e86\u3002</p> <p></p> <p>\u4e3b\u52a8\u9009\u62e9\u53cd\u5e94\u53c2\u6570</p> <p>\u5f53\u4f5c\u4e1a\u4e2dUI\u63a7\u4ef6\u7684\u503c\u53d1\u751f\u66f4\u6539\u65f6\uff0c\u53ef\u4ee5\u52a8\u6001\u66f4\u65b0\uff08\u4e3b\u52a8\u9009\u62e9\u548c\u54cd\u5e94\u53c2\u8003\u53c2\u6570\uff09 \u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528IF\u8fdb\u884c\u6761\u4ef6\u5224\u65ad\uff0c\u8f93\u51fa\u76f8\u5173\u7684\u503c\u3002</p> <p></p> <p>\u9879\u76ee\u5730\u5740\uff1a</p> <p>https://github.com/jenkinsci/active-choices-plugin</p> <p>\u63d2\u4ef6\u5730\u5740\uff1a</p> <p>https://plugins.jenkins.io/uno-choice/</p>"},{"location":"chap1/2python-jenkins/","title":"\u7b2c\u4e94\u8282 \u81ea\u52a8\u5316Jenkins\u7ba1\u7406\uff1f\u4f7f\u7528python-jenkins\u7ba1\u7406Jenkins","text":"<p>\u672c\u6b21\u6211\u4eec\u5c06\u8981\u5b66\u4e60JenkinsAPI\u63a5\u53e3\uff0c\u6211\u4eec\u5148\u7528Python-jenkins\u8fd9\u4e2a\u5e93\u5b8c\u6210\u3002</p> <ul> <li>\u4ed3\u5e93Pypi \uff1ahttps://pypi.org/project/python-jenkins/</li> <li>\u5728\u7ebf\u6587\u6863: http://python-jenkins.readthedocs.org/en/latest/</li> <li>\u5f53\u524d\u73af\u5883Python\u7248\u672c v3.7.0</li> </ul>"},{"location":"chap1/2python-jenkins/#_1","title":"\u529f\u80fd","text":"<ul> <li>Create new jobs  \u521b\u5efa\u65b0\u9879\u76ee    </li> <li>Copy existing jobs   \u590d\u5236\u5df2\u5b58\u5728\u7684\u9879\u76ee</li> <li>Delete jobs  \u5220\u9664\u9879\u76ee</li> <li>Update jobs  \u66f4\u65b0\u9879\u76ee</li> <li>Get a job\u2019s build information   \u83b7\u53d6\u4e00\u4e2a\u9879\u76ee\u7684\u6784\u5efa\u4fe1\u606f</li> <li>Get Jenkins master version information   \u83b7\u53d6Jenkins master\u7684\u7248\u672c\u4fe1\u606f</li> <li>Get Jenkins plugin information  \u8fc7\u53bbjenkins\u63d2\u4ef6\u4fe1\u606f</li> <li>Start a build on a job  \u6784\u5efa\u4e00\u4e2a\u9879\u76ee</li> <li>Create nodes  \u521b\u5efa\u4e00\u4e2a\u8282\u70b9  </li> <li>Enable/Disable nodes  \u542f\u7528/\u7981\u7528\u8282\u70b9</li> <li>Get information on nodes  \u83b7\u53d6\u8282\u70b9\u4fe1\u606f</li> <li>Create/delete/reconfig views  \u521b\u5efa/\u5220\u9664/\u66f4\u65b0\u89c6\u56fe</li> <li>Put server in shutdown mode (quiet down)  \u5173\u673a</li> <li>List running builds  \u5217\u51fa\u6784\u5efa\u4e2d\u7684\u9879\u76ee</li> <li>Delete builds  \u5220\u9664\u6784\u5efa</li> <li>Wipeout job workspace  </li> <li>Create/delete/update folders  \u521b\u5efa/\u5220\u9664/\u66f4\u65b0\u6587\u4ef6\u5939</li> <li>Set the next build number \u8bbe\u7f6e\u4e0b\u6b21\u6784\u5efaID</li> <li>Install plugins   \u5b89\u88c5\u63d2\u4ef6</li> </ul>"},{"location":"chap1/2python-jenkins/#_2","title":"\u4f7f\u7528\u601d\u8def","text":"<p>\u4f8b\u5982\u6211\u8981\u521b\u5efa\u4e00\u4e2a\u9879\u76ee</p> <ol> <li>\u8981\u5148\u627e\u5230\u521b\u5efa\u9879\u76ee\u7684\u65b9\u6cd5</li> <li>\u7136\u540e\u6839\u636eAPI\u6587\u6863\u67e5\u9605\u5982\u4f55\u4f7f\u7528 \u6bcf\u4e2a\u63a5\u53e3\u7684\u4f7f\u7528\u65b9\u6cd5</li> <li>\u6253\u5f00\u4e00\u4e2apython\u89e3\u91ca\u5668\u8c03\u8bd5</li> </ol>"},{"location":"chap1/2python-jenkins/#_3","title":"\u521d\u59cb\u5316\u914d\u7f6e","text":"<p>\u5b89\u88c5python-jenkins</p> <pre><code>pip install python-jenkins==1.6.0\n</code></pre> <p>\u6d4b\u8bd5</p> <pre><code>$ python3\nPython 3.7.4 (v3.7.4:e09359112e, Jul  8 2019, 14:54:52)\n[Clang 6.0 (clang-600.0.57)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import jenkins\n\n&gt;&gt;&gt; server = jenkins.Jenkins(\"http://127.0.0.1:8080\",username=\"admin\",password=\"admin\")\n\n&gt;&gt;&gt; server.get_whoami()\n{'_class': 'hudson.model.User', 'absoluteUrl': 'http://127.0.0.1:8080/user/admin', 'description': '', 'fullName': 'admin', 'id': 'admin', 'property': [{'_class': 'jenkins.security.ApiTokenProperty'}, {'_class': 'jenkins.security.LastGrantedAuthoritiesProperty'}, {'_class': 'hudson.model.MyViewsProperty'}, {'_class': 'hudson.model.PaneStatusProperties'}, {'_class': 'hudson.security.HudsonPrivateSecurityRealm$Details'}, {'_class': 'org.jenkinsci.main.modules.cli.auth.ssh.UserPropertyImpl'}, {'_class': 'jenkins.security.seed.UserSeedProperty'}, {'_class': 'hudson.search.UserSearchProperty', 'insensitiveSearch': True}, {'_class': 'hudson.model.TimeZoneProperty'}]}\n</code></pre> <p>\u67e5\u770b \u6240\u6709\u7684\u65b9\u6cd5</p> <pre><code>&gt;&gt;&gt; dir(server)\n['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_add_missing_builds', '_auth_resolved', '_auths', '_build_url', '_get_encoded_params', '_get_job_folder', '_get_tag_text', '_get_view_jobs', '_maybe_add_auth', '_request', '_response_handler', '_session', '_timeout_warning_issued', 'assert_credential_exists', 'assert_folder', 'assert_job_exists', 'assert_node_exists', 'assert_promotion_exists', 'assert_view_exists', 'auth', 'build_job', 'build_job_url', 'cancel_queue', 'check_jenkinsfile_syntax', 'copy_job', 'create_credential', 'create_folder', 'create_job', 'create_node', 'create_promotion', 'create_view', 'credential_exists', 'crumb', 'debug_job_info', 'delete_build', 'delete_credential', 'delete_job', 'delete_node', 'delete_promotion', 'delete_view', 'disable_job', 'disable_node', 'enable_job', 'enable_node', 'get_all_jobs', 'get_build_console_output', 'get_build_env_vars', 'get_build_info', 'get_build_test_report', 'get_credential_config', 'get_credential_info', 'get_info', 'get_job_config', 'get_job_info', 'get_job_info_regex', 'get_job_name', 'get_jobs', 'get_node_config', 'get_node_info', 'get_nodes', 'get_plugin_info', 'get_plugins', 'get_plugins_info', 'get_promotion_config', 'get_promotion_name', 'get_promotions', 'get_promotions_info', 'get_queue_info', 'get_queue_item', 'get_running_builds', 'get_version', 'get_view_config', 'get_view_name', 'get_views', 'get_whoami', 'install_plugin', 'is_folder', 'jenkins_open', 'jenkins_request', 'job_exists', 'jobs_count', 'list_credentials', 'maybe_add_crumb', 'node_exists', 'promotion_exists', 'quiet_down', 'reconfig_credential', 'reconfig_job', 'reconfig_node', 'reconfig_promotion', 'reconfig_view', 'rename_job', 'run_script', 'server', 'set_next_build_number', 'stop_build', 'timeout', 'upsert_job', 'view_exists', 'wait_for_normal_op', 'wipeout_job_workspace']\n</code></pre> <p>do\u64cd\u4f5c\u65b9\u6cd5</p> <p>do\u64cd\u4f5c\u65b9\u6cd5</p> <ul> <li>\u529f\u80fd    /  python\u65b9\u6cd5</li> <li>\u9879\u76ee\u64cd\u4f5c: <code>create_job</code> , <code>disable_job</code> , <code>delete_job</code> , <code>copy_job</code>, <code>enable_job</code>,  <code>job_exists</code>,  <code>jobs_count</code> , <code>upsert_job</code></li> <li>\u6784\u5efa\u64cd\u4f5c  <code>build_job</code> <code>delete_build</code> <code>build_job_url</code> <code>stop_build</code></li> <li>\u51ed\u636e\u64cd\u4f5c  <code>create_credential</code> <code>delete_credentialcredential_exists</code></li> <li>\u89c6\u56fe\u64cd\u4f5c  <code>create_view</code> <code>delete_view</code> <code>view_exists</code></li> <li>\u8282\u70b9\u64cd\u4f5c   <code>create_node</code> <code>disable_node</code> <code>delete_node</code> <code>enable_node</code> <code>node_exists</code></li> <li>\u664b\u7ea7\u64cd\u4f5c  <code>create_promotion</code> <code>delete_promotion</code> <code>promotion_exists</code></li> <li>\u53d6\u6d88\u961f\u5217  <code>cancel_queue</code></li> <li>\u68c0\u67e5jenkinsfile\u8bed\u6cd5   <code>check_jenkinsfile_syntax</code></li> <li>\u68c0\u67e5\u9879\u76ee\u4fe1\u606f     <code>debug_job_info</code></li> <li>\u6587\u4ef6\u5939\u64cd\u4f5c <code>is_folder</code> <code>create_folder</code></li> <li>\u5b89\u88c5\u63d2\u4ef6   <code>install_plugin</code></li> </ul> <p>get\u83b7\u53d6\u65b9\u6cd5</p> <ul> <li>\u83b7\u53d6\u9879\u76ee\u4fe1\u606f      <code>get_all_jobs</code> <code>get_job_config</code> <code>get_job_info</code> <code>get_job_info_regex</code> <code>get_job_name get_jobs</code></li> <li>\u83b7\u53d6\u6784\u5efa\u4fe1\u606f     <code>get_build_console_output</code> <code>get_build_env_vars</code> <code>get_build_info</code> <code>get_build_test_report</code></li> <li>\u83b7\u53d6\u51ed\u636e\u4fe1\u606f     <code>get_credential_config</code> <code>get_credential_info</code> <code>list_credentials</code> <code>get_info</code></li> <li>\u83b7\u53d6\u8282\u70b9\u4fe1\u606f     <code>get_node_config</code> <code>get_node_info</code> <code>get_nodes</code></li> <li>\u83b7\u53d6\u63d2\u4ef6\u4fe1\u606f      <code>get_plugin_info</code> <code>get_plugins</code> <code>get_plugins_info</code></li> <li>\u83b7\u53d6\u664b\u7ea7\u4fe1\u606f     <code>get_promotion_config</code> <code>get_promotion_name</code> <code>get_promotions</code> <code>get_promotions_info</code></li> <li>\u83b7\u53d6\u961f\u5217\u4fe1\u606f      <code>get_queue_info</code> <code>get_queue_item</code></li> <li>\u83b7\u53d6\u8fd0\u884c\u4e2d\u6784\u5efa    <code>get_running_builds</code></li> <li>\u83b7\u53d6\u7248\u672c  <code>get_version</code></li> <li>\u83b7\u53d6\u89c6\u56fe\u4fe1\u606f     <code>get_view_config</code> <code>get_view_name</code> <code>get_views</code></li> <li>\u83b7\u53d6\u5f53\u524d\u7528\u6237    <code>get_whoami</code> <code>jenkins_open</code> <code>jenkins_request</code></li> </ul> <p>\u66f4\u65b0\u64cd\u4f5c</p> <ul> <li>\u5173\u673a    <code>quiet_down</code></li> <li>\u66f4\u65b0\u51ed\u636e   <code>reconfig_credential</code></li> <li>\u66f4\u65b0\u9879\u76ee   <code>reconfig_job</code></li> <li>\u66f4\u65b0\u8282\u70b9  <code>reconfig_node</code></li> <li>\u66f4\u65b0\u664b\u7ea7  <code>reconfig_promotion</code></li> <li>\u66f4\u65b0\u89c6\u56fe  <code>reconfig_view</code></li> <li>\u91cd\u547d\u540d\u9879\u76ee <code>rename_job</code></li> <li>\u8fd0\u884c\u811a\u672c  <code>run_script</code></li> <li>\u8bbe\u7f6e\u4e0b\u6b21\u6784\u5efaid   <code>set_next_build_number</code></li> </ul>"},{"location":"chap1/2python-jenkins/#_4","title":"\u6f14\u793a\u5b9e\u4f8b","text":"<p>\u6bcf\u4e2a\u63a5\u53e3\u7684\u4f7f\u7528\u65b9\u6cd5\uff1ahttps://python-jenkins.readthedocs.io/en/latest/api.html</p>"},{"location":"chap1/2python-jenkins/#_5","title":"\u9879\u76ee\u64cd\u4f5c","text":"<p>\u6211\u4eec\u9700\u8981\u8ba4\u8bc6\u4e00\u4e0bJenkins\u9879\u76ee\u7684<code>config.xml</code>\uff0c\u5927\u90e8\u5206API\u5728\u521b\u5efa\u9879\u76ee\u7684\u65f6\u5019\u4f1a\u4f7f\u7528xml\u6587\u4ef6\u3002\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u9879\u76ee\uff08\u4efb\u4f55\u7c7b\u578b\u7684\u90fd\u53ef\u4ee5\uff09\u7136\u540e\u6211\u4eec\u8fdb\u5165<code>$JENKINS_HOME/jobs/</code>\u76ee\u5f55\u67e5\u770b\u6211\u4eec\u8fd9\u4e2a\u9879\u76ee\u751f\u6210\u7684<code>config.xml</code>\u6587\u4ef6\u3002</p> <p>builds\u5b58\u653e\u9879\u76ee\u7684\u6784\u5efa\u4fe1\u606f\u3002</p> <pre><code>$ ls\ndemo-test\n\n$ ls demo-test/\nbuildsconfig.xml\n</code></pre> <p>config.xml</p> <p>\u53ef\u4ee5\u770b\u5230jenkins\u7684\u6587\u4ef6\u5b58\u50a8\u90fd\u662f\u4ee5xml\u65b9\u5f0f\u5b58\u50a8\u7684\u3002\uff08\u540e\u9762\u6211\u4eec\u9700\u8981\u5229\u7528\u8fd9\u4e2axml\u521b\u5efa\u4e00\u4e2a\u65b0\u9879\u76ee\uff09</p> <pre><code>&lt;?xml version='1.1' encoding='UTF-8'?&gt;\n&lt;project&gt;\n&lt;description&gt;test&lt;/description&gt;\n&lt;keepDependencies&gt;false&lt;/keepDependencies&gt;\n&lt;properties/&gt;\n&lt;scm class=\"hudson.scm.NullSCM\"/&gt;\n&lt;canRoam&gt;true&lt;/canRoam&gt;\n&lt;disabled&gt;false&lt;/disabled&gt;\n&lt;blockBuildWhenDownstreamBuilding&gt;false&lt;/blockBuildWhenDownstreamBuilding&gt;\n&lt;blockBuildWhenUpstreamBuilding&gt;false&lt;/blockBuildWhenUpstreamBuilding&gt;\n&lt;triggers/&gt;\n&lt;concurrentBuild&gt;false&lt;/concurrentBuild&gt;\n&lt;builders/&gt;\n&lt;publishers/&gt;\n&lt;buildWrappers/&gt;\n&lt;/project&gt;\n</code></pre> <p>\u4f7f\u7528\u65b9\u6cd5\u83b7\u53d6\u9879\u76ee\u914d\u7f6e\u4fe1\u606f</p> <pre><code>server.get_job_config(\"demo-test\")\n\n'&lt;?xml version=\\'1.1\\' encoding=\\'UTF-8\\'?&gt;\\n&lt;project&gt;\\n &lt;description&gt;test&lt;/description&gt;\\n &lt;keepDependencies&gt;false&lt;/keepDependencies&gt;\\n &lt;properties/&gt;\\n &lt;scm class=\"hudson.scm.NullSCM\"/&gt;\\n &lt;canRoam&gt;true&lt;/canRoam&gt;\\n &lt;disabled&gt;false&lt;/disabled&gt;\\n &lt;blockBuildWhenDownstreamBuilding&gt;false&lt;/blockBuildWhenDownstreamBuilding&gt;\\n &lt;blockBuildWhenUpstreamBuilding&gt;false&lt;/blockBuildWhenUpstreamBuilding&gt;\\n &lt;triggers/&gt;\\n &lt;concurrentBuild&gt;false&lt;/concurrentBuild&gt;\\n &lt;builders/&gt;\\n &lt;publishers/&gt;\\n &lt;buildWrappers/&gt;\\n&lt;/project&gt;'\n</code></pre> <p>\u638c\u63e1\u521b\u5efa\u9879\u76ee\u7684\u65b9\u6cd5\u4f7f\u7528</p> <ul> <li><code>create_job(name, config_xml)</code><ul> <li>name \u9879\u76ee\u540d\u79f0 \u5b57\u7b26\u4e32\u7c7b\u578b</li> <li><code>config_xml</code> \u914d\u7f6e\u6587\u4ef6 \u5b57\u7b26\u4e32\u7c7b\u578b</li> </ul> </li> </ul> <p>\u65b0\u5efa\u9879\u76ee<code>demo-test-02</code></p> <pre><code>config_xml = server.get_job_config(\"demo-test\")\nserver.create_job(\"demo-test-02\",config_xml)\n</code></pre> <p>\u9a8c\u8bc1\u9879\u76ee\u662f\u5426\u521b\u5efa\u6210\u529f </p> <pre><code>server.job_exists(\"demo-test-02\")\nTrue\n</code></pre> <p>\u590d\u5236\u4e00\u4e2a\u65b0\u9879\u76eedemo-test-03</p> <pre><code>copy_job(from_name, to_name)\n</code></pre> <ul> <li><code>from_name</code> \u6e90\u9879\u76ee \u5b57\u7b26\u4e32\u7c7b\u578b</li> <li><code>to_name</code> \u76ee\u6807\u9879\u76ee \u5b57\u7b26\u4e32\u7c7b\u578b</li> </ul> <p>\u5f53\u6e90\u9879\u76ee\u540d\u79f0\u4e0e\u76ee\u6807\u9879\u76ee\u540d\u79f0\u4e00\u81f4\u7684\u65f6\u5019\u4f1a\u62a5\u9519\u3002JenkinsException</p> <pre><code>&gt;&gt;&gt; server.copy_job(\"demo-test-02\",\"demo-test-03\")\n&gt;&gt;&gt; server.job_exists(\"demo-test-03\")\nTrue\n</code></pre> <p>\u5199\u4e00\u4e2a\u811a\u672c\u7528\u4e8e\u9879\u76ee\u521b\u5efa</p> <p>\u65b0\u5efa\u4e00\u4e2a\u9879\u76ee\uff0c\u589e\u52a0\u4e00\u4e2a\u53c2\u6570<code>srcType</code>\u7528\u4e8e\u5206\u8fa8\u9879\u76ee\u6240\u4f7f\u7528\u7684\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u7c7b\u578b\u3002\u53c2\u6570\u53ef\u4ee5\u662f(<code>svn,git</code>)\u3002</p> <p>\u6211\u4eec\u8981\u5b8c\u6210\u7684\u662f\u57fa\u4e8e\u4e00\u4e2a\u9879\u76ee\u6a21\u677f\uff0c\u521b\u5efa\u65b0\u7684\u9879\u76ee\u5e76\u66ff\u6362\u76f8\u5173\u7684\u53c2\u6570\u3002\u6a21\u677f\u9879\u76ee\u540d\u79f0<code>demo-devops-service</code> \u3002</p> <p></p> <pre><code>import jenkins\n\n#login\nserverUrl = \"http://127.0.0.1:8080\"\nusername = \"admin\"\npassword = \"admin\"\nserver = jenkins.Jenkins(serverUrl,username,password)\n\ndefProjectName = \"demo-devops-service\"\nnewProjectName = \"demo-test-service\"\n\n\nif server.job_exists(newProjectName) != True :\n   print(\"\u9879\u76ee\u4e0d\u5b58\u5728\u5f00\u59cb\u65b0\u5efa\u9879\u76ee\")\n\n   config_xml=server.get_job_config(defProjectName)\n   newconfig_xml = config_xml.replace(\"&lt;defaultValue&gt;svn&lt;/defaultValue&gt;\",\"&lt;defaultValue&gt;git&lt;/defaultValue&gt;\")\n\n   print(newconfig_xml)\n\n   server.create_job(newProjectName,newconfig_xml)\nelse:\n   print(\"\u9879\u76ee\u5df2\u5b58\u5728!\")\n</code></pre> <p>\u8fd0\u884c\u8f93\u51fa</p> <pre><code>$ python3 josbtest.py\n\u9879\u76ee\u4e0d\u5b58\u5728\u5f00\u59cb\u65b0\u5efa\u9879\u76ee\n&lt;?xml version='1.1' encoding='UTF-8'?&gt;\n&lt;project&gt;\n&lt;actions/&gt;\n&lt;description&gt;&lt;/description&gt;\n&lt;keepDependencies&gt;false&lt;/keepDependencies&gt;\n&lt;properties&gt;\n  &lt;hudson.model.ParametersDefinitionProperty&gt;\n    &lt;parameterDefinitions&gt;\n      &lt;hudson.model.StringParameterDefinition&gt;\n        &lt;name&gt;srcType&lt;/name&gt;\n        &lt;description&gt;&lt;/description&gt;\n        &lt;defaultValue&gt;git&lt;/defaultValue&gt;\n        &lt;trim&gt;false&lt;/trim&gt;\n      &lt;/hudson.model.StringParameterDefinition&gt;\n    &lt;/parameterDefinitions&gt;\n  &lt;/hudson.model.ParametersDefinitionProperty&gt;\n&lt;/properties&gt;\n&lt;scm class=\"hudson.scm.NullSCM\"/&gt;\n&lt;canRoam&gt;true&lt;/canRoam&gt;\n&lt;disabled&gt;false&lt;/disabled&gt;\n&lt;blockBuildWhenDownstreamBuilding&gt;false&lt;/blockBuildWhenDownstreamBuilding&gt;\n&lt;blockBuildWhenUpstreamBuilding&gt;false&lt;/blockBuildWhenUpstreamBuilding&gt;\n&lt;triggers/&gt;\n&lt;concurrentBuild&gt;false&lt;/concurrentBuild&gt;\n&lt;builders/&gt;\n&lt;publishers/&gt;\n&lt;buildWrappers/&gt;\n&lt;/project&gt;\n</code></pre> <p>\u6548\u679c</p> <p></p>"},{"location":"chap1/3jenkins_values/","title":"\u7b2c\u516d\u8282 Jenkins: \u83b7\u53d6\u6587\u4ef6\u53d8\u66f4\u5217\u8868\u3001\u63d0\u4ea4ID\u3001\u63d0\u4ea4\u4eba\u548c\u63d0\u4ea4\u4fe1\u606f","text":"<p>Jenkins \u2014 Get the latest changed files list, Commit ID, AuthorName, and Commit Message</p> <p></p> <p>We sometimes get requirements such as \u201cWe need to run/execute this Jenkins job/stage\u201d only based on changes from the previous build like below:</p> <p>\u6211\u4eec\u6709\u65f6\u4f1a\u5f97\u5230\u8bf8\u5982\u201c\u6211\u4eec\u9700\u8981\u8fd0\u884c/\u6267\u884c\u6b64 Jenkins \u4f5c\u4e1a/\u9636\u6bb5\u201d\u4e4b\u7c7b\u7684\u8981\u6c42\uff0c\u4ec5\u57fa\u4e8e\u5bf9\u5148\u524d\u6784\u5efa\u7684\u66f4\u6539\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <ul> <li>Files changes from the previous build to the current build. \u6587\u4ef6\u4ece\u4ee5\u524d\u7684\u7248\u672c\u66f4\u6539\u4e3a\u5f53\u524d\u7248\u672c\u3002</li> <li>Commit message \u2014 for example, a particular word/pattern in the message.\u63d0\u4ea4\u6d88\u606f \u2014 \u4f8b\u5982\uff0c\u6d88\u606f\u4e2d\u7684\u7279\u5b9a\u5355\u8bcd/\u6a21\u5f0f\u3002</li> <li>Commit ID \u63d0\u4ea4\u6807\u8bc6</li> <li>Author Name \u4f5c\u8005\u59d3\u540d</li> </ul> <p>If we use the native git commands via shell block, we always get the git differences between the last two commits, not the git changes between Jenkins builds.</p> <p>\u5982\u679c\u6211\u4eec\u901a\u8fc7 shell \u5757\u4f7f\u7528\u539f\u751f git \u547d\u4ee4\uff0c\u6211\u4eec\u603b\u662f\u4f1a\u5f97\u5230\u6700\u540e\u4e24\u6b21\u63d0\u4ea4\u4e4b\u95f4\u7684 git \u5dee\u5f02\uff0c\u800c\u4e0d\u662fJenkins \u6784\u5efa\u4e4b\u95f4\u7684 git \u66f4\u6539\u3002</p> <p>In order to get expecting details, we can use the currentBuild.changeSets Jenkins environment variable like below.</p> <p>\u4e3a\u4e86\u83b7\u5f97\u9884\u671f\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528<code>currentBuild.changeSetsJenkins</code>\u73af\u5883\u53d8\u91cf\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <pre><code>\npipeline {\n    agent any\n\n    stages {\n        stage('Get Last Commit Details') {\n            steps {\n                script{\n\n                    List&lt;String&gt; changes = getChangedFilesList()\n                    println (\"Changed file list: \" + changes)\n\n                    String gitCommitId = getGitcommitID()\n                    println(\"GIT CommitID: \" + gitCommitID)\n\n                    String gitCommitAuthorName = getAuthorName()\n                    println(\"GIT CommitAuthorName: \" + gitCommitAuthorName)\n\n                    String gitCommitMessage = getCommitMessage()\n                    println(\"GIT CommitMessage: \" + gitCommitMessage)\n\n                }\n            }\n        }\n    }\n}\n\n@NonCPS\nList&lt;String&gt; getChangedFilesList(){\n    def changedFiles = []\n    for ( changeLogSet in currentBuild.changeSets){\n        for (entry in changeLogSet.getItems()){\n            changedFiles.addAll(entry.affectedPaths)\n        }\n    }\n    return changedFiles\n}\n\n@NonCPS\nString getGitcommitID(){\n    gitCommitID = \" \"\n    for ( changeLogSet in currentBuild.changeSets){\n        for (entry in changeLogSet.getItems()){\n            gitCommitID = entry.commitId\n        }\n    }\n    return gitCommitID\n}\n\n@NonCPS\nString getAuthorName(){\n    gitAuthorName = \" \"\n    for ( changeLogSet in currentBuild.changeSets){\n        for (entry in changeLogSet.getItems()){\n            gitAuthorName = entry.authorName\n        }\n    }\n    return gitAuthorName\n}\n\n@NonCPS\nString getCommitMessage(){\n    commitMessage = \" \"\n    for ( changeLogSet in currentBuild.changeSets){\n        for (entry in changeLogSet.getItems()){\n            commitMessage = entry.msg\n        }\n    }\n    return commitMessage\n}\n</code></pre> <p>Once you get the required values, we can utilize them as data sources to control the flow of our Jenkins pipeline.</p> <p>\u83b7\u5f97\u6240\u9700\u7684\u503c\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5b83\u4eec\u4f5c\u4e3a\u6570\u636e\u6e90\u6765\u63a7\u5236 Jenkins \u7ba1\u9053\u7684\u6d41\u7a0b\u3002</p> <p>\u6ce8\u610f\uff1a\u4eba\u4eec\u7ecf\u5e38\u5c06 changeSet \u89c6\u4e3a\u4ed6\u4eec\u4e0d\u4e86\u89e3\u7684\u5185\u5bb9\u3002\u662f\u5728\u6b64\u6784\u5efa\u548c\u4e0a\u4e00\u4e2a\u6784\u5efa\u4e4b\u95f4\u4fee\u6539\u7684\u6587\u4ef6\u5217\u8868\u3002\u5982\u679c\u524d\u4e00\u4e2a\u5931\u8d25\u5e76\u88ab\u91cd\u65b0\u89e6\u53d1\uff0c\u5219 changeSet \u5c06\u4e3a\u7a7a\u3002\u60a8\u53ef\u80fd\u5e0c\u671b\u83b7\u53d6\u7ed9\u5b9a\u5206\u652f\u7684\u66f4\u6539\u5217\u8868\u3002</p>"},{"location":"chap1/3jenkins_values/#jenkins","title":"Jenkins: \u5982\u4f55\u66f4\u65b0\u5f53\u524d\u6784\u5efa\u540d\u79f0\u548c\u63cf\u8ff0","text":"<p>Jenkins is a famous and mostly used CI tool and we are also using it for build and release and other automated jobs. We also have a deployment job that deploys the selected artifact version to selected server groups (similar to autoscaling groups in AWS) in the selected environment. The job is working as expected. By default, Jenkins set the build name as the build number (see the red color box in the below snapshot). what if somebody wants to know to which environment and server group 3rd or 4th build jobs deployed? In that case, we have to open the job details and needs to check.</p> <p></p> <p>But for the 6th,7th, and 8th builds, by seeing the build details themselves without opening, we can get all the important details. This can be achieved by updating the currentBuild.displayName and currentBuild.description variables.</p> <p>\u4f46\u662f\u5bf9\u4e8e\u7b2c 6\u30017 \u548c 8 \u4e2a\u6784\u5efa\uff0c\u901a\u8fc7\u4e0d\u6253\u5f00\u5373\u53ef\u67e5\u770b\u6784\u5efa\u7ec6\u8282\u672c\u8eab\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u6240\u6709\u91cd\u8981\u7ec6\u8282\u3002</p> <p>\u8fd9\u53ef\u4ee5\u901a\u8fc7\u66f4\u65b0<code>currentBuild.displayName</code>\u548c<code>currentBuild.description</code>\u53d8\u91cf\u6765\u5b9e\u73b0\u3002 <code>Sample template</code> \u793a\u4f8b\u6a21\u677f:</p> <pre><code>pipeline {\n    agent any\n\n    parameters {\n        choice choices: ['develop', 'test', 'state', 'prod'], description: 'Select the target environment.', name: 'ENVIRONMENT_NAME'\n        choice choices: ['ServerGRoupA', 'ServerGRoupB', 'ServerGRoupC'], description: 'Select the target server group name.', name: 'SERVER_GROUP_NAME'\n        string defaultValue: '1.0.0',description: 'Enter artifact version to be deployed', name: 'ARTIFACT_VAERSION'\n    }\n    stages {\n        stage('Initilization') {\n            steps {\n                echo 'Initilizating'\n                script{\n                    currentBuild.displayName = \"#${BUILD_NUMBER} - ${params.ENVIRONMENT_NAME} - ${params.SERVER_GROUP_NAME} -${params.ARTIFACT_VAERSION}\"\n                    currentBuild.description = \"Deploying ${params.ARTIFACT_VAERSION} to ${params.SERVER_GROUP_NAME} in ${params.ENVIRONMENT_NAME}\"\n                }\n            }\n        }\n        stage('Download Atrifacts') {\n            steps {\n                echo \"Downloading ${params.ARTIFACT_VAERSION} Atrifacts\"\n            }\n        }\n        stage('Deploy Atrifacts') {\n            steps {\n                echo \"Deploying ${params.ARTIFACT_VAERSION} Atrifacts to ${params.SERVER_GROUP_NAME} in ${params.ENVIRONMENT_NAME}\"\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"chap10/1chap10_jira_install/","title":"\u7b2c\u4e00\u8282 k8s \u5b89\u88c5\u672c\u5730 Jira \u670d\u52a1","text":""},{"location":"chap10/1chap10_jira_install/#1-k8s-jira","title":"1\u3001\u642d\u5efa K8S Jira \u670d\u52a1","text":"<pre><code>$ kubectl create ns devops\nnamespace/devops created\n</code></pre> <p><code>jira-deployment.yaml</code></p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: jira\n  name: jira\n  namespace: devops\nspec:\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: jira\n  template:\n    metadata:\n      labels:\n        app: jira\n      name: jira\n    spec:\n      containers:\n        - name: jira\n          image: \"docker.io/cptactionhank/atlassian-jira-software:7.10.1\"\n          resources:\n            limits:\n              cpu: \"1\"\n              memory: 2Gi\n            requests:\n              cpu: \"1\"\n              memory: \"2G\"\n          volumeMounts:\n            - name: \"jira-home\"\n              mountPath: /opt/jira-home\n      volumes:\n        - name: \"jira-home\"\n          emptyDir: {}\n</code></pre> <p><code>jira-service.yaml</code></p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: jira\n  name: jira\n  namespace: devops\nspec:\n  type: NodePort\n  ports:\n    - port: 8080\n      targetPort: 8080\n      nodePort: 30050\n  selector:\n    app: jira\n</code></pre> <pre><code>$ kubectl create ns devops\n$ kubectl apply -f jira-deployment.yaml\n$ kubectl apply -f jira-service.yaml\n</code></pre>"},{"location":"chap10/1chap10_jira_install/#2-k8s-jira","title":"2\u3001\u521d\u59cb\u5316 K8S Jira \u670d\u52a1","text":"<p>\u6211\u9009\u62e9\u4e86<code>I'll setup myself</code></p> <ul> <li>Jenkins-Gitlab</li> <li>public</li> <li>http://192.168.33.1:3005</li> </ul> <p></p> <p><code>BOI4-59DI-ENXH-DR3M</code></p> <p></p> <p>Generate Lience Key and paste it</p> <p></p> <p>New admin user :</p> <ul> <li>admin</li> <li>admin</li> </ul>"},{"location":"chap10/2chap10_jira_gilab/","title":"\u7b2c\u4e8c\u8282 Jenkins \u914d\u7f6e\u7aef\u5230\u7aef\u6d41\u6c34\u7ebf \uff08Jira \u548c Gitlab\u7684\u96c6\u6210\uff09","text":""},{"location":"chap10/2chap10_jira_gilab/#1-jira","title":"1\u3001\u57fa\u4e8e Jira \u6d41\u6c34\u7ebf\u7684\u65b9\u6848","text":""},{"location":"chap10/2chap10_jira_gilab/#1-1","title":"1-1 \u5185\u5bb9\u6982\u89c8","text":"<ul> <li>\u4f7f\u7528<code>Jira</code>\u4e2d<code>Git</code> \u63d2\u4ef6\u5b8c\u6210\u5206\u652f\u521b\u5efa\u7684\u4e88\u8db3 </li> <li>\u4f18\u5316\u6539\u8fdb\u4e07\u6848 </li> <li>\u8be6\u7ec6\u6280\u672f\u4e07\u6848 </li> <li>\u8c03\u7814Jira/Gitlab/Jenkins </li> </ul>"},{"location":"chap10/2chap10_jira_gilab/#1-2-jiragit","title":"1-2 \u73b0\u72b6\u4e00\u4f7f\u7528<code>Jira</code>\u4e2d\u7684Git\u63d2\u4ef6\u5b9e\u73b0\u96c6\u6210","text":"<p>\u6548\u679c\uff1a </p> <ul> <li>\u80fd\u591f\u5b9e\u73b0\u5728Jira\u7cfb\u7edf\u5bf9\u5e94\u7684\u4efb\u52a1\u4e0b\u9762\u521b\u5efa\u5206\u652f </li> <li>\u6216\u8005\u5f00\u53d1\u4eba\u5458\u5728\u521b\u5efa\u5206\u652f\u7684\u65f6\u5019\u540d\u79f0\u5305\u542b<code>Jira ID</code>\u81ea\u52a8\u5173\u8054</li> </ul> <p>\u4e0d\u8db3\uff1a </p> <ul> <li>\u63d2\u4ef6\u4e0d\u7a33\u5b9a\uff0c\u8d44\u6e90\u6d88\u8017\u5927\u3002</li> <li>\u624b\u52a8\u521b\u5efa\u5206\u652f\uff0c\u589e\u52a0\u4e86\u4eba\u5458\u6210\u672c\u3002</li> </ul>"},{"location":"chap10/2chap10_jira_gilab/#1-3","title":"1-3 \u6539\u8fdb\u65b9\u6848","text":"<p>\u6548\u679c</p> <ul> <li>\u521b\u5efa\u6545\u4e8b\u6216\u8005\u4efb\u52a1\u81ea\u52a8\u5728\u5bf9\u5e94\u7684\u4ee3\u7801\u5e93\u521b\u5efa\u5206\u652f\u53e3 </li> <li>\u6545\u4e8b\u6216\u8005\u4efb\u52a1\u5728\u5173\u8054\u5230\u53d1\u5e03\u4e4b\u540e\u81ea\u52a8\u521b\u5efa<code>release</code>\u5206\u652f\u548c\u5408\u5e76\u8bf7\u6c42</li> </ul> <p>\u5b9e\u73b0</p> <p>\u914d\u7f6e<code>Jira Webhook</code>\u89e6\u53d1<code>Jenkins</code>\u64cd\u4f5c<code>Gitlab</code>\u7cfb\u7edf</p>"},{"location":"chap10/2chap10_jira_gilab/#1-4","title":"1-4 \u6280\u672f\u65b9\u6848","text":"<ul> <li>\u521b\u5efa<code>issues</code>\u5173\u8054\u6a21\u5757\uff0c\u6a21\u5757\u540d\u79f0\u540c<code>git</code>\u4ed3\u5e93\u540d\u79f0 <ul> <li><code>git</code>: <code>demo-maven-service</code></li> <li><code>jira Component</code>:   <code>demo-maven-service</code></li> </ul> </li> </ul> <ul> <li>JIRA\u521b\u5efa<code>issues</code>\uff08\u4efb\u52a1\u6216\u8005\u6545\u4e8b\uff09\uff0c\u5173\u8054\u5bf9\u5e94\u6a21\u5757\u3002 </li> <li><code>Jenkins</code>\u6839\u636e\u6a21\u5757\uff08components\uff09\u5728\u5bf9\u5e94\u7684\u4ed3\u5e93\u4e2d\u521b\u5efa\u5206\u652f\uff08IssueName)\u3002 </li> <li><code>JIRA</code>\u66f4\u65b0issues, Jenkins\u6839\u636e\u6a21\u5757\uff08components\uff09\u5728\u5bf9\u5e94\u7684\u4ed3\u5e93\u4e2d\u521b\u5efa\u5206\u652f (issuesNarne) </li> <li><code>JIRA</code>\u66f4\u65b0issues\u5230\u7248\u672c\u4e2d\u3002Jenkins\u6839\u636eissues\u4e2d\u7684\u6a21\u5757\u4fe1\u606f\uff0c\u5728\u5bf9\u5e94\u7684\u4ed3\u5e93\u4e2d\u521b\u5efa<code>release</code>\u5206\u652f\uff08fixVersion)\uff0c\u5e76\u521b\u5efa\u7279\u6027\u5206\u652f\uff08<code>issueName</code>\uff09\u5230<code>release</code>\u5206\u652f\u7684MR</li> </ul>"},{"location":"chap10/2chap10_jira_gilab/#2jira-gitlab","title":"2\u3001Jira \u81ea\u52a8\u521b\u5efa Gitlab \u5206\u652f","text":""},{"location":"chap10/2chap10_jira_gilab/#2-1-gilab-shard-library","title":"2-1 Gilab Shard Library","text":"<p><code>gitlab.groovy</code></p> <pre><code>package org.devops\n\n//\u5c01\u88c5HTTP\u8bf7\u6c42\ndef HttpReq(reqType,reqUrl,reqBody){\n    def gitServer = \"http://192.168.33.1:30088/api/v4\"\n    withCredentials([string(credentialsId: 'gitlab-token', variable: 'gitlabToken')]) {\n      result = httpRequest customHeaders: [[maskValue: true, name: 'PRIVATE-TOKEN', value: \"${gitlabToken}\"]], \n                httpMode: reqType, \n                contentType: \"APPLICATION_JSON\",\n                consoleLogResponseBody: true,\n                ignoreSslErrors: true, \n                requestBody: reqBody,\n                url: \"${gitServer}/${reqUrl}\"\n                //quiet: true\n    }\n    return result\n}\n\n\n//\u66f4\u65b0\u6587\u4ef6\u5185\u5bb9\ndef UpdateRepoFile(projectId,filePath,fileContent){\n    apiUrl = \"projects/${projectId}/repository/files/${filePath}\"\n    reqBody = \"\"\"{\"branch\": \"master\",\"encoding\":\"base64\", \"content\": \"${fileContent}\", \"commit_message\": \"update a new file\"}\"\"\"\n    response = HttpReq('PUT',apiUrl,reqBody)\n    println(response)\n\n}\n\n//\u83b7\u53d6\u6587\u4ef6\u5185\u5bb9\ndef GetRepoFile(projectId,filePath){\n    apiUrl = \"projects/${projectId}/repository/files/${filePath}/raw?ref=master\"\n    response = HttpReq('GET',apiUrl,'')\n    return response.content\n}\n\n//\u521b\u5efa\u4ed3\u5e93\u6587\u4ef6\ndef CreateRepoFile(projectId,filePath,fileContent){\n    apiUrl = \"projects/${projectId}/repository/files/${filePath}\"\n    reqBody = \"\"\"{\"branch\": \"master\",\"encoding\":\"base64\", \"content\": \"${fileContent}\", \"commit_message\": \"create a new file\"}\"\"\"\n    response = HttpReq('POST',apiUrl,reqBody)\n    println(response)\n}\n\n\n//\u66f4\u6539\u63d0\u4ea4\u72b6\u6001\ndef ChangeCommitStatus(projectId,commitSha,status){\n    commitApi = \"projects/${projectId}/statuses/${commitSha}?state=${status}\"\n    response = HttpReq('POST',commitApi,'')\n    println(response)\n    return response\n}\n\n//\u83b7\u53d6\u9879\u76eeID\ndef GetProjectID(repoName='',projectName){\n    projectApi = \"projects?search=${projectName}\"\n    response = HttpReq('GET',projectApi,'')\n    def result = readJSON text: \"\"\"${response.content}\"\"\"\n\n    for (repo in result){\n       // println(repo['path_with_namespace'])\n        if (repo['path'] == \"${projectName}\"){\n\n            repoId = repo['id']\n            println(repoId)\n        }\n    }\n    return repoId\n}\n\n//\u5220\u9664\u5206\u652f\ndef DeleteBranch(projectId,branchName){\n    apiUrl = \"/projects/${projectId}/repository/branches/${branchName}\"\n    response = HttpReq(\"DELETE\",apiUrl,'').content\n    println(response)\n}\n\n//\u521b\u5efa\u5206\u652f\ndef CreateBranch(projectId,refBranch,newBranch){\n    try {\n        branchApi = \"projects/${projectId}/repository/branches?branch=${newBranch}&amp;ref=${refBranch}\"\n        response = HttpReq(\"POST\",branchApi,'').content\n        branchInfo = readJSON text: \"\"\"${response}\"\"\"\n    } catch(e){\n        println(e)\n    }  //println(branchInfo)\n}\n\n//\u521b\u5efa\u5408\u5e76\u8bf7\u6c42\ndef CreateMr(projectId,sourceBranch,targetBranch,title,assigneeUser=\"\"){\n    try {\n        def mrUrl = \"projects/${projectId}/merge_requests\"\n        def reqBody = \"\"\"{\"source_branch\":\"${sourceBranch}\", \"target_branch\": \"${targetBranch}\",\"title\":\"${title}\",\"assignee_id\":\"${assigneeUser}\"}\"\"\"\n        response = HttpReq(\"POST\",mrUrl,reqBody).content\n        return response\n    } catch(e){\n        println(e)\n    }\n}\n\n//\u641c\u7d22\u5206\u652f\ndef SearchProjectBranches(projectId,searchKey){\n    def branchUrl =  \"projects/${projectId}/repository/branches?search=${searchKey}\"\n    response = HttpReq(\"GET\",branchUrl,'').content\n    def branchInfo = readJSON text: \"\"\"${response}\"\"\"\n\n    def branches = [:]\n    branches[projectId] = []\n    if(branchInfo.size() ==0){\n        return branches\n    } else {\n        for (branch in branchInfo){\n            //println(branch)\n            branches[projectId] += [\"branchName\":branch[\"name\"],\n                                    \"commitMes\":branch[\"commit\"][\"message\"],\n                                    \"commitId\":branch[\"commit\"][\"id\"],\n                                    \"merged\": branch[\"merged\"],\n                                    \"createTime\": branch[\"commit\"][\"created_at\"]]\n        }\n        return branches\n    }\n}\n\n//\u5141\u8bb8\u5408\u5e76\ndef AcceptMr(projectId,mergeId){\n    def apiUrl = \"projects/${projectId}/merge_requests/${mergeId}/merge\"\n    HttpReq('PUT',apiUrl,'')\n}\n</code></pre> <ul> <li>\u83b7\u53d6\u9879\u76eeID\u63a5\u53e3</li> </ul> <pre><code>api/v4/projects?search=${projectName}\n</code></pre> <ul> <li>\u521b\u5efa\u5206\u652f\u63a5\u53e3</li> </ul> <pre><code>api/v4/projects/${projectName}/repository/branches?branch=${NewBranch}&amp;ref=${refBranch}\n</code></pre> <ul> <li>\u521b\u5efa\u5408\u5e76\u8bf7\u6c42\u63a5\u53e3<ul> <li><code>api/v4/projects/${projectId}/merge_requests</code></li> </ul> </li> </ul> <pre><code>\"\"\"{\"source_branch\":\"${sourceBranch}\", \"target_branch\": \"${targetBranch}\",\"title\" : \"${title}\",\"assignee_id\":\"${assigneeUser}\"}\"\"\"\n</code></pre>"},{"location":"chap10/2chap10_jira_gilab/#2-2-jira-shared-library","title":"2-2 Jira Shared Library","text":"<pre><code>package org.devops\n\n//\u5c01\u88c5HTTP\u8bf7\u6c42\ndef HttpReq(reqType,reqUrl,reqBody){\n    def apiServer = \"http://192.168.33.1:30050/rest/api/2\"\n\n   result = httpRequest authentication: 'jira-admin-user',\n            httpMode: reqType, \n            contentType: \"APPLICATION_JSON\",\n            consoleLogResponseBody: true,\n            ignoreSslErrors: true, \n            requestBody: reqBody,\n            url: \"${apiServer}/${reqUrl}\"\n            //quiet: true\n    return result\n}\n\n//\u6267\u884cJQL\ndef RunJql(jqlContent){\n    apiUrl = \"search?jql=${jqlContent}\"\n    response = HttpReq(\"GET\",apiUrl,'')\n    return response\n}\n</code></pre>"},{"location":"chap10/2chap10_jira_gilab/#2-3-jira-jenkins-webhook","title":"2-3 <code>Jira-Jenkins</code> - webhook","text":"<ul> <li>\u914d\u7f6e\u89e6\u53d1\u5668URL\u4e3aJenkins\u5730\u5740 </li> <li>\u901a\u8fc7JQL\u914d\u7f6e\u4e8b\u4ef6\u89e6\u53d1\u7684\u9879\u76ee </li> <li>\u9009\u62e9\u89e6\u53d1\u4e8b\u4ef6 </li> </ul> <p><code>plugins/servlet/webhooks</code> : <code>system -&gt; webhhooks</code></p> <ul> <li><code>jenkins-hook</code></li> <li><code>http://192.168.33.11:8080/generic-webhook-trigger/invoke?token=jira-devops-service&amp;projectKey=${project.Key}</code></li> <li><code>project = DEV</code></li> <li>Issue: created, updated, deleted</li> </ul> <p></p> <p></p>"},{"location":"chap10/2chap10_jira_gilab/#2-4-jenkins-pipeline-jira-devops-service","title":"2-4 <code>Jenkins Pipeline</code>: <code>jira-devops-service</code>","text":"<ul> <li>\u83b7\u53d6hook\u4e2d\u53c2\u6570 <ul> <li>\u83b7\u53d6\u95ee\u9898\u540d\u79f0 </li> <li>\u83b7\u53d6\u6a21\u5757\u540d\u79f0\u7b49\u6570\u636e </li> </ul> </li> <li>\u751f\u6210\u9879\u76ee\u552f\u4e00Token <ul> <li>\u4f7f\u7528\u9879\u76ee\u540d\u79f0\u6807\u8bc6 </li> </ul> </li> <li> <p>\u8fc7\u6ee4\u89e6\u53d1\u8bf7\u6c42 </p> <ul> <li>\u9650\u5236\u53ea\u6709\u6545\u4e8b\u4efb\u52a1\u7b49\u89e6\u53d1 </li> </ul> </li> <li> <p>Generic Webhook Trigger</p> <ul> <li>Post content parameters   : <code>webHookData : $</code>   , <code>JSONPath</code></li> <li>Request parameter: <code>projectKey</code></li> <li>Token: <code>jira-devops-service</code> </li> </ul> </li> </ul> <p></p> <p></p> <pre><code>#!groovy\n\n@Library('jenkinslib@master') _\n\ndef gitlab = new org.devops.gitlab()\ndef jira = new org.devops.jira()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n\n    stages{\n\n        stage(\"FileterData\"){\n            steps{\n                script{\n                    response = readJSON text: \"\"\"${webHookData}\"\"\"\n\n                    println(response)\n\n                    env.eventType = response[\"webhookEvent\"]\n\n                    switch(eventType) {\n                        case \"jira:version_created\":\n                            env.versionName = response[\"version\"][\"name\"]\n                            currentBuild.description = \" Trigger by  ${eventType} ${versionName} \"\n                            break\n\n                        case \"jira:issue_created\":\n                            env.issueName = response['issue']['key']\n                            env.userName = response['user']['name']\n                            env.moduleNames = response['issue']['fields']['components']\n                            env.fixVersion = response['issue']['fields']['fixVersions']\n                            currentBuild.description = \" Trigger by ${userName} ${eventType} ${issueName} \"\n                            break\n\n                        case \"jira:issue_updated\":\n                            env.issueName = response['issue']['key']\n                            env.userName = response['user']['name']\n                            env.moduleNames = response['issue']['fields']['components']\n                            env.fixVersion = response['issue']['fields']['fixVersions']\n                            currentBuild.description = \" Trigger by ${userName} ${eventType} ${issueName} \"\n                            break\n\n                        case \"jira:version_released\":\n                            env.versionName = response[\"version\"][\"name\"]\n                            currentBuild.description = \" Trigger by  ${eventType} ${versionName} \"\n                            break\n\n                        default:\n                            println(\"hello\")\n                    }\n                }\n            }\n        }\n\n        stage(\"CreateVersionFile\"){\n            when {\n                environment name: 'eventType', value: 'jira:version_created' \n            }\n\n            steps{\n                script{\n                    //\u83b7\u53d6K8s\u6587\u4ef6\n                    response = k8s.GetDeployment(\"demo-uat\",\"demoapp\")\n                    response = response.content\n                    //\u6587\u4ef6\u8f6c\u6362\n                    base64Content = response.bytes.encodeBase64().toString()\n                   //\u4e0a\u4f20\u6587\u4ef6\n                   gitlab.CreateRepoFile(7,\"demo-uat%2f${versionName}-uat.yaml\",base64Content)\n                }\n\n            }\n        }\n\n        stage(\"DeleteBranch\"){\n            when {\n                environment name: 'eventType', value: 'jira:version_released'   \n            }\n\n            steps{\n                script{\n                    //\u83b7\u53d6issuesName\n                    println(\"project%20%3D%20${projectKey}%20AND%20fixVersion%20%3D%20${versionName}%20AND%20issuetype%20%3D%20Task\")\n                    response = jira.RunJql(\"project%20%3D%20${projectKey}%20AND%20fixVersion%20%3D%20${versionName}%20AND%20issuetype%20%3D%20Task\")\n\n                    response = readJSON text: \"\"\"${response.content}\"\"\"\n                    println(response)\n                    issues = [:]\n                    for ( issue in response['issues']){\n                        println(issue[\"key\"])\n                        println(issue[\"fields\"][\"components\"])\n                        issues[issue[\"key\"]] = []\n\n                        //\u83b7\u53d6issue\u5173\u8054\u7684\u6a21\u5757\n                        for (component in issue[\"fields\"][\"components\"] ){\n                            issues[issue[\"key\"]].add(component[\"name\"])\n                        }\n\n                    }\n\n                    println(issues)\n\n\n                    //\u641c\u7d22gitlab\u5206\u652f\u662f\u5426\u5df2\u5408\u5e76\u7136\u540e\u5220\u9664\n\n\n                    for (issue in issues.keySet()){\n                        for (projectName in issues[issue]){\n                            repoName = projectName.split(\"-\")[0]\n                            projectId = gitlab.GetProjectID(repoName, projectName)\n\n                            try {\n                                println(\"\u521b\u5efa\u5408\u5e76\u8bf7\u6c42  RELEASE-${versionName}  ---&gt; master\")\n                                result = gitlab.CreateMr(projectId,\"RELEASE-${versionName}\",\"master\",\"RELEASE-${versionName}---&gt;master\")\n                                result = readJSON text: \"\"\"${result}\"\"\"\n                                mergeId = result[\"iid\"]\n                                gitlab.AcceptMr(projectId,mergeId)\n\n                                sleep 15\n                            } catch(e){\n                                println(e)\n                            }\n                            response = gitlab.SearchProjectBranches(projectId,issue)\n\n                            println(response[projectId][0]['merged'])\n\n                            if (response[projectId][0]['merged'] == false){\n                                println(\"${projectName} --&gt; ${issue} --&gt;\u6b64\u5206\u652f\u672a\u5408\u5e76\u6682\u65f6\u5ffd\u7565\uff01\")\n                            } else {\n                                println(\"${projectName} --&gt; ${issue} --&gt;\u6b64\u5206\u652f\u5df2\u5408\u5e76\u51c6\u5907\u6e05\u7406\uff01\")\n                                gitlab.DeleteBranch(projectId,issue)\n                            }\n\n                        }\n\n                    }\n                }\n            }\n        }\n\n        stage(\"CreateBranchOrMR\"){\n\n            when {\n                anyOf {\n                    environment name: 'eventType', value: 'jira:issue_created'   //issue \u521b\u5efa /\u66f4\u65b0\n                    environment name: 'eventType', value: 'jira:issue_updated' \n                }\n            }\n\n            steps{\n                script{\n                    def projectIds = []\n                    println(issueName)\n                    fixVersion = readJSON text: \"\"\"${fixVersion}\"\"\"\n                    println(fixVersion.size())\n\n                    //\u83b7\u53d6\u9879\u76eeId\n                    def projects = readJSON text: \"\"\"${moduleNames}\"\"\"\n                    for ( project in projects){\n                        println(project[\"name\"])\n                        projectName = project[\"name\"]\n                        currentBuild.description += \"\\n project: ${projectName}\"\n                        repoName = projectName.split(\"-\")[0]\n                        println(repoName)\n                        try {\n                            projectId = gitlab.GetProjectID(repoName, projectName)\n                            println(projectId)\n                            projectIds.add(projectId)   \n                        } catch(e){\n                            println(e)\n                            println(\"\u672a\u83b7\u53d6\u5230\u9879\u76eeID\uff0c\u8bf7\u68c0\u67e5\u6a21\u5757\u540d\u79f0\uff01\")\n                        }\n                    } \n\n                    println(projectIds)  \n\n\n                    if (fixVersion.size() == 0) {\n                        for (id in projectIds){\n                            println(\"\u65b0\u5efa\u7279\u6027\u5206\u652f--&gt; ${id} --&gt; ${issueName}\")\n                            currentBuild.description += \"\\n \u65b0\u5efa\u7279\u6027\u5206\u652f--&gt; ${id} --&gt; ${issueName}\"\n                            gitlab.CreateBranch(id,\"master\",\"${issueName}\")\n                        }\n\n\n\n                    } else {\n                        fixVersion = fixVersion[0]['name']\n                        println(\"Issue\u5173\u8054release\u64cd\u4f5c,Jenkins\u521b\u5efa\u5408\u5e76\u8bf7\u6c42\")\n                        currentBuild.description += \"\\n Issue\u5173\u8054release\u64cd\u4f5c,Jenkins\u521b\u5efa\u5408\u5e76\u8bf7\u6c42 \\n ${issueName} --&gt; RELEASE-${fixVersion}\" \n\n                        for (id in projectIds){\n\n                            println(\"\u521b\u5efaRELEASE--&gt;${id} --&gt;${fixVersion}\u5206\u652f\")\n                            gitlab.CreateBranch(id,\"master\",\"RELEASE-${fixVersion}\")\n\n\n\n                            println(\"\u521b\u5efa\u5408\u5e76\u8bf7\u6c42 ${issueName} ---&gt; RELEASE-${fixVersion}\")\n                            gitlab.CreateMr(id,\"${issueName}\",\"RELEASE-${fixVersion}\",\"${issueName}---&gt;RELEASE-${fixVersion}\")\n\n                        }\n                    } \n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"chap10/2chap10_jira_gilab/#2-5-jira-tasks-gitlab","title":"2-5 \u521b\u5efa<code>Jira Tasks</code> =&gt; \u521b\u5efaGitlab\u5206\u652f","text":"<pre><code>[Pipeline] stage\n[Pipeline] { (CreateBranchOrMR)\n[Pipeline] script\n[Pipeline] {\n[Pipeline] echo\nDEV-5\n[Pipeline] readJSON\n[Pipeline] echo\n0\n[Pipeline] readJSON\n[Pipeline] echo\ndemo-maven-service \n[Pipeline] echo\ndemo\n[Pipeline] withCredentials\nMasking supported pattern matches of $gitlabToken\n...\n</code></pre>"},{"location":"chap10/2chap10_jira_gilab/#3jira-gitlab","title":"3\u3001Jira \u81ea\u52a8\u521b\u5efa Gitlab \u5408\u5e76\u8bf7\u6c42","text":"<ul> <li><code>JIRA</code>\u66f4\u65b0<code>issues</code>\u5230\u7248\u672c\u4e2d\u3002<code>Jenkins</code>\u6839\u636e<code>issues</code>\u4e2d\u7684\u6a21\u5757\u4fe1\u606f\uff0c\u5728\u5bf9\u5e94\u7684\u4ed3\u5e93\u4e2d\u521b\u5efa<code>release</code>\u5206\u652f\uff08<code>fixVersion</code>)\uff0c\u5e76\u521b\u5efa\u7279\u6027\u5206\u652f\uff08<code>issueName</code>\uff09\u5230<code>release</code>\u5206\u652f\u7684MR</li> </ul> <p>\u5206\u652f\u7b56\u7565</p> <p></p>"},{"location":"chap10/2chap10_jira_gilab/#3-1-update-issues-version","title":"3-1 Update Issues version","text":"<ul> <li><code>jira: version_created</code> //\u53d1\u5e03\u521b\u5efa </li> <li><code>jira:issue_created</code>  //\u95ee\u9898\u521b\u5efa </li> <li><code>jira:issue_updated</code> //\u95ee\u9898\u66f4\u65b0 </li> </ul>"},{"location":"chap10/2chap10_jira_gilab/#3-2-version-pipeline","title":"3-2 Version \u5408\u5e76\u89e6\u53d1pipeline","text":"<p>Sharedlibrary: Jira</p> <pre><code>case \"jira:issue_updated\":\n        env.issueName = response['issue']['key']\n        env.userName = response['user']['name']\n        env.moduleNames = response['issue']['fields']['components']\n        env.fixVersion = response['issue']['fields']['fixVersions']\n        currentBuild.description = \" Trigger by ${userName} ${eventType} ${issueName} \"\n        break\n</code></pre> <p>Sharedlibrary: Gitlab</p> <pre><code>//\u521b\u5efa\u5408\u5e76\u8bf7\u6c42\ndef CreateMr(projectId,sourceBranch,targetBranch,title,assigneeUser=\"\"){\n    try {\n        def mrUrl = \"projects/${projectId}/merge_requests\"\n        def reqBody = \"\"\"{\"source_branch\":\"${sourceBranch}\", \"target_branch\": \"${targetBranch}\",\"title\":\"${title}\",\"assignee_id\":\"${assigneeUser}\"}\"\"\"\n        response = HttpReq(\"POST\",mrUrl,reqBody).content\n        return response\n    } catch(e){\n        println(e)\n    }\n}\n\n//\u5141\u8bb8\u5408\u5e76\ndef AcceptMr(projectId,mergeId){\n    def apiUrl = \"projects/${projectId}/merge_requests/${mergeId}/merge\"\n    HttpReq('PUT',apiUrl,'')\n}\n</code></pre> <p>Pipeline</p> <pre><code> } else {\n            fixVersion = fixVersion[0]['name']\n            println(\"Issue\u5173\u8054release\u64cd\u4f5c,Jenkins\u521b\u5efa\u5408\u5e76\u8bf7\u6c42\")\n            currentBuild.description += \"\\n Issue\u5173\u8054release\u64cd\u4f5c,Jenkins\u521b\u5efa\u5408\u5e76\u8bf7\u6c42 \\n ${issueName} --&gt; RELEASE-${fixVersion}\" \n\n            for (id in projectIds){\n\n                println(\"\u521b\u5efaRELEASE--&gt;${id} --&gt;${fixVersion}\u5206\u652f\")\n                gitlab.CreateBranch(id,\"master\",\"RELEASE-${fixVersion}\")\n\n\n\n                println(\"\u521b\u5efa\u5408\u5e76\u8bf7\u6c42 ${issueName} ---&gt; RELEASE-${fixVersion}\")\n                gitlab.CreateMr(id,\"${issueName}\",\"RELEASE-${fixVersion}\",\"${issueName}---&gt;RELEASE-${fixVersion}\")\n\n            }\n</code></pre> <p></p> <p></p> <p></p>"},{"location":"chap10/2chap10_jira_gilab/#4","title":"4\u3001\u81ea\u52a8\u6e05\u7406\u5df2\u5408\u5e76\u7684\u7279\u6027\u5206\u652f","text":""},{"location":"chap10/2chap10_jira_gilab/#4-1-merge-task-branch-to-release-branch","title":"4-1 Merge Task branch to release branch","text":"<p>\u9879\u76ee\u76ee\u6807\uff1a \u81ea\u52a8\u5220\u9664\u7279\u6027\u5206\u652f\u4f8b\u5982<code>DEV-8</code>, \u5728\u5b83\u88ab <code>merge</code> \u5230 <code>RELEASE</code> \u5206\u652f\uff0c <code>JIRA</code>\u4e0a\u7684<code>VERSION</code>\u88ab<code>RELEASE</code>\u4e4b\u540e</p> <p></p> <p><code>DEV-8</code> -&gt; <code></code>RELEASE-1.1.3`</p> <p></p> <p><code>RELEASE-1.1.3</code> -&gt; <code>MASTER</code></p> <p></p> <p>\u6b64\u65f6<code>RELEASE-1.1.3</code>\u5df2\u7ecf\u88ab<code>MEREGED</code></p> <p></p>"},{"location":"chap10/2chap10_jira_gilab/#4-2-pipeline","title":"4-2 Pipeline \u5220\u9664\u5206\u652f","text":"<p><code>jira:version_released</code></p> <pre><code>when {\n             environment name: 'eventType', value: 'jira:version_released'   \n  }\n</code></pre> <p>\u83b7\u53d6issuesName</p> <pre><code>println(\"project%20%3D%20${projectKey}%20AND%20fixVersion%20%3D%20${versionName}%20AND%20issuetype%20%3D%20Task\")\nresponse = jira.RunJql(\"project%20%3D%20${projectKey}%20AND%20fixVersion%20%3D%20${versionName}%20AND%20issuetype%20%3D%20Task\")\n\nresponse = readJSON text: \"\"\"${response.content}\"\"\"\nprintln(response)\nissues = [:]\nfor ( issue in response['issues']){\n    println(issue[\"key\"])\n    println(issue[\"fields\"][\"components\"])\n    issues[issue[\"key\"]] = []\n\n    //\u83b7\u53d6issue\u5173\u8054\u7684\u6a21\u5757\n    for (component in issue[\"fields\"][\"components\"] ){\n        issues[issue[\"key\"]].add(component[\"name\"])\n    }\n\n}\nprintln(issues)\n</code></pre> <p></p> <p>\u641c\u7d22gitlab\u5206\u652f\u662f\u5426\u5df2\u5408\u5e76\u7136\u540e\u5220\u9664</p> <pre><code>for (issue in issues.keySet()){\n    for (projectName in issues[issue]){\n        repoName = projectName.split(\"-\")[0]\n        projectId = gitlab.GetProjectID(repoName, projectName)\n\n        try {\n            println(\"\u521b\u5efa\u5408\u5e76\u8bf7\u6c42  RELEASE-${versionName}  ---&gt; master\")\n            result = gitlab.CreateMr(projectId,\"RELEASE-${versionName}\",\"master\",\"RELEASE-${versionName}---&gt;master\")\n            result = readJSON text: \"\"\"${result}\"\"\"\n            mergeId = result[\"iid\"]\n            gitlab.AcceptMr(projectId,mergeId)\n\n            sleep 15\n        } catch(e){\n            println(e)\n        }\n        response = gitlab.SearchProjectBranches(projectId,issue)\n\n        println(response[projectId][0]['merged'])\n\n        if (response[projectId][0]['merged'] == false){\n            println(\"${projectName} --&gt; ${issue} --&gt;\u6b64\u5206\u652f\u672a\u5408\u5e76\u6682\u65f6\u5ffd\u7565\uff01\")\n        } else {\n            println(\"${projectName} --&gt; ${issue} --&gt;\u6b64\u5206\u652f\u5df2\u5408\u5e76\u51c6\u5907\u6e05\u7406\uff01\")\n            gitlab.DeleteBranch(projectId,issue)\n        }\n\n    }\n\n}\n</code></pre> <p><code>Shard Library: gitlab</code>  Gitlab API \u5220\u9664 BRANCH</p> <pre><code>//\u5220\u9664\u5206\u652f\ndef DeleteBranch(projectId,branchName){\n    apiUrl = \"/projects/${projectId}/repository/branches/${branchName}\"\n    response = HttpReq(\"DELETE\",apiUrl,'').content\n    println(response)\n}\n</code></pre> <p>DEV-8 \u7279\u6027\u5206\u652f\u88ab\u5220\u9664</p> <p></p>"},{"location":"chap11/1Docker_agents/","title":"\u7b2c\u4e00\u8282 \u57fa\u4e8e Docker \u914d\u7f6e\u6784\u5efa\u8d44\u6e90\u6c60","text":""},{"location":"chap11/1Docker_agents/#1","title":"1\u3001\u6574\u4f53\u67b6\u6784","text":""},{"location":"chap11/1Docker_agents/#2dockerjenkins-slave","title":"2\u3001Docker\u5b89\u88c5Jenkins Slave\u8282\u70b9(\u9759\u6001)","text":"<p>\u9996\u5148\u6211\u4eec\u5728Jenkins\u7684\u8282\u70b9\u7ba1\u7406\u4e2d\uff0c\u6dfb\u52a0\u8282\u70b9\u3002\u8f93\u5165\u8282\u70b9\u7684\u540d\u79f0\u548c\u7c7b\u578b\u3002</p> <p>\u914d\u7f6e\u8282\u70b9\u4fe1\u606f\uff1a\u81ea\u5b9a\u4e49\u76ee\u5f55 \u542f\u52a8\u65b9\u5f0f\uff1a <code>Launch agent by connecting it to the master</code> \u3002</p> <ul> <li><code>docker-agent</code></li> <li><code># of executors</code>: 5</li> <li><code>/home/vagrant/workspace</code></li> <li>Labels: <code>docker-agent</code></li> </ul> <p></p> <p></p> <p>\u83b7\u53d6JNLP\u65b9\u5f0f\u8fd0\u884cslave\u6240\u9700\u8981\u7684\u79d8\u94a5\u4fe1\u606f\u3002</p> <p>\u79d8\u94a5\u4fe1\u606f\u83b7\u53d6\u65b9\u5f0f,\u70b9\u51fb\u4e0b\u8f7d<code>slave-agent.jnlp</code>\uff0c\u6253\u5f00\u6587\u4ef6\uff0c\u53ca\u83b7\u53d6\u79d8\u94a5\u4fe1\u606f</p> <pre><code>&lt;jnlp codebase=\"http://192.168.33.11:8080/computer/docker-agent/\" spec=\"1.0+\"&gt;&lt;information&gt;&lt;title&gt;Agent for docker-agent&lt;/title&gt;&lt;vendor&gt;Jenkins project&lt;/vendor&gt;&lt;homepage href=\"https://jenkins-ci.org/\"&gt;&lt;/homepage&gt;&lt;/information&gt;&lt;security&gt;&lt;all-permissions&gt;&lt;/all-permissions&gt;&lt;/security&gt;&lt;resources&gt;&lt;j2se version=\"1.8+\"&gt;&lt;/j2se&gt;&lt;jar href=\"http://192.168.33.11:8080/jnlpJars/remoting.jar\"&gt;&lt;/jar&gt;&lt;/resources&gt;&lt;application-desc main-class=\"hudson.remoting.jnlp.Main\"&gt;&lt;argument&gt;857f47abd55cb5c13567f8cc8c8ddfb77c5af04260efc2436b50a8b896b522e6&lt;/argument&gt;&lt;argument&gt;docker-agent&lt;/argument&gt;&lt;argument&gt;-workDir&lt;/argument&gt;&lt;argument&gt;/home/vagrant/workspace&lt;/argument&gt;&lt;argument&gt;-internalDir&lt;/argument&gt;&lt;argument&gt;remoting&lt;/argument&gt;&lt;argument&gt;-url&lt;/argument&gt;&lt;argument&gt;http://192.168.33.11:8080/&lt;/argument&gt;&lt;/application-desc&gt;&lt;/jnlp&gt;\n</code></pre> <ul> <li>857f47abd55cb5c13567f8cc8c8ddfb77c5af04260efc2436b50a8b896b522e6</li> </ul> <p>\u83b7\u53d6<code>jnlp slave</code>\u7684<code>docker</code>\u955c\u50cf: https://hub.docker.com/r/jenkins/inbound-agent/</p> <pre><code>docker pull jenkins/inbound-agent\n\ndocker run --init -itd jenkins/inbound-agent -url http://192.168.33.11:8080 857f47abd55cb5c13567f8cc8c8ddfb77c5af04260efc2436b50a8b896b522e6 docker-agent\n</code></pre> <p>\u542f\u52a8slave\u6d4b\u8bd5\uff0c\u51fa\u73b0\u4ee5\u4e0b\u65e5\u5fd7\u8868\u793a\u6210\u529f\u8fde\u63a5\u3002\u8fd9\u4e2a\u90e8\u5206\u5bb9\u6613\u51fa\u73b0\u95ee\u9898\uff0c\u539f\u56e0\u5f88\u53ef\u80fd\u662f\u56e0\u4e3a\u7f51\u7edc\u6743\u9650\u5bfc\u81f4\u7684\u3002</p> <pre><code>Aug 19, 2020 12:48:11 PM hudson.remoting.jnlp.Main createEngine\nINFO: Setting up agent: docker-agent\nAug 19, 2020 12:48:11 PM hudson.remoting.jnlp.Main$CuiListener &lt;init&gt;\nINFO: Jenkins agent is running in headless mode.\nAug 19, 2020 12:48:11 PM hudson.remoting.Engine startEngine\nINFO: Using Remoting version: 4.3\nAug 19, 2020 12:48:11 PM hudson.remoting.Engine startEngine\nWARNING: No Working Directory. Using the legacy JAR Cache location: /home/jenkins/.jenkins/cache/jars\nAug 19, 2020 12:48:11 PM hudson.remoting.jnlp.Main$CuiListener status\nINFO: Locating server among [http://192.168.33.11:8080]\nAug 19, 2020 12:48:11 PM org.jenkinsci.remoting.engine.JnlpAgentEndpointResolver resolve\nINFO: Remoting server accepts the following protocols: [JNLP4-connect, Ping]\nAug 19, 2020 12:48:11 PM hudson.remoting.jnlp.Main$CuiListener status\nINFO: Agent discovery successful\n  Agent address: 192.168.33.11\n  Agent port:    50000\n  Identity:      50:9b:15:1c:3b:3f:ab:bf:86:0b:82:fb:56:56:e5:f6\nAug 19, 2020 12:48:11 PM hudson.remoting.jnlp.Main$CuiListener status\nINFO: Handshaking\nAug 19, 2020 12:48:11 PM hudson.remoting.jnlp.Main$CuiListener status\nINFO: Connecting to 192.168.33.11:50000\nAug 19, 2020 12:48:11 PM hudson.remoting.jnlp.Main$CuiListener status\nINFO: Trying protocol: JNLP4-connect\nAug 19, 2020 12:48:12 PM hudson.remoting.jnlp.Main$CuiListener status\nINFO: Remote identity confirmed: 50:9b:15:1c:3b:3f:ab:bf:86:0b:82:fb:56:56:e5:f6\nAug 19, 2020 12:48:12 PM hudson.remoting.jnlp.Main$CuiListener status\nINFO: Connected\n</code></pre> <p>\u67e5\u770b\u6548\u679c</p> <p></p> <pre><code>pipeline {\n    agent { node { label \"docker-agent\" }}\n    stages {\n        stage('Test') {\n            steps {\n                sleep(20)\n                echo \"Hello world!\"\n\n            }\n        }\n    }\n}\n</code></pre> <p>console output</p> <pre><code>Running on docker-agent in /home/vagrant/workspace/workspace/docker-agent2\n...\n</code></pre> <p></p>"},{"location":"chap11/1Docker_agents/#3dockerjenkins-slave","title":"3\u3001\u57fa\u4e8eDocker\u914d\u7f6eJenkins Slave\u8282\u70b9(\u52a8\u6001)","text":"<p>docker\u63d2\u4ef6\uff1a https://plugins.jenkins.io/docker-plugin/</p> <p>\u9879\u76ee\u5730\u5740\uff1a https://github.com/jenkinsci/docker-plugin</p> <p>\u5bf9\u4e0eJenkins\u52a8\u6001slave\u7684\u914d\u7f6e\uff0c\u5176\u5b9e\u5c31\u662fJenkins\u8c03\u7528Docker\u7684\u63a5\u53e3\u5b8c\u6210\u7684\u3002\u6211\u4eec\u9700\u8981\u5f00\u542fDocker\u8fdc\u7a0b\u8bbf\u95ee\u3002</p> <p>docker \u5f00\u542fAPI\u8fdc\u7a0b\u8bbf\u95ee (mac) \u53c2\u8003\u6587\u6863\uff1a https://juejin.im/entry/5bdf04b06fb9a049e41223f1</p> <pre><code>docker pull bobrik/socat\ndocker run -d -v /var/run/docker.sock:/var/run/docker.sock -p 2376:2375 bobrik/socat TCP4-LISTEN:2375,fork,reuseaddr UNIX-CONNECT:/var/run/docker.sock\n</code></pre> <p>\u5982\u679c\u4f60\u7684docker\u73af\u5883\u662f\u4f7f\u7528\u7684centos\u7cfb\u7edf\uff0c\u53ef\u4ee5\u505a\u5982\u4e0b\u914d\u7f6e\u3002\u7f16\u8f91<code>/usr/lib/systemd/system/docker.service</code></p> <pre><code>$ sudo vim /usr/lib/systemd/system/docker.service\n\n...\nExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix://var/run/docker.sock\n</code></pre> <pre><code>sudo systemctl daemon-reload\nsudo systemctl restart docker\n</code></pre> <p>\u5f53\u6211\u4eec\u628a\u4e0a\u9762\u7684\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7Curl\u547d\u4ee4\u8fdb\u884c\u57fa\u672c\u7684\u6d4b\u8bd5API\u3002\u51fa\u73b0\u4e00\u4e0b\u4fe1\u606f\u8868\u793a\u6210\u529f\u5f00\u542f\u3002</p> <pre><code>$ curl -XGET http://127.0.0.1:2375/version\n{\"Platform\":{\"Name\":\"Docker Engine - Community\"},\"Components\":[{\"Name\":\"Engine\",\"Version\":\"19.03.12\",\"Details\":{\"ApiVersion\":\"1.40\",\"Arch\":\"amd64\",\"BuildTime\":\"2020-06-22T15:45:28.000000000+00:00\",\"Experimental\":\"false\",\"GitCommit\":\"48a66213fe\",\"GoVersion\":\"go1.13.10\",\"KernelVersion\":\"3.10.0-957.12.2.el7.x86_64\",\"MinAPIVersion\":\"1.12\",\"Os\":\"linux\"}},{\"Name\":\"containerd\",\"Version\":\"1.2.13\",\"Details\":{\"GitCommit\":\"7ad184331fa3e55e52b890ea95e65ba581ae3429\"}},{\"Name\":\"runc\",\"Version\":\"1.0.0-rc10\",\"Details\":{\"GitCommit\":\"dc9208a3303feef5b3839f4323d9beb36df0a9dd\"}},{\"Name\":\"docker-init\",\"Version\":\"0.18.0\",\"Details\":{\"GitCommit\":\"fec3683\"}}],\"Version\":\"19.03.12\",\"ApiVersion\":\"1.40\",\"MinAPIVersion\":\"1.12\",\"GitCommit\":\"48a66213fe\",\"GoVersion\":\"go1.13.10\",\"Os\":\"linux\",\"Arch\":\"amd64\",\"KernelVersion\":\"3.10.0-957.12.2.el7.x86_64\",\"BuildTime\":\"2020-06-22T15:45:28.000000000+00:00\"}\n</code></pre> <p>Jenkins\u914d\u7f6e</p> <p>\u6211\u4eec\u9700\u8981\u5b89\u88c5\u63d2\u4ef6 Docker plugin</p>"},{"location":"chap11/1Docker_agents/#1-master","title":"\u65b9\u5f0f1\uff1a \u542f\u52a8\u955c\u50cf\u8fdb\u884c\u6784\u5efa(\u65e0\u9700\u8fde\u63a5master)","text":"<pre><code>dockerNode(dockerHost: 'tcp://192.168.33.11:2375', image: 'jenkins/inbound-agent') {\n    // some block\n    sh \"sleep 50\"\n}\n</code></pre> <pre><code>[Pipeline] Start of Pipeline\n[Pipeline] dockerNode\nLaunching new docker node based on jenkins/inbound-agent\nPulling from jenkins/inbound-agent\nDigest: sha256:9392c06eaef92cebe60deae0581541e8ef19197533cd628d792374c4a32199c9\nStatus: Image is up to date for jenkins/inbound-agent:latest\nWaiting for node to be online ...\nNode docker-0001vtsr0hv0n is online.\n[Pipeline] {\n[Pipeline] sh\n+ sleep 50\n[Pipeline] }\nTerminating docker node ...\nDisconnected computer for node 'docker-0001vtsr0hv0n'.\nRemoved Node for node 'docker-0001vtsr0hv0n'.\n</code></pre>"},{"location":"chap11/1Docker_agents/#2-cloud","title":"\u65b9\u5f0f2\uff1a \u4f7f\u7528CLoud","text":"<p><code>Manage Jenkins</code> -&gt; <code>Manage Nodes and Clouds</code> -&gt; <code>Configure Clouds</code></p> <p>Docker Cloud details</p> <ul> <li>Docker Host URI Docker\u4e3b\u673a\u4fe1\u606f(\u9700\u8981\u5f00\u542fDocker\u914d\u7f6e)<ul> <li>tcp://192.168.33.11:2375</li> <li>unix:///var/run/docker.sock</li> </ul> </li> <li>Connection Timeout \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4</li> <li>Read Timeout \u8bfb\u64cd\u4f5c\u8d85\u65f6\u65f6\u95f4 \uff08\u8c03\u5927\u4e9b\uff0c\u5bb9\u6613\u51fa\u73b0\u8d85\u65f6\u7684\u60c5\u51b5\uff09</li> <li>Enabled \u662f\u5426\u542f\u7528\uff1f\u9ed8\u8ba4\u5426</li> <li> <p>Error Duration \u9519\u8bef\u7684\u6301\u7eed\u65f6\u95f4 \u9ed8\u8ba4300 5\u5206\u949f</p> </li> <li> <p>Container Cap \u5bb9\u5668\u6570\u91cf \u8d1f\u503c\u6216\u96f6\uff0c\u62162147483647\u90fd\u610f\u5473\u7740\u201c\u65e0\u9650\u5236\u201d ,\u9ed8\u8ba4\u503c100\u3002</p> <ul> <li>10</li> </ul> </li> </ul> <p></p> <p>Docker Agent templates</p> <ul> <li>Labels \u8282\u70b9\u6807\u7b7e: <code>jenkins-docker-agent</code></li> <li>Enabled \u662f\u5426\u542f\u52a8 \u9ed8\u8ba4\u5426</li> <li>Name \u8282\u70b9\u540d\u79f0 <code>jenkins-docker-agent</code></li> <li>Docker Image \u955c\u50cf\u6807\u7b7e: <code>jenkins/inbound-agent</code></li> <li>Remote File System Root \u8fdc\u7a0b\u6587\u4ef6\u7cfb\u7edf\u6839\u76ee\u5f55  <code>/home/jenkins</code></li> <li>\u7528\u6cd5 \u81ea\u5b9a\u4e49\u6307\u5b9a\u9879\u76ee\u8fd0\u884c</li> <li>Connect method \u8fde\u63a5\u65b9\u5f0f</li> <li>JNLP \u63a8\u8350</li> <li>User \u8fd0\u884c\u7528\u6237 :   <code>jenkins</code></li> <li>Jenkins URL jenkins\u5730\u5740 <code>http://192.168.33.11:8080</code></li> <li>Idle timeout \u7a7a\u95f2\u65f6\u95f4\u591a\u5c11\u79d2\u540e\u6740\u6b7bslave</li> <li>SSH</li> <li>Docker Container</li> <li>Pull strategy \u955c\u50cf\u4e0b\u8f7d\u7b56\u7565</li> <li>Pull timeout \u955c\u50cf\u4e0b\u8f7d\u8d85\u65f6\u65f6\u95f4 \u5355\u4f4d\u79d2</li> <li>Instance Capacity \u5b9e\u4f8b\u6570\u91cf</li> </ul> <p></p> <p>\u6d4b\u8bd5</p> <pre><code>node(\"jenkins-docker-agent\"){\n     sh \"sleep 30\"\n    echo \"Hello world!\"\n}\n</code></pre> <p></p> <pre><code>[Pipeline] node\nRunning on jenkins-docker-agent-0001w25yyyc8a on docker in /home/jenkins/workspace/dokcer-agent3\n[Pipeline] {\n[Pipeline] sh\n</code></pre>"},{"location":"chap11/2Docker_pipeline/","title":"\u7b2c\u4e8c\u8282 \u57fa\u4e8eDocker\u7684pipeline\u6d41\u6c34\u7ebf","text":""},{"location":"chap11/2Docker_pipeline/#1","title":"1\u3001\u5bb9\u5668\u4e2d\u7f16\u8bd1\u6d41\u6c34\u7ebf\u4f5c\u4e1a","text":""},{"location":"chap11/2Docker_pipeline/#1-1","title":"1-1 \u51c6\u5907\u5de5\u4f5c","text":"<p>\u914d\u7f6e<code>JenkinsMaster</code>\u6302\u8f7dDocker</p> <pre><code>docker run -d -p 8080:8080 -p 50000:50000 --env=JAVA_OPTS=-Djenkins.install.runSetupWizard=false -v /var/lib/jenkins:/var/jenkins_home  -v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker jenkins:v20200816\n</code></pre> <p>\u89e3\u51b3\u6743\u9650\u95ee\u9898/\u4ee5<code>root</code>\u7528\u6237\u8fd0\u884c</p> <pre><code>docker exec -it 005a7714ecc9 bash\njenkins@005a7714ecc9:/$ docker ps\nGot permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get http://%2Fvar%2Frun%2Fdocker.sock/v1.40/containers/json: dial unix /var/run/docker.sock: connect: permission denied\n</code></pre> <pre><code>$ docker exec -it -u root 005a7714ecc9 bash\n\nroot@005a7714ecc9:/# docker ps\nCONTAINER ID        IMAGE                   COMMAND                  CREATED             STATUS              PORTS                                              NAMES\n005a7714ecc9        jenkins:v20200816       \"/sbin/tini -- /usr/\u2026\"   4 minutes ago       Up 4 minutes        0.0.0.0:8080-&gt;8080/tcp, 0.0.0.0:50000-&gt;50000/tcp   hopeful_pascal\n384516ab8579        jenkins/inbound-agent   \"jenkins-agent -url \u2026\"   12 minutes ago      Up 12 minutes                                                          blissful_nash\n\n\nroot@005a7714ecc9:/# usermod -aG root jenkins\nroot@005a7714ecc9:/# exit\n</code></pre> <pre><code>$ docker restart 005a7714ecc9\n$ id jenkins\nuid=1000(jenkins) gid=1000(jenkins) groups=1000(jenkins),0(root)\n</code></pre> <p>\u6211\u7684\u95ee\u9898</p> <p>\u6211\u5728\u4e3b\u673a\u4e0a\u521b\u5efa\u4e86<code>docker</code>\u7684<code>group</code>, \u6839\u636e\u8fd9\u4e2a\u6587\u7ae0 https://docs.docker.com/engine/install/linux-postinstall/</p> <pre><code>sudo groupadd docker\nsudo usermod -aG docker $USER\n\n$ cat /etc/group\n...\ndocker:x:993:vagrant\n\n\n$ docker exec -it -u root 005a7714ecc9 bash\n$ groupadd -g 993 docker-test\n\nroot@005a7714ecc9:/# usermod -aG docker-test jenkins\nroot@005a7714ecc9:/# id jenkins\nuid=1000(jenkins) gid=1000(jenkins) groups=1000(jenkins),0(root),1001(docker),993(docker-test)\n\nroot@005a7714ecc9:/# cat /etc/group\n...\ndocker-test:x:993:jenkins\n\n$ docker exec -it 005a7714ecc9 bash\njenkins@005a7714ecc9:/$ docker ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                              NAMES\n005a7714ecc9        jenkins:v20200816   \"/sbin/tini -- /usr/\u2026\"   5 hours ago         Up 3 hours          0.0.0.0:8080-&gt;8080/tcp, 0.0.0.0:50000-&gt;50000/tcp   hopeful_pascal\n</code></pre> <p>jenkins should have permission now.</p> <p>Getting \u201cPermission Denied\u201d error when pulling a docker image in Jenkins docker container on Mac</p>"},{"location":"chap11/2Docker_pipeline/#1-2","title":"1-2 \u6d4b\u8bd5\u6d41\u6c34\u7ebf","text":"<pre><code>pipeline {\n    agent {\n        docker { \n            image 'maven:3.6.3-jdk-8' \n            args '-v $HOME/.m2:/root/.m2'\n        }\n    }\n    stages {\n        stage('Build') {\n            steps {\n                sh 'mvn -v'\n            }\n        }\n    }\n}\n</code></pre> <p>Console Output</p> <pre><code>Running on Jenkins in /var/jenkins_home/workspace/docker-pipeline1\n[Pipeline] {\n[Pipeline] isUnix\n[Pipeline] sh\n+ docker inspect -f . maven:3.6.3-jdk-8\n.\n[Pipeline] withDockerContainer\nJenkins seems to be running inside container 005a7714ecc980f673c3083030ff79a82687681de55d9cd9875625a5aa0520f3\n$ docker run -t -d -u 1000:1000 -v $HOME/.m2:/root/.m2 -w /var/jenkins_home/workspace/docker-pipeline1 --volumes-from 005a7714ecc980f673c3083030ff79a82687681de55d9cd9875625a5aa0520f3 -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** maven:3.6.3-jdk-8 cat\n$ docker top c8aec18483a36a66c120975c09b667ba0292a7abebbe3b4409a5bbc1d23469ae -eo pid,comm\n[Pipeline] {\n[Pipeline] stage\n[Pipeline] { (Build)\n[Pipeline] sh\n+ mvn -v\nApache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)\nMaven home: /usr/share/maven\nJava version: 1.8.0_265, vendor: Oracle Corporation, runtime: /usr/local/openjdk-8/jre\nDefault locale: en, platform encoding: UTF-8\nOS name: \"linux\", version: \"3.10.0-957.12.2.el7.x86_64\", arch: \"amd64\", family: \"unix\"\n[Pipeline] sleep\nSleeping for 30 sec\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] }\n$ docker stop --time=1 c8aec18483a36a66c120975c09b667ba0292a7abebbe3b4409a5bbc1d23469ae\n$ docker rm -f c8aec18483a36a66c120975c09b667ba0292a7abebbe3b4409a5bbc1d23469ae\n[Pipeline] // withDockerContainer\n[Pipeline] }\n[Pipeline] // node\n[Pipeline] End of Pipeline\nFinished: SUCCESS\n</code></pre>"},{"location":"chap11/2Docker_pipeline/#1-3","title":"1-3 \u524d\u540e\u7aef\u672a\u5206\u79bb\u9879\u76ee","text":"<p>\u5bf9\u4e8e\u4ee3\u7801\u5e93\u4e2d\u65e2\u5305\u542b\u524d\u7aef\u9879\u76ee\u53c8\u5305\u542b\u540e\u7aef\u9879\u76ee\u7684\u914d\u7f6e\u3002\u53ef\u4ee5\u542f\u52a8\u591a\u4e2a\u5bb9\u5668\u3002</p> <pre><code>pipeline {\n    agent none\n    stages {\n        stage('ServiceBuild') {\n            agent {\n                docker { \n                    image 'maven:3.6.3-jdk-8' \n                    args '-v $HOME/.m2:/root/.m2'\n                }\n            }\n            steps {\n                sh 'mvn -v  &amp;&amp; sleep 15'\n            }\n        }\n\n        stage('WebBuild') {\n            agent {\n                docker { \n                    image 'node:7-alpine' \n                    args '-v $HOME/.npm:/root/.npm'\n                }\n            }\n            steps {\n                sh 'node -v  &amp;&amp; sleep 15'\n            }\n        }\n    }\n}\n</code></pre> <p>Console output</p> <pre><code>Running on Jenkins in /var/jenkins_home/workspace/docker-pipeline2\n[Pipeline] {\n[Pipeline] isUnix (hide)\n[Pipeline] sh\n+ docker inspect -f . maven:3.6.3-jdk-8\n.\n[Pipeline] withDockerContainer\nJenkins seems to be running inside container 005a7714ecc980f673c3083030ff79a82687681de55d9cd9875625a5aa0520f3\n$ docker run -t -d -u 1000:1000 -v $HOME/.m2:/root/.m2 -w /var/jenkins_home/workspace/docker-pipeline2 --volumes-from 005a7714ecc980f673c3083030ff79a82687681de55d9cd9875625a5aa0520f3 -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** maven:3.6.3-jdk-8 cat\n$ docker top 9f15b56640e3d65660876a4f854918103f7f099150dbb5f99dff43ace1296392 -eo pid,comm\n[Pipeline] {\n[Pipeline] sh\n+ mvn -v\nApache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)\nMaven home: /usr/share/maven\nJava version: 1.8.0_265, vendor: Oracle Corporation, runtime: /usr/local/openjdk-8/jre\nDefault locale: en, platform encoding: UTF-8\nOS name: \"linux\", version: \"3.10.0-957.12.2.el7.x86_64\", arch: \"amd64\", family: \"unix\"\n+ sleep 15\n[Pipeline] }\n$ docker stop --time=1 9f15b56640e3d65660876a4f854918103f7f099150dbb5f99dff43ace1296392\n$ docker rm -f 9f15b56640e3d65660876a4f854918103f7f099150dbb5f99dff43ace1296392\n[Pipeline] // withDockerContainer\n[Pipeline] }\n[Pipeline] // node\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] stage\n[Pipeline] { (WebBuild)\n[Pipeline] node\nRunning on Jenkins in /var/jenkins_home/workspace/docker-pipeline2\n[Pipeline] {\n[Pipeline] isUnix\n[Pipeline] sh\n+ docker inspect -f . node:7-alpine\n.\n[Pipeline] withDockerContainer\nJenkins seems to be running inside container 005a7714ecc980f673c3083030ff79a82687681de55d9cd9875625a5aa0520f3\n$ docker run -t -d -u 1000:1000 -v $HOME/.npm:/root/.npm -w /var/jenkins_home/workspace/docker-pipeline2 --volumes-from 005a7714ecc980f673c3083030ff79a82687681de55d9cd9875625a5aa0520f3 -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** node:7-alpine cat\n$ docker top 33be7fc88b0f15f3cd3f947250e3b0d6d57f05096b6bac2bee7006cf0e380680 -eo pid,comm\n[Pipeline] {\n[Pipeline] sh\n+ node -v\nv7.10.1\n+ sleep 15\n[Pipeline] }\n$ docker stop --time=1 33be7fc88b0f15f3cd3f947250e3b0d6d57f05096b6bac2bee7006cf0e380680\n$ docker rm -f 33be7fc88b0f15f3cd3f947250e3b0d6d57f05096b6bac2bee7006cf0e380680\n[Pipeline] // withDockerContainer\n</code></pre>"},{"location":"chap11/2Docker_pipeline/#1-4","title":"1-4 \u524d\u7aef\u9879\u76ee\u6d41\u6c34\u7ebf","text":"<pre><code>$ cd /home/vagrant/workspace/workspace/demo-pipeline3\n\n// \u5b89\u88c5 vue-cli\n\n$ sudo chown -R 1000:1000 \"/home/vagrant/.npm\"\n\n\n$  npm install -g @vue/cli-init\nnpm WARN deprecated vue-cli@2.9.6: This package has been deprecated in favour of @vue/cli\nnpm WARN deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142\nnpm WARN deprecated coffee-script@1.12.7: CoffeeScript on NPM has moved to \"coffeescript\" (no hyphen)\nnpm WARN deprecated har-validator@5.1.5: this library is no longer supported\n+ @vue/cli-init@4.5.4\nadded 251 packages from 206 contributors in 17.774s\n\n$ vue --version\n@vue/cli 4.5.4\n\n$ cd /home/vagrant/workspace/workspace/demo-pipeline3\n$ $ vue init webpack demo\n\n? Project name demo\n? Project description A Vue.js project\n? Author \n? Vue build standalone\n? Install vue-router? Yes\n? Use ESLint to lint your code? Yes\n? Pick an ESLint preset Standard\n? Set up unit tests Yes\n? Pick a test runner jest\n? Setup e2e tests with Nightwatch? No\n? Should we run `npm install` for you after the project has been created? (recommended) npm\n\n   vue-cli \u00b7 Generated \"demo\".\n\n\n# Installing project dependencies ...\n</code></pre> <p>\u7f16\u5199jenkinsfile</p> <pre><code>pipeline {\n   agent {node {label \"hostmachine\"}}\n    stages {\n        stage('WebBuild') {\n            steps {\n                script {\n                    docker.image('node:10.19.0-alpine').inside('-u 0:0 -v /var/jenkins_home/.npm:/root/.npm') {\n\n\n                        sh \"\"\"\n                            id \n                            ls /root/.npm\n\n                            ls /root/ -a\n                            npm config set unsafe-perm=true\n                            npm config list\n                            npm config set cache  /root/.npm\n                            #npm config set registry https://registry.npm.taobao.org\n                            npm config list\n                            ls \n                            cd demo &amp;&amp; npm install  --unsafe-perm=true &amp;&amp; npm run build  &amp;&amp; ls -l dist/ &amp;&amp; sleep 15 \n                        \"\"\"\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre> <p>Console output</p> <pre><code>$ docker run -t -d -u 1000:1000 -u 0:0 -v /var/jenkins_home/.npm:/root/.npm -w /home/vagrant/workspace/workspace/demo-pipeline3 -v /home/vagrant/workspace/workspace/demo-pipeline3:/home/vagrant/workspace/workspace/demo-pipeline3:rw,z -v /home/vagrant/workspace/workspace/demo-pipeline3@tmp:/home/vagrant/workspace/workspace/demo-pipeline3@tmp:rw,z -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** node:10.19.0-alpine cat\n$ docker top ea767dafdc3ba98baf9399ebcde3fd491911d77a0c993f92a8a3b6f44a51fc7a -eo pid,comm\n[Pipeline] {\n[Pipeline] sh\n+ id\nuid=0(root) gid=0(root)\n+ ls /root/.npm\n_cacache\n_locks\n_logs\nanonymous-cli-metrics.json\n+ npm config set 'unsafe-perm=true'\n+ npm config list\n; cli configs\nmetrics-registry = \"https://registry.npmjs.org/\"\nscope = \"\"\nuser-agent = \"npm/6.13.4 node/v10.19.0 linux x64 ci/jenkins\"\n\n; userconfig /root/.npmrc\nunsafe-perm = true\n\n; node bin location = /usr/local/bin/node\n; cwd = /home/vagrant/workspace/workspace/demo-pipeline3\n; HOME = /root\n; \"npm config ls -l\" to show all defaults.\n\n+ npm config set cache /root/.npm\n+ npm config list\n; cli configs\nmetrics-registry = \"https://registry.npmjs.org/\"\nscope = \"\"\nuser-agent = \"npm/6.13.4 node/v10.19.0 linux x64 ci/jenkins\"\n\n; userconfig /root/.npmrc\ncache = \"/root/.npm\"\nunsafe-perm = true\n\n; node bin location = /usr/local/bin/node\n; cwd = /home/vagrant/workspace/workspace/demo-pipeline3\n; HOME = /root\n; \"npm config ls -l\" to show all defaults.\n\n+ ls\ndemo\npackage-lock.json\n+ cd demo\n+ npm install '--unsafe-perm=true'\nCannot contact hostmachine: java.lang.InterruptedException\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.1.3 (node_modules/chokidar/node_modules/fsevents):\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.1.3: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules/fsevents):\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\n\naudited 1734 packages in 10.906s\n\n28 packages are looking for funding\n  run `npm fund` for details\n\nfound 89 vulnerabilities (73 low, 9 moderate, 7 high)\n  run `npm audit fix` to fix them, or `npm audit` for details\n+ npm run build\n\n&gt; demo@1.0.0 build /home/vagrant/workspace/workspace/demo-pipeline3/demo\n&gt; node build/build.js\n\nHash: \u001b[1mc4e4fdef7b4fbb5efe81\u001b[39m\u001b[22m\nVersion: webpack \u001b[1m3.12.0\u001b[39m\u001b[22m\nTime: \u001b[1m12173\u001b[39m\u001b[22mms\n                                                  \u001b[1mAsset\u001b[39m\u001b[22m       \u001b[1mSize\u001b[39m\u001b[22m  \u001b[1mChunks\u001b[39m\u001b[22m  \u001b[1m\u001b[39m\u001b[22m           \u001b[1m\u001b[39m\u001b[22m\u001b[1mChunk Names\u001b[39m\u001b[22m\n               \u001b[1m\u001b[32mstatic/js/vendor.936b7041a764ab1c3f2c.js\u001b[39m\u001b[22m     123 kB       \u001b[1m0\u001b[39m\u001b[22m  \u001b[1m\u001b[32m[emitted]\u001b[39m\u001b[22m  vendor\n                  \u001b[1m\u001b[32mstatic/js/app.b22ce679862c47a75225.js\u001b[39m\u001b[22m    11.6 kB       \u001b[1m1\u001b[39m\u001b[22m  \u001b[1m\u001b[32m[emitted]\u001b[39m\u001b[22m  app\n             \u001b[1m\u001b[32mstatic/js/manifest.2ae2e69a05c33dfc65f8.js\u001b[39m\u001b[22m  857 bytes       \u001b[1m2\u001b[39m\u001b[22m  \u001b[1m\u001b[32m[emitted]\u001b[39m\u001b[22m  manifest\n    \u001b[1m\u001b[32mstatic/css/app.30790115300ab27614ce176899523b62.css\u001b[39m\u001b[22m  432 bytes       \u001b[1m1\u001b[39m\u001b[22m  \u001b[1m\u001b[32m[emitted]\u001b[39m\u001b[22m  app\n\u001b[1m\u001b[32mstatic/css/app.30790115300ab27614ce176899523b62.css.map\u001b[39m\u001b[22m  797 bytes        \u001b[1m\u001b[39m\u001b[22m  \u001b[1m\u001b[32m[emitted]\u001b[39m\u001b[22m  \n           \u001b[1m\u001b[32mstatic/js/vendor.936b7041a764ab1c3f2c.js.map\u001b[39m\u001b[22m     619 kB       \u001b[1m0\u001b[39m\u001b[22m  \u001b[1m\u001b[32m[emitted]\u001b[39m\u001b[22m  vendor\n              \u001b[1m\u001b[32mstatic/js/app.b22ce679862c47a75225.js.map\u001b[39m\u001b[22m    22.2 kB       \u001b[1m1\u001b[39m\u001b[22m  \u001b[1m\u001b[32m[emitted]\u001b[39m\u001b[22m  app\n         \u001b[1m\u001b[32mstatic/js/manifest.2ae2e69a05c33dfc65f8.js.map\u001b[39m\u001b[22m    4.97 kB       \u001b[1m2\u001b[39m\u001b[22m  \u001b[1m\u001b[32m[emitted]\u001b[39m\u001b[22m  manifest\n                                             \u001b[1m\u001b[32mindex.html\u001b[39m\u001b[22m  506 bytes        \u001b[1m\u001b[39m\u001b[22m  \u001b[1m\u001b[32m[emitted]\u001b[39m\u001b[22m  \n\n  Build complete.\n\n  Tip: built files are meant to be served over an HTTP server.\n  Opening index.html over file:// won't work.\n\n+ ls -l dist/\ntotal 4\n-rw-r--r--    1 root     root           506 Aug 20 01:34 index.html\ndrwxr-xr-x    4 root     root            27 Aug 20 01:34 static\n+ sleep 15\n[Pipeline] }\n$ docker stop --time=1 ea767dafdc3ba98baf9399ebcde3fd491911d77a0c993f92a8a3b6f44a51fc7a\n$ docker rm -f ea767dafdc3ba98baf9399ebcde3fd491911d77a0c993f92a8a3b6f44a51fc7a\n</code></pre>"},{"location":"chap11/2Docker_pipeline/#1-5-faq","title":"1-5 FAQ","text":"<p>npm\u6784\u5efa\u6743\u9650\u95ee\u9898\uff1a\u4f7f\u7528root\u7528\u6237\u6784\u5efa\u3002\u8bbe\u7f6e\u5bb9\u5668\u8fd0\u884c\u7528\u6237 <code>-u 0:0</code></p>"},{"location":"chap11/3Docker_registry/","title":"\u7b2c\u4e09\u8282 \u6784\u5efa\u5e94\u7528\u955c\u50cf\u5230\u955c\u50cf\u4ed3\u5e93\u7ba1\u7406","text":"<p>\u5c06\u5e94\u7528\u6784\u5efa\u6210\u955c\u50cf\u3001\u5c06\u955c\u50cf\u4e0a\u4f20\u5230\u955c\u50cf\u4ed3\u5e93\u975e\u5e38\u7b80\u5355\u3002\u901a\u8fc7\u547d\u4ee4\u5c31\u80fd\u89e3\u51b3\u3002\u955c\u50cf\u4ed3\u5e93\u5de8\u5927\u7206\u6ee1\u5982\u4f55\u89e3\u51b3\uff1f \u6211\u4eec\u9700\u8981\u5728\u5f00\u59cb\u4f7f\u7528\u524d\u5c31\u5e94\u8be5\u8bbe\u7f6e\u597d\u955c\u50cf\u7684\u6784\u5efa\u7b56\u7565\u3002\uff08\u6bcf\u4e2a\u516c\u53f8\u4e2d\u7ba1\u7406\u4e0d\u4e00\u6837\uff0c\u5177\u4f53\u53ef\u6839\u636e\u5206\u652f\u7b56\u7565\u51b3\u5b9a\uff09\u3002</p>"},{"location":"chap11/3Docker_registry/#1","title":"1\u3001\u5206\u652f\u5f00\u53d1\u7b56\u7565","text":"<ul> <li>\u4e3b\u5e72\u5206\u652f <code>master</code></li> <li>\u7279\u6027\u5206\u652f <code>f1 f2</code></li> <li>\u7248\u672c\u5206\u652f <code>release</code></li> </ul> <p>\u4f60\u4f1a\u53d1\u73b0\uff1a</p> <ul> <li>\u7279\u6027\u5206\u652f\u9700\u8981\u6784\u5efa\u53d1\u5e03\u5230\u7279\u6027\u73af\u5883\u9a8c\u8bc1\u3002</li> <li>\u7248\u672c\u5206\u652f\u9700\u8981\u6784\u5efa\u53d1\u5e03\u5230<code>UAT/STAG/PROD</code>\u73af\u5883\u9a8c\u8bc1\u3002</li> </ul> <p>\u8003\u8651\u5230\uff1a</p> <ul> <li>\u7279\u6027\u5206\u652f\u4ea7\u751f\u7684\u955c\u50cf\u4f1a\u5f88\u591a\uff0c\u800c\u4e14\u5e76\u4e0d\u91cd\u8981\u53ef\u4ee5\u5b9a\u65f6\u6e05\u7406\u6389\u3002</li> <li>\u7248\u672c\u5206\u652f\u4ea7\u751f\u76f8\u5bf9\u8f83\u5c11\uff08\u8003\u8651\u5230\u7248\u672c\u4fee\u590d\u60c5\u51b5\uff09\uff0c\u6bcf\u4e2a\u7248\u672c\u53ea\u6709\u4e00\u4e2a\u955c\u50cf\u3002\uff08\u4e0a\u7ebf\u53d1\u5e03\u5b8c\u6210\u540e\u6e05\u9664\u6389\u5176\u4ed6\uff09</li> </ul> <p></p>"},{"location":"chap11/3Docker_registry/#2","title":"2\u3001 \u955c\u50cf\u7ba1\u7406\u89c4\u8303","text":""},{"location":"chap11/3Docker_registry/#1-1","title":"1-1 \u547d\u540d\u89c4\u8303","text":"<ul> <li>\u4ed3\u5e93\u7c7b\u578b<ul> <li>snapshot \uff1a \u5f00\u53d1\u7248\u672c\u4ed3\u5e93</li> <li>release \uff1a \u751f\u4ea7\u6b63\u5f0f\u7248\u672c\u4ed3\u5e93</li> </ul> </li> <li>\u4ed3\u5e93\u547d\u540d<ul> <li>snapshot \uff1a \u4e1a\u52a1/\u9879\u76ee\u540d\u79f0-snapshot demo-snapshot</li> <li>release : \u4e1a\u52a1/\u9879\u76ee\u540d\u79f0-release demo-release</li> </ul> </li> <li>\u955c\u50cf\u547d\u540d<ul> <li>(\u4e1a\u52a1/\u9879\u76ee\u540d\u79f0)/\u5e94\u7528\u540d\u79f0/\u6807\u7b7e</li> <li>DEV : <code>demo-snapshot/demo-devops-service:branch_commitid</code></li> <li>PRD: <code>demo-release/demo-devops-service:version_commitid</code></li> </ul> </li> <li>\u6807\u7b7e\u547d\u540d<ul> <li><code>\u5206\u652f\u540d_\u63d0\u4ea4ID</code></li> <li><code>\u7248\u672c\u53f7_\u63d0\u4ea4ID</code></li> </ul> </li> </ul> <p>\u63d0\u4ea4ID\u7684\u610f\u4e49\uff1a \u51cf\u5c11\u91cd\u590d\u6784\u5efa</p>"},{"location":"chap11/3Docker_registry/#1-2","title":"1-2 \u955c\u50cf\u6e05\u7406\u7b56\u7565","text":"<p>\u968f\u7740\u955c\u50cf\u8d8a\u6765\u8d8a\u591a\uff0c\u9891\u7e41\u66f4\u65b0\u5bfc\u81f4Harbor\u955c\u50cf\u4ed3\u5e93\u5bb9\u91cf\u5f88\u5feb\u7206\u6ee1\u3002</p> <ul> <li>snapshot\u4ed3\u5e93\uff1a \u6bcf\u5929\u665a\u4e0a\u5b9a\u65f6\u6e05\u7406\u524d\u4e00\u5929\u7684\u955c\u50cf\uff08\u6ce8\u610f\u98ce\u9669\uff09</li> <li> <p>release\u4ed3\u5e93\uff1a \u7248\u672c\u53d1\u5e03\u5b8c\u6210\u540e\uff0c\u6e05\u9664\u7248\u672c\u5176\u4ed6\u955c\u50cf</p> </li> <li> <p>1.1.1_xxxxxxxxxx11</p> </li> <li>1.1.1_xxxxxxxxxx22</li> </ul>"},{"location":"chap11/3Docker_registry/#2_1","title":"2\u3001 \u6784\u5efa\u5e94\u7528\u955c\u50cf","text":""},{"location":"chap11/3Docker_registry/#2-1-dockerfile","title":"2-1 \u7f16\u5199\u5e94\u7528Dockerfile","text":"<pre><code>$ cd demo\n$ pwd\n/home/vagrant/workspace/workspace/demo-pipeline3/demo\n\n$ touch Dockerfile\n$ vim Dockerfile\n\nFROM nginx:latest\n\nCOPY dist /usr/share/nginx/html\n</code></pre>"},{"location":"chap11/3Docker_registry/#2-2","title":"2-2 \u914d\u7f6e\u6d41\u6c34\u7ebf\u6784\u5efa\u955c\u50cf","text":"<pre><code>docker build -t demo-web-app:1.1.1 .\n</code></pre>"},{"location":"chap11/3Docker_registry/#2-3","title":"2-3 \u4e0a\u4f20\u955c\u50cf","text":"<pre><code>docker push demo-web-app:1.1.1\n</code></pre> <p>Jenkinsfile</p> <pre><code>pipeline {\n    agent {node {label \"hostmachine\"}}\n    stages {\n        stage('WebBuild') {\n            steps {\n                script {\n                    docker.image('node:10.19.0-alpine').inside('-u 0:0 -v /var/jenkins_home/.npm:/root/.npm') {\n\n\n                        sh \"\"\"\n                            id \n                            ls /root/.npm\n\n                            ls /root/ -a\n                            npm config set unsafe-perm=true\n                            npm config list\n                            npm config set cache  /root/.npm\n                            #npm config set registry https://registry.npm.taobao.org\n                            npm config list\n                            ls \n                            cd demo &amp;&amp; npm install  --unsafe-perm=true &amp;&amp; npm run build  &amp;&amp; ls -l dist/ &amp;&amp; sleep 15 \n                        \"\"\"\n                    }\n                }\n            }\n        }\n\n      stage(\"BuildImage\"){\n        steps {\n          script{\n\n\n            sh \"\"\"\n                #\u6784\u5efa\u955c\u50cf\n                cd demo\n                docker build -t demo/demo-web-app:1.1.1_xxxxxxxx1 .\n\n                #docker push demo/demo-web-app:1.1.1_xxxxxxxx1\n\n            \"\"\"\n\n          }\n        }\n      }\n    }\n}\n</code></pre> <p>console output</p> <pre><code>+ cd demo\n+ docker build -t demo/demo-web-app:1.1.1_xxxxxxxx1 .\nSending build context to Docker daemon    203MB\n..\nSuccessfully built 3149ee3602a7\nSuccessfully tagged demo/demo-web-app:1.1.1_xxxxxxxx1\n</code></pre> <pre><code> $ docker images\nREPOSITORY                      TAG                 IMAGE ID            CREATED             SIZE\ndemo/demo-web-app               1.1.1_xxxxxxxx1     3149ee3602a7        6 minutes ago       133MB\n</code></pre> <p>\u8fd0\u884c\u955c\u50cf</p> <pre><code>docker run -itd -p 8088:80 --name nginx-server demo/demo-web-app:1.1.1_xxxxxxxx1\n</code></pre> <pre><code>http://192.168.33.11:8088/#/\n</code></pre> <p></p>"},{"location":"chap11/3Docker_registry/#3-harbor","title":"3\u3001 \u955c\u50cf\u6e05\u7406(Harbor) \u6ce8\u610f\u98ce\u9669 \u6269\u5c55\u7814\u7a76","text":"<p>\u83b7\u53d6\u6807\u7b7e</p> <ul> <li>https://registry.demo.com/api/repositories/${registryName}/${serviceName}/tags</li> <li>\u65b9\u5f0f\uff1a GET</li> </ul> <p>\u5220\u9664\u6807\u7b7e</p> <ul> <li>https://registry.demo.com/api/repositories/${registryName}/${serviceName}/tags/${tag}</li> <li>\u65b9\u5f0f\uff1a DELETE</li> </ul> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef tools = new org.devops.tools()\n\nString registryName = \"${env.registryName}\"\nString serviceName = \"${env.serviceName}\"\nString tagName = \"${env.tagName}\"\ndef harborProjects = []\n\ncurrentBuild.description = \"Trigger by ${serviceName} ${tagName}\"\n\n\npipeline {\nagent { node { label \"build\"} }\n\nstages{\n\nstage(\"GetHarborTags\"){\n    steps{\n        timeout(time:5, unit:\"MINUTES\"){\n            script{\n                tools.PrintMes(\"\u83b7\u53d6Harbor\u4ed3\u5e93\u4e2d\u7684\u9879\u76ee\u4fe1\u606f\",\"green\")\n                println(serviceName)\n\n                try {\n                    response = httpRequest authentication: 'harbor-admin,\n                                           url: \"https://registry.demo.com/api/repositories/${registryName}/${serviceName}/tags\",\n                                           ignoreSslErrors: true\n                    //println(response.content)\n                    response = readJSON text: \"\"\"${response.content}\"\"\"\n\n                } catch(e){\n                    response = ['name':'']\n                    println(e)\n                    println(\"Harbor\u955c\u50cf\u4e0d\u5b58\u5728\u6b64\u6807\u7b7e\uff01\")\n\n                }\n\n                /*println(tagName)\n                for (tagname in response){\n                    //println(response)\n                    harborProjects &lt;&lt; tagname['name']\n                }\n\n                println(harborProjects)*/\n\n            }\n        }\n    }\n}\n\n\n\nstage(\"DeleteHarborTags\"){\n    steps{\n        timeout(time:20, unit:\"MINUTES\"){\n            script{\n                tools.PrintMes(\"\u603b\u5171\u627e\u5230 ${harborProjects.size()} \u4e2a\u6807\u7b7e\",\"green\")\n                sumImageNum = harborProjects.size()\n                for (tag in harborProjects){\n                    sumImageNum -= 1\n\n                    tools.PrintMes(\" ${sumImageNum}  Delete Tags ---&gt; ${registryName} --&gt; ${serviceName} --&gt; ${tag} \",\"green\")\n\n                    httpRequest httpMode: 'DELETE',\n                               authentication: 'c016027e-0573-4246-93cf-f4a55b08a86a',\n                               url: \"https://registry.demo.com/api/repositories/${registryName}/${serviceName}/tags/${tag}\",\n                               ignoreSslErrors: true\n\n                    sleep 1\n                }\n            }\n        }\n    }\n}\n}\n\n\npost {\nalways{\n    script{\n        cleanWs notFailBuild: true \n    }\n}\n}\n}\n</code></pre>"},{"location":"chap11/4Docker_groovy/","title":"\u7b2c\u56db\u8282 \u4f7f\u7528Groovy\u4ee3\u7801\u521d\u59cb\u5316Docker\u914d\u7f6e","text":""},{"location":"chap11/4Docker_groovy/#1-groovy","title":"1\u3001 \u89e3\u6790\u5b98\u65b9\u63d0\u4f9b\u7684groovy\u4ee3\u7801","text":"<p>\u63d2\u4ef6\u5730\u5740: https://plugins.jenkins.io/docker-plugin/</p> <ul> <li>https://github.com/jenkinsci/docker-plugin/blob/master/docs/attachments/docker-plugin-configuration-script.groovy</li> </ul> <pre><code>import com.nirima.jenkins.plugins.docker.DockerCloud\nimport com.nirima.jenkins.plugins.docker.DockerTemplate\nimport com.nirima.jenkins.plugins.docker.DockerTemplateBase\nimport com.nirima.jenkins.plugins.docker.launcher.AttachedDockerComputerLauncher\nimport io.jenkins.docker.connector.DockerComputerAttachConnector\nimport jenkins.model.Jenkins\n</code></pre> <p><code>src/main/java/com/nirima/jenkins/plugins/docker</code>\u76ee\u5f55\u53ef\u4ee5\u770b\u5230\u8fd9\u4e9b\u6e90\u7801\u6587\u4ef6\u3002</p> <p></p> <p><code>src/main/java/com/nirima/jenkins/plugins/docker/launcher</code> \u76ee\u5f55\u4e0b\u53ef\u4ee5\u770b\u591a\u652f\u6301\u7684\u542f\u52a8\u7c7b\u578b\u3002</p> <p></p> <p><code>src/main/java/io/jenkins/docker/connector</code> \u76ee\u5f55\u4e0b\u5b9a\u4e49\u7684\u662f\u6bcf\u4e2a\u542f\u52a8\u7c7b\u578b\u5bf9\u5e94\u7684\u8fde\u63a5\u5668\u3002</p> <p></p> <p><code>dockerTemplateBaseParameters</code>\u5b9a\u4e49\u5bb9\u5668\u7684\u6a21\u677f\u6240\u9700\u8981\u7684\u57fa\u672c\u53c2\u6570\uff0c\u5b9e\u4f8b\u5316\u65b0\u7684\u5bf9\u8c61<code>dockerTemplateBase</code>\u3002</p> <p></p> <pre><code>//Docker\u5bb9\u5668\u7684\u914d\u7f6e\u53c2\u6570\ndef dockerTemplateBaseParameters = [\n  bindAllPorts:       false,\n  bindPorts:          '',\n  cpuShares:          null,\n  dnsString:          '',\n  dockerCommand:      '',\n  environmentsString: '',\n  extraHostsString:   '',\n  hostname:           '',\n  image:              'jenkins/inbound-agent:latest',\n  macAddress:         '',\n  memoryLimit:        null,\n  memorySwap:         null,\n  network:            '',\n  privileged:         false,\n  pullCredentialsId:  '',\n  sharedMemorySize:   null,\n  tty:                true,\n  volumesFromString:  '',\n  volumesString:      ''\n]\n\n//Docker\u5bb9\u5668\u7684\u914d\u7f6e\u53c2\u6570\ndef DockerTemplateParameters = [\n  instanceCapStr: '4',    //\u5b9e\u4f8b\u6570\u91cf\n  labelString:    'docker.local.jenkins.slave',    //\u8282\u70b9\u6807\u7b7e\n  remoteFs:       ''     //\u6839\u76ee\u5f55\n]\n\n//src/main/java/com/nirima/jenkins/plugins/docker/DockerTemplateBase.java\n//\u5b9e\u4f8b\u5316\u53c2\u6570\nDockerTemplateBase dockerTemplateBase = new DockerTemplateBase(\n  dockerTemplateBaseParameters.image,\n  dockerTemplateBaseParameters.pullCredentialsId,\n  dockerTemplateBaseParameters.dnsString,\n  dockerTemplateBaseParameters.network,\n  dockerTemplateBaseParameters.dockerCommand,\n  dockerTemplateBaseParameters.volumesString,\n  dockerTemplateBaseParameters.volumesFromString,\n  dockerTemplateBaseParameters.environmentsString,\n  dockerTemplateBaseParameters.hostname,\n  dockerTemplateBaseParameters.memoryLimit,\n  dockerTemplateBaseParameters.memorySwap,\n  dockerTemplateBaseParameters.cpuShares,\n  dockerTemplateBaseParameters.sharedMemorySize,\n  dockerTemplateBaseParameters.bindPorts,\n  dockerTemplateBaseParameters.bindAllPorts,\n  dockerTemplateBaseParameters.privileged,\n  dockerTemplateBaseParameters.tty,\n  dockerTemplateBaseParameters.macAddress,\n  dockerTemplateBaseParameters.extraHostsString\n)\n</code></pre> <p>\u6839\u636eDocker\u5bb9\u5668\u7684\u914d\u7f6e\u53c2\u6570\uff0c\u521b\u5efa\u4e00\u4e2a<code>DockerComputerAttachConnector</code>\u7c7b\u578b\u7684\u5bb9\u5668\u6a21\u677f\u3002</p> <pre><code>//\u521b\u5efa\u5bb9\u5668\u6a21\u677f\n// src/main/java/com/nirima/jenkins/plugins/docker/DockerTemplate.java\nDockerTemplate dockerTemplate = new DockerTemplate(\n  dockerTemplateBase,\n  new DockerComputerAttachConnector(),\n  DockerTemplateParameters.labelString,\n  DockerTemplateParameters.remoteFs,\n  DockerTemplateParameters.instanceCapStr\n)\n</code></pre> <p>\u58f0\u660eDockerCLoud\u7684\u914d\u7f6e\u4fe1\u606f\uff1a\u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\u3001\u5bb9\u5668\u5b9e\u4f8b\u6570\u91cf\u3001\u8ba4\u8bc1ID\u3001\u4e3b\u673a\u540d\u3001\u8bfb\u8d85\u65f6\u65f6\u95f4\u3001\u670d\u52a1\u8fdc\u7a0b\u5730\u5740\u3001Docker\u7248\u672c\u4fe1\u606f\u3002</p> <pre><code>//Cloud\u914d\u7f6e\u4fe1\u606f\ndef dockerCloudParameters = [\n  connectTimeout:   3,     \n  containerCapStr:  '4',\n  credentialsId:    '',\n  dockerHostname:   '',\n  name:             'docker.local',\n  readTimeout:      60,\n  serverUrl:        'unix:///var/run/docker.sock',\n  version:          ''\n]\n</code></pre> <p>\u5c06Docker\u5bb9\u5668\u7684\u914d\u7f6e\u6a21\u677f\u52a0\u5165\u5230DockerCloud\u6a21\u677f\u4e2d\uff0c\u901a\u8fc7<code>Jenkins.clouds</code>\u6dfb\u52a0\u7684jenkins\u914d\u7f6e\u3002</p> <pre><code>//\u914d\u7f6eDockerCloud\n// src/main/java/com/nirima/jenkins/plugins/docker/DockerCloud.java\nDockerCloud dockerCloud = new DockerCloud(\n  dockerCloudParameters.name,\n  [dockerTemplate],   //docker\u5bb9\u5668\u6a21\u677f\n  dockerCloudParameters.serverUrl,\n  dockerCloudParameters.containerCapStr,\n  dockerCloudParameters.connectTimeout,\n  dockerCloudParameters.readTimeout,\n  dockerCloudParameters.credentialsId,\n  dockerCloudParameters.version,\n  dockerCloudParameters.dockerHostname\n)\n\n// get Jenkins instance\nJenkins jenkins = Jenkins.getInstance()\n\n// add cloud configuration to Jenkins\njenkins.clouds.add(dockerCloud)\n\n// save current Jenkins state to disk\njenkins.save()\n</code></pre> <p>\u590d\u5236\u5199\u597d\u7684\u4ee3\u7801\uff0c\u5728Jenkins\u811a\u672c\u547d\u4ee4\u884c\u8fd0\u884c\u3002</p> <pre><code>import com.nirima.jenkins.plugins.docker.DockerCloud\nimport com.nirima.jenkins.plugins.docker.DockerTemplate\nimport com.nirima.jenkins.plugins.docker.DockerTemplateBase\nimport com.nirima.jenkins.plugins.docker.launcher.DockerComputerJNLPLauncher\nimport io.jenkins.docker.connector.DockerComputerJNLPConnector\nimport jenkins.model.Jenkins\n\n// parameters\ndef dockerTemplateBaseParameters = [\n  bindAllPorts:       false,\n  bindPorts:          '',\n  cpuPeriod:          null,\n  cpuQuota:           null,\n  cpuShares:          null,\n  dnsString:          '',\n  dockerCommand:      '',\n  environmentsString: '',\n  extraHostsString:   '',\n  hostname:           '',\n  image:              'jenkins/inbound-agent:latest',\n  macAddress:         '',\n  memoryLimit:        null,\n  memorySwap:         null,\n  network:            '',\n  privileged:         false,\n  pullCredentialsId:  '',\n  sharedMemorySize:   null,\n  tty:                true,\n  volumesFromString:  '',\n  volumesString:      ''\n]\n\ndef DockerTemplateParameters = [\n  instanceCapStr: '4',\n  labelString:    'docker.local.jenkins.agent',\n  remoteFs:       ''\n]\n\ndef dockerCloudParameters = [\n  connectTimeout:   3,\n  containerCapStr:  '4',\n  credentialsId:    '',\n  dockerHostname:   '',\n  name:             'docker.local',\n  readTimeout:      60,\n  serverUrl:        'unix:///var/run/docker.sock',\n  version:          ''\n]\n\n// https://github.com/jenkinsci/docker-plugin/blob/docker-plugin-1.1.2/src/main/java/com/nirima/jenkins/plugins/docker/DockerTemplateBase.java\nDockerTemplateBase dockerTemplateBase = new DockerTemplateBase(\n  dockerTemplateBaseParameters.image,\n  dockerTemplateBaseParameters.pullCredentialsId,\n  dockerTemplateBaseParameters.dnsString,\n  dockerTemplateBaseParameters.network,\n  dockerTemplateBaseParameters.dockerCommand,\n  dockerTemplateBaseParameters.volumesString,\n  dockerTemplateBaseParameters.volumesFromString,\n  dockerTemplateBaseParameters.environmentsString,\n  dockerTemplateBaseParameters.hostname,\n  dockerTemplateBaseParameters.memoryLimit,\n  dockerTemplateBaseParameters.memorySwap,\n  dockerTemplateBaseParameters.cpuPeriod,\n  dockerTemplateBaseParameters.cpuQuota,\n  dockerTemplateBaseParameters.cpuShares,\n  dockerTemplateBaseParameters.sharedMemorySize,\n  dockerTemplateBaseParameters.bindPorts,\n  dockerTemplateBaseParameters.bindAllPorts,\n  dockerTemplateBaseParameters.privileged,\n  dockerTemplateBaseParameters.tty,\n  dockerTemplateBaseParameters.macAddress,\n  dockerTemplateBaseParameters.extraHostsString\n)\n\n// https://github.com/jenkinsci/docker-plugin/blob/docker-plugin-1.1.2/src/main/java/com/nirima/jenkins/plugins/docker/DockerTemplate.java\nDockerTemplate dockerTemplate = new DockerTemplate(\n  dockerTemplateBase,\n  new DockerComputerAttachConnector(),\n  DockerTemplateParameters.labelString,\n  DockerTemplateParameters.remoteFs,\n  DockerTemplateParameters.instanceCapStr\n)\n\n// https://github.com/jenkinsci/docker-plugin/blob/docker-plugin-1.1.2/src/main/java/com/nirima/jenkins/plugins/docker/DockerCloud.java\nDockerCloud dockerCloud = new DockerCloud(\n  dockerCloudParameters.name,\n  [dockerTemplate],\n  dockerCloudParameters.serverUrl,\n  dockerCloudParameters.containerCapStr,\n  dockerCloudParameters.connectTimeout,\n  dockerCloudParameters.readTimeout,\n  dockerCloudParameters.credentialsId,\n  dockerCloudParameters.version,\n  dockerCloudParameters.dockerHostname\n)\n\n// get Jenkins instance\nJenkins jenkins = Jenkins.getInstance()\n\n// add cloud configuration to Jenkins\njenkins.clouds.add(dockerCloud)\n\n// save current Jenkins state to disk\njenkins.save()\n</code></pre> <p></p>"},{"location":"chap11/4Docker_groovy/#2-jnlpdocker-cloud","title":"2\u3001 \u5b9e\u4f8b\uff1a \u6dfb\u52a0\u4e00\u4e2a JNLP\u7c7b\u578b\u7684Docker Cloud\u914d\u7f6e","text":"<p>\u4e0d\u540c\u70b91\uff1a \u9700\u8981\u5f15\u5165<code>DockerComputerJNLPLauncher</code>\u3001<code>DockerComputerJNLPConnector</code>\u3001<code>hudson.slaves.JNLPLauncher</code>\u3002</p> <pre><code>import com.nirima.jenkins.plugins.docker.DockerCloud\nimport com.nirima.jenkins.plugins.docker.DockerTemplate\nimport com.nirima.jenkins.plugins.docker.DockerTemplateBase\n//import com.nirima.jenkins.plugins.docker.launcher.AttachedDockerComputerLauncher\nimport com.nirima.jenkins.plugins.docker.launcher.DockerComputerJNLPLauncher\n//import io.jenkins.docker.connector.DockerComputerAttachConnector\nimport io.jenkins.docker.connector.DockerComputerJNLPConnector\nimport jenkins.model.Jenkins\nimport hudson.slaves.JNLPLauncher;  \n</code></pre> <p>\u4e0d\u540c\u70b92: JNLP\u7c7b\u578b\u7684\u542f\u52a8\u65b9\u5f0f\u9700\u8981\u6dfb\u52a0\u4e24\u4e2a\u53d8\u91cf\uff0c\u5206\u522b\u662fJenkinsuser\u548cJenkins\u670d\u52a1\u5668\u5730\u5740\u3002</p> <pre><code>// src/main/java/com/nirima/jenkins/plugins/docker/DockerTemplate.java\nDockerTemplate dockerTemplate = new DockerTemplate(\n  dockerTemplateBase,\n  //new DockerComputerAttachConnector(),\n  new DockerComputerJNLPConnector(new JNLPLauncher(null, null)).withUser(\"jenkins\")\n                        .withJenkinsUrl(\"http://123.123.123:8080\"),\n  DockerTemplateParameters.labelString,\n  DockerTemplateParameters.remoteFs,\n  DockerTemplateParameters.instanceCapStr\n)\n</code></pre> <p>\u53c2\u8003\u6d4b\u8bd5\u6587\u4ef6\uff0c\u83b7\u53d6JNLP\u65b9\u5f0f\u7684\u5bb9\u5668\u6a21\u677f\u521b\u5efa\u65b9\u5f0f\u3002</p> <pre><code>final DockerTemplate template = new DockerTemplate(\n                new DockerTemplateBase(JNLP_SLAVE_IMAGE_IMAGENAME),\n                new DockerComputerJNLPConnector(new JNLPLauncher(null, null)).withUser(COMMON_IMAGE_USERNAME)\n                        .withJenkinsUrl(uri.toString()),\n                        LABEL, COMMON_IMAGE_HOMEDIR, INSTANCE_CAP\n        );\n</code></pre> <p>\u5b8c\u6574\u6e90\u7801</p> <pre><code>import com.nirima.jenkins.plugins.docker.DockerCloud\nimport com.nirima.jenkins.plugins.docker.DockerTemplate\nimport com.nirima.jenkins.plugins.docker.DockerTemplateBase\n//import com.nirima.jenkins.plugins.docker.launcher.AttachedDockerComputerLauncher\nimport com.nirima.jenkins.plugins.docker.launcher.DockerComputerJNLPLauncher\n//import io.jenkins.docker.connector.DockerComputerAttachConnector\nimport io.jenkins.docker.connector.DockerComputerJNLPConnector\nimport jenkins.model.Jenkins\nimport hudson.slaves.JNLPLauncher;\n// parameters\n\n//Docker Agent \u57fa\u672c\u53c2\u6570\ndef dockerTemplateBaseParameters = [\n  bindAllPorts:       false,\n  bindPorts:          '',\n  cpuShares:          null,\n  dnsString:          '',\n  dockerCommand:      '',\n  environmentsString: '',\n  extraHostsString:   '',\n  hostname:           '',\n  image:              'jenkins/inbound-agent:latest',   //\u955c\u50cf\n  macAddress:         '',\n  memoryLimit:        null,\n  memorySwap:         null,\n  network:            '',\n  privileged:         false,\n  pullCredentialsId:  '',\n  sharedMemorySize:   null,\n  tty:                true,\n  volumesFromString:  '',\n  volumesString:      ''\n]\n\n\n//Docker Agnet \u53c2\u6570\ndef DockerTemplateParameters = [\n  instanceCapStr: '10',    //\u5b9e\u4f8b\u6570\n  labelString:    'jenkins-agent-test',   //\u8282\u70b9\u6807\u7b7e\n  remoteFs:       '/home/jenkins'      //\u4e3b\u76ee\u5f55\n\n]\n\n\ndef dockerCloudParameters = [\n  connectTimeout:   60,       //\u94fe\u63a5\u8d85\u65f6\n  containerCapStr:  '10',     //\u5b9e\u4f8b\u6570\u91cf\n  credentialsId:    '',\n  dockerHostname:   '',\n  name:             'docker.local.test',     \n  readTimeout:      60,\n  serverUrl:        'tcp://192.168.33.11:2375',\n  version:          ''\n]\n\n// https://github.com/jenkinsci/docker-plugin/blob/docker-plugin-1.1.2/src/main/java/com/nirima/jenkins/plugins/docker/DockerTemplateBase.java\nDockerTemplateBase dockerTemplateBase = new DockerTemplateBase(\n  dockerTemplateBaseParameters.image,\n  dockerTemplateBaseParameters.pullCredentialsId,\n  dockerTemplateBaseParameters.dnsString,\n  dockerTemplateBaseParameters.network,\n  dockerTemplateBaseParameters.dockerCommand,\n  dockerTemplateBaseParameters.volumesString,\n  dockerTemplateBaseParameters.volumesFromString,\n  dockerTemplateBaseParameters.environmentsString,\n  dockerTemplateBaseParameters.hostname,\n  dockerTemplateBaseParameters.memoryLimit,\n  dockerTemplateBaseParameters.memorySwap,\n  dockerTemplateBaseParameters.cpuPeriod,\n  dockerTemplateBaseParameters.cpuQuota,\n  dockerTemplateBaseParameters.cpuShares,\n  dockerTemplateBaseParameters.sharedMemorySize,\n  dockerTemplateBaseParameters.bindPorts,\n  dockerTemplateBaseParameters.bindAllPorts,\n  dockerTemplateBaseParameters.privileged,\n  dockerTemplateBaseParameters.tty,\n  dockerTemplateBaseParameters.macAddress,\n  dockerTemplateBaseParameters.extraHostsString\n)\n\n// https://github.com/jenkinsci/docker-plugin/blob/docker-plugin-1.1.2/src/main/java/com/nirima/jenkins/plugins/docker/DockerTemplate.java\nDockerTemplate dockerTemplate = new DockerTemplate(\n  dockerTemplateBase,\n  //new DockerComputerAttachConnector(),\n  new DockerComputerJNLPConnector(new JNLPLauncher(null, null)).withUser(\"jenkins\")\n                        .withJenkinsUrl(\"http://192.168.33.11:8080\"),\n  DockerTemplateParameters.labelString,\n  DockerTemplateParameters.remoteFs,\n  DockerTemplateParameters.instanceCapStr\n)\n\n\n\n// https://github.com/jenkinsci/docker-plugin/blob/docker-plugin-1.1.2/src/main/java/com/nirima/jenkins/plugins/docker/DockerCloud.java\nDockerCloud dockerCloud = new DockerCloud(\n  dockerCloudParameters.name,\n  [dockerTemplate],\n  dockerCloudParameters.serverUrl,\n  dockerCloudParameters.containerCapStr,\n  dockerCloudParameters.connectTimeout,\n  dockerCloudParameters.readTimeout,\n  dockerCloudParameters.credentialsId,\n  dockerCloudParameters.version,\n  dockerCloudParameters.dockerHostname\n)\n\n// get Jenkins instance\nJenkins jenkins = Jenkins.getInstance()\n\n// add cloud configuration to Jenkins\njenkins.clouds.add(dockerCloud)\n\n// save current Jenkins state to disk\njenkins.save()\n</code></pre> <p></p>"},{"location":"chap12/1k8s_install/","title":"K8S \u5e73\u53f0\u96c6\u6210","text":"<p>k8s \u57fa\u4e8e Jenkins \u7684 CI/CD \u8be6\u7ec6\u6559\u7a0b</p>"},{"location":"chap12/1k8s_install/#1kubernetes","title":"1\u3001Kubernetes \u57fa\u672c\u5bf9\u8c61\u7b80\u4ecb","text":""},{"location":"chap12/1k8s_install/#jenkins","title":"Jenkins \u67b6\u6784","text":"<p>\u4ece\u56fe\u4e0a\u53ef\u4ee5\u770b\u5230 <code>Jenkins Master</code> \u548c <code>Jenkins Slave</code> \u4ee5 <code>Pod</code> \u5f62\u5f0f\u8fd0\u884c\u5728 <code>Kubernetes</code> \u96c6\u7fa4\u7684 <code>Node</code> \u4e0a\uff0c<code>Master</code> \u8fd0\u884c\u5728\u5176\u4e2d\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u4e14\u5c06\u5176\u914d\u7f6e\u6570\u636e\u5b58\u50a8\u5230\u4e00\u4e2a <code>Volume</code> \u4e0a\u53bb\uff0c<code>Slave</code> \u8fd0\u884c\u5728\u5404\u4e2a\u8282\u70b9\u4e0a\uff0c\u5e76\u4e14\u5b83\u4e0d\u662f\u4e00\u76f4\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\uff0c\u5b83\u4f1a\u6309\u7167\u9700\u6c42\u52a8\u6001\u7684\u521b\u5efa\u5e76\u81ea\u52a8\u5220\u9664\u3002</p> <p>\u8fd9\u79cd\u65b9\u5f0f\u7684\u5de5\u4f5c\u6d41\u7a0b\u5927\u81f4\u4e3a\uff1a\u5f53 <code>Jenkins Master</code> \u63a5\u53d7\u5230 <code>Build</code> \u8bf7\u6c42\u65f6\uff0c\u4f1a\u6839\u636e\u914d\u7f6e\u7684 <code>Label</code> \u52a8\u6001\u521b\u5efa\u4e00\u4e2a\u8fd0\u884c\u5728 <code>Pod</code> \u4e2d\u7684 <code>Jenkins Slave</code> \u5e76\u6ce8\u518c\u5230 <code>Master</code> \u4e0a\uff0c\u5f53\u8fd0\u884c\u5b8c <code>Job</code> \u540e\uff0c\u8fd9\u4e2a <code>Slave</code> \u4f1a\u88ab\u6ce8\u9500\u5e76\u4e14\u8fd9\u4e2a <code>Pod</code> \u4e5f\u4f1a\u81ea\u52a8\u5220\u9664\uff0c\u6062\u590d\u5230\u6700\u521d\u72b6\u6001\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u5e26\u6765\u4e86\u54ea\u4e9b\u597d\u5904\u5462\uff1f</p> <ul> <li>\u670d\u52a1\u9ad8\u53ef\u7528\uff0c\u5f53 <code>Jenkins Master</code> \u51fa\u73b0\u6545\u969c\u65f6\uff0c<code>Kubernetes</code> \u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 <code>Jenkins Master</code> \u5bb9\u5668\uff0c\u5e76\u4e14\u5c06 <code>Volume</code> \u5206\u914d\u7ed9\u65b0\u521b\u5efa\u7684\u5bb9\u5668\uff0c\u4fdd\u8bc1\u6570\u636e\u4e0d\u4e22\u5931\uff0c\u4ece\u800c\u8fbe\u5230\u96c6\u7fa4\u670d\u52a1\u9ad8\u53ef\u7528\u3002</li> <li>\u52a8\u6001\u4f38\u7f29\uff0c\u5408\u7406\u4f7f\u7528\u8d44\u6e90\uff0c\u6bcf\u6b21\u8fd0\u884c <code>Job</code> \u65f6\uff0c\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a <code>Jenkins Slave</code>\uff0c<code>Job</code> \u5b8c\u6210\u540e\uff0c<code>Slave</code> \u81ea\u52a8\u6ce8\u9500\u5e76\u5220\u9664\u5bb9\u5668\uff0c\u8d44\u6e90\u81ea\u52a8\u91ca\u653e\uff0c\u800c\u4e14 <code>Kubernetes</code> \u4f1a\u6839\u636e\u6bcf\u4e2a\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u52a8\u6001\u5206\u914d <code>Slave</code> \u5230\u7a7a\u95f2\u7684\u8282\u70b9\u4e0a\u521b\u5efa\uff0c\u964d\u4f4e\u51fa\u73b0\u56e0\u67d0\u8282\u70b9\u8d44\u6e90\u5229\u7528\u7387\u9ad8\uff0c\u8fd8\u6392\u961f\u7b49\u5f85\u5728\u8be5\u8282\u70b9\u7684\u60c5\u51b5\u3002</li> <li>\u6269\u5c55\u6027\u597d\uff0c\u5f53 <code>Kubernetes</code> \u96c6\u7fa4\u7684\u8d44\u6e90\u4e25\u91cd\u4e0d\u8db3\u800c\u5bfc\u81f4 <code>Job</code> \u6392\u961f\u7b49\u5f85\u65f6\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u6dfb\u52a0\u4e00\u4e2a <code>Kubernetes Node</code> \u5230\u96c6\u7fa4\u4e2d\uff0c\u4ece\u800c\u5b9e\u73b0\u6269\u5c55\u3002</li> </ul>"},{"location":"chap12/1k8s_install/#2-kubernetes-jenkins","title":"2\u3001\u57fa\u4e8e Kubernetes \u90e8\u7f72 Jenkins","text":"<pre><code>$ kubectl create ns devops\n</code></pre>"},{"location":"chap12/1k8s_install/#jenkinsyaml","title":"<code>jenkins.yaml</code>","text":"<pre><code>kind: Deployment\napiVersion: apps/v1\nmetadata:\n  labels:\n    k8s-app: jenkins\n  name: jenkins\n  namespace: devops\nspec:\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      k8s-app: jenkins\n  template:\n    metadata:\n      labels:\n        k8s-app: jenkins\n      namespace: devops\n      name: jenkins\n    spec:\n      containers:\n        - name: jenkins\n          image: jenkins/jenkins:2.253\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 30080\n              name: web\n              protocol: TCP\n            - containerPort: 30081\n              name: agent\n              protocol: TCP\n          resources:\n            limits:\n              cpu: 1000m\n              memory: 2Gi\n            requests:\n              cpu: 500m\n              memory: 512Mi\n          livenessProbe:\n            httpGet:\n              path: /login\n              port: 30080\n            initialDelaySeconds: 60\n            timeoutSeconds: 5\n            failureThreshold: 12\n          readinessProbe:\n            httpGet:\n              path: /login\n              port: 30080\n            initialDelaySeconds: 60\n            timeoutSeconds: 5\n            failureThreshold: 12\n          volumeMounts:\n            - name: jenkins-home\n              mountPath: /var/lib/jenkins\n          env:\n            - name: JENKINS_HOME\n              value: /var/lib/jenkins\n            - name: JENKINS_OPTS \n              value: --httpPort=30080\n            - name: JENKINS_SLAVE_AGENT_PORT\n              value: \"30081\"\n      volumes:\n        - name: jenkins-home\n          # hostPath: \n          #   path: /data/devops/jenkins\n          #   type: Directory\n          emptyDir: {}\n      serviceAccountName: jenkins\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    k8s-app: jenkins\n  name: jenkins\n  namespace: devops\n---\nkind: Service\napiVersion: v1\nmetadata:\n  labels:\n    k8s-app: jenkins\n  name: jenkins\n  namespace: devops\nspec:\n  type: NodePort\n  ports:\n    - name: web\n      port: 30080\n      targetPort: 30080\n      nodePort: 30080\n    - name: slave\n      port: 30081\n      targetPort: 30081\n      nodePort: 30081\n  selector:\n    k8s-app: jenkins\n---\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n name: jenkins\n namespace: devops\nrules:\n - apiGroups: [\"\"]\n   resources: [\"pods\",\"configmaps\",\"namespaces\"]\n   verbs: [\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]\n - apiGroups: [\"\"]\n   resources: [\"pods/exec\"]\n   verbs: [\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]\n - apiGroups: [\"\"]\n   resources: [\"pods/log\"]\n   verbs: [\"get\",\"list\",\"watch\"]\n - apiGroups: [\"\"]\n   resources: [\"secrets\"]\n   verbs: [\"get\"]\n---\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: RoleBinding\nmetadata:\n name: jenkins\n namespace: devops\nroleRef:\n apiGroup: rbac.authorization.k8s.io\n kind: Role\n name: jenkins\nsubjects:\n - kind: ServiceAccount\n   name: jenkins\n   namespace: devops\n</code></pre> <pre><code> kubectl apply -f jenkins.yaml\n ```\n\n ```\n kubectl logs jenkins-b99f4986b-rjl8m -n devops\n ...\n Jenkins initial setup is required. An admin user has been created and a password generated.\nPlease use the following password to proceed to installation:\n\nd0ef791eaa204d1a9700341f43a1e898\n\nThis may also be found at: /var/lib/jenkins/secrets/initialAdminPassword\n\n*************************************************************\n*************************************************************\n*************************************************************\n\n2020-08-22 09:55:05.902+0000 [id=26]    INFO    jenkins.InitReactorRunner$1#onAttained: Completed initialization\n2020-08-22 09:55:05.915+0000 [id=19]    INFO    hudson.WebAppMain$3#run: Jenkins is fully up and running\n2020-08-22 09:55:06.285+0000 [id=39]    INFO    h.m.DownloadService$Downloadable#load: Obtained the updated data file for hudson.tasks.Maven.MavenInstaller\n2020-08-22 09:55:06.286+0000 [id=39]    INFO    hudson.util.Retrier#start: Performed the action check updates server successfully at the attempt #1\n2020-08-22 09:55:06.289+0000 [id=39]    INFO    hudson.model.AsyncPeriodicWork#lambda$doRun$0: Finished Download metadata. 28,549 ms\n</code></pre>"},{"location":"chap12/1k8s_install/#3-jenkins-slave","title":"3\u3001\u90e8\u7f72 Jenkins \u9759\u6001 Slave \u8282\u70b9","text":""},{"location":"chap12/1k8s_install/#3-1-jenkins-agent-secret","title":"3-1 \u586b\u5199<code>Jenkins agent</code> \u4fe1\u606f\uff0c\u83b7\u53d6 secret","text":"<p>k8s-agent</p> <p></p> <ul> <li><code>k8s-agent</code></li> <li><code>192.168.33.1</code></li> <li>5</li> <li><code>/home/jenkins/workspace</code></li> </ul> <p></p> <p></p>"},{"location":"chap12/1k8s_install/#3-2-k8s-agent","title":"3-2 \u521b\u5efak8s-agent","text":"<p><code>jenkinsslave.yaml</code></p> <pre><code>---\nkind: Deployment\napiVersion: apps/v1\nmetadata:\n  labels:\n    k8s-app: jenkinsagent\n  name: jenkinsagent\n  namespace: devops\nspec:\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      k8s-app: jenkinsagent\n  template:\n    metadata:\n      labels:\n        k8s-app: jenkinsagent\n      namespace: devops\n      name: jenkinsagent\n    spec:\n      containers:\n        - name: jenkinsagent\n          image: jenkins/inbound-agent:latest\n          securityContext:\n            privileged: true\n          imagePullPolicy: IfNotPresent\n          resources:\n            limits:\n              cpu: 1000m\n              memory: 2Gi\n            requests:\n              cpu: 500m\n              memory: 512Mi\n          volumeMounts:\n            - name: jenkinsagent-workdir\n              mountPath: /home/jenkins/workspace\n            - name: buildtools\n              mountPath: /home/jenkins/buildtools\n            - name: dockersock\n              mountPath: \"/var/run/docker.sock\"\n            - name: dockercmd\n              mountPath: /usr/bin/docker\n            - name: kubectlconfig\n              mountPath: /home/jenkins/.kube/config\n            - name: kubectlcmd\n              mountPath: /usr/bin/kubectl\n          env:\n            - name: JENKINS_URL\n              value: http://192.168.33.1:30080\n            - name: JENKINS_SECRET\n              value: ac3bb67e179f336c45316bfa26301edbb572fbebbbee9983c27d558e962c5b94\n            - name: JENKINS_AGENT_NAME\n              value: k8s-agent\n            - name: JENKINS_AGENT_WORKDIR\n              value: /home/jenkins/workspace\n      volumes:\n        - name: jenkinsagent-workdir\n          hostPath: \n            path: /Users/i.../Jenkins/workspace\n            type: Directory\n        - name: buildtools\n          hostPath: \n            path: /Users/I.../Jenkins/buildtools\n            type: Directory\n        - name: kubectlconfig\n          hostPath: \n            path: /Users/I.../.kube/config\n        - name: kubectlcmd\n          hostPath: \n            path: /usr/local/bin/kubectl\n        - name: dockersock\n          hostPath: \n            path: /var/run/docker.sock\n        - name: dockercmd\n          hostPath: \n            path: /usr/local/bin/docker\n</code></pre> <p></p>"},{"location":"chap12/1k8s_install/#4-jenkins-slave","title":"4\u3001\u90e8\u7f72 Jenkins \u52a8\u6001 Slave \u8282\u70b9","text":"<p>\u5b89\u88c5 k8s plugin: https://plugins.jenkins.io/kubernetes/</p>"},{"location":"chap12/1k8s_install/#4-1-slave","title":"4-1 \u914d\u7f6e \u96c6\u7fa4\u5185\u90e8 \u52a8\u6001 Slave \u8282\u70b9","text":"<ul> <li>kubernetes</li> <li>https://kubernetes.default.svc.cluster.local</li> <li>Jenkins URL: http://192.168.33.1:30080/</li> <li>POD LABEL: <code>jenkins : agent</code></li> <li>namespace: devops</li> <li>Pod retention: Never</li> </ul>"},{"location":"chap12/1k8s_install/#4-2-slave","title":"4-2 \u5916\u90e8\u96c6\u7fa4 \u52a8\u6001 Slave \u8282\u70b9","text":"<ul> <li>\u8fdb\u5165\u96c6\u7fa4\u670d\u52a1\u5668<code>.kube/config</code></li> <li><code>config</code>\u6587\u4ef6\u4e2d\u7684<code>certificate-authority-data</code>\u5185\u5bb9\uff0c\u751f\u6210<code>base64</code>\u6587\u4ef6 <code>ca.crt</code> </li> <li><code>config</code>\u6587\u4ef6\u4e2d\u7684<code>client-certificate-data</code>\u5185\u5bb9\uff0c\u751f\u6210<code>base64</code>\u6587\u4ef6<code>client.crt</code></li> <li>config\u6587\u4ef6\u4e2d\u7684<code>client-key-data</code>\u5185\u5bb9\uff0c\u751f\u6210<code>base64</code>\u6587\u4ef6<code>c1ient.key</code> </li> </ul> <p><code>echo zzzzzzzzz | base64 -d &gt; client.key</code> </p> <ul> <li>\u751f\u6210\u8bc1\u4e66\uff08\u4f1a\u8f93\u5165\u5bc6\u7801\u9700\u8981\u8bb0\u4f4f\u540e\u9762jenkins\u9700\u8981\u914d\u7f6e\uff09 </li> </ul> <p><code>openssl pkcs12 -export -out cert.pfx -inkey client.key -in  client.crt -certfile ca.crt</code> </p> <ul> <li>\u4e0b\u8f7d\u8bc1\u4e66 <code>cert.pfx</code></li> </ul> <p></p> <p>\u914d\u7f6e \u52a8\u6001 Slave \u8282\u70b9</p> <p><code>cat ca.crt</code></p> <p></p> <p></p>"},{"location":"chap12/1k8s_install/#4-3-pipeline-slave","title":"4-3 pipeline \u542f\u52a8 \u52a8\u6001\u7684 slave","text":"<pre><code>pipeline{\n    agent{\n        kubernetes{\n            label \"test01\"\n            cloud 'kubernetes'\n            yaml '''\n---\nkind: Pod\napiVersion: v1\nmetadata:\n  labels:\n    k8s-app: jenkinsagent\n  name: jenkinsagent\n  namespace: devops\nspec:\ncontainers:\n  - name: jenkinsagent\n    image: jenkins/inbound-agent:latest\n    imagePullPolicy: IfNotPresent\n    resources:\n      limits:\n        cpu: 1000m\n        memory: 2Gi\n      requests:\n        cpu: 500m\n        memory: 512Mi\n    volumeMounts:\n      - name: jenkinsagent-workdir\n        mountPath: /home/jenkins/workspace\n      - name: buildtools\n        mountPath: /home/jenkins/buildtools\n    env:\n      - name: JENKINS_AGENT_WORKDIR\n        value: /home/jenkins/workspace\nvolumes:\n  - name: jenkinsagent-workdir\n    hostPath:\n      path: /Users/i../Jenkins/workspace\n      type: Directory\n  - name: buildtools\n    hostPath:\n      path: /Users/i.../Jenkins/buildtools\n      type: Directory\n'''\n        }\n    }\n\n\n    stages{\n        stage(\"test\"){\n          steps{\n            script{\n              sh \"sleep 30\"\n            }\n          }\n        }\n    }\n}\n</code></pre> <p>Console Output</p> <pre><code>Created Pod: devops/test01-2gh1z-q4rtx\n[Normal][devops/test01-2gh1z-q4rtx][Scheduled] Successfully assigned devops/test01-2gh1z-q4rtx to docker-desktop\n[Normal][devops/test01-2gh1z-q4rtx][Pulling] Pulling image \"jenkins/inbound-agent:4.3-4\"\nStill waiting to schedule task\n\u2018test01-2gh1z-q4rtx\u2019 is offline\nCreated Pod: devops/test01-2gh1z-llllt\n[Normal][devops/test01-2gh1z-llllt][Scheduled] Successfully assigned devops/test01-2gh1z-llllt to docker-desktop\n[Normal][devops/test01-2gh1z-llllt][Pulling] Pulling image \"jenkins/inbound-agent:4.3-4\"\n[Normal][devops/test01-2gh1z-llllt][Pulled] Successfully pulled image \"jenkins/inbound-agent:4.3-4\"\n[Normal][devops/test01-2gh1z-llllt][Created] Created container jnlp\n[Normal][devops/test01-2gh1z-llllt][Started] Started container jnlp\nAgent test01-2gh1z-llllt is provisioned from template test01-2gh1z\n---\napiVersion: \"v1\"\nkind: \"Pod\"\nmetadata:\n  annotations:\n    buildUrl: \"http://192.168.33.1:30080/job/k8s-test/1/\"\n    runUrl: \"job/k8s-test/1/\"\n  labels:\n    k8s-app: \"jenkinsagent\"\n    jenkins: \"agent\"\n    jenkins/label: \"test01\"\n  name: \"test01-2gh1z-llllt\"\n  namespace: \"devops\"\nspec:\n  containers:\n  - env:\n    - name: \"JENKINS_SECRET\"\n      value: \"********\"\n    - name: \"JENKINS_AGENT_NAME\"\n      value: \"test01-2gh1z-llllt\"\n    - name: \"JENKINS_NAME\"\n      value: \"test01-2gh1z-llllt\"\n    - name: \"JENKINS_AGENT_WORKDIR\"\n      value: \"/home/jenkins/agent\"\n    - name: \"JENKINS_URL\"\n      value: \"http://192.168.33.1:30080/\"\n    image: \"jenkins/inbound-agent:4.3-4\"\n    name: \"jnlp\"\n    resources:\n      requests:\n        cpu: \"100m\"\n        memory: \"256Mi\"\n    volumeMounts:\n    - mountPath: \"/home/jenkins/agent\"\n      name: \"workspace-volume\"\n      readOnly: false\n  nodeSelector:\n    kubernetes.io/os: \"linux\"\n  restartPolicy: \"Never\"\n  volumes:\n  - emptyDir:\n      medium: \"\"\n    name: \"workspace-volume\"\n\nRunning on test01-2gh1z-llllt in /home/jenkins/agent/workspace/k8s-test\n</code></pre> <p></p>"},{"location":"chap12/2K8s_pipeline/","title":"\u4f7f\u7528 Jenkins Pipeline \u6d41\u6c34\u7ebf\u90e8\u7f72 Kubernetes \u5e94\u7528","text":"<p>\u8981\u5b9e\u73b0\u5728 Jenkins \u4e2d\u7684\u6784\u5efa\u5de5\u4f5c\uff0c\u53ef\u4ee5\u6709\u591a\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u8fd9\u91cc\u91c7\u7528\u6bd4\u8f83\u5e38\u7528\u7684 Pipeline \u8fd9\u79cd\u65b9\u5f0f\u3002Pipeline\uff0c\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u4e00\u5957\u8fd0\u884c\u5728 Jenkins \u4e0a\u7684\u5de5\u4f5c\u6d41\u6846\u67b6\uff0c\u5c06\u539f\u6765\u72ec\u7acb\u8fd0\u884c\u4e8e\u5355\u4e2a\u6216\u8005\u591a\u4e2a\u8282\u70b9\u7684\u4efb\u52a1\u8fde\u63a5\u8d77\u6765\uff0c\u5b9e\u73b0\u5355\u4e2a\u4efb\u52a1\u96be\u4ee5\u5b8c\u6210\u7684\u590d\u6742\u6d41\u7a0b\u7f16\u6392\u548c\u53ef\u89c6\u5316\u7684\u5de5\u4f5c\u3002</p>"},{"location":"chap12/2K8s_pipeline/#1jenkins-pipeline","title":"1\u3001Jenkins Pipeline \u6709\u51e0\u4e2a\u6838\u5fc3\u6982\u5ff5","text":"<ul> <li>Node\uff1a\u8282\u70b9\uff0c\u4e00\u4e2a Node \u5c31\u662f\u4e00\u4e2a Jenkins \u8282\u70b9\uff0cMaster \u6216\u8005 Agent\uff0c\u662f\u6267\u884c Step \u7684\u5177\u4f53\u8fd0\u884c\u73af\u5883\uff0c\u6bd4\u5982\u6211\u4eec\u4e4b\u524d\u52a8\u6001\u8fd0\u884c\u7684 Jenkins Slave \u5c31\u662f\u4e00\u4e2a Node \u8282\u70b9</li> <li>Stage\uff1a\u9636\u6bb5\uff0c\u4e00\u4e2a Pipeline \u53ef\u4ee5\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a Stage\uff0c\u6bcf\u4e2a Stage \u4ee3\u8868\u4e00\u7ec4\u64cd\u4f5c\uff0c\u6bd4\u5982\uff1aBuild\u3001Test\u3001Deploy\uff0cStage \u662f\u4e00\u4e2a\u903b\u8f91\u5206\u7ec4\u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u8de8\u591a\u4e2a Node</li> <li>Step\uff1a\u6b65\u9aa4\uff0cStep \u662f\u6700\u57fa\u672c\u7684\u64cd\u4f5c\u5355\u5143\uff0c\u53ef\u4ee5\u662f\u6253\u5370\u4e00\u53e5\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u662f\u6784\u5efa\u4e00\u4e2a Docker \u955c\u50cf\uff0c\u7531\u5404\u7c7b Jenkins \u63d2\u4ef6\u63d0\u4f9b\uff0c\u6bd4\u5982\u547d\u4ee4\uff1a<code>sh 'make'</code>\uff0c\u5c31\u76f8\u5f53\u4e8e\u6211\u4eec\u5e73\u65f6 shell \u7ec8\u7aef\u4e2d\u6267\u884c make \u547d\u4ee4\u4e00\u6837\u3002</li> </ul> <p>\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u521b\u5efa Jenkins Pipline \u5462\uff1f</p> <ul> <li>Pipeline \u811a\u672c\u662f\u7531 Groovy \u8bed\u8a00\u5b9e\u73b0\u7684\uff0c\u4f46\u662f\u6211\u4eec\u6ca1\u5fc5\u8981\u5355\u72ec\u53bb\u5b66\u4e60 Groovy\uff0c\u5f53\u7136\u4f60\u4f1a\u7684\u8bdd\u6700\u597d</li> <li>Pipeline \u652f\u6301\u4e24\u79cd\u8bed\u6cd5\uff1aDeclarative(\u58f0\u660e\u5f0f)\u548c Scripted Pipeline(\u811a\u672c\u5f0f)\u8bed\u6cd5</li> <li>Pipeline \u4e5f\u6709\u4e24\u79cd\u521b\u5efa\u65b9\u6cd5\uff1a\u53ef\u4ee5\u76f4\u63a5\u5728 Jenkins \u7684 Web UI \u754c\u9762\u4e2d\u8f93\u5165\u811a\u672c\uff1b\u4e5f\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a Jenkinsfile \u811a\u672c\u6587\u4ef6\u653e\u5165\u9879\u76ee\u6e90\u7801\u5e93\u4e2d</li> <li>\u4e00\u822c\u6211\u4eec\u90fd\u63a8\u8350\u5728 Jenkins \u4e2d\u76f4\u63a5\u4ece\u6e90\u4ee3\u7801\u63a7\u5236(SCMD)\u4e2d\u76f4\u63a5\u8f7d\u5165 Jenkinsfile Pipeline \u8fd9\u79cd\u65b9\u6cd5</li> </ul> <p>\u6211\u4eec\u8fd9\u91cc\u6765\u7ed9\u5927\u5bb6\u5feb\u901f\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 Pipeline\uff0c\u76f4\u63a5\u5728 Jenkins \u7684 Web UI \u754c\u9762\u4e2d\u8f93\u5165\u811a\u672c\u8fd0\u884c\u3002</p> <ul> <li>\u65b0\u5efa\u4efb\u52a1\uff1a\u5728 Web UI \u4e2d\u70b9\u51fb \u65b0\u5efa\u4efb\u52a1 -&gt; \u8f93\u5165\u540d\u79f0\uff1a<code>pipeline-demo</code> -&gt; \u9009\u62e9\u4e0b\u9762\u7684 \u6d41\u6c34\u7ebf -&gt; \u70b9\u51fb \u786e\u5b9a</li> <li>\u914d\u7f6e\uff1a\u5728\u6700\u4e0b\u65b9\u7684 Pipeline \u533a\u57df\u8f93\u5165\u5982\u4e0b Script \u811a\u672c\uff0c\u7136\u540e\u70b9\u51fb\u4fdd\u5b58\u3002</li> </ul> <pre><code>\nnode {\n  stage('Clone') {\n      echo \"1.Clone Stage\"\n  }\n  stage('Test') {\n      echo \"2.Test Stage\"\n  }\n  stage('Build') {\n      echo \"3.Build Stage\"\n  }\n  stage('Deploy') {\n      echo \"4. Deploy Stage\"\n  }\n}\n</code></pre> <ul> <li>\u6784\u5efa\uff1a\u70b9\u51fb\u5de6\u4fa7\u533a\u57df\u7684 \u7acb\u5373\u6784\u5efa\uff0c\u53ef\u4ee5\u770b\u5230 Job \u5f00\u59cb\u6784\u5efa\u4e86</li> </ul> <p>\u9694\u4e00\u4f1a\u513f\uff0c\u6784\u5efa\u5b8c\u6210\uff0c\u53ef\u4ee5\u70b9\u51fb\u5de6\u4fa7\u533a\u57df\u7684 <code>Console Output</code>\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u8f93\u51fa\u4fe1\u606f\uff1a</p> <p></p> <p>console output \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u6211\u4eec Pipeline \u811a\u672c\u4e2d\u76844\u6761\u8f93\u51fa\u8bed\u53e5\u90fd\u6253\u5370\u51fa\u6765\u4e86\uff0c\u8bc1\u660e\u662f\u7b26\u5408\u6211\u4eec\u7684\u9884\u671f\u7684\u3002</p> <p>\u5982\u679c\u5927\u5bb6\u5bf9 Pipeline \u8bed\u6cd5\u4e0d\u662f\u7279\u522b\u719f\u6089\u7684\uff0c\u53ef\u4ee5\u524d\u5f80\u8f93\u5165\u811a\u672c\u7684\u4e0b\u9762\u7684\u94fe\u63a5 \u6d41\u6c34\u7ebf\u8bed\u6cd5 \u4e2d\u8fdb\u884c\u67e5\u770b\uff0c\u8fd9\u91cc\u6709\u5f88\u591a\u5173\u4e8e Pipeline \u8bed\u6cd5\u7684\u4ecb\u7ecd\uff0c\u4e5f\u53ef\u4ee5\u81ea\u52a8\u5e2e\u6211\u4eec\u751f\u6210\u4e00\u4e9b\u811a\u672c\u3002</p>"},{"location":"chap12/2K8s_pipeline/#2-slave","title":"2\u3001\u5728 Slave \u4e2d\u6784\u5efa\u4efb\u52a1","text":"<p>\u4e0a\u9762\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684 Pipeline \u4efb\u52a1\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u4efb\u52a1\u5e76\u6ca1\u6709\u5728 Jenkins \u7684 Slave \u4e2d\u8fd0\u884c\uff0c\u90a3\u4e48\u5982\u4f55\u8ba9\u6211\u4eec\u7684\u4efb\u52a1\u8dd1\u5728 Slave \u4e2d\u5462\uff1f</p> <p>\u8fd8\u8bb0\u5f97\u4e0a\u8282\u8bfe\u6211\u4eec\u5728\u6dfb\u52a0 Slave Pod \u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u8981\u8bb0\u4f4f\u6dfb\u52a0\u7684 label \u5417\uff1f</p> <p>\u6ca1\u9519\uff0c\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230\u8fd9\u4e2a label\uff0c\u6211\u4eec\u91cd\u65b0\u7f16\u8f91\u4e0a\u9762\u521b\u5efa\u7684 Pipeline \u811a\u672c\uff0c\u7ed9 node \u6dfb\u52a0\u4e00\u4e2a label \u5c5e\u6027\uff0c\u5982\u4e0b\uff1a</p> <pre><code>node('jxi-agent') {\n  stage('Clone') {\n    echo \"1.Clone Stage\"\n  }\n  stage('Test') {\n    echo \"2.Test Stage\"\n  }\n  stage('Build') {\n    echo \"3.Build Stage\"\n  }\n  stage('Deploy') {\n    echo \"4. Deploy Stage\"\n  }\n}\n</code></pre> <p>\u6211\u4eec\u8fd9\u91cc\u53ea\u662f\u7ed9 node \u6dfb\u52a0\u4e86\u4e00\u4e2a jxi-agent \u8fd9\u6837\u7684\u4e00\u4e2a label\uff0c\u7136\u540e\u6211\u4eec\u4fdd\u5b58\uff0c\u6784\u5efa\u4e4b\u524d\u67e5\u770b\u4e0b kubernetes \u96c6\u7fa4\u4e2d\u7684 Pod\uff1a</p> <pre><code>$ kubectl get pods -n kube-ops\nNAME                                           READY   STATUS    RESTARTS   AGE\njenkins-587b78f5cd-47hf8                       1/1     Running   2          4d21h\n......\n</code></pre> <p>\u7136\u540e\u91cd\u65b0\u89e6\u53d1\u7acb\u523b\u6784\u5efa\uff1a</p> <pre><code>$ kubectl get pods -n kube-ops\nNAME                                           READY   STATUS    RESTARTS   AGE\njenkins-587b78f5cd-47hf8                       1/1     Running   2          4d21h\njenkins-agent-6gw0w                            1/1     Running   0          4s\n</code></pre> <p>\u6211\u4eec\u53d1\u73b0\u591a\u4e86\u4e00\u4e2a\u540d\u53eb <code>jenkins-agent-6gw0w</code> \u7684 <code>Pod</code>\u6b63\u5728\u8fd0\u884c\uff0c\u9694\u4e00\u4f1a\u513f\u8fd9\u4e2a Pod \u5c31\u4e0d\u518d\u4e86\u3002\u8fd9\u4e5f\u8bc1\u660e\u6211\u4eec\u7684 Job \u6784\u5efa\u5b8c\u6210\u4e86\uff0c\u540c\u6837\u56de\u5230 Jenkins \u7684 Web UI \u754c\u9762\u4e2d\u67e5\u770b Console Output\uff0c\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u7684\u4fe1\u606f\uff1a</p> <p></p> <p><code>pipeline demo#2</code> \u662f\u4e0d\u662f\u4e5f\u8bc1\u660e\u6211\u4eec\u5f53\u524d\u7684\u4efb\u52a1\u5728\u8dd1\u5728\u4e0a\u9762\u52a8\u6001\u751f\u6210\u7684\u8fd9\u4e2a Pod \u4e2d\uff0c\u4e5f\u7b26\u5408\u6211\u4eec\u7684\u9884\u671f\u3002\u6211\u4eec\u56de\u5230 Job \u7684\u4e3b\u754c\u9762\uff0c\u4e5f\u53ef\u4ee5\u770b\u5230\u5927\u5bb6\u53ef\u80fd\u6bd4\u8f83\u719f\u6089\u7684 \u9636\u6bb5\u89c6\u56fe \u754c\u9762\uff1a</p> <p></p>"},{"location":"chap12/2K8s_pipeline/#3-kubernetes","title":"3\u3001\u90e8\u7f72 Kubernetes \u5e94\u7528","text":"<p>\u4e0a\u9762\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u5982\u4f55\u5728 Jenkins Slave \u4e2d\u6784\u5efa\u4efb\u52a1\u4e86\uff0c\u90a3\u4e48\u5982\u4f55\u6765\u90e8\u7f72\u4e00\u4e2a\u539f\u751f\u7684 Kubernetes \u5e94\u7528\u5462\uff1f\u8981\u90e8\u7f72 Kubernetes \u5e94\u7528\uff0c\u6211\u4eec\u5c31\u5f97\u5bf9\u6211\u4eec\u4e4b\u524d\u90e8\u7f72\u5e94\u7528\u7684\u6d41\u7a0b\u8981\u975e\u5e38\u719f\u6089\u624d\u884c\uff0c\u6211\u4eec\u4e4b\u524d\u7684\u6d41\u7a0b\u662f\u600e\u6837\u7684\uff1a</p> <ul> <li>\u7f16\u5199\u4ee3\u7801</li> <li>\u6d4b\u8bd5</li> <li>\u7f16\u5199 Dockerfile</li> <li>\u6784\u5efa\u6253\u5305 Docker \u955c\u50cf</li> <li>\u63a8\u9001 Docker \u955c\u50cf\u5230\u4ed3\u5e93</li> <li>\u7f16\u5199 Kubernetes YAML \u6587\u4ef6</li> <li>\u66f4\u6539 YAML \u6587\u4ef6\u4e2d Docker \u955c\u50cf TAG</li> <li>\u5229\u7528 kubectl \u5de5\u5177\u90e8\u7f72\u5e94\u7528</li> </ul> <p>\u6211\u4eec\u4e4b\u524d\u5728 Kubernetes \u73af\u5883\u4e2d\u90e8\u7f72\u4e00\u4e2a\u539f\u751f\u5e94\u7528\u7684\u6d41\u7a0b\u5e94\u8be5\u57fa\u672c\u4e0a\u662f\u4e0a\u9762\u8fd9\u4e9b\u6d41\u7a0b\u5427\uff1f</p> <p>\u73b0\u5728\u6211\u4eec\u5c31\u9700\u8981\u628a\u4e0a\u9762\u8fd9\u4e9b\u6d41\u7a0b\u653e\u5165 Jenkins \u4e2d\u6765\u81ea\u52a8\u5e2e\u6211\u4eec\u5b8c\u6210(\u5f53\u7136\u7f16\u7801\u9664\u5916)\uff0c\u4ece\u6d4b\u8bd5\u5230\u66f4\u65b0 YAML \u6587\u4ef6\u5c5e\u4e8e CI \u6d41\u7a0b\uff0c\u540e\u9762\u90e8\u7f72\u5c5e\u4e8e CD \u7684\u6d41\u7a0b\u3002\u5982\u679c\u6309\u7167\u6211\u4eec\u4e0a\u9762\u7684\u793a\u4f8b\uff0c\u6211\u4eec\u73b0\u5728\u8981\u6765\u7f16\u5199\u4e00\u4e2a Pipeline \u7684\u811a\u672c\uff0c\u5e94\u8be5\u600e\u4e48\u7f16\u5199\u5462\uff1f</p> <pre><code>node('jxi-agent') {\n    stage('Clone') {\n      echo \"1.Clone Stage\"\n    }\n    stage('Test') {\n      echo \"2.Test Stage\"\n    }\n    stage('Build') {\n      echo \"3.Build Docker Image Stage\"\n    }\n    stage('Push') {\n      echo \"4.Push Docker Image Stage\"\n    }\n    stage('YAML') {\n      echo \"5.Change YAML File Stage\"\n    }\n    stage('Deploy') {\n      echo \"6.Deploy Stage\"\n    }\n}\n</code></pre> <p>\u73b0\u5728\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u6d41\u6c34\u7ebf\u7684\u4f5c\u4e1a\uff0c\u76f4\u63a5\u4f7f\u7528\u4e0a\u9762\u7684\u811a\u672c\u6765\u6784\u5efa\uff0c\u540c\u6837\u53ef\u4ee5\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\uff1a</p> <p></p> <p>\u8fd9\u91cc\u6211\u4eec\u6765\u5c06\u4e00\u4e2a\u7b80\u5355 golang \u7a0b\u5e8f\uff0c\u90e8\u7f72\u5230 kubernetes \u73af\u5883\u4e2d\uff0c\u4ee3\u7801\u94fe\u63a5\uff1ahttps://github.com/cnych/drone-k8s-demo\u3002</p> <p>\u6211\u4eec\u5c06\u4ee3\u7801\u63a8\u9001\u5230\u6211\u4eec\u81ea\u5df1\u7684 GitLab \u4ed3\u5e93\u4e0a\u53bb\uff0c\u5730\u5740\uff1ahttp://git.k8s.local/course/devops-demo\uff0c\u8fd9\u6837\u8ba9 Jenkins \u548c Gitlab \u53bb\u8fdb\u884c\u8fde\u63a5\u8fdb\u884c CI/CD\u3002</p> <p>\u5982\u679c\u6309\u7167\u4e4b\u524d\u7684\u793a\u4f8b\uff0c\u6211\u4eec\u662f\u4e0d\u662f\u5e94\u8be5\u50cf\u8fd9\u6837\u6765\u7f16\u5199 Pipeline \u811a\u672c\uff1a</p> <ul> <li>\u7b2c\u4e00\u6b65\uff0cclone \u4ee3\u7801 </li> <li>\u7b2c\u4e8c\u6b65\uff0c\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5982\u679c\u6d4b\u8bd5\u901a\u8fc7\u4e86\u624d\u7ee7\u7eed\u4e0b\u9762\u7684\u4efb\u52a1 </li> <li>\u7b2c\u4e09\u6b65\uff0c\u7531\u4e8e Dockerfile \u57fa\u672c\u4e0a\u90fd\u662f\u653e\u5165\u6e90\u7801\u4e2d\u8fdb\u884c\u7ba1\u7406\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u5c31\u662f\u76f4\u63a5\u6784\u5efa Docker \u955c\u50cf\u4e86 </li> <li>\u7b2c\u56db\u6b65\uff0c\u955c\u50cf\u6253\u5305\u5b8c\u6210\uff0c\u5c31\u5e94\u8be5\u63a8\u9001\u5230\u955c\u50cf\u4ed3\u5e93\u4e2d\u5427 </li> <li>\u7b2c\u4e94\u6b65\uff0c\u955c\u50cf\u63a8\u9001\u5b8c\u6210\uff0c\u662f\u4e0d\u662f\u9700\u8981\u66f4\u6539 YAML \u6587\u4ef6\u4e2d\u7684\u955c\u50cf TAG \u4e3a\u8fd9\u6b21\u955c\u50cf\u7684 TAG </li> <li>\u7b2c\u516d\u6b65\uff0c\u4e07\u4e8b\u4ff1\u5907\uff0c\u53ea\u5dee\u6700\u540e\u4e00\u6b65\uff0c\u4f7f\u7528 kubectl \u547d\u4ee4\u884c\u5de5\u5177\u8fdb\u884c\u90e8\u7f72\u4e86</li> </ul> <p>\u5230\u8fd9\u91cc\u6211\u4eec\u7684\u6574\u4e2a CI/CD \u7684\u6d41\u7a0b\u662f\u4e0d\u662f\u5c31\u90fd\u5b8c\u6210\u4e86\u3002</p> <p>\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u7528\u4e0a\u9762\u7684\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u4e00\u4e2a jnlp \u7684\u955c\u50cf\u6765\u5b8c\u6210\u6211\u4eec\u7684\u6574\u4e2a\u6784\u5efa\u5de5\u4f5c\uff0c\u4f46\u662f\u6211\u4eec\u8fd9\u91cc\u7684\u9879\u76ee\u662f golang \u4ee3\u7801\u7684\uff0c\u6784\u5efa\u9700\u8981\u76f8\u5e94\u7684\u73af\u5883\uff0c\u5982\u679c\u6bcf\u6b21\u9700\u8981\u7279\u5b9a\u7684\u73af\u5883\u90fd\u9700\u8981\u91cd\u65b0\u53bb\u5b9a\u5236\u4e0b\u955c\u50cf\u8fd9\u672a\u514d\u592a\u9ebb\u70e6\u4e86\uff0c\u6211\u4eec\u8fd9\u91cc\u6765\u91c7\u7528\u4e00\u79cd\u66f4\u52a0\u7075\u6d3b\u7684\u65b9\u5f0f\uff0c\u81ea\u5b9a\u4e49 podTemplate\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728 Pipeline \u4e2d\u53bb\u81ea\u5b9a\u4e49 Slave Pod \u4e2d\u6240\u9700\u8981\u7528\u5230\u7684\u5bb9\u5668\u6a21\u677f\uff0c\u8fd9\u6837\u6211\u4eec\u9700\u8981\u4ec0\u4e48\u955c\u50cf\u53ea\u9700\u8981\u5728 Slave Pod Template \u4e2d\u58f0\u660e\u5373\u53ef\uff0c\u5b8c\u5168\u4e0d\u9700\u8981\u53bb\u5b9a\u4e49\u4e00\u4e2a\u5e9e\u5927\u7684 Slave \u955c\u50cf\u4e86\u3002</p> <p>\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5230 gitlab \u7684\u63d2\u4ef6\uff0c\u7528\u4e8e Gitab \u4fa7\u4ee3\u7801\u53d8\u52a8\u540e\u89e6\u53d1 Jenkins \u7684\u6784\u5efa\u4efb\u52a1\uff1a</p> <p></p> <p>\u7136\u540e\u65b0\u5efa\u4e00\u4e2a\u540d\u4e3a <code>devops-demo</code> \u7c7b\u578b\u4e3a\u6d41\u6c34\u7ebf\u7684\u4efb\u52a1\uff0c\u5728 \u6784\u5efa\u89e6\u53d1\u5668 \u533a\u57df\u9009\u62e9 Build when a change is pushed to GitLab\uff0c\u540e\u9762\u7684 http://jenkins.k8s.local/project/devops-demo \u662f\u6211\u4eec\u9700\u8981\u5728 Gitlab \u4e0a\u914d\u7684 Webhook \u5730\u5740:</p> <p></p> <p>\u5176\u4e2dComment (regex) for triggering a build\u662f\u8bf4\u5728 git \u4ed3\u5e93\uff0c\u53d1\u9001\u5305\u542b <code>jenkins build</code> \u8fd9\u6837\u7684\u5173\u952e\u5b57\u7684\u65f6\u5019\u4f1a\u89e6\u53d1\u6267\u884c\u6b64 build \u6784\u5efa\u3002</p> <p>\u7136\u540e\u70b9\u51fb\u4e0b\u9762\u7684\u9ad8\u7ea7\u53ef\u4ee5\u751f\u6210 <code>token</code>\u3002</p> <p>\u8fd9\u91cc\u7684 url \u548c token \u662f jenkins \u7684 api\uff0c\u53ef\u4ee5\u63d0\u4f9b\u7ed9 GtiLab \u4f7f\u7528\uff0c\u5728\u4ee3\u7801\u5408\u5e76/\u63d0\u4ea4<code>commit/push</code>\u4ee3\u7801\u7b49\u64cd\u4f5c\u65f6\uff0c\u901a\u77e5 Jenkins \u6267\u884c build \u64cd\u4f5c\u3002</p> <p></p> <p>\u6ce8: \u590d\u5236\u51fa URL \u548c Token\uff0c\u6211\u4eec\u540e\u9762\u914d\u7f6e Gitlab \u7684 Webhook \u4f1a\u7528\u5230\u3002</p> <p>\u7136\u540e\u5728\u4e0b\u9762\u7684\u6d41\u6c34\u7ebf\u533a\u57df\u6211\u4eec\u53ef\u4ee5\u9009\u62e9 Pipeline script \u7136\u540e\u5728\u4e0b\u9762\u6d4b\u8bd5\u6d41\u6c34\u7ebf\u811a\u672c\uff0c\u6211\u4eec\u8fd9\u91cc\u9009\u62e9 <code>Pipeline script from SCM</code>\uff0c\u610f\u601d\u5c31\u662f\u4ece\u4ee3\u7801\u4ed3\u5e93\u4e2d\u901a\u8fc7 Jenkinsfile \u6587\u4ef6\u83b7\u53d6 Pipeline script \u811a\u672c\u5b9a\u4e49\uff0c\u7136\u540e\u9009\u62e9 SCM \u6765\u6e90\u4e3a Git\uff0c\u5728\u51fa\u73b0\u7684\u5217\u8868\u4e2d\u914d\u7f6e\u4e0a\u4ed3\u5e93\u5730\u5740 http://git.k8s.local/course/devops-demo.git\uff0c\u7531\u4e8e\u6211\u4eec\u662f\u5728\u4e00\u4e2a Slave Pod \u4e2d\u53bb\u8fdb\u884c\u6784\u5efa\uff0c\u6240\u4ee5\u5982\u679c\u4f7f\u7528 SSH \u7684\u65b9\u5f0f\u53bb\u8bbf\u95ee Gitlab \u4ee3\u7801\u4ed3\u5e93\u7684\u8bdd\u5c31\u9700\u8981\u9891\u7e41\u7684\u53bb\u66f4\u65b0 SSH-KEY\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u91c7\u7528\u76f4\u63a5\u4f7f\u7528\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684\u5f62\u5f0f\u6765\u65b9\u5f0f\uff1a</p> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6709\u4e00\u4e2a\u660e\u663e\u7684\u9519\u8bef <code>Could not resolve host: git.k8s.local</code>\u63d0\u793a\u4e0d\u80fd\u89e3\u6790\u6211\u4eec\u7684 <code>GitLab</code> \u57df\u540d\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u7684\u57df\u540d\u90fd\u662f\u81ea\u5b9a\u4e49\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728 CoreDNS \u4e2d\u6dfb\u52a0\u81ea\u5b9a\u4e49\u57df\u540d\u89e3\u6790\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff08\u5982\u679c\u4f60\u7684\u57df\u540d\u662f\u5916\u7f51\u53ef\u4ee5\u6b63\u5e38\u89e3\u6790\u7684\u5c31\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u4e86\uff09\uff1a</p> <pre><code>$ kubectl edit cm coredns -n kube-system\napiVersion: v1\ndata:\n  Corefile: |\n    .:53 {\n        log\n        errors\n        health {\n          lameduck 5s\n        }\n        ready\n        hosts {  # \u6dfb\u52a0\u81ea\u5b9a\u4e49\u57df\u540d\u89e3\u6790\n          192.168.31.30 git.k8s.local\n          192.168.31.30 jenkins.k8s.local\n          192.168.31.30 harbor.k8s.local\n          fallthrough\n        }\n        kubernetes cluster.local in-addr.arpa ip6.arpa {\n           pods insecure\n           upstream\n           fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        forward . /etc/resolv.conf\n        cache 30\n        loop\n        reload\n        loadbalance\n    }\nkind: ConfigMap\n......\n</code></pre> <p>\u4fee\u6539\u5b8c\u6210\u540e\uff0c\u9694\u4e00\u5c0f\u4f1a\u513f\uff0cCoreDNS \u5c31\u4f1a\u81ea\u52a8\u70ed\u52a0\u8f7d\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u96c6\u7fa4\u5185\u8bbf\u95ee\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u57df\u540d\u4e86\u3002\u7136\u540e\u80af\u5b9a\u6ca1\u6709\u6743\u9650\uff0c\u6240\u4ee5\u9700\u8981\u914d\u7f6e\u5e10\u53f7\u8ba4\u8bc1\u4fe1\u606f\u3002</p> <p></p> <p>\u5728 <code>Credentials</code> \u533a\u57df\u70b9\u51fb\u6dfb\u52a0\u6309\u94ae\u6dfb\u52a0\u6211\u4eec\u8bbf\u95ee Gitlab \u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\uff1a</p> <p></p> <p>\u7136\u540e\u9700\u8981\u6211\u4eec\u914d\u7f6e\u7528\u4e8e\u6784\u5efa\u7684\u5206\u652f\uff0c\u5982\u679c\u6240\u6709\u7684\u5206\u652f\u6211\u4eec\u90fd\u60f3\u8981\u8fdb\u884c\u6784\u5efa\u7684\u8bdd\uff0c\u53ea\u9700\u8981\u5c06 Branch Specifier \u533a\u57df\u7559\u7a7a\u5373\u53ef\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u4e0d\u540c\u7684\u73af\u5883\u5bf9\u5e94\u7684\u5206\u652f\u624d\u9700\u8981\u6784\u5efa\uff0c\u6bd4\u5982 master\u3001dev\u3001test \u7b49\uff0c\u5e73\u65f6\u5f00\u53d1\u7684 feature \u6216\u8005 bugfix \u7684\u5206\u652f\u6ca1\u5fc5\u8981\u9891\u7e41\u6784\u5efa\uff0c\u6211\u4eec\u8fd9\u91cc\u5c31\u53ea\u914d\u7f6e master \u4e2a\u5206\u652f\u7528\u4e8e\u6784\u5efa\u3002</p> <p>\u6700\u540e\u70b9\u51fb\u4fdd\u5b58\uff0c\u81f3\u6b64\uff0cJenkins \u7684\u6301\u7eed\u96c6\u6210\u914d\u7f6e\u597d\u4e86\uff0c\u8fd8\u9700\u8981\u914d\u7f6e Gitlab \u7684 Webhook\uff0c\u7528\u4e8e\u4ee3\u7801\u63d0\u4ea4\u901a\u77e5 Jenkins\u3002\u524d\u5f80 Gitlab \u4e2d\u914d\u7f6e\u9879\u76ee <code>devops-demo</code> \u7684 <code>Webhook</code>\uff0c<code>settings -&gt; Webhooks</code>\uff0c\u586b\u5199\u4e0a\u9762\u5f97\u5230\u7684 trigger \u5730\u5740\uff1a</p> <p></p> <p>\u6211\u4eec\u8fd9\u91cc\u90fd\u662f\u81ea\u5b9a\u4e49\u7684\u57df\u540d\uff0c\u4e5f\u6ca1\u6709\u914d\u7f6e https \u670d\u52a1\uff0c\u6240\u4ee5\u8bb0\u5f97\u53d6\u6d88\u914d\u7f6e\u4e0b\u9762\u7684 \u542f\u7528SSL\u9a8c\u8bc1\u3002</p> <p>\u4fdd\u5b58\u540e\uff0c\u5982\u679c\u51fa\u73b0 <code>Urlis blocked: Requests to the local network are not allowed</code> \u8fd9\u6837\u7684\u62a5\u8b66\u4fe1\u606f\uff0c\u5219\u9700\u8981\u8fdb\u5165 GitLab Admin -&gt; \u8bbe\u7f6e -&gt; \u7f51\u7edc -&gt; \u52fe\u9009 \u5916\u53d1\u8bf7\u6c42\uff0c\u7136\u540e\u4fdd\u5b58\u914d\u7f6e\u3002</p> <p></p> <p>\u73b0\u5728\u5c31\u53ef\u4ee5\u6b63\u5e38\u4fdd\u5b58\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u70b9\u51fb \u6d4b\u8bd5 -&gt; Push Event \u6d4b\u8bd5\u662f\u5426\u53ef\u4ee5\u6b63\u5e38\u8bbf\u95ee Webhook \u5730\u5740\uff0c\u51fa\u73b0\u4e86 Hook executed successfully: HTTP 200 \u5219\u8bc1\u660e Webhook \u914d\u7f6e\u6210\u529f\u4e86\uff0c\u5426\u5219\u5c31\u9700\u8981\u68c0\u67e5\u4e0b Jenkins \u7684\u5b89\u5168\u914d\u7f6e\u662f\u5426\u6b63\u786e\u4e86\u3002</p> <p>\u7531\u4e8e\u5f53\u524d\u9879\u76ee\u4e2d\u8fd8\u6ca1\u6709 Jenkinsfile \u6587\u4ef6\uff0c\u6240\u4ee5\u89e6\u53d1\u8fc7\u540e\u4f1a\u6784\u5efa\u5931\u8d25\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u76f4\u63a5\u5728\u4ee3\u7801\u4ed3\u5e93\u6839\u76ee\u5f55\u4e0b\u9762\u6dfb\u52a0 Jenkinsfile \u6587\u4ef6\uff0c\u7528\u4e8e\u63cf\u8ff0\u6d41\u6c34\u7ebf\u6784\u5efa\u6d41\u7a0b\uff0c\u6574\u4f53\u5b9e\u73b0\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u9996\u5148\u5b9a\u4e49\u6700\u7b80\u5355\u7684\u6d41\u7a0b\uff0c\u8981\u6ce8\u610f\u8fd9\u91cc\u548c\u524d\u9762\u7684\u4e0d\u540c\u4e4b\u5904\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 podTemplate \u6765\u5b9a\u4e49\u4e0d\u540c\u9636\u6bb5\u4f7f\u7528\u7684\u7684\u5bb9\u5668\uff0c\u6709\u54ea\u4e9b\u9636\u6bb5\u5462\uff1f</p> <pre><code>Clone \u4ee3\u7801 -&gt; \u5355\u5143\u6d4b\u8bd5 -&gt; Golang \u7f16\u8bd1\u6253\u5305 -&gt; Docker \u955c\u50cf\u6784\u5efa/\u63a8\u9001 -&gt; Kubectl \u90e8\u7f72\u670d\u52a1\u3002\n</code></pre> <ul> <li> <p>Clone \u4ee3\u7801\u5728\u9ed8\u8ba4\u7684 Slave \u5bb9\u5668\u4e2d\u5373\u53ef\uff1b</p> </li> <li> <p>\u5355\u5143\u6d4b\u8bd5\u6211\u4eec\u8fd9\u91cc\u76f4\u63a5\u5ffd\u7565\uff0c\u6709\u9700\u8981\u8fd9\u4e2a\u9636\u6bb5\u7684\u540c\u5b66\u81ea\u5df1\u6dfb\u52a0\u4e0a\u5373\u53ef\uff1b</p> </li> <li> <p>Golang \u7f16\u8bd1\u6253\u5305\u80af\u5b9a\u5c31\u9700\u8981 Golang \u7684\u5bb9\u5668\u4e86\uff1b</p> </li> <li> <p>Docker \u955c\u50cf\u6784\u5efa/\u63a8\u9001\u662f\u4e0d\u662f\u5c31\u9700\u8981 Docker \u73af\u5883\u4e86\uff1b</p> </li> <li> <p>\u6700\u540e\u7684 Kubectl \u66f4\u65b0\u670d\u52a1\u662f\u4e0d\u662f\u5c31\u9700\u8981\u4e00\u4e2a\u6709 Kubectl \u7684\u5bb9\u5668\u73af\u5883\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u5c31\u53ef\u4ee5\u5f88\u7b80\u5355\u7684\u5b9a\u4e49 <code>podTemplate</code> \u4e86\uff0c\u5982\u4e0b\u5b9a\u4e49\uff1a</p> </li> </ul> <pre><code>def label = \"slave-${UUID.randomUUID().toString()}\"\n\npodTemplate(label: label, containers: [\n  containerTemplate(name: 'golang', image: 'golang:1.14.2-alpine3.11', command: 'cat', ttyEnabled: true),\n  containerTemplate(name: 'docker', image: 'docker:latest', command: 'cat', ttyEnabled: true),\n  containerTemplate(name: 'kubectl', image: 'cnych/kubectl', command: 'cat', ttyEnabled: true)\n], serviceAccount: 'jenkins', volumes: [\n  hostPathVolume(mountPath: '/home/jenkins/.kube', hostPath: '/root/.kube'),\n  hostPathVolume(mountPath: '/var/run/docker.sock', hostPath: '/var/run/docker.sock')\n]) {\n  node(label) {\n    def myRepo = checkout scm\n    def gitCommit = myRepo.GIT_COMMIT\n    def gitBranch = myRepo.GIT_BRANCH\n\n    stage('\u5355\u5143\u6d4b\u8bd5') {\n      echo \"\u6d4b\u8bd5\u9636\u6bb5\"\n    }\n\n\n    stage('\u4ee3\u7801\u7f16\u8bd1\u6253\u5305') {\n      container('golang') {\n        echo \"\u4ee3\u7801\u7f16\u8bd1\u6253\u5305\u9636\u6bb5\"\n      }\n    }\n\n\n    stage('\u6784\u5efa Docker \u955c\u50cf') {\n      container('docker') {\n        echo \"\u6784\u5efa Docker \u955c\u50cf\u9636\u6bb5\"\n      }\n    }\n\n\n    stage('\u8fd0\u884c Kubectl') {\n      container('kubectl') {\n        echo \"\u67e5\u770b K8S \u96c6\u7fa4 Pod \u5217\u8868\"\n        sh \"kubectl get pods\"\n      }\n    }\n  }\n}\n</code></pre> <p>\u76f4\u63a5\u5728 <code>podTemplate</code> \u91cc\u9762\u5b9a\u4e49\u6bcf\u4e2a\u9636\u6bb5\u9700\u8981\u7528\u5230\u7684\u5bb9\u5668\uff0c<code>volumes</code> \u91cc\u9762\u5c06\u6211\u4eec\u9700\u8981\u7528\u5230\u7684 <code>docker.sock</code>\u6587\u4ef6\uff0c\u9700\u8981\u6ce8\u610f\u7684\u6211\u4eec\u4f7f\u7528\u7684 label \u6807\u7b7e\u662f\u662f\u4e00\u4e2a\u968f\u673a\u751f\u6210\u7684\uff0c\u8fd9\u6837\u6709\u4e00\u4e2a\u597d\u5904\u5c31\u662f\u6709\u591a\u4e2a\u4efb\u52a1\u6765\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u540c\u65f6\u6784\u5efa\u4e86\u3002</p> <p>\u6b63\u5e38\u6765\u8bf4\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u8bbf\u95ee\u96c6\u7fa4\u7684 <code>kubeconfig</code> \u6587\u4ef6\u62f7\u8d1d\u5230 kubectl \u5bb9\u5668\u7684 <code>~/.kube/config</code> \u6587\u4ef6\u4e0b\u9762\u53bb\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u5bb9\u5668\u4e2d\u8bbf\u95ee Kubernetes \u96c6\u7fa4\u4e86\uff0c\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u6784\u5efa\u662f\u5728 <code>Slave Pod</code> \u4e2d\u53bb\u6784\u5efa\u7684\uff0cPod \u5c31\u5f88\u6709\u53ef\u80fd\u6bcf\u6b21\u8c03\u5ea6\u5230\u4e0d\u540c\u7684\u8282\u70b9\u53bb\uff0c\u8fd9\u5c31\u9700\u8981\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6709 <code>kubeconfig</code>\u6587\u4ef6\u624d\u80fd\u6302\u8f7d\u6210\u529f\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u53e6\u5916\u4e00\u79cd\u65b9\u5f0f\u3002</p> <p>\u901a\u8fc7\u5c06 kubeconfig \u6587\u4ef6\u901a\u8fc7\u51ed\u8bc1\u4e0a\u4f20\u5230 Jenkins \u4e2d\uff0c\u7136\u540e\u5728 Jenkinsfile \u4e2d\u8bfb\u53d6\u5230\u8fd9\u4e2a\u6587\u4ef6\u540e\uff0c\u62f7\u8d1d\u5230 kubectl \u5bb9\u5668\u4e2d\u7684 <code>~/.kube/config</code> \u6587\u4ef6\u4e2d\uff0c\u8fd9\u6837\u540c\u6837\u5c31\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528 kubectl \u8bbf\u95ee\u96c6\u7fa4\u4e86\u3002\u5728 Jenkins \u9875\u9762\u4e2d\u6dfb\u52a0\u51ed\u636e\uff0c\u9009\u62e9 <code>Secret file</code> \u7c7b\u578b\uff0c\u7136\u540e\u4e0a\u4f20 <code>kubeconfig</code> \u6587\u4ef6\uff0c\u6307\u5b9a ID \u5373\u53ef\uff1a</p> <p></p> <p>\u7136\u540e\u5728 Jenkinsfile \u7684 kubectl \u5bb9\u5668\u4e2d\u8bfb\u53d6\u4e0a\u9762\u6dfb\u52a0\u7684 Secret file \u6587\u4ef6\uff0c\u62f7\u8d1d\u5230 <code>~/.kube/config</code> \u5373\u53ef\uff1a</p> <pre><code>stage('\u8fd0\u884c Kubectl') {\n  container('kubectl') {\n    withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {\n      echo \"\u67e5\u770b K8S \u96c6\u7fa4 Pod \u5217\u8868\"\n      sh \"mkdir -p ~/.kube &amp;&amp; cp ${KUBECONFIG} ~/.kube/config\"\n      sh \"kubectl get pods\"\n    }\n  }\n}\n</code></pre> <p>\u73b0\u5728\u6211\u4eec\u76f4\u63a5\u5c06 Jenkinsfile \u6587\u4ef6\u63d0\u4ea4\u5230 GitLab \u4ee3\u7801\u4ed3\u5e93\u4e2d\uff0c\u6b63\u5e38\u6765\u8bf4\u5c31\u53ef\u4ee5\u89e6\u53d1 Jenkins \u7684\u6784\u5efa\u4e86\uff1a</p> <pre><code>$ kubectl get pods -n kube-ops\nNAME                                                     READY   STATUS              RESTARTS   AGE\njenkins-587b78f5cd-47hf8                                 1/1     Running             2          5d\nslave-e3e34e24-721a-4c32-a83e-19033e244b9d-2h6wd-tjkkf   0/4     ContainerCreating   0          38s\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u751f\u6210\u7684 slave Pod \u5305\u542b\u4e864\u4e2a\u5bb9\u5668\uff0c\u5c31\u662f\u6211\u4eec\u5728 podTemplate \u6307\u5b9a\u7684\u52a0\u4e0a slave \u7684\u955c\u50cf\uff0c\u8fd0\u884c\u5b8c\u6210\u540e\u8be5 Pod \u4e5f\u4f1a\u81ea\u52a8\u9500\u6bc1\u3002</p> <p></p>"},{"location":"chap12/2K8s_pipeline/#pipeline","title":"Pipeline","text":"<p>\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u5b9e\u73b0\u5177\u4f53\u7684\u6d41\u6c34\u7ebf\u3002</p> <p>\u7b2c\u4e00\u4e2a\u9636\u6bb5\uff1a\u5355\u5143\u6d4b\u8bd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e2a\u9636\u6bb5\u662f\u8fd0\u884c\u4e00\u4e9b\u5355\u5143\u6d4b\u8bd5\u6216\u8005\u9759\u6001\u4ee3\u7801\u5206\u6790\u7684\u811a\u672c\uff0c\u6211\u4eec\u8fd9\u91cc\u76f4\u63a5\u5ffd\u7565\u3002</p> <p>\u7b2c\u4e8c\u4e2a\u9636\u6bb5\uff1a\u4ee3\u7801\u7f16\u8bd1\u6253\u5305\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u662f\u5728\u4e00\u4e2a golang \u7684\u5bb9\u5668\u4e2d\u6765\u6267\u884c\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u8be5\u5bb9\u5668\u4e2d\u83b7\u53d6\u5230\u4ee3\u7801\uff0c\u7136\u540e\u5728\u4ee3\u7801\u76ee\u5f55\u4e0b\u9762\u6267\u884c\u6253\u5305\u547d\u4ee4\u5373\u53ef\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>\nstage('\u4ee3\u7801\u7f16\u8bd1\u6253\u5305') {\n  try {\n    container('golang') {\n      echo \"2.\u4ee3\u7801\u7f16\u8bd1\u6253\u5305\u9636\u6bb5\"\n      sh \"\"\"\n        export GOPROXY=https://goproxy.cn\n        GOOS=linux GOARCH=amd64 go build -v -o demo-app\n        \"\"\"\n    }\n  } catch (exc) {\n    println \"\u6784\u5efa\u5931\u8d25 - ${currentBuild.fullDisplayName}\"\n    throw(exc)\n  }\n</code></pre> <p>\u7b2c\u4e09\u4e2a\u9636\u6bb5\uff1a\u6784\u5efa Docker \u955c\u50cf\uff0c\u8981\u6784\u5efa Docker \u955c\u50cf\uff0c\u5c31\u9700\u8981\u63d0\u4f9b\u955c\u50cf\u7684\u540d\u79f0\u548c tag\uff0c\u8981\u63a8\u9001\u5230 Harbor \u4ed3\u5e93\uff0c\u5c31\u9700\u8981\u63d0\u4f9b\u767b\u5f55\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u5230\u4e86 <code>withCredentials</code> \u65b9\u6cd5\uff0c\u5728\u91cc\u9762\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a<code>credentialsId</code> \u4e3a <code>dockerhub</code> \u7684\u8ba4\u8bc1\u4fe1\u606f\uff0c\u5982\u4e0b\uff1a</p> <pre><code>stage('\u6784\u5efa Docker \u955c\u50cf') {\n  withCredentials([[$class: 'UsernamePasswordMultiBinding',\n    credentialsId: 'docker-auth',\n    usernameVariable: 'DOCKER_USER',\n    passwordVariable: 'DOCKER_PASSWORD']]) {\n      container('docker') {\n        echo \"3. \u6784\u5efa Docker \u955c\u50cf\u9636\u6bb5\"\n        sh \"\"\"\n          docker login ${registryUrl} -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}\n          docker build -t ${image} .\n          docker push ${image}\n          \"\"\"\n      }\n  }\n}\n</code></pre> <p>\u5176\u4e2d <code>${image}</code>\u548c <code>${imageTag}</code>\u6211\u4eec\u53ef\u4ee5\u5728\u4e0a\u9762\u5b9a\u4e49\u6210\u5168\u5c40\u53d8\u91cf\uff1a</p> <pre><code>// \u83b7\u53d6 git commit id \u4f5c\u4e3a\u955c\u50cf\u6807\u7b7e\ndef imageTag = sh(script: \"git rev-parse --short HEAD\", returnStdout: true).trim()\n// \u4ed3\u5e93\u5730\u5740\ndef registryUrl = \"harbor.k8s.local\"\ndef imageEndpoint = \"course/devops-demo\"\n// \u955c\u50cf\ndef image = \"${registryUrl}/${imageEndpoint}:${imageTag}\"\n</code></pre> <p>\u8fd9\u91cc\u5b9a\u4e49\u7684\u955c\u50cf\u540d\u79f0\u4e3a <code>course/devops-demo</code>\uff0c\u6240\u4ee5\u9700\u8981\u63d0\u524d\u5728 Harbor \u4e2d\u65b0\u5efa\u4e00\u4e2a\u540d\u4e3a course \u7684\u79c1\u6709\u9879\u76ee\uff1a</p> <p></p> <p>Docker \u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u4fe1\u606f\u5219\u9700\u8981\u901a\u8fc7\u51ed\u636e\u6765\u8fdb\u884c\u6dfb\u52a0\uff0c\u8fdb\u5165 <code>jenkins \u9996\u9875 -&gt; \u5de6\u4fa7\u83dc\u5355\u51ed\u636e -&gt; \u6dfb\u52a0\u51ed\u636e</code>\uff0c\u9009\u62e9\u7528\u6237\u540d\u548c\u5bc6\u7801\u7c7b\u578b\u7684\uff0c\u5176\u4e2d ID \u4e00\u5b9a\u8981\u548c\u4e0a\u9762\u7684 credentialsId \u7684\u503c\u4fdd\u6301\u4e00\u81f4\uff1a</p> <p></p> <p>\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u7684\u662f <code>Docker IN Docke</code>r \u6a21\u5f0f\u6765\u6784\u5efa Docker \u955c\u50cf\uff0c\u901a\u8fc7\u5c06\u5bbf\u4e3b\u673a\u7684 <code>docker.sock</code> \u6587\u4ef6\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\u6765\u5171\u4eab <code>Docker Daemon</code>\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u9700\u8981\u63d0\u524d\u5728\u8282\u70b9\u4e0a\u914d\u7f6e\u5bf9 Harbor \u955c\u50cf\u4ed3\u5e93\u7684\u4fe1\u4efb:</p> <pre><code>$ vi /etc/docker/daemon.json\n{\n  \"insecure-registries\" : [  # \u914d\u7f6e\u5ffd\u7565 Harobr \u955c\u50cf\u4ed3\u5e93\u7684\u8bc1\u4e66\u6821\u9a8c\n    \"harbor.k8s.local\"\n  ],\n  \"storage-driver\": \"overlay2\",\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"registry-mirrors\" : [\n    \"https://ot2k4d59.mirror.aliyuncs.com/\"\n  ],\n}\n\n$ systemctl daemon-reload\n$ systemctl restart docker\n</code></pre> <p>\u914d\u7f6e\u751f\u6548\u8fc7\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6b63\u5e38\u5728\u6d41\u6c34\u7ebf\u4e2d\u53bb\u64cd\u4f5c Docker \u547d\u4ee4\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u5982\u4e0b\u6240\u793a\u7684\u9519\u8bef\uff1a</p> <p></p> <p>\u73b0\u5728\u955c\u50cf\u6211\u4eec\u90fd\u5df2\u7ecf\u63a8\u9001\u5230\u4e86 Harbor \u4ed3\u5e93\u4e2d\u53bb\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u90e8\u7f72\u5e94\u7528\u5230 Kubernetes \u96c6\u7fa4\u4e2d\u4e86\uff0c\u5f53\u7136\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 kubectl \u5de5\u5177\u53bb\u64cd\u4f5c YAML \u6587\u4ef6\u6765\u90e8\u7f72\uff0c\u6211\u4eec\u8fd9\u91cc\u7684\u793a\u4f8b\uff0c\u7f16\u5199\u4e86\u4e00\u4e2a Helm Chart \u6a21\u677f\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 Helm \u6765\u8fdb\u884c\u90e8\u7f72\uff0c\u6240\u4ee5\u5f53\u7136\u5c31\u9700\u8981\u4e00\u4e2a\u5177\u6709 helm \u547d\u4ee4\u7684\u5bb9\u5668\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 <code>cnych/helm</code> \u8fd9\u4e2a\u955c\u50cf\uff0c\u8fd9\u4e2a\u955c\u50cf\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u5c31\u662f\u7b80\u5355\u7684\u5c06 helm \u4e8c\u8fdb\u5236\u6587\u4ef6\u4e0b\u8f7d\u4e0b\u6765\u653e\u5230 PATH \u8def\u5f84\u4e0b\u9762\u53bb\u5373\u53ef\uff0c\u5bf9\u5e94\u7684 Dockerfile \u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff0c\u5927\u5bb6\u4e5f\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u6765\u8fdb\u884c\u5b9a\u5236\uff1a</p> <pre><code>FROM alpine\nMAINTAINER cnych &lt;icnych@gmail.com&gt;\nARG HELM_VERSION=\"v3.2.1\"\nRUN apk add --update ca-certificates \\\n &amp;&amp; apk add --update -t deps wget git openssl bash \\\n &amp;&amp; wget https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz \\\n &amp;&amp; tar -xvf helm-${HELM_VERSION}-linux-amd64.tar.gz \\\n &amp;&amp; mv linux-amd64/helm /usr/local/bin \\\n &amp;&amp; apk del --purge deps \\\n &amp;&amp; rm /var/cache/apk/* \\\n &amp;&amp; rm -f /helm-${HELM_VERSION}-linux-amd64.tar.gz\nENTRYPOINT [\"helm\"]\nCMD [\"help\"]\n</code></pre> <p>\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u7684\u662f Helm3 \u7248\u672c\uff0c\u6240\u4ee5\u8981\u60f3\u7528 Helm \u6765\u90e8\u7f72\u5e94\u7528\uff0c\u540c\u6837\u7684\u9700\u8981\u914d\u7f6e\u4e00\u4e2a kubeconfig \u6587\u4ef6\u5728\u5bb9\u5668\u4e2d\uff0c\u8fd9\u6837\u624d\u80fd\u8bbf\u95ee\u5230 Kubernetes \u96c6\u7fa4\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06 \u8fd0\u884c Kubectl \u7684\u9636\u6bb5\u505a\u5982\u4e0b\u66f4\u6539\uff1a</p> <pre><code>stage('\u8fd0\u884c Helm') {\n  withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {\n    container('helm') {\n      sh \"mkdir -p ~/.kube &amp;&amp; cp ${KUBECONFIG} ~/.kube/config\"\n      echo \"4.\u5f00\u59cb Helm \u90e8\u7f72\"\n      helmDeploy(\n          debug       : false,\n          name        : \"devops-demo\",\n          chartDir    : \"./helm\",\n          namespace   : \"kube-ops\",\n          valuePath   : \"./helm/my-value.yaml\",\n          imageTag    : \"${imageTag}\"\n      )\n      echo \"[INFO] Helm \u90e8\u7f72\u5e94\u7528\u6210\u529f...\"\n    }\n  }\n</code></pre> <p>\u5176\u4e2d <code>helmDeploy</code>\u65b9\u6cd5\u53ef\u4ee5\u5728\u5168\u5c40\u4e2d\u8fdb\u884c\u5b9a\u4e49\u5c01\u88c5\uff1a</p> <pre><code>def helmLint(String chartDir) {\n    println \"\u6821\u9a8c chart \u6a21\u677f\"\n    sh \"helm lint ${chartDir}\"\n}\n\ndef helmDeploy(Map args) {\n    if (args.debug) {\n        println \"Debug \u5e94\u7528\"\n        sh \"helm upgrade --dry-run --debug --install ${args.name} ${args.chartDir} -f ${args.valuePath} --set image.tag=${args.imageTag} --namespace ${args.namespace}\"\n    } else {\n        println \"\u90e8\u7f72\u5e94\u7528\"\n        sh \"helm upgrade --install ${args.name} ${args.chartDir} -f ${args.valuePath} --set image.tag=${args.imageTag} --namespace ${args.namespace}\"\n        echo \"\u5e94\u7528 ${args.name} \u90e8\u7f72\u6210\u529f. \u53ef\u4ee5\u4f7f\u7528 helm status ${args.name} \u67e5\u770b\u5e94\u7528\u72b6\u6001\"\n    }\n}\n</code></pre> <p>\u6211\u4eec\u5728 Chart \u6a21\u677f\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a <code>my-values.yaml</code> \u7684 <code>Values</code> \u6587\u4ef6\uff0c\u7528\u6765\u8986\u76d6\u9ed8\u8ba4\u7684\u503c\uff0c\u6bd4\u5982\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u4f7f\u7528 Harbor \u79c1\u6709\u4ed3\u5e93\u7684\u955c\u50cf\uff0c\u5219\u5fc5\u7136\u9700\u8981\u5b9a\u4e49 <code>imagePullSecrets</code>\uff0c\u6240\u4ee5\u9700\u8981\u5728\u76ee\u6807 <code>namespace</code> \u4e0b\u9762\u521b\u5efa\u4e00\u4e2a <code>Harbor</code>\u767b\u5f55\u8ba4\u8bc1\u7684 <code>Secret</code>\u5bf9\u8c61\uff1a</p> <pre><code>$ kubectl create secret docker-registry harbor-auth --docker-server=harbor.k8s.local --docker-username=admin --docker-password=Harbor12345 --docker-email=admin@admin.com --namespace kube-ops\nsecret/harbor-auth created\n</code></pre> <p>\u7136\u540e\u7531\u4e8e\u6bcf\u6b21\u6211\u4eec\u6784\u5efa\u7684\u955c\u50cf tag \u90fd\u4f1a\u53d8\u5316\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 <code>--set</code> \u6765\u52a8\u6001\u8bbe\u7f6e\u3002</p> <p>\u4e0d\u8fc7\u9700\u8981\u8bb0\u5f97\u5728\u4e0a\u9762\u5bb9\u5668\u6a21\u677f\u4e2d\u6dfb\u52a0 helm \u5bb9\u5668\uff1a</p> <pre><code>containerTemplate(name: 'helm', image: 'cnych/helm', command: 'cat', ttyEnabled: true)\n</code></pre> <p>\u5bf9\u4e8e\u4e0d\u540c\u7684\u73af\u5883\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684 values \u6587\u4ef6\u6765\u8fdb\u884c\u533a\u5206\uff0c\u8fd9\u6837\u5f53\u6211\u4eec\u90e8\u7f72\u7684\u65f6\u5019\u53ef\u4ee5\u624b\u52a8\u9009\u62e9\u90e8\u7f72\u5230\u67d0\u4e2a\u73af\u5883\u4e0b\u9762\u53bb\u3002</p> <pre><code>\ndef userInput = input(\n  id: 'userInput',\n  message: '\u9009\u62e9\u4e00\u4e2a\u90e8\u7f72\u73af\u5883',\n  parameters: [\n      [\n          $class: 'ChoiceParameterDefinition',\n          choices: \"Dev\\nQA\\nProd\",\n          name: 'Env'\n      ]\n  ]\n)\necho \"\u90e8\u7f72\u5e94\u7528\u5230 ${userInput} \u73af\u5883\"\n// \u9009\u62e9\u4e0d\u540c\u73af\u5883\u4e0b\u9762\u7684 values \u6587\u4ef6\nif (userInput == \"Dev\") {\n    // deploy dev stuff\n} else if (userInput == \"QA\"){\n    // deploy qa stuff\n} else {\n    // deploy prod stuff\n}\n// \u6839\u636e values \u6587\u4ef6\u518d\u53bb\u4f7f\u7528 Helm \u8fdb\u884c\u90e8\u7f72\n</code></pre> <p>\u7136\u540e\u53bb\u6784\u5efa\u5e94\u7528\u7684\u65f6\u5019\uff0c\u5728 Helm \u90e8\u7f72\u9636\u6bb5\u5c31\u4f1a\u770b\u5230 Stage View \u754c\u9762\u51fa\u73b0\u4e86\u6682\u505c\u7684\u60c5\u51b5\uff0c\u9700\u8981\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u73af\u5883\u6765\u8fdb\u884c\u90e8\u7f72\uff1a</p> <p></p> <p>\u9009\u62e9\u5b8c\u6210\u540e\u518d\u53bb\u90e8\u7f72\u5e94\u7528\u3002\u6700\u540e\u6211\u4eec\u8fd8\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a kubectl \u5bb9\u5668\u6765\u67e5\u770b\u5e94\u7528\u7684\u76f8\u5173\u8d44\u6e90\u5bf9\u8c61\uff1a</p> <pre><code>stage('\u8fd0\u884c Kubectl') {\n  withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {\n    container('kubectl') {\n      sh \"mkdir -p ~/.kube &amp;&amp; cp ${KUBECONFIG} ~/.kube/config\"\n      echo \"5.\u67e5\u770b\u5e94\u7528\"\n      sh \"kubectl get all -n kube-ops -l app=devops-demo\"\n    }\n  }\n}\n</code></pre> <p>\u6709\u65f6\u5019\u6211\u4eec\u90e8\u7f72\u7684\u5e94\u7528\u5373\u4f7f\u6709\u5f88\u591a\u6d4b\u8bd5\uff0c\u4f46\u662f\u4e5f\u96be\u514d\u4f1a\u51fa\u73b0\u4e00\u4e9b\u9519\u8bef\uff0c\u8fd9\u4e2a\u65f6\u5019\u5982\u679c\u6211\u4eec\u662f\u90e8\u7f72\u5230\u7ebf\u4e0a\u7684\u8bdd\uff0c\u5c31\u9700\u8981\u8981\u6c42\u80fd\u591f\u7acb\u5373\u8fdb\u884c\u56de\u6eda\uff0c\u8fd9\u91cc\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u4f7f\u7528 Helm \u6765\u975e\u5e38\u65b9\u4fbf\u7684\u64cd\u4f5c\uff0c\u6dfb\u52a0\u5982\u4e0b\u4e00\u4e2a\u56de\u6eda\u7684\u9636\u6bb5\uff1a</p> <pre><code>stage('\u5feb\u901f\u56de\u6eda?') {\n  withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {\n    container('helm') {\n      sh \"mkdir -p ~/.kube &amp;&amp; cp ${KUBECONFIG} ~/.kube/config\"\n      def userInput = input(\n        id: 'userInput',\n        message: '\u662f\u5426\u9700\u8981\u5feb\u901f\u56de\u6eda\uff1f',\n        parameters: [\n            [\n                $class: 'ChoiceParameterDefinition',\n                choices: \"Y\\nN\",\n                name: '\u56de\u6eda?'\n            ]\n        ]\n      )\n      if (userInput == \"Y\") {\n        sh \"helm rollback devops-demo --namespace kube-ops\"\n      }\n    }\n  }\n}\n</code></pre> <p>\u6700\u540e\u4e00\u6761\u5b8c\u6574\u7684\u6d41\u6c34\u7ebf\u5c31\u5b8c\u6210\u4e86\u3002</p> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u5728\u672c\u5730\u52a0\u4e0a\u5e94\u7528\u57df\u540d <code>devops-demo.k8s.local</code> \u7684\u6620\u5c04\u5c31\u53ef\u4ee5\u8bbf\u95ee\u5e94\u7528\u4e86\uff1a</p> <pre><code>$ curl http://devops-demo.k8s.local\n{\"msg\":\"Hello DevOps On Kubernetes\"}\n</code></pre> <p>\u5b8c\u6574\u7684 Jenkinsfile \u6587\u4ef6\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>def label = \"slave-${UUID.randomUUID().toString()}\"\n\ndef helmLint(String chartDir) {\n    println \"\u6821\u9a8c chart \u6a21\u677f\"\n    sh \"helm lint ${chartDir}\"\n}\n\ndef helmDeploy(Map args) {\n    if (args.debug) {\n        println \"Debug \u5e94\u7528\"\n        sh \"helm upgrade --dry-run --debug --install ${args.name} ${args.chartDir} -f ${args.valuePath} --set image.tag=${args.imageTag} --namespace ${args.namespace}\"\n    } else {\n        println \"\u90e8\u7f72\u5e94\u7528\"\n        sh \"helm upgrade --install ${args.name} ${args.chartDir} -f ${args.valuePath} --set image.tag=${args.imageTag} --namespace ${args.namespace}\"\n        echo \"\u5e94\u7528 ${args.name} \u90e8\u7f72\u6210\u529f. \u53ef\u4ee5\u4f7f\u7528 helm status ${args.name} \u67e5\u770b\u5e94\u7528\u72b6\u6001\"\n    }\n}\n\npodTemplate(label: label, containers: [\n  containerTemplate(name: 'golang', image: 'golang:1.14.2-alpine3.11', command: 'cat', ttyEnabled: true),\n  containerTemplate(name: 'docker', image: 'docker:latest', command: 'cat', ttyEnabled: true),\n  containerTemplate(name: 'helm', image: 'cnych/helm', command: 'cat', ttyEnabled: true),\n  containerTemplate(name: 'kubectl', image: 'cnych/kubectl', command: 'cat', ttyEnabled: true)\n], serviceAccount: 'jenkins', volumes: [\n  hostPathVolume(mountPath: '/var/run/docker.sock', hostPath: '/var/run/docker.sock')\n]) {\n  node(label) {\n    def myRepo = checkout scm\n    // \u83b7\u53d6 git commit id \u4f5c\u4e3a\u955c\u50cf\u6807\u7b7e\n    def imageTag = sh(script: \"git rev-parse --short HEAD\", returnStdout: true).trim()\n    // \u4ed3\u5e93\u5730\u5740\n    def registryUrl = \"harbor.k8s.local\"\n    def imageEndpoint = \"course/devops-demo\"\n    // \u955c\u50cf\n    def image = \"${registryUrl}/${imageEndpoint}:${imageTag}\"\n\n    stage('\u5355\u5143\u6d4b\u8bd5') {\n      echo \"\u6d4b\u8bd5\u9636\u6bb5\"\n    }\n    stage('\u4ee3\u7801\u7f16\u8bd1\u6253\u5305') {\n      try {\n        container('golang') {\n          echo \"2.\u4ee3\u7801\u7f16\u8bd1\u6253\u5305\u9636\u6bb5\"\n          sh \"\"\"\n            export GOPROXY=https://goproxy.cn\n            GOOS=linux GOARCH=amd64 go build -v -o demo-app\n            \"\"\"\n        }\n      } catch (exc) {\n        println \"\u6784\u5efa\u5931\u8d25 - ${currentBuild.fullDisplayName}\"\n        throw(exc)\n      }\n    }\n    stage('\u6784\u5efa Docker \u955c\u50cf') {\n      withCredentials([[$class: 'UsernamePasswordMultiBinding',\n        credentialsId: 'docker-auth',\n        usernameVariable: 'DOCKER_USER',\n        passwordVariable: 'DOCKER_PASSWORD']]) {\n          container('docker') {\n            echo \"3. \u6784\u5efa Docker \u955c\u50cf\u9636\u6bb5\"\n            sh \"\"\"\n              cat /etc/resolv.conf\n              docker login ${registryUrl} -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}\n              docker build -t ${image} .\n              docker push ${image}\n              \"\"\"\n          }\n      }\n    }\n    stage('\u8fd0\u884c Helm') {\n      withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {\n        container('helm') {\n          sh \"mkdir -p ~/.kube &amp;&amp; cp ${KUBECONFIG} ~/.kube/config\"\n          echo \"4.\u5f00\u59cb Helm \u90e8\u7f72\"\n          def userInput = input(\n            id: 'userInput',\n            message: '\u9009\u62e9\u4e00\u4e2a\u90e8\u7f72\u73af\u5883',\n            parameters: [\n                [\n                    $class: 'ChoiceParameterDefinition',\n                    choices: \"Dev\\nQA\\nProd\",\n                    name: 'Env'\n                ]\n            ]\n          )\n          echo \"\u90e8\u7f72\u5e94\u7528\u5230 ${userInput} \u73af\u5883\"\n          // \u9009\u62e9\u4e0d\u540c\u73af\u5883\u4e0b\u9762\u7684 values \u6587\u4ef6\n          if (userInput == \"Dev\") {\n              // deploy dev stuff\n          } else if (userInput == \"QA\"){\n              // deploy qa stuff\n          } else {\n              // deploy prod stuff\n          }\n          helmDeploy(\n              debug       : false,\n              name        : \"devops-demo\",\n              chartDir    : \"./helm\",\n              namespace   : \"kube-ops\",\n              valuePath   : \"./helm/my-values.yaml\",\n              imageTag    : \"${imageTag}\"\n          )\n        }\n      }\n    }\n    stage('\u8fd0\u884c Kubectl') {\n      withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {\n        container('kubectl') {\n          sh \"mkdir -p ~/.kube &amp;&amp; cp ${KUBECONFIG} ~/.kube/config\"\n          echo \"5.\u67e5\u770b\u5e94\u7528\"\n          sh \"kubectl get all -n kube-ops -l app=devops-demo\"\n        }\n      }\n    }\n    stage('\u5feb\u901f\u56de\u6eda?') {\n      withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {\n        container('helm') {\n          sh \"mkdir -p ~/.kube &amp;&amp; cp ${KUBECONFIG} ~/.kube/config\"\n          def userInput = input(\n            id: 'userInput',\n            message: '\u662f\u5426\u9700\u8981\u5feb\u901f\u56de\u6eda\uff1f',\n            parameters: [\n                [\n                    $class: 'ChoiceParameterDefinition',\n                    choices: \"Y\\nN\",\n                    name: '\u56de\u6eda?'\n                ]\n            ]\n          )\n          if (userInput == \"Y\") {\n            sh \"helm rollback devops-demo --namespace kube-ops\"\n          }\n        }\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"chap13/1jmeter/","title":"\u7b2c\u4e00\u8282 Jmeter &amp; Ant \u81ea\u52a8\u5316\u6d4b\u8bd5","text":""},{"location":"chap13/1jmeter/#1jmeter","title":"1\u3001Jmeter \u63a5\u53e3\u6d4b\u8bd5\u751f\u6210\u62a5\u544a","text":""},{"location":"chap13/1jmeter/#1-1","title":"1-1 \u63a5\u53e3","text":"<ul> <li>\u63a5\u53e3\u6d4b\u8bd5\u5b9a\u4e49\u4e3a\u4e00\u79cd\u8f6f\u4ef6\u6d4b\u8bd5\u7c7b\u578b\uff0c\u7528\u4e8e\u9a8c\u8bc1\u4e24\u4e2a\u4e0d\u540c\u8f6f\u4ef6\u7cfb\u7edf\u4e4b\u95f4\u7684\u901a\u4fe1\u662f\u5426\u6b63\u786e\u5b8c\u6210\u3002 </li> <li>\u96c6\u6210\u4e24\u4e2a\u7ec4\u4ef6\u7684\u8fde\u63a5\u79f0\u4e3a\u63a5\u53e3\u3002\u8ba1\u7b97\u673a\u4e16\u754c\u4e2d\u7684\u6b64\u63a5\u53e3\u53ef\u4ee5\u662fAPI\uff0cWeb\u670d\u52a1\u7b49\u4e4b\u7c7b\u7684\u4e1c\u897f\u3002\u8fd9\u4e9b\u8fde\u63a5\u670d\u52a1\u6216\u63a5\u53e3\u7684\u6d4b\u8bd5\u79f0\u4e3a\u63a5\u53e3\u6d4b\u8bd5\u3002 </li> <li>\u63a5\u53e3\u5b9e\u9645\u4e0a\u662f\u7531\u4e00\u7ec4\u547d\u4ee4\uff0c\u6d88\u606f\u548c\u5176\u4ed6\u5141\u8bb8\u8bbe\u5907\u4e0e\u7528\u6237\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u7684\u5c5e\u6027\u7ec4\u6210\u7684\u8f6f\u4ef6\u3002 </li> </ul>"},{"location":"chap13/1jmeter/#1-2-jmeter","title":"1-2 \u5b89\u88c5 jmeter","text":"<ul> <li>wget</li> <li>tar zxf</li> <li>export</li> <li>source</li> </ul> <p>Mac \u5b89\u88c5</p> <pre><code>brew install jmeter\n\nbrew upgrade jmeter\n</code></pre> <p>Intall Java11 on mac</p> <pre><code>brew tap homebrew/cask-versions\nbrew cask install java11\n\n brew cask install java11\nUpdating Homebrew...\n==&gt; Downloading https://download.oracle.com/java/GA/jdk11/9/GPL/openjdk-11.0.2_osx-x64_bin.tar.gz\n######################################################################## 100.0%\n==&gt; Verifying SHA-256 checksum for Cask 'java11'.\n==&gt; Installing Cask java11\n==&gt; Moving Generic Artifact 'jdk-11.0.2.jdk' to '/Library/Java/JavaVirtualMachines/openjdk-11.0.2.jdk'.\nPassword:\n\ud83c\udf7a  java11 was successfully installed!\n</code></pre> <pre><code>$ sudo vim .bash_profile\n\nexport JAVA_11_HOME=$(/usr/libexec/java_home -v11)\nalias java11='export JAVA_HOME=$JAVA_11_HOME'\n\njava11\n</code></pre> <pre><code>source .bash_profile\n\n$ java -version\nopenjdk version \"11.0.2\" 2019-01-15\nOpenJDK Runtime Environment 18.9 (build 11.0.2+9)\nOpenJDK 64-Bit Server VM 18.9 (build 11.0.2+9, mixed mode)\n</code></pre> <pre><code>jmeter\n</code></pre> <p></p> <p>\u5bfc\u5165<code>blog.jmx</code></p> <p>Run the script: \u6d4b\u8bd5\u767e\u5ea6</p> <p></p> <p>Run the script: \u6d4b\u8bd5\u63a5\u53e3</p> <p></p> <p>Centos \u5b89\u88c5</p> <pre><code>$ wget https://downloads.apache.org//jmeter/binaries/apache-jmeter-5.3.tgz\n\n$ sudo tar zxf apache-jmeter-5.3.tgz -C /opt/\n$ sudo vim /etc/profile.d/jmeter.sh\n\nexport JMETER_HOME=/opt/apache-jmeter-5.3\nexport PATH=$JMETER_HOME/bin:$PATH\n\n$ sudo chmod +x /etc/profile.d/jmeter.sh\n\nsource /etc/profile.d/jmeter.sh\n\n$ jmeter --help\nOpenJDK 64-Bit Server VM warning: If the number of processors is expected to increase from one, then you should configure the number of parallel GC threads appropriately using -XX:ParallelGCThreads=N\n    _    ____   _    ____ _   _ _____       _ __  __ _____ _____ _____ ____\n   / \\  |  _ \\ / \\  / ___| | | | ____|     | |  \\/  | ____|_   _| ____|  _ \\\n  / _ \\ | |_) / _ \\| |   | |_| |  _|    _  | | |\\/| |  _|   | | |  _| | |_) |\n / ___ \\|  __/ ___ \\ |___|  _  | |___  | |_| | |  | | |___  | | | |___|  _ &lt;\n/_/   \\_\\_| /_/   \\_\\____|_| |_|_____|  \\___/|_|  |_|_____| |_| |_____|_| \\_\\ 5.3\n\nCopyright (c) 1999-2020 The Apache Software Foundation\n\n\nTo list all command line options, open a command prompt and type:\n\njmeter.bat(Windows)/jmeter.sh(Linux) -?\n\n--------------------------------------------------\n\nTo run Apache JMeter in GUI mode, open a command prompt and type:\n\njmeter.bat(Windows)/jmeter.sh(Linux) [-p property-file]\n\n--------------------------------------------------\n\nTo run Apache JMeter in NON_GUI mode:\nOpen a command prompt (or Unix shell) and type:\n\njmeter.bat(Windows)/jmeter.sh(Linux) -n -t test-file [-p property-file] [-l results-file] [-j log-file]\n\n--------------------------------------------------\n\nTo run Apache JMeter in NON_GUI mode and generate a report at end :\nOpen a command prompt (or Unix shell) and type:\n\njmeter.bat(Windows)/jmeter.sh(Linux) -n -t test-file [-p property-file] [-l results-file] [-j log-file] -e -o [Path to output folder]\n\n--------------------------------------------------\nTo generate a Report from existing CSV file:\nOpen a command prompt (or Unix shell) and type:\n\njmeter.bat(Windows)/jmeter.sh(Linux) -g [csv results file] -o [path to output folder (empty or not existing)]\n\n--------------------------------------------------\n\nTo tell Apache JMeter to use a proxy server:\nOpen a command prompt and type:\n\njmeter.bat(Windows)/jmeter.sh(Linux) -H [your.proxy.server] -P [your proxy server port]\n\n---------------------------------------------------\n\nTo run Apache JMeter in server mode:\nOpen a command prompt and type:\n\njmeter-server.bat(Windows)/jmeter-server(Linux)\n\n---------------------------------------------------\n</code></pre>"},{"location":"chap13/1jmeter/#1-2","title":"1-2 \u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b","text":"<pre><code>jmeter -n -t scripts/blog.jmx  -l report.jtl -e -o report -Jjmeter.save.saveservice.output_format=csv\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e:</p> <ul> <li>-n: \u975eGUI\u6a21\u5f0f\u6267\u884cJMeter\u000b</li> <li>-t: \u6267\u884c\u6d4b\u8bd5\u6587\u4ef6\u6240\u5728\u7684\u4f4d\u7f6e\u000b</li> <li>-l: \u6307\u5b9a\u751f\u6210\u6d4b\u8bd5\u7ed3\u679c\u7684\u4fdd\u5b58\u6587\u4ef6\uff0cjtl\u6587\u4ef6\u683c\u5f0f\u000b</li> <li>-e: \u6d4b\u8bd5\u7ed3\u675f\u540e\uff0c\u751f\u6210\u6d4b\u8bd5\u62a5\u544a</li> <li>-o: \u6307\u5b9a\u6d4b\u8bd5\u62a5\u544a\u7684\u5b58\u653e\u4f4d\u7f6e</li> </ul> <p>\u770b\u4e0b\u8fd0\u884c\u7684\u6548\u679c\uff1a\u6d4b\u8bd5\u62a5\u544a\u5df2\u751f\u6210\u662fHTML\u6587\u4ef6\uff0c\u53ef\u76f4\u63a5\u6253\u5f00\u3002</p> <pre><code>$ jmeter -n -t scripts/blog.jmx  -l report.jtl -e -o report -Jjmeter.save.saveservice.output_format=csv\nWARNING: package sun.awt.X11 not in java.desktop\nCreating summariser &lt;summary&gt;\nCreated the tree successfully using scripts/blog.jmx\nStarting standalone test @ Mon Aug 24 17:54:51 CST 2020 (1598262891834)\nWaiting for possible Shutdown/StopTestNow/HeapDump/ThreadDump message on port 4445\nWarning: Nashorn engine is planned to be removed from a future JDK release\nsummary =      3 in 00:00:01 =    4.7/s Avg:   363 Min:   286 Max:   512 Err:     0 (0.00%)\nTidying up ...    @ Mon Aug 24 17:54:52 CST 2020 (1598262892778)\n... end of run\n</code></pre> <pre><code>$ tree report -L 1\nreport\n\u251c\u2500\u2500 content\n\u251c\u2500\u2500 index.html\n\u251c\u2500\u2500 sbadmin2-1.0.7\n\u2514\u2500\u2500 statistics.json\n\n2 directories, 2 files\n</code></pre> <p></p>"},{"location":"chap13/1jmeter/#2-antjmeter","title":"2\u3001\u4f7f\u7528 Ant\u3001Jmeter \u81ea\u52a8\u5316\u6d4b\u8bd5","text":""},{"location":"chap13/1jmeter/#2-1-ant-jmeter-111jar","title":"2-1 \u590d\u5236<code>ant-jmeter-1.1.1.jar</code>","text":"<pre><code>cp /opt/apache-jmeter-5.3/extras/ant-jmeter-1.1.1.jar /opt/ant/lib\n</code></pre> <p>\u5c06 <code>${apache-jmeter}/extras</code> \u6587\u4ef6\u5939\u4e0b\u7684<code>\u2018ant-jmeter-1.1.1.jar\u2019</code>\u6587\u4ef6\u590d\u5236\u5230<code>${apache-ant-}\\lib</code> \u6587\u4ef6\u5939\u4e0b</p> <pre><code>cd /home/vagrant/tools/script/jmetertest-master\nsudo cp jmeter.results.shanhe.me.xsl  /opt/apache-jmeter-5.3/extras/\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528ant\u4e0eJmeter\u96c6\u6210build.xml\u90e8\u5206\u5185\u5bb9  <code>build.xml</code>\u5730\u5740 </p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf8\"?&gt;\n&lt;!-- \u62f7\u8d1d\u62a5\u544a\u6240\u9700\u7684\u56fe\u7247\u8d44\u6e90\u81f3\u76ee\u6807\u76ee\u5f55 --&gt;\n&lt;project name=\"ant-jmeter-test\" default=\"run\" basedir=\".\"&gt;\n    &lt;tstamp&gt;\n        &lt;format property=\"time\" pattern=\"yyyyMMddHHmm\" /&gt;\n    &lt;/tstamp&gt;\n    &lt;!-- \u9700\u8981\u6539\u6210\u81ea\u5df1\u672c\u5730\u7684jmeter\u76ee\u5f55--&gt;  \n    &lt;property name=\"jmeter.home\" value=\"/opt/apache-jmeter-5.3\" /&gt;\n    &lt;!-- jmeter\u751f\u6210\u7684jtl\u683c\u5f0f\u7684\u7ed3\u679c\u62a5\u544a\u7684\u8def\u5f84--&gt; \n    &lt;property name=\"jmeter.result.jtl.dir\" value=\"./result/jtlfile\" /&gt;\n    &lt;!-- jmeter\u751f\u6210\u7684html\u683c\u5f0f\u7684\u7ed3\u679c\u62a5\u544a\u7684\u8def\u5f84--&gt;\n    &lt;property name=\"jmeter.result.html.dir\" value=\"./result/htmlfile\" /&gt;\n    &lt;!-- \u02ba\u751f\u6210\u7684\u62a5\u544a\u7684\u524d\u7f00--&gt;  \n    &lt;property name=\"ReportName\" value=\"TestReport_\" /&gt;\n    &lt;property name=\"jmeter.result.jtlName\" value=\"${jmeter.result.jtl.dir}/${ReportName}${time}.jtl\" /&gt;\n    &lt;property name=\"jmeter.result.htmlName\" value=\"${jmeter.result.html.dir}/SummaryReport.html\" /&gt;\n    &lt;property name=\"jmeter.detail.result.jtlName\" value=\"${jmeter.result.jtl.dir}/${ReportName}${time}.jtl\" /&gt;\n    &lt;property name=\"jmeter.detail.result.htmlName\" value=\"${jmeter.result.html.dir}/DetailReport.html\" /&gt;\n    &lt;target name=\"run\"&gt;\n        &lt;antcall target=\"test\" /&gt;\n        &lt;antcall target=\"report\" /&gt;\n    &lt;/target&gt;\n\n    &lt;target name=\"test\"&gt;\n        &lt;taskdef name=\"jmeter\" classname=\"org.programmerplanet.ant.taskdefs.jmeter.JMeterTask\" /&gt;\n        &lt;jmeter jmeterhome=\"${jmeter.home}\" resultlog=\"${jmeter.result.jtlName}\"&gt;\n             &lt;!-- \u58f0\u660e\u8981\u8fd0\u884c\u7684\u811a\u672c\u201c*.jmx\u201d\u6307\u5305\u542b\u6b64\u76ee\u5f55\u4e0b\u7684\u6240\u6709jmeter\u811a\u672c--&gt;\n            &lt;testplans dir=\"./scripts\" includes=\"*.jmx\" /&gt;\n           &lt;property name=\"jmeter.save.saveservice.output_format\" value=\"xml\"/&gt;\n\n        &lt;/jmeter&gt;\n    &lt;/target&gt;\n    &lt;path id=\"xslt.classpath\"&gt;\n            &lt;fileset dir=\"${jmeter.home}/lib\" includes=\"xalan*.jar\"/&gt;\n            &lt;fileset dir=\"${jmeter.home}/lib\" includes=\"serializer*.jar\"/&gt;\n    &lt;/path&gt;\n\n    &lt;target name=\"report\"&gt;\n        &lt;tstamp&gt; \n                &lt;format property=\"report.datestamp\" pattern=\"yyyy/MM/dd HH:mm\" /&gt;\n        &lt;/tstamp&gt;\n        &lt;xslt \n            classpathref=\"xslt.classpath\"\n            force=\"true\"\n            in=\"${jmeter.detail.result.jtlName}\"\n            out=\"${jmeter.detail.result.htmlName}\"\n            style=\"./jmeter.results.shanhe.me.xsl\"&gt;\n            &lt;param name=\"dateReport\" expression=\"${report.datestamp}\"/&gt;\n        &lt;/xslt&gt;\n        &lt;xslt \n            classpathref=\"xslt.classpath\"\n            force=\"true\"\n            in=\"${jmeter.result.jtlName}\"\n            out=\"${jmeter.result.htmlName}\"\n            style=\"./jmeter-results-detail-report_21.xsl\"&gt;\n            &lt;param name=\"dateReport\" expression=\"${report.datestamp}\"/&gt;\n        &lt;/xslt&gt;\n        &lt;!-- \u62f7\u8d1d\u62a5\u544a\u6240\u9700\u7684\u56fe\u7247\u8d44\u6e90\u81f3\u76ee\u6807\u76ee\u5f55 --&gt; \n        &lt;copy todir=\"${jmeter.result.html.dir}\"&gt;\n            &lt;fileset dir=\"${jmeter.home}/extras\"&gt;\n                &lt;include name=\"collapse.png\" /&gt;\n                &lt;include name=\"expand.png\" /&gt;\n            &lt;/fileset&gt;\n        &lt;/copy&gt;\n    &lt;/target&gt;\n&lt;/project&gt;\n</code></pre>"},{"location":"chap13/1jmeter/#2-2-antjmeter","title":"2-2 ant\u6784\u5efajmeter \u6d4b\u8bd5","text":"<p>\u8fd0\u884c\u7528\u4f8b</p> <pre><code>$ sudo ant -f build.xml\nBuildfile: /home/vagrant/tools/script/jmetertest-master/build.xml\n\nrun:\n\ntest:\n   [jmeter] Executing test plan: /home/vagrant/tools/script/jmetertest-master/scripts/blog.jmx ==&gt; /home/vagrant/tools/script/jmetertest-master/result/jtlfile/TestReport_202008210635.jtl\n   [jmeter] Creating summariser &lt;summary&gt;\n   [jmeter] Created the tree successfully using /home/vagrant/tools/script/jmetertest-master/scripts/blog.jmx\n   [jmeter] Starting standalone test @ Fri Aug 21 06:35:38 UTC 2020 (1597991738273)\n   [jmeter] Waiting for possible Shutdown/StopTestNow/HeapDump/ThreadDump message on port 4445\n   [jmeter] summary =      3 in 00:00:01 =    3.0/s Avg:   518 Min:   338 Max:   752 Err:     0 (0.00%)\n   [jmeter] Tidying up ...    @ Fri Aug 21 06:35:39 UTC 2020 (1597991739806)\n   [jmeter] ... end of run\n\nreport:\n     [xslt] Processing /home/vagrant/tools/script/jmetertest-master/result/jtlfile/TestReport_202008210635.jtl to /home/vagrant/tools/script/jmetertest-master/result/htmlfile/202008210635_DetailReport.html\n     [xslt] Loading stylesheet /opt/apache-jmeter-5.3/extras/jmeter.results.shanhe.me.xsl\n     [xslt] Processing /home/vagrant/tools/script/jmetertest-master/result/jtlfile/TestReport_202008210635.jtl to /home/vagrant/tools/script/jmetertest-master/result/htmlfile/202008210635_SummaryReport.html\n     [xslt] Loading stylesheet /opt/apache-jmeter-5.3/extras/jmeter-results-detail-report_21.xsl\n\nBUILD SUCCESSFUL\nTotal time: 5 seconds\n</code></pre> <pre><code>$ cd jmetertest-master/result/htmlfile\n-rw-r--r--. 1 root    root     5191 Aug 21 06:35 202008210635_SummaryReport.html\n-rw-r--r--. 1 root    root    16284 Aug 21 06:35 202008210635_DetailReport.html\n-rw-r--r--. 1 root    root     5191 Aug 21 06:28 202008210628_SummaryReport.html\n-rw-r--r--. 1 root    root    16284 Aug 21 06:28 202008210628_DetailReport.html\n...\n</code></pre> <p>\u6d4b\u8bd5\u62a5\u544a</p> <p></p> <p></p>"},{"location":"chap13/2jenkins_jmeter/","title":"\u7b2c\u4e8c\u8282 Jenkins\u3001Ant\u3001Jmeter \u81ea\u52a8\u5316\u6d4b\u8bd5","text":""},{"location":"chap13/2jenkins_jmeter/#1jenkinsantjmeter","title":"1\u3001Jenkins\u3001Ant\u3001Jmeter \u63a5\u53e3\u6d4b\u8bd5","text":"<p>\u4f7f\u7528<code>Jenkins</code>\u96c6\u6210<code>ant</code> \u548c<code>jmeter</code>\u8fdb\u884c\u63a5\u53e3\u6d4b\u8bd5,\u76f4\u63a5\u770b<code>Jenkinsfile</code>\u5427\u3002\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u4e3a\u6267\u884c\u4e86ant\u7684\u6784\u5efa\u547d\u4ee4\u53bb\u8fd0\u884c\u63a5\u53e3\u6d4b\u8bd5\uff0c\u7136\u540e\u901a\u8fc7<code>publishHtml</code>\u5c55\u793a\u6d4b\u8bd5\u62a5\u544a\u3002</p>"},{"location":"chap13/2jenkins_jmeter/#1-1-gitlab-demo-interfacetest","title":"1-1 \u5728gitlab \u4e0a\u521b\u5efa\u65b0\u7684\u4ee3\u7801\u5e93 <code>demo-interfacetest</code>","text":"<ul> <li><code>http://192.168.33.1:30088/root/demo-interfacetest-service</code></li> </ul> <p>demo-interfacetest-service</p>"},{"location":"chap13/2jenkins_jmeter/#1-2-ant-jmeterpipeline","title":"1-2 \u521b\u5efa<code>ant-jmeter.pipeline</code>","text":"<pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-interfacetest-service.git', description: '') \n        choice(name: 'branchName', choices: 'master\\nstage', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'ant', description: 'build tool')\n        choice(name: 'buildShell', choices: '-f build.xml ', description: 'build tool')\n    }\n\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n                } \n            }\n        }\n    }\n }\n</code></pre> <ul> <li>ant</li> <li><code>-f build.xml</code></li> </ul> <p>Output</p> <pre><code>...\n+ /opt/ant/bin/ant -f build.xml\nBuildfile: /home/vagrant/workspace/workspace/chp12_ant-jmeter/build.xml\n\nrun:\n\ntest:\n   [jmeter] Executing test plan: /home/vagrant/workspace/workspace/chp12_ant-jmeter/scripts/blog.jmx ==&gt; /home/vagrant/workspace/workspace/chp12_ant-jmeter/result/jtlfile/TestReport_202008260204.jtl\n   [jmeter] 2020-08-26 02:04:24,713 main ERROR FileManager (jmeter.log) \n...\n     [xslt] Processing /home/vagrant/workspace/workspace/chp12_ant-jmeter/result/jtlfile/TestReport_202008260204.jtl to /home/vagrant/workspace/workspace/chp12_ant-jmeter/result/htmlfile/202008260204_DetailReport.html\n     [xslt] Loading stylesheet /home/vagrant/workspace/workspace/chp12_ant-jmeter/jmeter.results.shanhe.me.xsl\n     [xslt] Processing /home/vagrant/workspace/workspace/chp12_ant-jmeter/result/jtlfile/TestReport_202008260204.jtl to /home/vagrant/workspace/workspace/chp12_ant-jmeter/result/htmlfile/202008260204_SummaryReport.html\n     [xslt] Loading stylesheet /home/vagrant/workspace/workspace/chp12_ant-jmeter/jmeter-results-detail-report_21.xsl\n\nBUILD SUCCESSFUL\nTotal time: 6 seconds\n</code></pre>"},{"location":"chap13/2jenkins_jmeter/#2jenkins","title":"2\u3001Jenkins \u5c55\u793a\u6d4b\u8bd5\u62a5\u544a","text":"<p>\u901a\u8fc7<code>publishHtml</code>\u5c55\u793a\u6d4b\u8bd5\u62a5\u544a\u3002</p> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-interfacetest-service.git', description: '') \n        choice(name: 'branchName', choices: 'master\\nstage', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'ant', description: 'build tool')\n        choice(name: 'buildShell', choices: '-f build.xml ', description: 'build tool')\n    }\n\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n\n                     //\u5c55\u793a\u6d4b\u8bd5\u62a5\u544a\n                    publishHTML([allowMissing: false, \n                                 alwaysLinkToLastBuild: false, \n                                 keepAll: false, \n                                 reportDir: 'result/htmlfile', \n                                 reportFiles: 'SummaryReport.html,DetailReport.html', \n                                 reportName: 'InterfaceTestReport', \n                                 reportTitles: ''])\n                } \n            }\n        }\n    }\n    post {\n        always{\n            script{\n                println(\"always\")\n            }\n        }\n\n        success{\n            script{\n                println(\"success\")  \n            }\n\n        }\n        failure{\n            script{\n                println(\"failure\")\n            }\n        }\n\n        aborted{\n            script{\n                println(\"aborted\")\n            }\n\n        }\n    }\n }\n</code></pre> <p></p> <p></p> <p></p>"},{"location":"chap14/1JIRA_JEN_K8S/","title":"\u7b2c\u4e00\u8282 \u57fa\u4e8eJira\u7aef\u5230\u7aef\u6d41\u6c34\u7ebf\u7684\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"chap14/1JIRA_JEN_K8S/#1","title":"1\u3001\u6d41\u6c34\u7ebf\u5b9e\u8df5\u89c4\u5212\u8bbe\u8ba1","text":""},{"location":"chap14/1JIRA_JEN_K8S/#1-1","title":"1-1 \u6574\u4f53\u89c4\u5212\u8bbe\u8ba1","text":""},{"location":"chap14/1JIRA_JEN_K8S/#1-2-jira","title":"1-2 Jira\u7aef\u89c4\u5212\u8bbe\u8ba1","text":"<ul> <li>\u521b\u5efa\u4efb\u52a1\u3001\u6545\u4e8b\uff08\u5bf9\u5e94Gitlab\u5206\u652f\uff09 <ul> <li>\u521b\u5efaJira\u95ee\u9898 -&gt;\u81ea\u52a8\u521b\u5efaGitlab\u5206\u652f </li> </ul> </li> <li>\u521b\u5efa\u53d1\u5e03\uff08\u5bf9\u5e94\u7248\u672c\u6587\u4ef6\uff09 </li> </ul>"},{"location":"chap14/1JIRA_JEN_K8S/#1-3-jenkins","title":"1-3 Jenkins\u7aef\u89c4\u5212\u8bbe\u8ba1","text":"<p>\u63d0\u4ea4\u6d41\u6c34\u7ebf</p> <ul> <li>\u4ee3\u7801-&gt;\u7f16\u8bd1-&gt;\u5355\u6d4b-&gt;\u6253\u5305-&gt;\u626b\u63cf-&gt;\u90ae\u4ef6\u901a\u77e5 [Gitlab\u663e\u793a\u6bcf\u6b21\u63d0\u4ea4\u72b6\u6001][</li> </ul> <p>UAT\u6d4b\u8bd5\u6d41\u6c34\u7ebf</p> <ul> <li>\u4ee3\u7801 -&gt; \u7f16\u8bd1 -&gt; \u5355\u6d4b -&gt; \u6253\u5305 -&gt; \u626b\u63cf -&gt; \u63a5\u53e3\u6d4b\u8bd5 -&gt; \u955c\u50cf -&gt; \u53d1\u5e03 -&gt; \u751f\u6210\u7248\u672c\u6587\u4ef6 -&gt; \u90ae\u4ef6\u901a\u77e5 </li> </ul> <p>\u664b\u7ea7\uff0f\u7248\u672c\u66f4\u65b0\u6d41\u6c34\u7ebf </p> <ul> <li>\u9009\u62e9\u664b\u7ea7\u7b56\u7565 -&gt; \u6839\u636e\u7248\u672c\u6587\u4ef6\u664b\u7ea7 -&gt; \u751f\u6210\u65b0\u7248\u672c\u6587\u4ef6 </li> </ul> <p>STAGE /PROD\u53d1\u5e03\u6d41\u6c34\u7ebf</p> <ul> <li>\u9009\u62e9\u7248\u672c\u53f7 -&gt; \u83b7\u53d6\u7248\u672c\u6587\u4ef6 -&gt; \u53d1\u5e03\u5e94\u7528 </li> </ul> <p>Jira\u96c6\u6210\u6d41\u6c34\u7ebf </p> <ul> <li>Jira\u7248\u672c\u53d1\u5e03 -&gt; \u5206\u652f\u5408\u5e76 -&gt; \u6e05\u7406\u5206\u652f </li> </ul>"},{"location":"chap14/2JEN_K8S_API/","title":"\u7b2c\u4e8c\u8282 Jenkins K8S Gitlab \u96c6\u6210","text":"<p>\u6587\u6863\uff1a https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#deployment-v1-apps</p>"},{"location":"chap14/2JEN_K8S_API/#1curl-k8s-api-without-kubectl-proxy","title":"1\u3001Curl K8S-API Without kubectl proxy","text":"<p>https://kubernetes.io/docs/tasks/administer-cluster/access-cluster-api/</p> <pre><code>$ kubectl config view -o jsonpath='{\"Cluster name\\tServer\\n\"}{range .clusters[*]}{.name}{\"\\t\"}{.cluster.server}{\"\\n\"}{end}'\nCluster name    Server\ndocker-desktop  https://kubernetes.docker.internal:6443\n\n# Point to the API server referring the cluster name\nkubectl config view -o jsonpath=\"{.clusters[?(@.name==\\\"docker-desktop\\\")].cluster.server}\"\nhttps://kubernetes.docker.internal:6443\n\n# Gets the token value\nkubectl get secrets -o jsonpath=\"{.items[?(@.metadata.annotations['kubernetes\\.io/service-account\\.name']=='default')].data.token}\"|base64 --decode\n\n\ncurl -X GET https://kubernetes.docker.internal:6443/api --header \"Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IkJLazJRem5PZVpBOHoyVjRHUFZtX2w4VURDcjNEQ2xucVdoRGF5QldxR00ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRlZmF1bHQtdG9rZW4tYjVxa3YiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVmYXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImVjNDMwNjYxLTkxYzktNDZlYS05YzllLWJmYWFkNTA2MmIwZiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmRlZmF1bHQifQ.vXOTW2DaIZhOzcIazOzCuI2Kc_BBQcfJ77sZpT_vnAYsPledlhb_-pUYZblxTtzomQYHRDSKw_Ffsp-wHpFcX2R_g2N8ww0MZ-Np3nv7T-_vAdExhyRVyYcfwDcA3l4QFxjTLFM9qUAMhqlnrBAbkfE1gNNA6IzWwwrftu4L42BPBLa4nzb_dxjYMHUoKhlj79AoLvPDaeLVicl6YXunEZlzqYDNe3z9fbiO_c2h7dYf70FWO34q5GGqvc0yItPlpl2w4irxviK_0j_kVEn-7uIHwGW66CH5i-vJazh7jQmJG9dapBVN9lg00MrD-q3zcV1O2WWpmvUacR6bauWe9A\" --insecure\n{\n  \"kind\": \"APIVersions\",\n  \"versions\": [\n    \"v1\"\n  ],\n  \"serverAddressByClientCIDRs\": [\n    {\n      \"clientCIDR\": \"0.0.0.0/0\",\n      \"serverAddress\": \"192.168.65.3:6443\"\n    }\n  ]\n}\n\ncurl --header \"Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IkJLazJRem5PZVpBOHoyVjRHUFZtX2w4VURDcjNEQ2xucVdoRGF5QldxR00ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRlZmF1bHQtdG9rZW4tYjVxa3YiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGVmYXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImVjNDMwNjYxLTkxYzktNDZlYS05YzllLWJmYWFkNTA2MmIwZiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmRlZmF1bHQifQ.vXOTW2DaIZhOzcIazOzCuI2Kc_BBQcfJ77sZpT_vnAYsPledlhb_-pUYZblxTtzomQYHRDSKw_Ffsp-wHpFcX2R_g2N8ww0MZ-Np3nv7T-_vAdExhyRVyYcfwDcA3l4QFxjTLFM9qUAMhqlnrBAbkfE1gNNA6IzWwwrftu4L42BPBLa4nzb_dxjYMHUoKhlj79AoLvPDaeLVicl6YXunEZlzqYDNe3z9fbiO_c2h7dYf70FWO34q5GGqvc0yItPlpl2w4irxviK_0j_kVEn-7uIHwGW66CH5i-vJazh7jQmJG9dapBVN9lg00MrD-q3zcV1O2WWpmvUacR6bauWe9A\" --insecure  -X GET https://kubernetes.docker.internal:6443/api/v1/nodes\n\n{\n  \"kind\": \"NodeList\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \"selfLink\": \"/api/v1/nodes\",\n    \"resourceVersion\": \"1044977\"\n  },\n  \"items\": [\n    {\n      \"metadata\": {\n        \"name\": \"docker-desktop\",\n        \"selfLink\": \"/api/v1/nodes/docker-desktop\",\n        \"uid\": \"92d70f98-883a-4cd3-8b54-35a6187eab88\",\n        \"resourceVersion\": \"1044565\",\n        ...\n}\n\n</code></pre>"},{"location":"chap14/2JEN_K8S_API/#2jenkins-pipeline-k8s_api","title":"2\u3001Jenkins Pipeline \u8c03\u7528 K8S_API","text":""},{"location":"chap14/2JEN_K8S_API/#2-1-kubernetetsgroovy","title":"2-1 <code>kubernetets.groovy</code>","text":"<pre><code>package org.devops\n\n\n//\u5c01\u88c5HTTP\u8bf7\u6c42\ndef HttpReq(reqType,reqUrl,reqBody){\n    def apiServer = \"https://kubernetes.docker.internal:6443/apis/apps/v1\"\n    withCredentials([string(credentialsId: 'kubernetes-token', variable: 'kubernetestoken')]) {\n      result = httpRequest customHeaders: [[maskValue: true, name: 'Authorization', value: \"Bearer ${kubernetestoken}\"],\n                                           [maskValue: false, name: 'Content-Type', value: 'application/yaml'], \n                                           [maskValue: false, name: 'Accept', value: 'application/yaml']], \n                httpMode: reqType, \n                consoleLogResponseBody: true,\n                ignoreSslErrors: true, \n                requestBody: reqBody,\n                url: \"${apiServer}/${reqUrl}\"\n                //quiet: true\n    }\n    return result\n}\n//\u65b0\u5efaDeployment\ndef CreateDeployment(nameSpace,deployName,deplyBody){\n    apiUrl = \"namespaces/${nameSpace}/deployments/\"\n    response = HttpReq('POST',apiUrl,deplyBody)\n    println(response)\n}\n\n//\u5220\u9664deployment\ndef DeleteDeployment(nameSpace,deployName){\n    apiUrl = \"namespaces/${nameSpace}/deployments/${deployName}\"\n    response = HttpReq('DELETE',apiUrl,deplyBody)\n    println(response)\n}\n\n//\u66f4\u65b0Deployment\ndef UpdateDeployment(nameSpace,deployName,deplyBody){\n    apiUrl = \"namespaces/${nameSpace}/deployments/${deployName}\"\n    response = HttpReq('PUT',apiUrl,deplyBody)\n    println(response)\n}\n\n//\u83b7\u53d6Deployment\ndef GetDeployment(nameSpace,deployName){\n    apiUrl = \"namespaces/${nameSpace}/deployments/${deployName}\"\n    response = HttpReq('GET',apiUrl,'')\n    return response\n}\n</code></pre> <p>\u53ef\u914d\u4fe1\u606f</p> <ul> <li><code>kubernetes.docker.internal</code>: Cluster Server</li> <li><code>kubernetes-token</code></li> </ul>"},{"location":"chap14/2JEN_K8S_API/#2-2-k8s-jenkins-k8s","title":"2-2 K8S Jenkins \u914d\u7f6e k8s \u4fe1\u606f","text":"<p>\u6211\u4eec\u5728\u96c6\u7fa4\u5185\u90e8\u7684Jenkins\u914d\u7f6e<code>k8s-token</code>\uff0c<code>SharedLibrary</code> \u7b49\u7b49\u4fe1\u606f</p> <p>SharedLibrary</p> <ul> <li>jenkinslib</li> <li>master</li> <li>https://github.com/Chao-Xi/JenkinslibTest.git</li> <li>Credentials   : github</li> </ul> <p></p> <p>kubernetes-token</p> <p></p>"},{"location":"chap14/2JEN_K8S_API/#2-3-k8s","title":"2-3 \u521b\u5efa\u6d4b\u8bd5<code>k8s</code> \u670d\u52a1","text":"<pre><code>---\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: demo-uat\n---\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: demo-stage\n---\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: demo-prod\n</code></pre> <pre><code>kind: Deployment\napiVersion: apps/v1\nmetadata:\n  labels:\n    k8s-app: demoapp\n  name: demoapp\n  namespace: demo-prod\nspec:\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      k8s-app: demoapp\n  template:\n    metadata:\n      labels:\n        k8s-app: demoapp\n      namespace: demo-prod\n      name: demoapp\n    spec:\n      containers:\n        - name: demoapp\n          image: bitnami/java-example:0.0.1\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 8080\n              name: web\n              protocol: TCP\n      serviceAccountName: demoapp\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    k8s-app: demoapp\n  name: demoapp\n  namespace: demo-prod\n---\nkind: Service\napiVersion: v1\nmetadata:\n  labels:\n    k8s-app: demoapp\n  name: demoapp\n  namespace: demo-prod\nspec:\n  type: NodePort\n  ports:\n    - name: web\n      port: 8080\n      targetPort: 8080\n      nodePort: 30991\n  selector:\n    k8s-app: demoapp\n</code></pre> <pre><code>http://127.0.0.1:30991/\n</code></pre>"},{"location":"chap14/2JEN_K8S_API/#2-4-k8s-jenkins-k8s-api-pipeline","title":"2-4  K8S Jenkins \u8c03\u7528 k8s-API Pipeline","text":"<pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef k8s = new org.devops.kubernetes()\n\npipeline {\n    agent { node { label \"master\" }}\n    stages{\n        stage(\"GetDeployment\"){\n            steps{\n                script{\n                    k8s.GetDeployment(\"demo-prod\",\"demoapp\")\n                }  \n            }\n        }\n    }\n}\n</code></pre> <p>Console output</p> <pre><code>HttpMethod: GET\nURL: https://kubernetes.docker.internal:6443/apis/apps/v1/namespaces/demo-prod/deployments/demoapp\nAuthorization: *****\nContent-Type: application/yaml\nAccept: application/yaml\nSending request to url: https://kubernetes.docker.internal:6443/apis/apps/v1/namespaces/demo-prod/deployments/demoapp\nResponse Code: HTTP/1.1 200 OK\nResponse: \napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: \"3\"\n    kubectl.kubernetes.io/last-applied-configuration: |\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"demoapp\"},\"name\":\"demoapp\",\"namespace\":\"demo-prod\"},\"spec\":{\"replicas\":1,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"k8s-app\":\"demoapp\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"demoapp\"},\"name\":\"demoapp\",\"namespace\":\"demo-prod\"},\"spec\":{\"containers\":[{\"image\":\"bitnami/java-example:0.0.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"demoapp\",\"ports\":[{\"containerPort\":8080,\"name\":\"web\",\"protocol\":\"TCP\"}]}],\"serviceAccountName\":\"demoapp\"}}}}\n  creationTimestamp: \"2020-08-27T06:13:32Z\"\n...\n  observedGeneration: 3\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n\nSuccess code from [100\u2025399]\n...\n</code></pre>"},{"location":"chap14/2JEN_K8S_API/#3-k8s-gitlab","title":"3\u3001 \u4e0a\u4f20 K8S \u90e8\u7f72\u6587\u4ef6\u5230 Gitlab","text":""},{"location":"chap14/2JEN_K8S_API/#3-1-jenkins-gitlab-token","title":"3-1 \u5728\u65b0\u7684<code>Jenkins</code> \u6dfb\u52a0 <code>gitlab-token</code>","text":"<p>\u6ce8\u610ftoken\u7684\u7c7b\u578b\u4e00\u5b9a\u662f<code>secret text</code> \u5426\u5219\u4f1a\u62a5\u9519</p> <pre><code>ERROR: Credentials 'gitlab-token' is of type 'GitLab API token' where 'org.jenkinsci.plugins.plaincredentials.StringCredentials' was expected\n</code></pre> <ul> <li>sdsxxZ7ymzoTKSGZ6dNv</li> </ul> <p></p>"},{"location":"chap14/2JEN_K8S_API/#3-2-gitlab","title":"3-2 <code>gitlab</code> \u4e2d\u6dfb\u52a0\u521b\u5efa\u4ed3\u5e93\u6587\u4ef6\u65b9\u6cd5","text":"<pre><code>//\u521b\u5efa\u4ed3\u5e93\u6587\u4ef6\ndef CreateRepoFile(projectId,filePath,fileContent){\n    apiUrl = \"projects/${projectId}/repository/files/${filePath}\"\n    reqBody = \"\"\"{\"branch\": \"master\",\"encoding\":\"base64\", \"content\": \"${fileContent}\", \"commit_message\": \"create a new file\"}\"\"\"\n    response = HttpReq('POST',apiUrl,reqBody)\n    println(response)\n}\n</code></pre> <p>\u65b0\u5efa\u6587\u4ef6: <code>projects/${projectsId}/repository/files/${filepath}</code></p> <ul> <li><code>testText.bytes.encodeBase64().toString()</code></li> <li><code>decoded = base64text.decodeBase64()</code></li> </ul>"},{"location":"chap14/2JEN_K8S_API/#3-3-pipeline-createrepofile-k8syaml-gitlab","title":"3-3 Pipeline \u4e2d\u8c03\u7528 CreateRepoFile  \u4e0a\u4f20 k8s.yaml \u5230 gitlab","text":"<pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef k8s = new org.devops.kubernetes()\ndef gitlab = new org.devops.gitlab()\n\npipeline {\n    agent { node { label \"master\" }}\n    parameters {\n        choice(name: 'versionName', choices: '1.0\\n1.1\\n1.2\\n1.3', description: 'Please chose your versionName')\n    }\n    stages{\n        stage(\"GetDeployment\"){\n            steps{\n                script{\n                    response = k8s.GetDeployment(\"demo-prod\",\"demoapp\")\n                    response = response.content\n\n                    //\u6587\u4ef6\u8f6c\u6362\n                    base64Content = response.bytes.encodeBase64().toString()\n\n                    //\u4e0a\u4f20\u6587\u4ef6\n                    gitlab.CreateRepoFile(3,\"demo-prod%2f${versionName}-prod.yaml\",base64Content)\n\n                }  \n            }\n        }\n    }\n}\n</code></pre> <ul> <li>projectId: 3</li> <li>filePath\uff1a <code>\"demo-prod%2f${versionName}-prod.yaml\"</code></li> <li><code>base64Content</code></li> </ul> <p>Console output</p> <pre><code>...\n[Pipeline] // withCredentials\n[Pipeline] withCredentials\nMasking supported pattern matches of $gitlabToken\n[Pipeline] {\n[Pipeline] httpRequest\nHttpMethod: POST\nURL: http://192.168.33.1:30088/api/v4/projects/3/repository/files/demo-prod%2f1.0-prod.yaml\nContent-Type: application/json\nPRIVATE-TOKEN: *****\nSending request to url: http://192.168.33.1:30088/api/v4/projects/3/repository/files/demo-prod%2f1.0-prod.yaml\nResponse Code: HTTP/1.1 201 Created\nResponse: \n{\"file_path\":\"demo-prod/1.0-prod.yaml\",\"branch\":\"master\"}\nSuccess code from [100\u2025399]\n[Pipeline] }\n[Pipeline] // withCredentials\n[Pipeline] echo\nStatus: 201\n</code></pre> <p></p>"},{"location":"chap14/2TMF_JENKINS/","title":"L8 \u57fa\u7840\u8bbe\u65bd\u5373\u4ee3\u7801 - \u4f7f\u7528Terraform\u521b\u5efaAWS EC2\u5b9e\u4f8b\u5e76\u90e8\u7f72Jenkins\u670d\u52a1","text":"<p>Terraform \u662f\u7531 HashiCorp \u521b\u5efa\u7684\u5f00\u6e90\u57fa\u7840\u8bbe\u65bd\u5373\u4ee3\u7801\u8f6f\u4ef6\u5de5\u5177\u3002\u7528\u6237\u4f7f\u7528\u79f0\u4e3a HashiCorp \u914d\u7f6e\u8bed\u8a00\u7684\u58f0\u660e\u6027\u914d\u7f6e\u8bed\u8a00\uff08HCL\uff09\u6216\u53ef\u9009\u7684 JSON \u6765\u5b9a\u4e49\u548c\u63d0\u4f9b\u6570\u636e\u4e2d\u5fc3\u57fa\u7840\u8bbe\u65bd\u3002</p> <p>\u60a8\u53ef\u4ee5\u4f7f\u7528 Terraform \u521b\u5efa\u8d44\u6e90\uff0c\u4f8b\u5982 AWS EC2 \u5b9e\u4f8b\u548c AWS S3 \u5b58\u50a8\u6876\u3002\u8fd9\u4e9b EC2 \u5b9e\u4f8b\u53ef\u4ee5\u88ab\u5f15\u5bfc\u4ee5\u5305\u542b Jenkins\uff0c\u8fd9\u662f\u4e91\u5de5\u7a0b\u5e08\u4f7f\u7528\u7684\u4e00\u79cd\u6d41\u884c\u7684\u6301\u7eed\u96c6\u6210/\u6301\u7eed\u4ea4\u4ed8\u5de5\u5177\u3002</p> <p>\u5728\u6b64\u9879\u76ee\u4e2d\uff0c\u60a8\u5c06\u5b66\u4e60\u5982\u4f55\u90e8\u7f72 EC2 \u5b9e\u4f8b\u3001\u5f15\u5bfc EC2 \u5b9e\u4f8b\u4ee5\u5b89\u88c5\u548c\u542f\u52a8 Jenkins\u3001\u521b\u5efa Jenkins \u5b89\u5168\u7ec4\u3001\u521b\u5efa\u79c1\u6709 Jenkins S3 \u5b58\u50a8\u6876\u4ee5\u5b58\u50a8 Jenkins \u5de5\u4ef6\u3002\u6b64\u5916\uff0c\u60a8\u8fd8\u5c06\u5b66\u4e60\u5982\u4f55\u521b\u5efa\u7b80\u5355\u7684 Jenkins \u7ba1\u9053</p>"},{"location":"chap14/2TMF_JENKINS/#_1","title":"\u5148\u51b3\u6761\u4ef6\uff1a","text":"<p>\u60a8\u9700\u8981\u5b89\u88c5\u4ee5\u4e0b\u5de5\u5177\uff1a</p> <ul> <li>AWS CLI \u5b89\u88c5\u548c\u914d\u7f6e</li> <li>Terraform \u5b89\u88c5\u548c\u914d\u7f6e</li> <li>IDE\uff08\u6211\u4f7f\u7528 VS Code\uff09</li> </ul>"},{"location":"chap14/2TMF_JENKINS/#_2","title":"\u5de5\u7a0b\u521d\u59cb\u5316","text":"<p>\u5728\u60a8\u9009\u62e9\u7684 IDE \u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u5939\uff0c\u7136\u540ecd\u8fdb\u5165\u8be5\u6587\u4ef6\u5939\u3002</p> <p>\u521b\u5efa main.tf\u3001variable.tf\u3001providers.tf \u548c outputs.tf \u6587\u4ef6</p> <p></p> <p>main.tf \u5c06\u5305\u542b\u4e3b\u8981\u7684\u914d\u7f6e\u3002</p> <pre><code>resource \"aws_instance\" \"instance\" {\n    ami                    = var.ami\n    instance_type          = var.instance\n    user_data              = var.ec2_user_data\n    vpc_security_group_ids = [aws_security_group.security_group.id]\n\n    tags = {\n        Name                  = \"Jenkins Instance\"\n    }\n}\n\nresource \"aws_security_group\" \"security_group\" { \n    vpc_id                 = var.vpc\n\n    ingress {\n        description            = \"Allow SSH from my Public IP\"\n        from_port              = 22\n        to_port                = 22\n        protocol               = \"tcp\"\n        cidr_blocks            = [\"-.-.-.-/32\"]  \n    }\n\n    ingress {\n      description            = \"Allows Access to the Jenkins Server\"\n      from_port              = 8080\n      to_port                = 8080\n      protocol               = \"tcp\"\n      cidr_blocks            = [\"0.0.0.0/0\"]\n  }\n\n    ingress {\n      description           = \"Allows Access to the Jenkins Server\"\n      from_port             = 443\n      to_port               = 443\n      protocol              = \"tcp\"\n      cidr_blocks           = [\"0.0.0.0/0\"]\n  }\n\n    egress {\n      from_port             = 0\n      to_port               = 0\n      protocol              = \"-1\"\n      cidr_blocks           = [\"0.0.0.0/0\"]\n  }\n    tags = {\n      Name                = \"Jenkins Security Group\"\n  }\n}\n\nresource \"aws_s3_bucket\" \"jojenkinsbucket\" {\n    bucket                = \"jojenkinsbucket\"\n}\n\nresource \"aws_s3_bucket_acl\" \"jenkinsbucketacl\" {\n    bucket                = aws_s3_bucket.jojenkinsbucket.id\n    acl                   = \"private\"\n}\n</code></pre> <p><code>variable.tf</code> \u5305\u542b\u53d8\u91cf\u5b9a\u4e49</p> <pre><code>variable \"vpc\" {\n  description         = \"The Default VPC of EC2\"\n  type                = string\n  default             = \"vpc-0be40a17d234455e3\"\n}\n\nvariable \"ami\" {\n  description         = \"The AMI ID of the Instance\"\n  type                = string\n  default             = \"ami-0dfcb1ef8550277af\"\n}\n\nvariable \"instance\" {\n  description         = \"The Instance Type of EC2\"\n  type                = string\n  default             = \"t2.micro\"\n}\n\nvariable \"ec2_user_data\" {\n  description        = \"User Data for Jenkins EC2\"\n  type               = string\n  default            = &lt;&lt;-EOF\n  #!/bin/bash\n  sudo yum update -y\n  sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo\n  sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key\n  sudo yum upgrade\n  sudo amazon-linux-extras install java-openjdk11 -y\n  sudo yum install -y jenkins\n  sudo systemctl enable jenkins\n  sudo systemctl start jenkins\n  EOF\n}\n</code></pre> <p><code>providers.tf</code> \u5b9a\u4e49\u4e91\u4f9b\u5e94\u5546\u914d\u7f6e</p> <pre><code>provider \"aws\" {\n    region         = \"us-east-1\"\n}\n\nterraform {\n  required_providers {\n    aws = {\n      source       = \"hashicorp/aws\"\n      version      = \"~&gt; 4.0\"\n    }\n  }\n}\n</code></pre> <p><code>outputs.tf</code>\u4ee3\u7801\u53d1\u5e03\u540e\u7684\u8f93\u51fa</p> <pre><code>output \"public_ip\" {\n    value           = aws_instance.instance.public_ip\n}\n</code></pre>"},{"location":"chap14/2TMF_JENKINS/#_3","title":"\u57fa\u7840\u8bbe\u65bd\u53d1\u5e03","text":"<p><code>terraform init</code>\u547d\u4ee4\u5c06\u521d\u59cb\u5316\u5305\u542b <code>Terraform</code> \u914d\u7f6e\u6587\u4ef6\u7684\u5de5\u4f5c\u76ee\u5f55\u5e76\u5b89\u88c5\u4efb\u4f55\u6240\u9700\u7684\u63d2\u4ef6\u3002</p> <p></p> <p><code>terraform validate</code>\u547d\u4ee4\u9a8c\u8bc1\u76ee\u5f55\u4e2d\u7684\u914d\u7f6e\u6587\u4ef6\u3002</p> <p></p> <p><code>terraform plan</code>\u547d\u4ee4\u53ef\u8ba9\u60a8\u9884\u89c8 Terraform \u4e3a\u4fee\u6539\u60a8\u7684\u57fa\u7840\u67b6\u6784\u800c\u91c7\u53d6\u7684\u64cd\u4f5c\u3002</p> <p></p> <p><code>terraform apply</code>\u547d\u4ee4\u6267\u884c Terraform \u8ba1\u5212\u4e2d\u5efa\u8bae\u7684\u64cd\u4f5c\u4ee5\u521b\u5efa\u3001\u66f4\u65b0\u6216\u9500\u6bc1\u57fa\u7840\u8bbe\u65bd\u3002</p> <p></p> <p>\u6b64\u65f6\u60a8\u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5\u63a7\u5236\u53f0\u6765\u786e\u8ba4 EC2 \u5b9e\u4f8b\u7684\u521b\u5efa\u3002</p> <p></p>"},{"location":"chap14/2TMF_JENKINS/#jenkins","title":"\u6d4b\u8bd5Jenkins","text":"<p>Jenkins Pipeline \u662f\u4e00\u5957\u63d2\u4ef6\uff0c\u652f\u6301\u5728 Jenkins \u4e2d\u5b9e\u65bd\u548c\u96c6\u6210\u6301\u7eed\u4ea4\u4ed8\u7ba1\u9053\u3002</p> <p>\u8981\u521b\u5efa Jenkins \u7ba1\u9053\uff0c\u8bf7\u5728 Web \u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u201cEC2\u5b9e\u4f8b\u7684\u516c\u5171IP:8080\u201d \u3002\u914d\u7f6e\u5e76\u767b\u5f55Jenkins\u540e\uff0c\u60a8\u5e94\u8be5\u4f1a\u770b\u5230\u7c7b\u4f3c\u4e8e\u4e0b\u56fe\u7684\u622a\u56fe\u3002</p> <p></p> <p>\u5355\u51fb\u65b0\u9879\u76ee\u3002</p> <ul> <li>\u8f93\u5165\u9879\u76ee\u7684\u540d\u79f0\u3002</li> <li>\u9009\u62e9Pipeline\uff0c\u7136\u540e\u9009\u62e9Ok\u3002</li> </ul> <p></p> <p>\u5728\u7ba1\u9053\u90e8\u5206\uff0c\u8f93\u5165\u4ee5\u4e0b\u811a\u672c\uff1a</p> <pre><code>pipeline {\n    agent any\n    stages {\n        stage(\"build\") {\n\n            steps {\n                echo 'Building the application...'\n\n            }\n        }\n\n        stage(\"test\") {\n\n            steps {\n                echo 'Testing the application...'\n\n            }\n        }\n\n        stage(\"deploy\") {\n\n            steps {\n                echo 'Deploying the application...'\n\n            }\n        }\n }\n}\n</code></pre> <p>\u9009\u62e9Jenkins \u4eea\u8868\u677f\u5de6\u4fa7\u7684\u201c\u7acb\u5373\u6784\u5efa\u201d \u3002\u5982\u679c\u60a8\u770b\u5230\u7eff\u8272\u7684\u89c6\u56fe\uff0c\u5219\u8868\u793a\u6784\u5efa\u5df2\u6210\u529f\u5b8c\u6210\u3002</p> <p></p>"},{"location":"chap14/2TMF_JENKINS/#_4","title":"\u9500\u6bc1\u8d44\u6e90","text":"<p>\u5982\u679c\u81ea\u5df1\u505a\u5b9e\u9a8c\u5207\u8bb0\u5220\u9664\u8d44\u6e90\uff0c\u5426\u5219\u4f1a\u9020\u6210\u8d26\u5355\u6d88\u8017\u3002\u4f7f\u7528terraform destroy\u9500\u6bc1\u8d44\u6e90\u3002</p>"},{"location":"chap14/3Jen_k8s_pipeline/","title":"\u7b2c\u4e09\u8282 Jenkins + K8S + Gitlab \u6784\u5efa RLEASE \u6253\u5305\u53d1\u5e03\u66f4\u65b0\u6d41\u6c34\u7ebf\u5230K8S\u96c6\u7fa4","text":"<p>\u83b7\u53d6\u8fd0\u884c\u4e2ddeploy\u7684yaml -&gt; \u4e0a\u4f20\u5230gitlab -&gt; \u66f4\u65b0Container Image \uff08\u6253\u5305jar\u5305 -&gt; \u521b\u5efa\u65b0\u7684Image -&gt; \u4e0a\u4f20Image\u5230Docker Hub\uff09 -&gt; \u4e0a\u4f20\u5230gitlab (yaml)  -&gt; \u5c06\u65b0\u7684yaml apply \u5230\u96c6\u7fa4\u4e2d</p>"},{"location":"chap14/3Jen_k8s_pipeline/#1-prod-release","title":"1\u3001\u914d\u7f6e Prod-Release \u6d41\u6c34\u7ebf\u6784\u5efa\u955c\u50cf","text":""},{"location":"chap14/3Jen_k8s_pipeline/#1-1-release","title":"1-1 Release \u6d4b\u8bd5\u6d41\u6c34\u7ebf","text":"<ul> <li>\u4ee3\u7801 -&gt; \u7f16\u8bd1 -&gt; \u5355\u6d4b -&gt; \u6253\u5305 -&gt; \u626b\u63cf -&gt; \u63a5\u53e3\u6d4b\u8bd5 -&gt; \u955c\u50cf -&gt; \u53d1\u5e03 -&gt; \u751f\u6210\u7248\u672c\u6587\u4ef6 -&gt; \u90ae\u4ef6\u901a\u77e5 </li> </ul>"},{"location":"chap14/3Jen_k8s_pipeline/#1-2-docker-in-docker","title":"1-2 Docker in Docker \u914d\u7f6e","text":"<p>\u4f60\u53ef\u4ee5\u5728K8S \u96c6\u7fa4\u4e2d Run K8S Pod as Agent</p> <pre><code>- name: dockersock\n   hostPath: \n    path: /var/run/docker.sock\n- name: dockercmd\n   hostPath: \n    path: /usr/local/bin/docker\n</code></pre>"},{"location":"chap14/3Jen_k8s_pipeline/#1-3-registry","title":"1-3 \u521b\u5efa\u4e00\u4e2a\u51ed\u636e\u5b58\u50a8registry\u4ed3\u5e93\u7684\u8d26\u53f7\u548c\u5bc6\u7801","text":"<p>ID: <code>docker-registry-admin</code></p> <p></p>"},{"location":"chap14/3Jen_k8s_pipeline/#1-4-dockerfile-demo-maven-service","title":"1-4 \u6dfb\u52a0<code>Dockerfile</code>\u5230 \u9879\u76ee\u4e2d <code>demo-maven-service</code>","text":"<p>Dockerfile</p> <pre><code>FROM  openjdk:8-alpine\nMAINTAINER devops\n\n\nADD target/*.jar /app.jar\n\n\n# \u6267\u884c\u547d\u4ee4\nENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"]\n</code></pre>"},{"location":"chap14/3Jen_k8s_pipeline/#1-5-buildimage-pipeline","title":"1-5 \u521b\u5efaBuildImage pipeline","text":"<pre><code>stage(\"BuildImages\"){\n                steps{\n                    script{\n                        env.serviceName = \"${JOB_NAME}\".split(\"_\")[0]\n\n                        withCredentials([usernamePassword(credentialsId: 'docker-registry-admin', passwordVariable: 'password', usernameVariable: 'username')]) {\n\n                           env.dockerImage = \"nyjxi/${serviceName}:${branchName}\"\n                           sh \"\"\"\n                               docker login -u ${username} -p ${password} \n                               docker build -t nyjxi/${serviceName}:${branchName} .\n                               sleep 1\n                               docker push nyjxi/${serviceName}:${branchName}\n                               sleep 1\n                               #docker rmi nyjxi/devopstest/${serviceName}:${branchName}\n                            \"\"\"\n                        }\n                    }\n                }\n            }\n</code></pre>"},{"location":"chap14/3Jen_k8s_pipeline/#1-6-pipeline-name-demo-java-service_uat","title":"1-6 Pipeline Name:  <code>demo-java-service_UAT</code>","text":"<ul> <li>https://github.com/Chao-Xi/JenkinslibTest/blob/master/src/org/devops/gitlab.groovy</li> <li>https://github.com/Chao-Xi/JenkinslibTest/blob/master/src/org/devops/kubernetes.groovy</li> </ul> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef k8s = new org.devops.kubernetes()\ndef gitlab = new org.devops.gitlab()\ndef build = new org.devops.buildtools()\n\n\npipeline {\n    agent { node { label \"vagrant-agent\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        choice(name: 'versionName', choices: '1.0\\n1.1\\n1.2\\n1.3', description: 'Please chose your versionName')\n        choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n\n    }\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n                } \n            }\n        }\n\n        // \u6784\u5efa\u955c\u50cf\n           stage(\"BuildImages\"){\n                steps{\n                    script{\n                        env.serviceName = \"${JOB_NAME}\".split(\"_\")[0]\n\n                        withCredentials([usernamePassword(credentialsId: 'docker-registry-admin', passwordVariable: 'password', usernameVariable: 'username')]) {\n\n                           env.dockerImage = \"nyjxi/${serviceName}:${branchName}\"\n                           sh \"\"\"\n                               docker login -u ${username} -p ${password} \n                               docker build -t nyjxi/${serviceName}:${branchName} .\n                               sleep 1\n                               docker push nyjxi/${serviceName}:${branchName}\n                               sleep 1\n                               #docker rmi nyjxi/devopstest/${serviceName}:${branchName}\n                            \"\"\"\n                        }\n                    }\n                }\n            }\n\n        //\u8fde\u5165\u90e8\u7f72\u96c6\u7fa4\n        stage(\"GetDeployment\"){\n            agent { node { label \"master\" }}\n            steps{\n                script{\n                    response = k8s.GetDeployment(\"demo-prod\",\"demoapp\")\n                    response = response.content\n\n                    //\u6587\u4ef6\u8f6c\u6362\n                    base64Content = response.bytes.encodeBase64().toString()\n\n                    //\u4e0a\u4f20\u6587\u4ef6\n                    // gitlab.CreateRepoFile(3,\"demo-prod%2f${versionName}-prod.yaml\",base64Content)\n\n                }  \n            }\n        }\n\n\n    }\n}\n</code></pre> <p>\u8fde\u5165K8S\u90e8\u7f72\u96c6\u7fa4</p> <pre><code> stage(\"GetDeployment\"){\n     agent { node { label \"master\" }}\n    ....\n</code></pre> <p>Console Output</p> <pre><code>...\n[Pipeline] withCredentials\nMasking supported pattern matches of $username or $password\n[Pipeline] {\n[Pipeline] sh\n+ docker login -u **** -p ****\nWARNING! Using --password via the CLI is insecure. Use --password-stdin.\nWARNING! Your password will be stored unencrypted in /home/vagrant/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded\n+ docker build -t ****/demo-java-service:master .\nSending build context to Docker daemon  150.5kB\n...\nSuccessfully built 478beebd8a2f\nSuccessfully tagged ****/demo-java-service:master\n+ sleep 1\n+ docker push ****/demo-java-service:master\nThe push refers to repository [docker.io/****/demo-java-service]\n30c0b2f82718: Preparing\nceaf9e1ebef5: Preparing\n9b9b7f3d56a0: Preparing\nf1b5933fe4b5: Preparing\n9b9b7f3d56a0: Mounted from library/openjdk\nf1b5933fe4b5: Mounted from library/openjdk\nceaf9e1ebef5: Mounted from library/openjdk\n30c0b2f82718: Pushed\nmaster: digest: sha256:e5e037dfcb67f85dce10ebd98d8cd8278e6b8378f26a4980dafe4a795e532b8b size: 1155\n+ sleep 1\n[Pipeline] }\n...\n</code></pre> <p>Image\u88abpush\u5230 dockerhub\u4e2d</p> <p></p>"},{"location":"chap14/3Jen_k8s_pipeline/#2-gitlab-release-k8s-yaml","title":"2\u3001\u83b7\u53d6 Gitlab Release \u53d1\u5e03\u6587\u4ef6\uff08k8s-yaml\u6587\u4ef6)","text":""},{"location":"chap14/3Jen_k8s_pipeline/#2-1-gitlab-api","title":"2-1 gitlab API \u83b7\u53d6\u6587\u4ef6\u5185\u5bb9","text":"<pre><code>def GetRepoFile(projectId,filePath){\n    apiUrl = \"projects/${projectId}/repository/files/${filePath}/raw?ref=master\"\n    response = HttpReq('GET',apiUrl,'')\n    return response.content\n}\n</code></pre>"},{"location":"chap14/3Jen_k8s_pipeline/#2-2-pipeline-gitlab-api","title":"2-2 Pipeline \u8c03\u7528  gitlab API \u83b7\u53d6 \u90e8\u7f72\u6587\u4ef6","text":"<pre><code>stage('Deploy') {\n            steps {\n                    script{\n                        //\u4e0b\u8f7d\u7248\u672c\u5e93\u6587\u4ef6 \n                        // releaseVersion = \"${branchName}\".split(\"-\")[-1]\n                        releaseVersion = \"${versionName}\"\n                        response = gitlab.GetRepoFile(3,\"demo-prod%2f${releaseVersion}-prod.yaml\")\n                    }\n                } \n            }\n</code></pre> <ul> <li>projectId: 3</li> <li> <p>filePath: <code>demo-prod%2f${releaseVersion}-prod.yaml</code></p> </li> <li> <p><code>demo-info-test/-/blob/master/demo-prod/1.0-prod.yaml</code></p> </li> </ul> <p></p> <p>\u5b8c\u6574Pipeline</p> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef k8s = new org.devops.kubernetes()\ndef gitlab = new org.devops.gitlab()\ndef build = new org.devops.buildtools()\n\n\npipeline {\n    agent { node { label \"vagrant-agent\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        choice(name: 'versionName', choices: '1.0\\n1.1\\n1.2\\n1.3', description: 'Please chose your versionName')\n        choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n\n    }\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n      stage('Deploy') {\n            steps {\n                    script{\n                        //\u4e0b\u8f7d\u7248\u672c\u5e93\u6587\u4ef6 \n                        // releaseVersion = \"${branchName}\".split(\"-\")[-1]\n                        releaseVersion = \"${versionName}\"\n                        response = gitlab.GetRepoFile(3,\"demo-prod%2f${releaseVersion}-prod.yaml\")\n                    }\n                } \n            }\n    }\n</code></pre> <p>Console Output</p> <pre><code>...\nMasking supported pattern matches of $gitlabToken\n[Pipeline] {\n[Pipeline] httpRequest\nHttpMethod: GET\nURL: http://192.168.33.1:30088/api/v4/projects/3/repository/files/demo-prod%2f1.0-prod.yaml/raw?ref=master\nContent-Type: application/json\nPRIVATE-TOKEN: *****\nSending request to url: http://192.168.33.1:30088/api/v4/projects/3/repository/files/demo-prod%2f1.0-prod.yaml/raw?ref=master\nResponse Code: HTTP/1.1 200 OK\nResponse: \napiVersion: apps/v1\nkind: Deployment\nmetadata:\n...\n</code></pre>"},{"location":"chap14/3Jen_k8s_pipeline/#3-release-yaml","title":"3\u3001\u66f4\u65b0 release \u6d41\u6c34\u7ebf yaml(\u955c\u50cf)\u53d1\u5e03\u6587\u4ef6","text":""},{"location":"chap14/3Jen_k8s_pipeline/#3-1-gitlab-api","title":"3-1 gitlab API \u66f4\u65b0\u6587\u4ef6\u5185\u5bb9","text":"<pre><code>//\u66f4\u65b0\u6587\u4ef6\u5185\u5bb9\ndef UpdateRepoFile(projectId,filePath,fileContent){\n    apiUrl = \"projects/${projectId}/repository/files/${filePath}\"\n    reqBody = \"\"\"{\"branch\": \"master\",\"encoding\":\"base64\", \"content\": \"${fileContent}\", \"commit_message\": \"update a new file\"}\"\"\"\n    response = HttpReq('PUT',apiUrl,reqBody)\n    println(response)\n\n}\n</code></pre>"},{"location":"chap14/3Jen_k8s_pipeline/#3-2-pipeline-dockerimage-gitlab","title":"3-2 \u5728pipeline\u4e2d\u66f4\u65b0 dockerImage \u5e76\u4e0a\u4f20\u8986\u76d6 gitlab \u539f\u6709\u6587\u4ef6","text":"<pre><code>stage('Pre-deploy') {\n            steps {\n                    script{\n                        //\u4e0b\u8f7d\u7248\u672c\u5e93\u6587\u4ef6 \n                        // releaseVersion = \"${branchName}\".split(\"-\")[-1]\n                        releaseVersion = \"${versionName}\"\n                        response = gitlab.GetRepoFile(3,\"demo-prod%2f${releaseVersion}-prod.yaml\")\n\n                        //\u83b7\u53d6\u6587\u4ef6\u4e2d\u5185\u5bb9\uff08\u955c\u50cf\uff09\n                        fileData = readYaml text: \"\"\"${response}\"\"\"\n                        println(fileData[\"spec\"][\"template\"][\"spec\"][\"containers\"][0][\"image\"])\n                        println(fileData[\"metadata\"][\"resourceVersion\"])\n\n                        // \u66f4\u65b0\u65b0\u7684\u955c\u50cf\n                        dockerImage = \"nyjxi/demo-java-service:master\"\n                        OldImage = fileData[\"spec\"][\"template\"][\"spec\"][\"containers\"][0][\"image\"]\n                        response = response.replace(OldImage,dockerImage)\n                        println(response)\n\n                        //\u66f4\u65b0gitlab\u6587\u4ef6\u5185\u5bb9\n                        base64Content = response.bytes.encodeBase64().toString()\n                        gitlab.UpdateRepoFile(3,\"demo-prod%2f${releaseVersion}-prod.yaml\",base64Content)\n                    }\n                } \n            }\n</code></pre> <p>Console output</p> <pre><code>....\nspec:\n      containers:\n      - image: nyjxi/demo-java-service:master\n        imagePullPolicy: IfNotPresent\n        name: demoapp\n        ports:\n        - containerPort: 8080\n ...\n [Pipeline] withCredentials\nMasking supported pattern matches of $gitlabToken\n[Pipeline] {\n[Pipeline] httpRequest\nHttpMethod: PUT\nURL: http://192.168.33.1:30088/api/v4/projects/3/repository/files/demo-prod%2f1.0-prod.yaml\nContent-Type: application/json\nPRIVATE-TOKEN: *****\nSending request to url: http://192.168.33.1:30088/api/v4/projects/3/repository/files/demo-prod%2f1.0-prod.yaml\nResponse Code: HTTP/1.1 200 OK\nResponse: \n{\"file_path\":\"demo-prod/1.0-prod.yaml\",\"branch\":\"master\"}\nSuccess code from [100\u2025399]\n[Pipeline] }\n[Pipeline] // withCredentials\n[Pipeline] echo\nStatus: 200\n[Pipeline] }\n</code></pre> <p></p>"},{"location":"chap14/3Jen_k8s_pipeline/#4-prod-release","title":"4\u3001\u914d\u7f6e Prod-Release \u6d41\u6c34\u7ebf\u5e94\u7528\u53d1\u5e03","text":""},{"location":"chap14/3Jen_k8s_pipeline/#4-1-kubernetes-api-deployment","title":"4-1 Kubernetes API \u66f4\u65b0 Deployment","text":"<pre><code>def UpdateDeployment(nameSpace,deployName,deplyBody){\n    apiUrl = \"namespaces/${nameSpace}/deployments/${deployName}\"\n    response = HttpReq('PUT',apiUrl,deplyBody)\n    println(response)\n}\n</code></pre>"},{"location":"chap14/3Jen_k8s_pipeline/#4-2-pipeline-api-deployment","title":"4-2 Pipeline \u8c03\u7528API\u66f4\u65b0 Deployment","text":"<pre><code>stage('Pre-deploy') {\n            steps {\n                    script{\n                        //\u4e0b\u8f7d\u7248\u672c\u5e93\u6587\u4ef6 \n                        // releaseVersion = \"${branchName}\".split(\"-\")[-1]\n                        releaseVersion = \"${versionName}\"\n                        response = gitlab.GetRepoFile(3,\"demo-prod%2f${releaseVersion}-prod.yaml\")\n\n                        //\u83b7\u53d6\u6587\u4ef6\u4e2d\u5185\u5bb9\uff08\u955c\u50cf\uff09\n                        fileData = readYaml text: \"\"\"${response}\"\"\"\n                        println(fileData[\"spec\"][\"template\"][\"spec\"][\"containers\"][0][\"image\"])\n                        println(fileData[\"metadata\"][\"resourceVersion\"])\n\n                        // \u66f4\u65b0\u65b0\u7684\u955c\u50cf\n                        dockerImage = \"nyjxi/demo-java-service:master\"\n                        oldImage = fileData[\"spec\"][\"template\"][\"spec\"][\"containers\"][0][\"image\"]\n                        oldVersion = fileData[\"metadata\"][\"resourceVersion\"]\n                        response = response.replace(oldImage,dockerImage)\n                        response = response.replace(oldVersion,\"\")\n                        println(response)\n\n                        //\u66f4\u65b0gitlab\u6587\u4ef6\u5185\u5bb9\n                        base64Content = response.bytes.encodeBase64().toString()\n                        gitlab.UpdateRepoFile(3,\"demo-prod%2f${releaseVersion}-prod.yaml\",base64Content)\n                    }\n                } \n            }\n\n        stage('Deploy-deploy') {\n            agent { node { label \"master\" }}\n            steps {\n                script{\n                   k8s.UpdateDeployment(\"demo-prod\",\"demoapp\",response)      \n                }\n            }\n        }\n</code></pre> <p>Console output</p> <pre><code>...\nRunning on Jenkins in /var/lib/jenkins/workspace/k8s-gitlab-updatefile\n[Pipeline] {\n[Pipeline] script\n[Pipeline] {\n[Pipeline] withCredentials\nMasking supported pattern matches of $kubernetestoken\n[Pipeline] {\n[Pipeline] httpRequest\nHttpMethod: PUT\nURL: https://kubernetes.docker.internal:6443/apis/apps/v1/namespaces/demo-prod/deployments/demoapp\nAuthorization: *****\nContent-Type: application/yaml\nAccept: application/yaml\nSending request to url: https://kubernetes.docker.internal:6443/apis/apps/v1/namespaces/demo-prod/deployments/demoapp\nResponse Code: HTTP/1.1 200 OK\nResponse: \napiVersion: apps/v1\nkind: Deployment\n...\n</code></pre> <pre><code>$ kubectl get pod -n demo-prod\nNAME                       READY   STATUS              RESTARTS   AGE\ndemoapp-564f789c47-fzkbd   1/1     Running             0          6d18h\ndemoapp-766654c58c-x5vgx   0/1     ContainerCreating   0          2s\n...\n\n$ kubectl logs demoapp-766654c58c-x5vgx -n demo-prod\nHello World!\n</code></pre>"},{"location":"chap14/3Jen_k8s_pipeline/#5-prod-release","title":"5\u3001\u5b8c\u6574 Prod-Release \u5e94\u7528\u53d1\u5e03\u6d41\u6c34\u7ebf","text":"<ul> <li><code>gitlab.groovy</code>: https://github.com/Chao-Xi/JenkinslibTest/blob/master/src/org/devops/gitlab.groovy</li> <li><code>kubernetes.groovy</code>: https://github.com/Chao-Xi/JenkinslibTest/blob/master/src/org/devops/kubernetes.groovy</li> </ul>"},{"location":"chap14/3Jen_k8s_pipeline/#5-1-pipeline","title":"5-1\u5b8c\u6574 Pipeline","text":"<ul> <li>\u83b7\u53d6\u8fd0\u884c\u4e2ddeploy\u7684yaml -&gt; \u4e0a\u4f20\u5230gitlab -&gt; \u66f4\u65b0Container Image -&gt; \u4e0a\u4f20\u5230gitlab (yaml)  -&gt; \u5c06\u65b0\u7684yaml apply \u5230\u96c6\u7fa4\u4e2d</li> </ul> <p><code>k8s-gitlab-fullpip</code></p> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef k8s = new org.devops.kubernetes()\ndef gitlab = new org.devops.gitlab()\ndef build = new org.devops.buildtools()\n\n\npipeline {\n    agent { node { label \"vagrant-agent\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        choice(name: 'versionName', choices: '1.0\\n1.1\\n1.2\\n1.3', description: 'Please chose your versionName')\n        choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n\n    }\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n                } \n            }\n        }\n\n        // \u6784\u5efa\u955c\u50cf\n           stage(\"BuildImages\"){\n                steps{\n                    script{\n                        env.serviceName = \"${JOB_NAME}\".split(\"_\")[0]\n\n                        withCredentials([usernamePassword(credentialsId: 'docker-registry-admin', passwordVariable: 'password', usernameVariable: 'username')]) {\n\n                           env.dockerImage = \"nyjxi/${serviceName}:${branchName}\"\n                           sh \"\"\"\n                               docker login -u ${username} -p ${password} \n                               docker build -t nyjxi/${serviceName}:${branchName} .\n                               sleep 1\n                               docker push nyjxi/${serviceName}:${branchName}\n                               sleep 1\n                               #docker rmi nyjxi/devopstest/${serviceName}:${branchName}\n                            \"\"\"\n                        }\n                    }\n                }\n            }\n\n        stage(\"GetDeployment\"){\n            agent { node { label \"master\" }}\n            steps{\n                script{\n                    response = k8s.GetDeployment(\"demo-prod\",\"demoapp\")\n                    response = response.content\n\n                    //\u6587\u4ef6\u8f6c\u6362\n                    base64Content = response.bytes.encodeBase64().toString()\n\n                    //\u4e0a\u4f20\u6587\u4ef6\n                    gitlab.CreateRepoFile(3,\"demo-prod%2f${versionName}-prod.yaml\",base64Content)\n\n                }  \n            }\n        }\n\n\n        stage('Pre-deploy') {\n            steps {\n                    script{\n                        //\u4e0b\u8f7d\u7248\u672c\u5e93\u6587\u4ef6 \n                        // releaseVersion = \"${branchName}\".split(\"-\")[-1]\n                        releaseVersion = \"${versionName}\"\n                        response = gitlab.GetRepoFile(3,\"demo-prod%2f${releaseVersion}-prod.yaml\")\n\n                        //\u83b7\u53d6\u6587\u4ef6\u4e2d\u5185\u5bb9\uff08\u955c\u50cf\uff09\n                        fileData = readYaml text: \"\"\"${response}\"\"\"\n                        println(fileData[\"spec\"][\"template\"][\"spec\"][\"containers\"][0][\"image\"])\n                        println(fileData[\"metadata\"][\"resourceVersion\"])\n\n                        // \u66f4\u65b0\u65b0\u7684\u955c\u50cf\n                        dockerImage = \"nyjxi/demo-java-service:master\"\n                        oldImage = fileData[\"spec\"][\"template\"][\"spec\"][\"containers\"][0][\"image\"]\n                        oldVersion = fileData[\"metadata\"][\"resourceVersion\"]\n                        response = response.replace(oldImage,dockerImage)\n                        response = response.replace(oldVersion,\"\")\n                        println(response)\n\n                        //\u66f4\u65b0gitlab\u6587\u4ef6\u5185\u5bb9\n                        base64Content = response.bytes.encodeBase64().toString()\n                        gitlab.UpdateRepoFile(3,\"demo-prod%2f${releaseVersion}-prod.yaml\",base64Content)\n                    }\n                } \n            }\n\n        stage('Deploy-deploy') {\n            agent { node { label \"master\" }}\n            steps {\n                script{\n                   k8s.UpdateDeployment(\"demo-prod\",\"demoapp\",response)      \n                }\n            }\n        }\n    }\n}\n</code></pre> <p></p> <p></p> <pre><code>$ kubectl get pod -n demo-prod \nNAME                       READY   STATUS             RESTARTS   AGE\ndemoapp-766654c58c-28t4v   0/1     CrashLoopBackOff   12         36m\n\n$ kubectl logs demoapp-766654c58c-28t4v -n demo-prod \nHello World!\n</code></pre>"},{"location":"chap14/4Jen_update_deploy_pip/","title":"\u7b2c\u56db\u8282 \u7248\u672c\u664b\u7ea7\u53ca\u53d1\u5e03\u6d41\u6c34\u7ebf","text":"<ul> <li>https://github.com/Chao-Xi/JenkinslibTest/blob/master/src/org/devops/gitlab.groovy</li> <li>https://github.com/Chao-Xi/JenkinslibTest/blob/master/src/org/devops/kubernetes.groovy</li> </ul>"},{"location":"chap14/4Jen_update_deploy_pip/#1","title":"1\u3001\u914d\u7f6e\u7248\u672c\u664b\u7ea7\u6d41\u6c34\u7ebf","text":"<p>\u664b\u7ea7\uff0f\u7248\u672c\u66f4\u65b0\u6d41\u6c34\u7ebf </p> <ul> <li>\u9009\u62e9\u664b\u7ea7\u7b56\u7565 -&gt; \u6839\u636e\u7248\u672c\u6587\u4ef6\u664b\u7ea7 -&gt; \u751f\u6210\u65b0\u7248\u672c\u6587\u4ef6 </li> </ul>"},{"location":"chap14/4Jen_update_deploy_pip/#1-1","title":"1-1 \u664b\u7ea7\u6d41\u6c34\u7ebf","text":"<p><code>demo-java-service_Update</code></p> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef k8s = new org.devops.kubernetes()\ndef gitlab = new org.devops.gitlab()\n\n// String updateType = \"${env.updateType}\"\n// String releaseVersion = \"${env.releaseVersion}\"\n\npipeline{\n    agent { node { label \"master\" }}\n\n    parameters {\n        choice(name: 'releaseVersion', choices: '1.0\\n1.1\\n1.2\\n1.3', description: 'Please chose your versionName')\n        choice(name: 'updateType', choices: 'UAT -&gt; STAGE\\nSTAGE -&gt; PROD', description: 'Please chose your updateType')\n    }\n\n    stages{\n        stage(\"UAT-&gt;STAGE\"){\n            when {\n                environment name: 'updateType', value: 'UAT -&gt; STAGE' \n            }\n\n            steps {\n                script{\n                    println(\"UAT -&gt; STAGE\")\n\n                   //\u83b7\u53d6UAT\u6587\u4ef6\u4e2d\u7684images\n                    response = gitlab.GetRepoFile(3,\"demo-uat%2f${releaseVersion}-uat.yaml\")\n                    fileData = readYaml text: \"\"\"${response}\"\"\"\n                    uatImage = fileData[\"spec\"][\"template\"][\"spec\"][\"containers\"][0][\"image\"]\n                    println(\"UAT IMAGES --&gt; ${uatImage}\")\n\n                   //\u83b7\u53d6\u6700\u65b0STAG\u73af\u5883\u7684deployment\n                    stagResponse = k8s.GetDeployment(\"demo-stage\",\"demoapp\")\n                    stagResponse = stagResponse.content\n\n                    //\u83b7\u53d6\u955c\u50cf\u548cversion\n                    stagfileData = readYaml text: \"\"\"${stagResponse}\"\"\"\n                    stagOldImage = stagfileData[\"spec\"][\"template\"][\"spec\"][\"containers\"][0][\"image\"]\n                    stagOldVersion = stagfileData[\"metadata\"][\"resourceVersion\"]\n\n                    //\u66f4\u65b0\u955c\u50cf\u548cversion\n                    println(\"STAG OLD IMAGES --&gt; ${stagOldImage}\")\n                    stagResponse = stagResponse.replace(stagOldImage,uatImage)\n                    stagResponse = stagResponse.replace(stagOldVersion,\"\")\n\n                    //\u751f\u6210\u6700\u65b0\u7684STAGE\u7248\u672c\u6587\u4ef6\n                    //\u6587\u4ef6\u8f6c\u6362\n                    base64Content = stagResponse.bytes.encodeBase64().toString()\n                    //\u4e0a\u4f20\u6587\u4ef6\n                    try {\n                        gitlab.CreateRepoFile(3,\"demo-stage%2f${releaseVersion}-stage.yaml\",base64Content)\n                    } catch(e){\n                        gitlab.UpdateRepoFile(3,\"demo-stage%2f${releaseVersion}-stage.yaml\",base64Content)\n                    }\n\n                }\n            }\n        }\n\n\n\n    stage(\"STAG-&gt;PROD\"){\n            when {\n                environment name: 'updateType', value: 'STAGE -&gt; PROD' \n            }\n\n            steps {\n                script{\n                    println(\"STAGE -&gt; PROD\")\n\n                   //\u83b7\u53d6STAG\u6587\u4ef6\u4e2d\u7684images\n                    response = gitlab.GetRepoFile(3,\"demo-stage%2f${releaseVersion}-stage.yaml\")\n                    fileData = readYaml text: \"\"\"${response}\"\"\"\n                    stagImage = fileData[\"spec\"][\"template\"][\"spec\"][\"containers\"][0][\"image\"]\n                    println(\"STAGE IMAGES --&gt; ${stagImage}\")\n\n                   //\u83b7\u53d6\u6700\u65b0PROD\u73af\u5883\u7684deployment\n                    prodResponse = k8s.GetDeployment(\"demo-prod\",\"demoapp\")\n                    prodResponse = prodResponse.content\n\n                    //\u83b7\u53d6\u955c\u50cf\u548cversion\n                    prodfileData = readYaml text: \"\"\"${prodResponse}\"\"\"\n                    prodOldImage = prodfileData[\"spec\"][\"template\"][\"spec\"][\"containers\"][0][\"image\"]\n                    prodOldVersion = prodfileData[\"metadata\"][\"resourceVersion\"]\n\n                    //\u66f4\u65b0\u955c\u50cf\u548cversion\n                    println(\"PROD OLD IMAGES --&gt; ${prodOldImage}\")\n                    prodResponse = prodResponse.replace(prodOldImage,stagImage)\n                    prodResponse = prodResponse.replace(prodOldVersion,\"\")\n\n                    //\u751f\u6210\u6700\u65b0\u7684PROD\u7248\u672c\u6587\u4ef6\n                    //\u6587\u4ef6\u8f6c\u6362\n                    base64Content = prodResponse.bytes.encodeBase64().toString()\n                    //\u4e0a\u4f20\u6587\u4ef6\n                    try {\n                        gitlab.CreateRepoFile(3,\"demo-prod%2f${releaseVersion}-prod.yaml\",base64Content)\n                    } catch(e){\n                        gitlab.UpdateRepoFile(3,\"demo-prod%2f${releaseVersion}-prod.yaml\",base64Content)\n                    }\n\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"chap14/4Jen_update_deploy_pip/#1-2-kubernetesgroovy-api","title":"1-2 \u8c03\u7528\u5728<code>kubernetes.groovy</code> \u5b9a\u4e49 API \u65b9\u6cd5","text":"<pre><code>//\u83b7\u53d6Deployment\ndef GetDeployment(nameSpace,deployName){\n    apiUrl = \"namespaces/${nameSpace}/deployments/${deployName}\"\n    response = HttpReq('GET',apiUrl,'')\n    return response\n}\n</code></pre>"},{"location":"chap14/4Jen_update_deploy_pip/#1-3-gitlabgroovy-api","title":"1-3 \u8c03\u7528\u5728<code>gitlab.groovy</code> \u5b9a\u4e49 API \u65b9\u6cd5","text":"<pre><code>//\u66f4\u65b0\u6587\u4ef6\u5185\u5bb9\ndef UpdateRepoFile(projectId,filePath,fileContent){\n    apiUrl = \"projects/${projectId}/repository/files/${filePath}\"\n    reqBody = \"\"\"{\"branch\": \"master\",\"encoding\":\"base64\", \"content\": \"${fileContent}\", \"commit_message\": \"update a new file\"}\"\"\"\n    response = HttpReq('PUT',apiUrl,reqBody)\n    println(response)\n\n}\n\n//\u83b7\u53d6\u6587\u4ef6\u5185\u5bb9\ndef GetRepoFile(projectId,filePath){\n    apiUrl = \"projects/${projectId}/repository/files/${filePath}/raw?ref=master\"\n    response = HttpReq('GET',apiUrl,'')\n    return response.content\n}\n\n//\u521b\u5efa\u4ed3\u5e93\u6587\u4ef6\ndef CreateRepoFile(projectId,filePath,fileContent){\n    apiUrl = \"projects/${projectId}/repository/files/${filePath}\"\n    reqBody = \"\"\"{\"branch\": \"master\",\"encoding\":\"base64\", \"content\": \"${fileContent}\", \"commit_message\": \"create a new file\"}\"\"\"\n    response = HttpReq('POST',apiUrl,reqBody)\n    println(response)\n}\n</code></pre> <p>Console Output: UAT -&gt; STAGE</p> <pre><code>STAG OLD IMAGES --&gt; bitnami/java-example:0.0.1\n[Pipeline] withCredentials\nMasking supported pattern matches of $gitlabToken\n[Pipeline] {\n[Pipeline] httpRequest\nHttpMethod: POST\nURL: http://192.168.33.1:30088/api/v4/projects/3/repository/files/demo-stage%2f1.0-stage.yaml\nContent-Type: application/json\nPRIVATE-TOKEN: *****\nSending request to url: http://192.168.33.1:30088/api/v4/projects/3/repository/files/demo-stage%2f1.0-stage.yaml\nResponse Code: HTTP/1.1 201 Created\nResponse: \n{\"file_path\":\"demo-stage/1.0-stage.yaml\",\"branch\":\"master\"}\nSuccess code from [100\u2025399]\n[Pipeline] }\n[Pipeline] // withCredentials\n[Pipeline] echo\nStatus: 201\n[Pipeline] }\n[Pipeline] // script\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] stage\n[Pipeline] { (STAG-&gt;PROD)\nStage \"STAG-&gt;PROD\" skipped due to when conditional\n[Pipeline] }\n</code></pre> <p>Console Output: STAGE -&gt; PROD</p> <pre><code>Stage \"UAT-&gt;STAGE\" skipped due to when conditional\n[Pipeline] }\n...\nHttpMethod: POST\nURL: http://192.168.33.1:30088/api/v4/projects/3/repository/files/demo-prod%2f1.0-prod.yaml\nContent-Type: application/json\nPRIVATE-TOKEN: *****\nSending request to url: http://192.168.33.1:30088/api/v4/projects/3/repository/files/demo-prod%2f1.0-prod.yaml\nResponse Code: HTTP/1.1 400 Bad Request\nResponse: \n{\"message\":\"A file with this name already exists\"}\n[Pipeline] }\n[Pipeline] // withCredentials\n[Pipeline] withCredentials\nMasking supported pattern matches of $gitlabToken\n[Pipeline] {\n[Pipeline] httpRequest\nHttpMethod: PUT\nURL: http://192.168.33.1:30088/api/v4/projects/3/repository/files/demo-prod%2f1.0-prod.yaml\nContent-Type: application/json\nPRIVATE-TOKEN: *****\nSending request to url: http://192.168.33.1:30088/api/v4/projects/3/repository/files/demo-prod%2f1.0-prod.yaml\nResponse Code: HTTP/1.1 200 OK\nResponse: \n{\"file_path\":\"demo-prod/1.0-prod.yaml\",\"branch\":\"master\"}\nSuccess code from [100\u2025399]\n[Pipeline] }\n[Pipeline] // withCredentials\n[Pipeline] echo\nStatus: 200\n</code></pre> <p></p> <p></p>"},{"location":"chap14/4Jen_update_deploy_pip/#2","title":"2\u3001\u914d\u7f6e\u5e94\u7528\u53d1\u5e03\u6d41\u6c34\u7ebf","text":""},{"location":"chap14/4Jen_update_deploy_pip/#2-1-uat-stage-prod","title":"2-1 \u53d1\u5e03\u6d41\u6c34\u7ebf\u5230\u4e0d\u540c\u7684\u73af\u5883(Uat, Stage, Prod)","text":"<p>STAG/PROD\u53d1\u5e03\u6d41\u6c34\u7ebf</p> <ul> <li>\u9009\u62e9\u7248\u672c\u53f7 -&gt; \u83b7\u53d6\u7248\u672c\u6587\u4ef6 -&gt; \u53d1\u5e03\u5e94\u7528 </li> </ul> <p><code>demo-java-service_Deploy</code></p> <pre><code>#!groovy\n\n@Library('jenkinslib@master') _\n\n// String stackName = \"${env.stackName}\"\n// String releaseVersion = \"${env.releaseVersion}\"\n\ndef gitlab = new org.devops.gitlab()\ndef k8s = new org.devops.kubernetes()\n\npipeline{\n   agent { node { label \"master\" }}\n\n   parameters {\n        choice(name: 'stackName', choices: '\\nUAT\\nSTAGE\\nPROD', description: 'Please chose your stackName')\n        choice(name: 'releaseVersion', choices: '1.0\\n1.1\\n1.2\\n1.3', description: 'Please chose your versionName')\n    }\n\n   stages{\n\n       stage(\"Deploy\"){\n            steps{\n                script{\n\n                    //\u83b7\u53d6\u7248\u672c\u6587\u4ef6\n                    stack = \"${stackName}\".toLowerCase()\n                    response = gitlab.GetRepoFile(3,\"demo-${stack}%2f${releaseVersion}-${stack}.yaml\")\n                    //\u53d1\u5e03\u5e94\u7528\n                    k8s.UpdateDeployment(\"demo-${stack}\",\"demoapp\",response)\n\n                }  \n           }\n       }\n   }\n}\n</code></pre>"},{"location":"chap14/4Jen_update_deploy_pip/#2-1-kubernetesgroovy-api","title":"2-1 \u8c03\u7528\u5728<code>kubernetes.groovy</code> \u5b9a\u4e49 API \u65b9\u6cd5","text":"<pre><code>//\u66f4\u65b0Deployment\ndef UpdateDeployment(nameSpace,deployName,deplyBody){\n    apiUrl = \"namespaces/${nameSpace}/deployments/${deployName}\"\n    response = HttpReq('PUT',apiUrl,deplyBody)\n    println(response)\n}\n</code></pre> <p>Console Output</p> <pre><code>[Pipeline] httpRequest\nHttpMethod: PUT\nURL: https://kubernetes.docker.internal:6443/apis/apps/v1/namespaces/demo-stage/deployments/demoapp\nAuthorization: *****\nContent-Type: application/yaml\nAccept: application/yaml\nSending request to url: https://kubernetes.docker.internal:6443/apis/apps/v1/namespaces/demo-stage/deployments/demoapp\nResponse Code: HTTP/1.1 200 OK\n...\nSuccess code from [100\u2025399]\n[Pipeline] }\n[Pipeline] // withCredentials\n[Pipeline] echo\nStatus: 200\n</code></pre> <pre><code>$ kubectl get pod -n demo-stage\nNAME                       READY   STATUS        RESTARTS   AGE\ndemoapp-678d789d86-z6dkm   0/1     Terminating   0          3h22m\ndemoapp-7d548887f4-tm25g   0/1     Completed     1          6s\n\n\n$ kubectl logs demoapp-7d548887f4-tm25g -n demo-stage\nHello World!\n</code></pre>"},{"location":"chap14/5back_front_pipeline/","title":"\u7b2c\u4e94\u8282 \u524d\u7aef\u540e\u7aef\u9879\u76ee\u53d1\u5e03\u6d41\u6c34\u7ebf\uff08Java+Nodejs)","text":""},{"location":"chap14/5back_front_pipeline/#1java","title":"1\u3001Java \u9879\u76ee\u6d41\u6c34\u7ebf\u5b9e\u8df5","text":"<ul> <li>\u4f7f\u7528<code>maven</code>\u7f16\u8bd1\u6253\u5305 </li> <li>\u4f7f\u7528<code>Sonar</code>\u626b\u63cf </li> <li>\u7f16\u5199<code>Dockerflie</code>\u6784\u5efa\u955c\u50cf </li> <li>\u81ea\u52a8\u751f\u6210<code>K8s</code>\u90e8\u7f72\u6587\u4ef6\uff0c\u66ff\u6362\u955c\u50cf </li> <li> <p>\u4f7f\u7528<code>Kubectl</code>\u53d1\u5e03\u90e8\u7f72</p> </li> <li> <p>\u4ee3\u7801\u5e93<code>simple-java-maven-app</code></p> </li> </ul> <p>\u6d41\u6c34\u7ebf\u6559\u7a0b(\u7b2c\u4e09\u8282 Jenkins + K8S + Gitlab \u6784\u5efa RLEASE \u6253\u5305\u53d1\u5e03\u66f4\u65b0\u6d41\u6c34\u7ebf\u5230K8S\u96c6\u7fa4)</p>"},{"location":"chap14/5back_front_pipeline/#2nodejs","title":"2\u3001NodeJs \u9879\u76ee\u6d41\u6c34\u7ebf\u5b9e\u8df5","text":"<ul> <li>\u521d\u59cb\u5316\u524d\u7aef\u9879\u76ee </li> <li>\u4f7f\u7528<code>npm</code>\u7f16\u8bd1\u6253\u5305 </li> <li>\u4f7f\u7528<code>Sonar</code>\u524d\u7aef\u626b\u63cf </li> <li>\u7f16\u5199<code>Dockerfile</code>\u6784\u5efa\u955c\u50cf </li> <li>\u7f16\u5199K8s\u90e8\u7f72\u6587\u4ef6\uff0c\u66ff\u6362\u955c\u50cf</li> <li>\u4f7f\u7528<code>Kubectl</code>\u53d1\u5e03\u90e8\u7f72</li> </ul>"},{"location":"chap14/5back_front_pipeline/#2-1","title":"2-1 \u521d\u59cb\u5316\u4e00\u4e2a\u524d\u7aef\u9879\u76ee","text":"<p>1\u3001\u5b89\u88c5 npm \u548c vue-cli</p> <ul> <li>https://chao-xi.github.io/jxjenkinsbook/chap11/2Docker_pipeline/#1-4</li> </ul> <pre><code>install node (wget \u4e0b\u8f7d \u7136\u540e\u58f0\u660e\u73af\u5883\u53d8\u91cf\n\n// \u5b89\u88c5 vue-cli\n\n$ sudo chown -R 1000:1000 \"/home/vagrant/.npm\"\n\n$  npm install -g @vue/cli-init\n</code></pre> <p>2\u3001 gitlab \u521b\u5efa\u4e00\u4e2a\u65b0\u9879\u76ee\uff1a<code>demo-npm-service</code></p> <p><code>demo-npm.yaml</code></p> <pre><code>kind: Deployment\napiVersion: apps/v1\nmetadata:\n  labels:\n    k8s-app: npmdemo\n  name: npmdemo\n  namespace: demo-uat\nspec:\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      k8s-app: npmdemo\n  template:\n    metadata:\n      labels:\n        k8s-app: npmdemo\n      namespace: demo-uat\n      name: npmdemo\n    spec:\n      containers:\n        - name: npmdemo\n          image: nginx:1.17.7\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 80\n              name: web\n              protocol: TCP\n      serviceAccountName: npmdemo\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    k8s-app: npmdemo\n  name: npmdemo\n  namespace: demo-uat\n---\nkind: Service\napiVersion: v1\nmetadata:\n  labels:\n    k8s-app: npmdemo\n  name: npmdemo\n  namespace: demo-uat\nspec:\n  ports:\n    - name: web\n      port: 80\n      targetPort: 80\n  selector:\n    k8s-app: npmdemo\n</code></pre> <p></p> <p>3\u3001\u5feb\u901f\u521b\u5efa\u4e00\u4e2a Pipeline \u9879\u76ee <code>demo_npm_service</code></p> <pre><code>#!groovy\n\n@Library('jenkinslib@master') _\n\ndef k8s = new org.devops.kubernetes()\ndef gitlab = new org.devops.gitlab()\ndef build = new org.devops.buildtools()\n\npipeline {\n    agent { node { label \"vagrant-agent\" }}\n\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-npm-service.git', description: '') \n        choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'npm', description: 'build tool')\n        string(name: 'buildShell', defaultValue: 'install &amp;&amp; npm run build', description: 'build tool')\n    }\n\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n    }\n }\n</code></pre> <p>4\u3001\u8fd0\u884c\u8fd9\u4e2aPipeline, \u7136\u540e\u8fdb\u5165\u8fd9\u4e2a\u9879\u76ee\u4e2d\u521d\u59cb\u5316\u9879\u76ee</p> <pre><code>$ cd demo_npm_service\n$ vue init webpack demo-npm-service\n</code></pre> <p></p> <pre><code>$ cd demo-npm-service\n$ npm install &amp;&amp; npm run build\n</code></pre> <p></p> <pre><code>$ tree dist/\ndist/\n\u251c\u2500\u2500 index.html\n\u2514\u2500\u2500 static\n    \u251c\u2500\u2500 css\n    \u2502   \u251c\u2500\u2500 app.30790115300ab27614ce176899523b62.css\n    \u2502   \u2514\u2500\u2500 app.30790115300ab27614ce176899523b62.css.map\n    \u2514\u2500\u2500 js\n        \u251c\u2500\u2500 app.b22ce679862c47a75225.js\n        \u251c\u2500\u2500 app.b22ce679862c47a75225.js.map\n        \u251c\u2500\u2500 manifest.2ae2e69a05c33dfc65f8.js\n        \u251c\u2500\u2500 manifest.2ae2e69a05c33dfc65f8.js.map\n        \u251c\u2500\u2500 vendor.936b7041a764ab1c3f2c.js\n        \u2514\u2500\u2500 vendor.936b7041a764ab1c3f2c.js.map\n\n3 directories, 9 files\n</code></pre> <p>6\u3001\u4f20\u7edf\u53d1\u5e03\u6d41\u7a0b</p> <pre><code>cd dist/ &amp;&amp; tar zcf demo-npm-service.tar.gz\ncp demo-npm-service.tar.gz /usr/sahre/nginx/html &amp;&amp; tar zxf\n</code></pre> <p>7\u3001Docker\u53d1\u5e03\u6d41\u7a0b</p> <p>Dockerfile</p> <pre><code>FROM nginx:1.17.7\nCOPY demo-npm-service/dist/ /usr/share/nginx/html\n</code></pre>"},{"location":"chap14/5back_front_pipeline/#2-2","title":"2-2 \u5efa\u7acb\u6253\u5305\u53d1\u5e03\u6d41\u6c34\u7ebf","text":"<p><code>demo_npm_service</code></p> <pre><code>#!groovy\n\n@Library('jenkinslib@master') _\n\ndef k8s = new org.devops.kubernetes()\ndef gitlab = new org.devops.gitlab()\ndef build = new org.devops.buildtools()\n\npipeline {\n    agent { node { label \"vagrant-agent\" }}\n\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-npm-service.git', description: '') \n        choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        // choice(name: 'buildType', choices: 'npm', description: 'build tool')\n        // string(name: 'buildShell', defaultValue: 'install &amp;&amp; npm run build', description: 'build tool')\n    }\n\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage(\"Build&amp;Test\"){\n            steps{\n                script{\n                    println(\"\u6267\u884c\u6253\u5305\")\n                    sh \"cd demo-npm-service &amp;&amp; npm install  --unsafe-perm=true &amp;&amp; npm run build  &amp;&amp; ls -l dist/\"\n                }\n            }\n        }\n\n         //\u6784\u5efa\u955c\u50cf\n        stage(\"BuildImages\"){\n            steps{\n                script{\n                    println(\"\u6784\u5efa\u4e0a\u4f20\u955c\u50cf\")\n                    // env.serviceName = \"${JOB_NAME}\".split(\"_\")[0]\n                    env.serviceName = \"${JOB_NAME}\"\n\n                    withCredentials([usernamePassword(credentialsId: 'docker-registry-admin', passwordVariable: 'password', usernameVariable: 'username')]) \n                    {\n\n                        env.dockerImage = \"nyjxi/${serviceName}:${branchName}\"\n                        sh \"\"\"\n                            docker login -u ${username} -p ${password} \n                            docker build -t nyjxi/${serviceName}:${branchName} .\n                            sleep 1\n                            docker push nyjxi/${serviceName}:${branchName}\n                            sleep 1\n                            docker rmi nyjxi/${serviceName}:${branchName}\n                        \"\"\"\n                }\n\n            }\n        }\n    }   \n\n        stage('Checkout-For-Master') {\n            agent { node { label \"hostmachine\" }}\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        //\u53d1\u5e03\n        stage(\"Deploy\"){\n            agent { node { label \"hostmachine\" }}\n\n            steps{\n                script{\n                    println(\"\u53d1\u5e03\u5e94\u7528\")\n\n                    //\u83b7\u53d6\u65e7\u955c\u50cf\n                    yamlData = readYaml file: \"demo-npm.yaml\"\n\n                    println(yamlData[0])\n                    println(yamlData[0][\"spec\"][\"template\"][\"spec\"][\"containers\"][0][\"image\"])\n\n                    oldImage = yamlData[0][\"spec\"][\"template\"][\"spec\"][\"containers\"][0][\"image\"]\n\n                    //\u66ff\u6362\u955c\u50cf\n                    sourceData = readFile file: 'demo-npm.yaml'\n                    println(sourceData)\n                    println(sourceData.getClass()) //returns the exact type of an object.\n                    sourceData = sourceData.replace(oldImage,dockerImage)\n                    println(sourceData)\n\n                    writeFile file: 'demo-npm.yaml', text: \"\"\"${sourceData}\"\"\"\n\n\n                    sh \"\"\"\n                        #cat demo-npm.yaml\n                        kubectl apply -f demo-npm.yaml\n                    \"\"\"\n\n                }\n            }\n        }\n\n    }   \n}\n</code></pre>"},{"location":"chap14/5back_front_pipeline/#1-npm","title":"1. Npm \u521b\u5efa\u4e0e\u6253\u5305","text":"<pre><code>stage(\"Build&amp;Test\"){\n            steps{\n                script{\n                    println(\"\u6267\u884c\u6253\u5305\")\n                    sh \"cd demo-npm-service &amp;&amp; npm install  --unsafe-perm=true &amp;&amp; npm run build  &amp;&amp; ls -l dist/\"\n                }\n            }\n        }\n</code></pre>"},{"location":"chap14/5back_front_pipeline/#2-npm","title":"2. Npm \u6784\u5efa\u955c\u50cf","text":"<pre><code> stage(\"BuildImages\"){\n            steps{\n                script{\n                    println(\"\u6784\u5efa\u4e0a\u4f20\u955c\u50cf\")\n                    // env.serviceName = \"${JOB_NAME}\".split(\"_\")[0]\n                    env.serviceName = \"${JOB_NAME}\"\n\n                    withCredentials([usernamePassword(credentialsId: 'docker-registry-admin', passwordVariable: 'password', usernameVariable: 'username')]) \n                    {\n\n                        env.dockerImage = \"nyjxi/${serviceName}:${branchName}\"\n                        sh \"\"\"\n                            docker login -u ${username} -p ${password} \n                            docker build -t nyjxi/${serviceName}:${branchName} .\n                            sleep 1\n                            docker push nyjxi/${serviceName}:${branchName}\n                            sleep 1\n                            docker rmi nyjxi/${serviceName}:${branchName}\n                        \"\"\"\n                }\n\n            }\n        }\n    }   \n</code></pre>"},{"location":"chap14/5back_front_pipeline/#3-kubectl","title":"3. \u5207\u6362\u6784\u5efa\u673a\u5668\u5e76\u4e0b\u8f7d\u4ee3\u7801\uff08kubectl\u6267\u884c\u73af\u5883\u6240\u5728\u673a\u5668\uff09","text":"<pre><code>stage('Checkout-For-Master') {\n            agent { node { label \"hostmachine\" }}\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n</code></pre>"},{"location":"chap14/5back_front_pipeline/#3-kubectldeployment","title":"3. \u901a\u8fc7<code>kubectl</code>\u66f4\u65b0deployment\u955c\u50cf","text":"<pre><code>stage(\"Deploy\"){\n            agent { node { label \"hostmachine\" }}\n\n            steps{\n                script{\n                    println(\"\u53d1\u5e03\u5e94\u7528\")\n\n                    //\u83b7\u53d6\u65e7\u955c\u50cf\n                    yamlData = readYaml file: \"demo-npm.yaml\"\n\n                    println(yamlData[0])\n                    println(yamlData[0][\"spec\"][\"template\"][\"spec\"][\"containers\"][0][\"image\"])\n\n                    oldImage = yamlData[0][\"spec\"][\"template\"][\"spec\"][\"containers\"][0][\"image\"]\n\n                    //\u66ff\u6362\u955c\u50cf\n                    sourceData = readFile file: 'demo-npm.yaml'\n                    println(sourceData)\n                    println(sourceData.getClass())  //returns the exact type of an object.\n                    sourceData = sourceData.replace(oldImage,dockerImage)\n                    println(sourceData)\n\n                    writeFile file: 'demo-npm.yaml', text: \"\"\"${sourceData}\"\"\"\n\n\n                    sh \"\"\"\n                        #cat demo-npm.yaml\n                        kubectl apply -f demo-npm.yaml\n                    \"\"\"\n\n                }\n            }\n        }\n\n    }   \n}\n</code></pre> <p>Console output</p> <pre><code>\nSuccessConsole Output\nStarted by user admin\nRunning in Durability level: MAX_SURVIVABILITY\nLoading library jenkinslib@master\nExamining Chao-Xi/JenkinslibTest\nAttempting to resolve master as a branch\nResolved master as branch master at revision 4ff6110f7a787bd8eee5e99e0c93cffd2cd265de\nusing credential github\n &gt; git rev-parse --is-inside-work-tree # timeout=10\nFetching changes from the remote Git repository\n &gt; git config remote.origin.url https://github.com/Chao-Xi/JenkinslibTest.git # timeout=10\nFetching without tags\nFetching upstream changes from https://github.com/Chao-Xi/JenkinslibTest.git\n &gt; git --version # timeout=10\n &gt; git --version # 'git version 2.11.0'\nusing GIT_ASKPASS to set credentials \n &gt; git fetch --no-tags --progress -- https://github.com/Chao-Xi/JenkinslibTest.git +refs/heads/master:refs/remotes/origin/master # timeout=10\nChecking out Revision 4ff6110f7a787bd8eee5e99e0c93cffd2cd265de (master)\n &gt; git config core.sparsecheckout # timeout=10\n &gt; git checkout -f 4ff6110f7a787bd8eee5e99e0c93cffd2cd265de # timeout=10\nCommit message: \"add kubernetest\"\n &gt; git rev-list --no-walk 4ff6110f7a787bd8eee5e99e0c93cffd2cd265de # timeout=10\n[Pipeline] Start of Pipeline\n[Pipeline] node\nRunning on vagrant-agent in /home/vagrant/workspace/workspace/demo_npm_service\n[Pipeline] {\n[Pipeline] stage\n[Pipeline] { (Checkout)\n[Pipeline] script\n[Pipeline] {\n[Pipeline] checkout\nusing credential gitlab-admin-user\nFetching changes from the remote Git repository\nChecking out Revision f92f92ad70c37f3f09c95bfbb85befde3335fc4e (origin/master)\nCommit message: \"update dockerfile\"\n &gt; git rev-parse --is-inside-work-tree # timeout=10\n &gt; git config remote.origin.url http://192.168.33.1:30088/root/demo-npm-service.git # timeout=10\nFetching upstream changes from http://192.168.33.1:30088/root/demo-npm-service.git\n &gt; git --version # timeout=10\n &gt; git --version # 'git version 1.8.3.1'\nusing GIT_ASKPASS to set credentials \n &gt; git fetch --tags --progress http://192.168.33.1:30088/root/demo-npm-service.git +refs/heads/*:refs/remotes/origin/* # timeout=10\n &gt; git rev-parse origin/master^{commit} # timeout=10\n &gt; git config core.sparsecheckout # timeout=10\n &gt; git checkout -f f92f92ad70c37f3f09c95bfbb85befde3335fc4e # timeout=10\n &gt; git rev-list --no-walk f92f92ad70c37f3f09c95bfbb85befde3335fc4e # timeout=10\n[Pipeline] }\n[Pipeline] // script\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] stage\n[Pipeline] { (Build&amp;Test)\n[Pipeline] script\n[Pipeline] {\n[Pipeline] echo\n\u6267\u884c\u6253\u5305\n[Pipeline] sh\n+ cd demo-npm-service\n+ npm install --unsafe-perm=true\nnpm WARN ajv-keywords@3.5.2 requires a peer of ajv@^6.9.1 but none is installed. You must install peer dependencies yourself.\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.1.3 (node_modules/fsevents):\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.1.3: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules/watchpack-chokidar2/node_modules/fsevents):\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules/webpack-dev-server/node_modules/fsevents):\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\n\naudited 1274 packages in 8.831s\n\n29 packages are looking for funding\n  run `npm fund` for details\n\nfound 17 vulnerabilities (3 low, 8 moderate, 6 high)\n  run `npm audit fix` to fix them, or `npm audit` for details\n+ npm run build\n\n&gt; demo-npm-service@1.0.0 build /home/vagrant/workspace/workspace/demo_npm_service/demo-npm-service\n&gt; node build/build.js\n\nHash: \u001b[1mcc34753b040c844221bc\u001b[39m\u001b[22m\nVersion: webpack \u001b[1m3.12.0\u001b[39m\u001b[22m\nTime: \u001b[1m10232\u001b[39m\u001b[22mms\n                                                  \u001b[1mAsset\u001b[39m\u001b[22m       \u001b[1mSize\u001b[39m\u001b[22m  \u001b[1mChunks\u001b[39m\u001b[22m  \u001b[1m\u001b[39m\u001b[22m           \u001b[1m\u001b[39m\u001b[22m\u001b[1mChunk Names\u001b[39m\u001b[22m\n               \u001b[1m\u001b[32mstatic/js/vendor.936b7041a764ab1c3f2c.js\u001b[39m\u001b[22m     123 kB       \u001b[1m0\u001b[39m\u001b[22m  \u001b[1m\u001b[32m[emitted]\u001b[39m\u001b[22m  vendor\n                  \u001b[1m\u001b[32mstatic/js/app.b22ce679862c47a75225.js\u001b[39m\u001b[22m    11.6 kB       \u001b[1m1\u001b[39m\u001b[22m  \u001b[1m\u001b[32m[emitted]\u001b[39m\u001b[22m  app\n             \u001b[1m\u001b[32mstatic/js/manifest.2ae2e69a05c33dfc65f8.js\u001b[39m\u001b[22m  857 bytes       \u001b[1m2\u001b[39m\u001b[22m  \u001b[1m\u001b[32m[emitted]\u001b[39m\u001b[22m  manifest\n    \u001b[1m\u001b[32mstatic/css/app.30790115300ab27614ce176899523b62.css\u001b[39m\u001b[22m  432 bytes       \u001b[1m1\u001b[39m\u001b[22m  \u001b[1m\u001b[32m[emitted]\u001b[39m\u001b[22m  app\n\u001b[1m\u001b[32mstatic/css/app.30790115300ab27614ce176899523b62.css.map\u001b[39m\u001b[22m  797 bytes        \u001b[1m\u001b[39m\u001b[22m  \u001b[1m\u001b[32m[emitted]\u001b[39m\u001b[22m  \n           \u001b[1m\u001b[32mstatic/js/vendor.936b7041a764ab1c3f2c.js.map\u001b[39m\u001b[22m     619 kB       \u001b[1m0\u001b[39m\u001b[22m  \u001b[1m\u001b[32m[emitted]\u001b[39m\u001b[22m  vendor\n              \u001b[1m\u001b[32mstatic/js/app.b22ce679862c47a75225.js.map\u001b[39m\u001b[22m    22.2 kB       \u001b[1m1\u001b[39m\u001b[22m  \u001b[1m\u001b[32m[emitted]\u001b[39m\u001b[22m  app\n         \u001b[1m\u001b[32mstatic/js/manifest.2ae2e69a05c33dfc65f8.js.map\u001b[39m\u001b[22m    4.97 kB       \u001b[1m2\u001b[39m\u001b[22m  \u001b[1m\u001b[32m[emitted]\u001b[39m\u001b[22m  manifest\n                                             \u001b[1m\u001b[32mindex.html\u001b[39m\u001b[22m  518 bytes        \u001b[1m\u001b[39m\u001b[22m  \u001b[1m\u001b[32m[emitted]\u001b[39m\u001b[22m  \n\n  Build complete.\n\n  Tip: built files are meant to be served over an HTTP server.\n  Opening index.html over file:// won't work.\n\n+ ls -l dist/\ntotal 4\n-rw-rw-r--. 1 vagrant vagrant 518 Aug 29 02:11 index.html\ndrwxrwxr-x. 4 vagrant vagrant  27 Aug 29 02:11 static\n[Pipeline] }\n[Pipeline] // script\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] stage\n[Pipeline] { (BuildImages)\n[Pipeline] script\n[Pipeline] {\n[Pipeline] echo\n\u6784\u5efa\u4e0a\u4f20\u955c\u50cf\n[Pipeline] withCredentials\nMasking supported pattern matches of $username or $password\n[Pipeline] {\n[Pipeline] sh\n+ docker login -u **** -p ****\nWARNING! Using --password via the CLI is insecure. Use --password-stdin.\nWARNING! Your password will be stored unencrypted in /home/vagrant/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n\nLogin Succeeded\n+ docker build -t ****/demo_npm_service:master .\nSending build context to Docker daemon  162.7MB\n\nStep 1/2 : FROM nginx:1.17.7\n ---&gt; c7460dfcab50\nStep 2/2 : COPY demo-npm-service/dist/ /usr/share/nginx/html\n ---&gt; 7bfb4e14b75f\nSuccessfully built 7bfb4e14b75f\nSuccessfully tagged ****/demo_npm_service:master\n+ sleep 1\n+ docker push ****/demo_npm_service:master\nThe push refers to repository [docker.io/****/demo_npm_service]\n33aa390ffe98: Preparing\nc26e88311e71: Preparing\n17fde96446df: Preparing\n556c5fb0d91b: Preparing\n17fde96446df: Layer already exists\nc26e88311e71: Layer already exists\n556c5fb0d91b: Layer already exists\n33aa390ffe98: Pushed\nmaster: digest: sha256:b07347f3144a8d72dda47b8b6a8c6688e8be505890d83ec6d6fead467b073982 size: 1158\n+ sleep 1\n+ docker rmi ****/demo_npm_service:master\nUntagged: ****/demo_npm_service:master\nUntagged: ****/demo_npm_service@sha256:b07347f3144a8d72dda47b8b6a8c6688e8be505890d83ec6d6fead467b073982\nDeleted: sha256:7bfb4e14b75f7844a4d8d5c859e58e18b951e47ea5528cee8cf6092921c7b68c\nDeleted: sha256:f8efe6a8a2c3832f337ed137ffbb50db64a2d7e4bbd5844b221acefe5c5e021d\n[Pipeline] }\n[Pipeline] // withCredentials\n...\n\u53d1\u5e03\u5e94\u7528\n[Pipeline] readYaml\n[Pipeline] echo\n{kind=Deployment, apiVersion=apps/v1, metadata={labels={k8s-app=npmdemo}, name=npmdemo, namespace=demo-uat}, spec={replicas=1, revisionHistoryLimit=10, selector={matchLabels={k8s-app=npmdemo}}, template={metadata={labels={k8s-app=npmdemo}, namespace=demo-uat, name=npmdemo}, spec={containers=[{name=npmdemo, image=nginx:1.17.7, imagePullPolicy=IfNotPresent, ports=[{containerPort=80, name=web, protocol=TCP}]}], serviceAccountName=npmdemo}}}}\n[Pipeline] echo\nnginx:1.17.7\n[Pipeline] readFile\n[Pipeline] echo\nkind: Deployment\napiVersion: apps/v1\n...\n[Pipeline] writeFile\n[Pipeline] sh\n+ kubectl apply -f demo-npm.yaml\ndeployment.apps/npmdemo configured\nserviceaccount/npmdemo unchanged\nservice/npmdemo unchanged\n</code></pre> <pre><code>\n$ kubectl get pods -o custom-columns='NAME:metadata.name,IMAGES:spec.containers[*].image' -n demo-uat\nNAME                       IMAGES\nnpmdemo-5fd79bfd49-gt88v   nyjxi/demo_npm_service:master\n</code></pre> <pre><code>$ kubectl get svc -n demo-uat\nNAME      TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)   AGE\nnpmdemo   ClusterIP   10.105.172.158   &lt;none&gt;        80/TCP    6h27m\n\n$ kubectl port-forward svc/npmdemo -n demo-uat 3333:80\nForwarding from 127.0.0.1:3333 -&gt; 80\nForwarding from [::1]:3333 -&gt; 80\n</code></pre> <p></p> <p></p>"},{"location":"chap14/6Android_pipeline/","title":"\u7b2c\u516d\u8282 \u6784\u5efaAndroid\u9879\u76ee\u6d41\u6c34\u7ebf","text":""},{"location":"chap14/6Android_pipeline/#1-android","title":"1\u3001\u914d\u7f6e Android \u9879\u76ee\u5f00\u53d1\u73af\u5883","text":""},{"location":"chap14/6Android_pipeline/#1-1-jdk","title":"1-1 \u5b89\u88c5JDK","text":"<p>\u4e0b\u8f7d\u5730\u5740: http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</p> <pre><code>tar zxf jdk-8u201-linux-x64.tar.gz -C /usr/local\n\n#\u6dfb\u52a0\u5230/etc/profile\nexport JAVA_HOME=/usr/local/jdk1.8.0_201\nexport PATH=$PATH:$JAVA_HOME/bin\n\nsource /etc/profile\n\njava -version\n</code></pre> <pre><code>$ java -version\nopenjdk version \"1.8.0_252\"\nOpenJDK Runtime Environment (build 1.8.0_252-b09)\nOpenJDK 64-Bit Server VM (build 25.252-b09, mixed mode)\n</code></pre>"},{"location":"chap14/6Android_pipeline/#1-2-android-sdk-tools","title":"1-2 \u5b89\u88c5Android SDK Tools","text":"<p>https://developer.android.com/studio/index.html</p> <p></p> <pre><code>$ sudo wget  wget https://dl.google.com/android/repository/commandlinetools-linux-6609375_latest.zip\n$ unzip commandlinetools-linux-6609375_latest.zip\n$ sudo cp -r tools/ /opt/tools\n$ sudo ln -s /opt/tools/ /usr/local/tools\n\n$ sudo vim /etc/profile.d/sdk.sh\n\n\n#!/bin/bash\n\nexport ANDROID_HOME=/usr/local/\nexport PATH=$PATH:$ANDROID_HOME/tools/bin\n\nsudo  chmod +x /etc/profile.d/sdk.sh\nsource /etc/profile.d/sdk.sh\n</code></pre>"},{"location":"chap14/6Android_pipeline/#1-4-sdkmanager","title":"1-4 SDKmanager","text":"<p>https://www.jianshu.com/p/f1f209135d5a</p> <pre><code>#\u9a8c\u8bc1\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u51c6\u786e\n$  sdkmanager --list --sdk_root=/usr/local/tools --no_https --proxy=http --proxy_host=proxy.sha.sap.corp --proxy_port=8080\n\n</code></pre>"},{"location":"chap14/6Android_pipeline/#1-3-gradle","title":"1-3 \u5b89\u88c5Gradle","text":"<ul> <li>https://gradle.org/releases/</li> <li>https://chao-xi.github.io/jxjenkinsbook/chap4/1chp4_tools1/#3-gradle</li> </ul> <pre><code>$ gradle -v\n\n------------------------------------------------------------\nGradle 6.5\n------------------------------------------------------------\n\nBuild time:   2020-06-02 20:46:21 UTC\nRevision:     a27f41e4ae5e8a41ab9b19f8dd6d86d7b384dad4\n\nKotlin:       1.3.72\nGroovy:       2.5.11\nAnt:          Apache Ant(TM) version 1.10.7 compiled on September 1 2019\nJVM:          1.8.0_252 (Oracle Corporation 25.252-b09)\nOS:           Linux 3.10.0-957.12.2.el7.x86_64 amd64\n</code></pre> <pre><code>$ sdkmanager --list --sdk_root=/usr/local/tools --no_https --proxy=http --proxy_host=proxy.sha.sap.corp --proxy_port=8080\n\n$ sdkmanager \"platforms;android-28\" --sdk_root=/opt/tools --no_https --proxy=http --proxy_host=proxy.sha.sap.corp --proxy_port=8080\n\n$ sdkmanager \"build-tools;26.0.2\" \"platforms;android-26\" --sdk_root=/usr/local/tools --no_https --proxy=http --proxy_host=proxy.sha.sap.corp --proxy_port=8080\n\n\nsdkmanager \"platforms;android-26\" --sdk_root=/usr/local/tools --no_https --proxy=http --proxy_host=proxy.sha.sap.corp --proxy_port=8080\n\n$ sdkmanager --licenses --sdk_root=/opt/tools --no_https --proxy=http --proxy_host=proxy.sha.sap.corp --proxy_port=8080\n\n\nsdkmanager --sdk_root=/usr/local/tools --update &amp;&amp; yes | sdkmanager --licenses --sdk_root=/usr/local/tools \n\n\n$ sdkmanager --uninstall  \"build-tools;26.0.2\" --sdk_root=/opt  --no_https --proxy=http --proxy_host=proxy.sha.sap.corp --proxy_port=8080#\u5378\u8f7d\u8fd9\u4e2a\u5305\n\n</code></pre>"},{"location":"chap14/7Jenkins_azure_mern/","title":"\u7b2c\u4e03\u8282 \u57fa\u4e8eAzure\u90e8\u7f72Jenkins\u670d\u52a1\u5e76\u5f00\u53d1MERN\u5e94\u7528\u7684CI/CD\u6784\u5efa\u7ba1\u9053","text":"<p>\u968f\u7740\u5f00\u53d1\u8f6f\u4ef6\uff0c\u8fd8\u5fc5\u987b\u5c06\u5176\u4e0e\u4ee5\u524d\u7684\u4ee3\u7801\u6301\u7eed\u96c6\u6210\u5e76\u5c06\u5176\u90e8\u7f72\u5230\u670d\u52a1\u5668\u3002\u624b\u52a8\u6267\u884c\u6b64\u64cd\u4f5c\u662f\u4e00\u4e2a\u8017\u65f6\u7684\u8fc7\u7a0b\uff0c\u6709\u65f6\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002</p> <p>\u6211\u4eec\u5c06\u8ba8\u8bba\u5982\u4f55\u901a\u8fc7\u4f7f\u7528 Jenkins \u8bbe\u7f6e CI/CD \u7ba1\u9053\u6765\u6539\u8fdb MERN\uff08MongoDB\u3001Express\u3001React \u548c NodeJs\uff09\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u8fc7\u7a0b\u3002\u60a8\u5c06\u4e86\u89e3\u5982\u4f55\u81ea\u52a8\u90e8\u7f72\u4ee5\u5b9e\u73b0\u66f4\u5feb\u3001\u66f4\u9ad8\u6548\u7684\u53d1\u5e03\u3002</p> <p>\u5148\u51b3\u6761\u4ef6</p> <ul> <li>\u5bf9 MERN \u5806\u6808\u6280\u672f\u7684\u57fa\u672c\u4e86\u89e3\u3002</li> <li>\u5bf9Docker\u7684\u57fa\u672c\u4e86\u89e3\u3002</li> <li>\u4eceGitHub\u83b7\u53d6\u6e90\u4ee3\u7801</li> </ul>"},{"location":"chap14/7Jenkins_azure_mern/#_1","title":"\u95ee\u9898","text":"<p>\u8003\u8651\u4e00\u4e0b\u8fd9\u4e2a\u751f\u4ea7\u529b\u5e94\u7528\u7a0b\u5e8f\u2014\u2014\u8fd9\u662f\u6211\u4eec\u5c06\u5728\u672c\u6587\u4e2d\u4f7f\u7528\u7684 MERN \u9879\u76ee\u3002\u4ece\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u5230\u5c06\u5176\u63a8\u9001\u5230 Docker \u4e2d\u5fc3\uff0c\u6211\u4eec\u5fc5\u987b\u5b8c\u6210\u8bb8\u591a\u6b65\u9aa4\u3002</p> <p></p> <p>https://github.com/itsrakeshhq/productivity-app</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u5fc5\u987b\u4f7f\u7528\u547d\u4ee4\u8fd0\u884c\u6d4b\u8bd5\u4ee5\u786e\u5b9a\u6240\u6709\u6d4b\u8bd5\u662f\u5426\u901a\u8fc7\u3002\u5982\u679c\u6240\u6709\u6d4b\u8bd5\u90fd\u901a\u8fc7\uff0c\u6211\u4eec\u5c06\u6784\u5efa Docker \u955c\u50cf\uff0c\u7136\u540e\u5c06\u8fd9\u4e9b\u955c\u50cf\u63a8\u9001\u5230 Docker Hub\u3002\u5982\u679c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u6781\u5176\u590d\u6742\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u91c7\u53d6\u989d\u5916\u7684\u6b65\u9aa4\u3002</p> <p>\u73b0\u5728\uff0c\u5047\u8bbe\u6211\u4eec\u624b\u52a8\u5b8c\u6210\u6240\u6709\u64cd\u4f5c\uff0c\u8fd9\u65e2\u8d39\u65f6\u53c8\u53ef\u80fd\u5bfc\u81f4\u9519\u8bef\u3002</p>"},{"location":"chap14/7Jenkins_azure_mern/#_2","title":"\u89e3\u51b3\u65b9\u6848","text":"<p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a CI/CD\u6d41\u6c34\u7ebf\u3002\u56e0\u6b64\uff0c\u6bcf\u5f53\u60a8\u6dfb\u52a0\u529f\u80fd\u6216\u4fee\u590d\u9519\u8bef\u65f6\uff0c\u90fd\u4f1a\u89e6\u53d1\u6b64\u7ba1\u9053\u3002\u8fd9\u4f1a\u81ea\u52a8\u6267\u884c\u4ece\u6d4b\u8bd5\u5230\u90e8\u7f72\u7684\u6240\u6709\u6b65\u9aa4\u3002</p> <p>\u4ec0\u4e48\u662f CI/CD\uff0c\u4e3a\u4ec0\u4e48\u91cd\u8981\uff1f</p> <p>\u6301\u7eed\u96c6\u6210\u548c\u6301\u7eed\u90e8\u7f72\u662f\u4e3a\u81ea\u52a8\u5316\u8f6f\u4ef6\u96c6\u6210\u548c\u90e8\u7f72\u800c\u6267\u884c\u7684\u4e00\u7cfb\u5217\u6b65\u9aa4\u3002CI/CD \u662f DevOps \u7684\u6838\u5fc3</p> <p></p> <p>\u4ece\u5f00\u53d1\u5230\u90e8\u7f72\uff0c\u6211\u4eec\u7684 MERN \u5e94\u7528\u7a0b\u5e8f\u7ecf\u5386\u4e86\u56db\u4e2a\u4e3b\u8981\u9636\u6bb5\uff1a\u6d4b\u8bd5\u3001\u6784\u5efa Docker \u955c\u50cf\u3001\u63a8\u9001\u5230\u6ce8\u518c\u8868\u4ee5\u53ca\u90e8\u7f72\u5230\u4e91\u63d0\u4f9b\u5546\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u901a\u8fc7\u8fd0\u884c\u5404\u79cd\u547d\u4ee4\u624b\u52a8\u5b8c\u6210\u7684\u3002\u6bcf\u6b21\u6dfb\u52a0\u65b0\u529f\u80fd\u6216\u4fee\u590d\u9519\u8bef\u65f6\uff0c\u6211\u4eec\u90fd\u9700\u8981\u8fd9\u6837\u505a\u3002</p> <p>\u4f46\u8fd9\u4f1a\u663e\u7740\u964d\u4f4e\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u4f5c\u6548\u7387\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 CI/CD \u53ef\u4ee5\u5982\u6b64\u6709\u52a9\u4e8e\u81ea\u52a8\u5316\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u63a8\u9001\u5230\u6ce8\u518c\u8868\u4e4b\u524d\u7684\u6b65\u9aa4\u3002</p>"},{"location":"chap14/7Jenkins_azure_mern/#_3","title":"\u8be5\u9879\u76ee","text":"<p>\u6211\u4eec\u5c06\u5728\u672c\u6559\u7a0b\u4e2d\u4f7f\u7528\u7684\u9879\u76ee\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u5168\u6808 MERN \u5e94\u7528\u7a0b\u5e8f\u3002</p> <p></p> <p>\u5b83\u5305\u542b\u4e24\u4e2a\u5fae\u670d\u52a1\u3002</p> <ul> <li>\u524d\u7aef</li> <li>\u540e\u7aef</li> </ul> <p>\u8fd9\u4e24\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u5305\u542b\u4e00\u4e2a Dockerfile\u3002</p>"},{"location":"chap14/7Jenkins_azure_mern/#jenkins","title":"\u4ec0\u4e48\u662fJenkins\uff1f","text":"<p>\u8981\u8fd0\u884c CI/CD \u7ba1\u9053\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a CI/CD \u670d\u52a1\u5668\u3002\u8fd9\u662f\u7ba1\u9053\u4e2d\u7f16\u5199\u7684\u6240\u6709\u6b65\u9aa4\u8fd0\u884c\u7684\u5730\u65b9\u3002</p> <p>\u5e02\u573a\u4e0a\u6709\u8bb8\u591a\u53ef\u7528\u7684\u670d\u52a1\uff0c\u5305\u62ec GitHub Actions\u3001Travis CI\u3001Circle CI\u3001GitLab CI/CD\u3001AWS CodePipeline\u3001Azure DevOps \u548c Google Cloud Build\u3002Jenkins \u662f\u4e00\u79cd\u6d41\u884c\u7684 CI/CD \u5de5\u5177\uff0c\u6211\u4eec\u5c06\u5728\u8fd9\u91cc\u4f7f\u7528\u5b83\u3002</p> <p>\u5982\u4f55\u5728 Azure \u4e0a\u8bbe\u7f6e Jenkins \u670d\u52a1\u5668</p> <p>\u56e0\u4e3a Jenkins \u662f\u5f00\u6e90\u7684\u5e76\u4e14\u5b83\u4e0d\u63d0\u4f9b\u4e91\u89e3\u51b3\u65b9\u6848\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5728\u672c\u5730\u8fd0\u884c\u5b83\u6216\u5728\u4e91\u63d0\u4f9b\u5546\u4e0a\u81ea\u884c\u6258\u7ba1\u3002\u73b0\u5728\uff0c\u5728\u672c\u5730\u8fd0\u884c\u53ef\u80fd\u5f88\u56f0\u96be\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e Windows \u7528\u6237\u800c\u8a00\u3002\u56e0\u6b64\uff0c\u6211\u9009\u62e9\u5728 Azure \u4e0a\u81ea\u884c\u6258\u7ba1\u6b64\u6f14\u793a\u3002</p> <p>\u5982\u679c\u60a8\u60f3\u5728\u672c\u5730\u8fd0\u884c\u6216\u5728 Azure \u4ee5\u5916\u7684\u5730\u65b9\u81ea\u884c\u6258\u7ba1\uff08\u9075\u5faaJenkins \u7684\u8fd9\u4e9b\u6307\u5357\uff09\uff0c\u8bf7\u8df3\u8fc7\u6b64\u90e8\u5206\u5e76\u7ee7\u7eed\u9605\u8bfb\u5982\u4f55\u914d\u7f6e Jenkins\u90e8\u5206\u3002</p> <p>\u9996\u5148\uff0c\u60a8\u9700\u8981\u767b\u5f55\u60a8\u7684Azure\u5e10\u6237\uff08\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\uff0c\u8bf7\u521b\u5efa\u4e00\u4e2a\uff09\u3002\u6253\u5f00 Azure Cloud Shell\u3002</p> <p></p> <p>\u7136\u540e\u521b\u5efa\u4e00\u4e2a\u540d\u4e3ajenkins\u5b58\u50a8\u6240\u6709 Jenkins \u914d\u7f6e\u7684\u76ee\u5f55\uff0c\u5e76\u5207\u6362\u5230\u8be5\u76ee\u5f55\uff1a</p> <pre><code>mkdir jenkins\ncd jenkins\n</code></pre> <p>\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a<code>cloud-init-jenkins.txt</code>. \u4f7f\u7528 nano \u6216 vim \u6253\u5f00\uff0c</p> <pre><code>touch cloud-init-jenkins.txt\nnano cloud-init-jenkins.txt\n</code></pre> <p>\u5e76\u5c06\u6b64\u4ee3\u7801\u7c98\u8d34\u5230\u5176\u4e2d\uff1a</p> <pre><code>#cloud-config\npackage_upgrade: true\nruncmd:\n  - sudo apt install openjdk-11-jre -y\n  - wget -qO - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -\n  - sh -c 'echo deb https://pkg.jenkins.io/debian-stable binary/ &gt; /etc/apt/sources.list.d/jenkins.list'\n  - sudo apt-get update &amp;&amp; sudo apt-get install jenkins -y\n  - sudo service jenkins restart\n</code></pre> <p>\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u5728\u521b\u5efa\u865a\u62df\u673a\u540e\u4f7f\u7528\u6b64\u6587\u4ef6\u6765\u5b89\u88c5 Jenkins\u3002\u9996\u5148\uff0c\u6211\u4eec\u5b89\u88c5 openjdk\uff0c\u8fd9\u662f Jenkins \u8fd0\u884c\u6240\u5fc5\u9700\u7684\u3002Jenkins \u670d\u52a1\u4f1a\u5728\u6211\u4eec\u5b89\u88c5\u540e\u91cd\u65b0\u542f\u52a8\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u521b\u5efa\u4e00\u4e2a\u8d44\u6e90\u7ec4\u3002\uff08Azure \u4e2d\u7684\u8d44\u6e90\u7ec4\u5c31\u50cf\u4e00\u4e2a\u5bb9\u5668\uff0c\u5c06\u9879\u76ee\u7684\u6240\u6709\u76f8\u5173\u8d44\u6e90\u4fdd\u5b58\u5728\u4e00\u4e2a\u7ec4\u4e2d\uff09</p> <pre><code>az group create --name jenkins-rg --location centralindia\n</code></pre> <p>\u6ce8\u610f\uff1a\u786e\u4fdd\u5c06\u4f4d\u7f6e\u66f4\u6539\u4e3a\u79bb\u60a8\u6700\u8fd1\u7684\u4f4d\u7f6e\u3002</p> <p>\u73b0\u5728\uff0c\u521b\u5efa\u4e00\u4e2a\u865a\u62df\u673a\u3002</p> <pre><code>az vm create \\\n--resource-group jenkins-rg \\\n--name jenkins-vm \\\n--image UbuntuLTS \\\n--admin-username \"azureuser\" \\\n--generate-ssh-keys \\\n--public-ip-sku Standard \\\n--custom-data cloud-init-jenkins.txt\n</code></pre> <p>\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u9a8c\u8bc1 VM \u5b89\u88c5\uff1a</p> <pre><code>az vm list -d -o table --query \"[?name=='jenkins-vm']\"\n</code></pre> <p>\u4e0d\u8981\u6df7\u6dc6\u3002\u6b64\u547d\u4ee4\u53ea\u662f\u4ee5\u8868\u683c\u683c\u5f0f\u663e\u793a JSON \u6570\u636e\uff0c\u4ee5\u4fbf\u4e8e\u9a8c\u8bc1\u3002</p> <p>Jenkins \u670d\u52a1\u5668\u5728 <code>8080 port</code> \u4e0a\u8fd0\u884c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u6211\u4eec\u7684 VM \u4e0a\u516c\u5f00\u8fd9\u4e2a\u7aef\u53e3\u3002\u4f60\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a</p> <pre><code>az vm open-port \\\n--resource-group jenkins-rg \\\n--name jenkins-vm  \\\n--port 8080 --priority 1010\n</code></pre> <p>\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 URL \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee Jenkins \u4eea\u8868\u677f<code>http://&lt;your-vm-ip&gt;:8080</code> \u3002\u4f7f\u7528\u6b64\u547d\u4ee4\u83b7\u53d6 VM IP \u5730\u5740\uff1a</p> <pre><code>az vm show \\\n--resource-group jenkins-rg \\\n--name jenkins-vm -d \\\n--query [publicIps] \\\n--output tsv\n</code></pre> <p>\u60a8\u73b0\u5728\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u770b\u5230 Jenkins \u5e94\u7528\u7a0b\u5e8f\u3002</p> <p></p> <p>\u60a8\u4f1a\u6ce8\u610f\u5230\uff0cJenkins \u8981\u6c42\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u81ea\u52a8\u751f\u6210\u7684\u7ba1\u7406\u5458\u5bc6\u7801\u3002</p> <p>\u4f46\u9996\u5148\u8ba9\u6211\u4eec\u901a\u8fc7 SSH \u8fdb\u5165\u5b89\u88c5\u4e86 Jenkins \u7684\u865a\u62df\u673a\u3002</p> <pre><code>ssh azureuser@&lt;ip_address&gt;\n</code></pre> <p>\u73b0\u5728\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u83b7\u53d6\u5bc6\u7801\uff1a</p> <pre><code>sudo cat /var/lib/jenkins/secrets/initialAdminPassword\n</code></pre> <p>\u590d\u5236\u5e76\u7c98\u8d34\u5b83\u3002\u7136\u540e\u70b9\u51fb\u7ee7\u7eed\u3002</p>"},{"location":"chap14/7Jenkins_azure_mern/#jenkins_1","title":"\u5982\u4f55\u914d\u7f6eJenkins","text":"<p>\u9996\u5148\uff0c\u60a8\u9700\u8981\u70b9\u51fbInstall suggested plugins\u3002\u5b89\u88c5\u6240\u6709\u63d2\u4ef6\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u3002</p> <p>\u9700\u8981\u7ba1\u7406\u5458\u7528\u6237\u6765\u9650\u5236\u5bf9 Jenkins \u7684\u8bbf\u95ee\u3002\u56e0\u6b64\uff0c\u7ee7\u7eed\u521b\u5efa\u4e00\u4e2a\u3002\u5b8c\u6210\u540e\u70b9\u51fb\u4fdd\u5b58\u5e76\u7ee7\u7eed\u3002</p> <p>\u73b0\u5728\u60a8\u5c06\u770b\u5230 Jenkins \u4eea\u8868\u677f\u3002</p> <p>\u7b2c\u4e00\u6b65\u662f\u5b89\u88c5\u201cBlue Ocean\u201d\u63d2\u4ef6\u3002Jenkins \u6709\u4e00\u4e2a\u975e\u5e38\u53e4\u8001\u7684\u754c\u9762\uff0c\u8fd9\u53ef\u80fd\u4f1a\u8ba9\u4e00\u4e9b\u4eba\u96be\u4ee5\u4f7f\u7528\u3002\u8fd9\u4e2a\u84dd\u6d77\u63d2\u4ef6\u4e3a\u4e00\u4e9b Jenkins \u7ec4\u4ef6\uff08\u6bd4\u5982\u521b\u5efa\u7ba1\u9053\uff09\u63d0\u4f9b\u4e86\u4e00\u4e2a\u73b0\u4ee3\u63a5\u53e3\u3002</p> <p>\u8981\u5b89\u88c5\u63d2\u4ef6\uff0c\u8bf7\u8f6c\u5230<code>Manage Jenkins -&gt; \u5355\u51fbSystem Configuration\u4e0b\u7684Manage Plugins -&gt; Available plugins</code>\u3002</p> <p>\u641c\u7d22\u201cBlue Ocean\u201d -&gt; \u52fe\u9009\u65b9\u6846\u5e76\u70b9\u51fbDownload now and install after restart\u3002</p> <p></p>"},{"location":"chap14/7Jenkins_azure_mern/#jenkinsfile","title":"\u5982\u4f55\u7f16\u5199 Jenkinsfile","text":"<p>\u8981\u521b\u5efa\u7ba1\u9053\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2aJenkinsfile\u3002\u8be5\u6587\u4ef6\u5305\u542b\u6240\u6709\u7ba1\u9053\u914d\u7f6e\u2014\u2014\u9636\u6bb5\u3001\u6b65\u9aa4\u7b49\u3002Jenkinsfile \u4e4b\u4e8e Jenkins \u5c31\u50cf Dockerfile \u4e4b\u4e8e Docker\u3002</p> <p>Jenkinsfile \u4f7f\u7528Groovy\u8bed\u6cd5\u3002\u8bed\u6cd5\u975e\u5e38\u7b80\u5355\u3002\u770b\u4e00\u773c\u5c31\u80fd\u660e\u767d\u4e00\u5207\u3002 \u8ba9\u6211\u4eec\u5f00\u59cb\u5199\uff1a</p> <pre><code>pipeline {\n\n}\n</code></pre> <p><code>agent</code> \u4e00\u8bcd\u5e94\u8be5\u662f\u60a8\u5728\u7ba1\u9053\u4e2d\u63d0\u5230\u7684\u7b2c\u4e00\u4ef6\u4e8b\u3002\u4ee3\u7406\u7c7b\u4f3c\u4e8e\u8fd0\u884c\u4f5c\u4e1a\u7684\u5bb9\u5668\u6216\u73af\u5883\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a\u4ee3\u7406\u5e76\u884c\u8fd0\u884c\u4f5c\u4e1a</p> <pre><code>pipeline {\n agent any\n}\n</code></pre> <p>\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u544a\u8bc9 Jenkins \u4f7f\u7528\u4efb\u4f55\u53ef\u7528\u7684\u4ee3\u7406\u3002</p> <p>\u6211\u4eec\u7684\u6d41\u6c34\u7ebf\u5171\u6709 5 \u4e2a\u9636\u6bb5\uff1a</p> <p></p>"},{"location":"chap14/7Jenkins_azure_mern/#1","title":"\u7b2c 1 \u9636\u6bb5\uff1a\u4e0b\u8f7d\u4ee3\u7801","text":"<p>\u4e0d\u540c\u7684 CI/CD \u5de5\u5177\u4f7f\u7528\u4e0d\u540c\u7684\u547d\u540d\u7ea6\u5b9a\u3002\u5728 Jenkins \u4e2d\uff0c\u8fd9\u4e9b\u88ab\u79f0\u4e3a\u9636\u6bb5\u3002\u5728\u6bcf\u4e2a\u9636\u6bb5\uff0c\u6211\u4eec\u7f16\u5199\u4e0d\u540c\u7684\u6b65\u9aa4\u3002</p> <p>\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u9636\u6bb5\u662f\u4ece\u6e90\u4ee3\u7801\u7ba1\u7406\u7cfb\u7edf\uff08\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u662f GitHub\uff09\u68c0\u51fa\u4ee3\u7801\u3002</p> <pre><code>pipeline {\n agent any\n\n stages {\n  stage('Checkout') {\n   steps {\n    checkout scm\n   }\n  }\n }\n}\n</code></pre> <p>\u63d0\u4ea4\u66f4\u6539\u5e76\u63a8\u9001\u5230\u60a8\u7684 GitHub \u5b58\u50a8\u5e93\u3002</p> <p>\u7531\u4e8e\u6211\u4eec\u8fd8\u6ca1\u6709\u521b\u5efa\u4efb\u4f55\u7ba1\u9053\uff0c\u73b0\u5728\u5c31\u5f00\u59cb\u5427\u3002</p> <p>\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u5fc5\u987b\u786e\u4fdd Git \u5df2\u5b89\u88c5\u5728\u6211\u4eec\u7684\u7cfb\u7edf\u4e0a\u3002\u5982\u679c\u60a8\u6309\u7167\u6211\u4e4b\u524d\u7684\u6b65\u9aa4\u5728 Azure VM \u4e0a\u5b89\u88c5 Jenkins\uff0c\u5219 Git \u5df2\u7ecf\u5b89\u88c5\u3002</p> <p>\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5bf9\u5176\u8fdb\u884c\u6d4b\u8bd5\uff08\u4f7f\u60a8\u4ecd\u7136\u901a\u8fc7 SSH \u8fde\u63a5\u5230 VM\uff09\uff1a</p> <pre><code>git --version\n\n## install git\nsudo apt install git\n</code></pre> <p>\u6253\u5f00\u84dd\u6d77\u3002\u5355\u51fb\u521b\u5efa\u65b0\u7ba1\u9053\u3002</p> <p>\u7136\u540e\u9009\u62e9\u60a8\u7684\u6e90\u4ee3\u7801\u7ba1\u7406\u7cfb\u7edf\u3002\u5982\u679c\u60a8\u9009\u62e9 GitHub\uff0c\u5219\u5fc5\u987b\u4e3a Jenkins \u63d0\u4f9b\u8bbf\u95ee\u4ee4\u724c\u4ee5\u8bbf\u95ee\u60a8\u7684\u5b58\u50a8\u5e93\u3002\u6211\u5efa\u8bae\u5728\u6b64\u5904\u5355\u51fb\u521b\u5efa\u8bbf\u95ee\u4ee4\u724c\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u5177\u6709\u6240\u6709\u5fc5\u8981\u6743\u9650\u7684\u6a21\u677f\u3002\u7136\u540e\u70b9\u51fb\u8fde\u63a5\u3002</p> <p></p> <p>\u4e4b\u540e\uff0c\u5c06\u521b\u5efa\u4e00\u4e2a\u7ba1\u9053\u3002\u7531\u4e8e\u6211\u4eec\u7684\u5b58\u50a8\u5e93\u5df2\u7ecf\u5305\u542b\u4e00\u4e2a Jenkinsfile\uff0cJenkins \u4f1a\u81ea\u52a8\u68c0\u6d4b\u5b83\u5e76\u8fd0\u884c\u6211\u4eec\u5728\u7ba1\u9053\u4e2d\u63d0\u5230\u7684\u9636\u6bb5\u548c\u6b65\u9aa4\u3002</p> <p>\u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u6574\u4e2a\u9875\u9762\u5c06\u53d8\u4e3a\u7eff\u8272\u3002\uff08\u5176\u4ed6\u989c\u8272\uff1a\u84dd\u8272\u8868\u793a\u7ba1\u9053\u6b63\u5728\u8fd0\u884c\uff0c\u7ea2\u8272\u8868\u793a\u7ba1\u9053\u51fa\u73b0\u95ee\u9898\uff0c\u7070\u8272\u8868\u793a\u6211\u4eec\u505c\u6b62\u4e86\u7ba1\u9053\u3002\uff09</p> <p></p>"},{"location":"chap14/7Jenkins_azure_mern/#2","title":"\u7b2c 2 \u9636\u6bb5\uff1a\u8fd0\u884c\u524d\u7aef\u6d4b\u8bd5","text":"<p>\u901a\u5e38\uff0c\u6240\u6709 CI/CD \u7ba1\u9053\u90fd\u5305\u542b\u4e00\u4e9b\u9700\u8981\u5728\u90e8\u7f72\u4e4b\u524d\u8fd0\u884c\u7684\u6d4b\u8bd5\u3002\u6240\u4ee5\u6211\u5728\u524d\u7aef\u548c\u540e\u7aef\u90fd\u6dfb\u52a0\u4e86\u7b80\u5355\u7684\u6d4b\u8bd5\u3002\u8ba9\u6211\u4eec\u4ece\u524d\u7aef\u6d4b\u8bd5\u5f00\u59cb\u3002</p> <pre><code>stage('Client Tests') {\n steps {\n  dir('client') {\n   sh 'npm install'\n   sh 'npm test'\n  }\n }\n}\n</code></pre> <p>\u6211\u4eec\u6b63\u5728\u5c06\u76ee\u5f55\u66f4\u6539\u4e3a\uff0cclient/\u56e0\u4e3a\u90a3\u662f\u524d\u7aef\u4ee3\u7801\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u7136\u540e\u5b89\u88c5\u4f9d\u8d56\u9879\u5e76\u5728 shell \u4e2dnpm install\u8fd0\u884c\u6d4b\u8bd5<code>npm test</code></p> <p>\u540c\u6837\uff0c\u5728\u6211\u4eec\u91cd\u65b0\u542f\u52a8\u7ba1\u9053\u4e4b\u524d\uff0c\u6211\u4eec\u5fc5\u987b\u786e\u4fdd\u5b89\u88c5\u4e86\u8282\u70b9\u548c npm\u3002\u5728\u865a\u62df\u673a\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u547d\u4ee4\u5b89\u88c5\u8282\u70b9\u548c npm\uff1a</p> <pre><code>curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -\nsudo apt-get install -y nodejs\n</code></pre> <p>\u73b0\u5728\uff0c\u63d0\u4ea4\u4ee3\u7801\u5e76\u91cd\u65b0\u542f\u52a8\u7ba1\u9053\u3002</p> <p></p>"},{"location":"chap14/7Jenkins_azure_mern/#3","title":"\u7b2c 3 \u9636\u6bb5\uff1a\u8fd0\u884c\u540e\u7aef\u6d4b\u8bd5","text":"<p>\u73b0\u5728\u5bf9\u540e\u7aef\u6d4b\u8bd5\u505a\u540c\u6837\u7684\u4e8b\u60c5\u3002</p> <p>\u4f46\u662f\u5728\u6211\u4eec\u7ee7\u7eed\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u505a\u4e00\u4ef6\u4e8b\u3002</p> <p>\u5982\u679c\u60a8\u770b\u4e00\u4e0b\u4ee3\u7801\u5e93<code>activity.test.js</code>\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u4e00\u4e9b\u73af\u5883\u53d8\u91cf\u3002\u56e0\u6b64\uff0c\u8ba9\u6211\u4eec\u5728 Jenkins \u4e2d\u6dfb\u52a0\u8fd9\u4e9b\u73af\u5883\u53d8\u91cf\u3002</p>"},{"location":"chap14/7Jenkins_azure_mern/#jenkins_2","title":"\u5982\u4f55\u5728 Jenkins \u4e2d\u6dfb\u52a0\u73af\u5883\u53d8\u91cf","text":"<p>\u8981\u6dfb\u52a0\u73af\u5883\u53d8\u91cf\uff0c\u8bf7\u8f6c\u5230<code>Manage Jenkins -&gt; \u5355\u51fb\u201cSecurity\u201d\u4e0b\u7684Manage Credentials -&gt;   System -&gt; Global credentials (unrestricted) -&gt; \u5355\u51fb+ Add Credentials</code>\u3002</p> <p>\u5bf9\u4e8e<code>Kind</code>\u9009\u62e9\u201cSecret text\u201d\uff0c\u5c06Scope\u4fdd\u7559\u4e3a\u9ed8\u8ba4\u503c\uff0c\u5bf9\u4e8eSecret\u5199\u5165\u79d8\u5bc6\u503c\u548cID\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u5728 Jenkinsfile \u4e2d\u4f7f\u7528\u8fd9\u4e9b\u73af\u5883\u53d8\u91cf\u65f6\u6240\u4f7f\u7528\u7684\u3002 \u6dfb\u52a0\u4ee5\u4e0b\u73af\u5883\u53d8\u91cf\uff1a</p> <p></p> <p>\u7136\u540e\u5728 Jenkinsfile \u4e2d\uff0c\u4f7f\u7528\u8fd9\u4e9b\u73af\u5883\u53d8\u91cf\uff1a</p> <pre><code>environment {\n MONGODB_URI = credentials('mongodb-uri')\n TOKEN_KEY = credentials('token-key')\n EMAIL = credentials('email')\n PASSWORD = credentials('password')\n}\n</code></pre> <p>\u6dfb\u52a0\u4e00\u4e2a\u9636\u6bb5\u6765\u5b89\u88c5\u4f9d\u8d56\u9879\uff0c\u5728 Jenkins \u73af\u5883\u4e2d\u8bbe\u7f6e\u8fd9\u4e9b\u53d8\u91cf\uff0c\u7136\u540e\u8fd0\u884c\u6d4b\u8bd5\uff1a</p> <pre><code>stage('Server Tests') {\n steps {\n  dir('server') {\n   sh 'npm install'\n   sh 'export MONGODB_URI=$MONGODB_URI'\n   sh 'export TOKEN_KEY=$TOKEN_KEY'\n   sh 'export EMAIL=$EMAIL'\n   sh 'export PASSWORD=$PASSWORD'\n   sh 'npm test'\n  }\n }\n}\n</code></pre> <p>\u518d\u6b21\u63d0\u4ea4\u4ee3\u7801\u5e76\u91cd\u65b0\u542f\u52a8\u7ba1\u9053\u3002</p> <p></p>"},{"location":"chap14/7Jenkins_azure_mern/#4-docker","title":"\u7b2c 4 \u9636\u6bb5\uff1a\u6784\u5efa Docker \u955c\u50cf","text":"<p>\u73b0\u5728\uff0c\u6211\u4eec\u5fc5\u987b\u6307\u5b9a\u4e00\u4e2a\u6b65\u9aa4\u6765\u4ece Dockerfiles \u6784\u5efa Docker \u955c\u50cf\u3002 \u5728\u6211\u4eec\u7ee7\u7eed\u4e4b\u524d\uff0c\u8bf7\u5728 VM \u4e2d\u5b89\u88c5 Docker\uff08\u5982\u679c\u60a8\u5c1a\u672a\u5b89\u88c5\u5b83\uff09\u3002 \u5b89\u88c5 Docker\uff1a</p> <pre><code>sudo apt install docker.io\n</code></pre> <p>\u5c06\u7528\u6237\u6dfb\u52a0jenkins\u5230docker\u7ec4\u4e2d\uff0c\u4ee5\u4fbf Jenkins \u53ef\u4ee5\u8bbf\u95ee Docker \u5b88\u62a4\u8fdb\u7a0b\u2014\u2014\u5426\u5219\u60a8\u5c06\u6536\u5230\u6743\u9650\u88ab\u62d2\u7edd\u7684\u9519\u8bef\u3002</p> <pre><code>sudo usermod -a -G docker jenkins\n</code></pre> <p>\u7136\u540e\u91cd\u542fjenkins\u670d\u52a1\u3002</p> <pre><code>sudo systemctl restart jenkins\n</code></pre> <p>\u5728 Jenkinsfile \u4e2d\u6dfb\u52a0\u4e00\u4e2a\u9636\u6bb5\u3002</p> <pre><code>stage('Build Images') {\n steps {\n  sh 'docker build -t rakeshpotnuru/productivity-app:client-latest client'\n  sh 'docker build -t rakeshpotnuru/productivity-app:server-latest server'\n }\n}\n</code></pre> <p>\u63d0\u4ea4\u4ee3\u7801\u5e76\u91cd\u65b0\u542f\u52a8\u7ba1\u9053\u3002</p> <p></p>"},{"location":"chap14/7Jenkins_azure_mern/#5","title":"\u9636\u6bb5 5\uff1a\u5c06\u56fe\u50cf\u63a8\u9001\u5230\u6ce8\u518c\u8868","text":"<p>\u4f5c\u4e3a\u6700\u540e\u9636\u6bb5\uff0c\u6211\u4eec\u4f1a\u5c06\u56fe\u50cf\u63a8\u9001\u5230 Docker hub\u3002</p> <p>\u5728\u6b64\u4e4b\u524d\uff0c\u5c06\u60a8\u7684 docker hub \u7528\u6237\u540d\u548c\u5bc6\u7801\u6dfb\u52a0\u5230 Jenkins \u51ed\u636e\u7ba1\u7406\u5668\uff0c\u4f46\u5bf9\u4e8e\u79cd\u7c7b\u9009\u62e9\u201c\u7528\u6237\u540d\u548c\u5bc6\u7801\u201d\u3002</p> <p></p> <p>\u6dfb\u52a0\u6211\u4eec\u767b\u5f55\u5e76\u5c06\u56fe\u50cf\u63a8\u9001\u5230 Docker hub \u7684\u6700\u540e\u9636\u6bb5\u3002</p> <pre><code>stage('Push Images to DockerHub') {\n steps {\n  withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {\n   sh 'docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'\n   sh 'docker push rakeshpotnuru/productivity-app:client-latest'\n   sh 'docker push rakeshpotnuru/productivity-app:server-latest'\n  }\n }\n}\n</code></pre> <p></p> <p>\u5b8c\u6574\u7684Jenkinsfile</p> <pre><code>// This is a Jenkinsfile. It is a script that Jenkins will run when a build is triggered.\npipeline {\n    // Telling Jenkins to run the pipeline on any available agent.\n    agent any\n\n    // Setting environment variables for the build.\n    environment {\n        MONGODB_URI = credentials('mongodb-uri')\n        TOKEN_KEY = credentials('token-key')\n        EMAIL = credentials('email')\n        PASSWORD = credentials('password')\n    }\n\n    // This is the pipeline. It is a series of stages that Jenkins will run.\n    stages {\n        // This state is telling Jenkins to checkout the source code from the source control management system.\n        stage('Checkout') {\n            steps {\n                checkout scm\n            }\n        }\n\n        // This stage is telling Jenkins to run the tests in the client directory.\n        stage('Client Tests') {\n            steps {\n                dir('client') {\n                    sh 'npm install'\n                    sh 'npm test'\n                }\n            }\n        }\n\n        // This stage is telling Jenkins to run the tests in the server directory.\n        stage('Server Tests') {\n            steps {\n                dir('server') {\n                    sh 'npm install'\n                    sh 'export MONGODB_URI=$MONGODB_URI'\n                    sh 'export TOKEN_KEY=$TOKEN_KEY'\n                    sh 'export EMAIL=$EMAIL'\n                    sh 'export PASSWORD=$PASSWORD'\n                    sh 'npm test'\n                }\n            }\n        }\n\n        // This stage is telling Jenkins to build the images for the client and server.\n        stage('Build Images') {\n            steps {\n                sh 'docker build -t rakeshpotnuru/productivity-app:client-latest client'\n                sh 'docker build -t rakeshpotnuru/productivity-app:server-latest server'\n            }\n        }\n\n        // This stage is telling Jenkins to push the images to DockerHub.\n        stage('Push Images to DockerHub') {\n            steps {\n                withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {\n                    sh 'docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'\n                    sh 'docker push rakeshpotnuru/productivity-app:client-latest'\n                    sh 'docker push rakeshpotnuru/productivity-app:server-latest'\n                }\n            }\n        }\n    }\n}\n</code></pre> <p></p>"},{"location":"chap15/1Jenkins_Prometheus/","title":"\u7b2c\u4e00\u8282 \u4f7f\u7528 Prometheus \u76d1\u63a7 Jenkins","text":""},{"location":"chap15/1Jenkins_Prometheus/#1","title":"1\u3001\u5b89\u88c5\u4f7f\u7528\u63d2\u4ef6","text":"<ul> <li>https://plugins.jenkins.io/prometheus/</li> </ul> <p>Default namespace: monitoring Prometheus\u5b89\u88c5\u7684Namespace</p> <p>\u68c0\u67e5 Jenkins \u66b4\u9732\u7684 promtheus \u6570\u636e</p> <p>http://192.168.33.1:30080/promtheus</p> <p></p>"},{"location":"chap15/1Jenkins_Prometheus/#2-prometheus-operator-prometheus","title":"2\u3001\u5b89\u88c5 Prometheus Operator \u5b89\u88c5 Prometheus","text":"<pre><code>kubectl create ns monitoring\n</code></pre> <p><code>prometheus-operator-values.yml</code></p> <pre><code># We don't need the alertmanager for this demo\nalertmanager:\n  enabled: false\n\n# This configuration means all ServiceMonitors in the namespsace will be picked up\n# Use with caution!\nprometheus: \n  prometheusSpec:\n    serviceMonitorSelectorNilUsesHelmValues: false\n    serviceMonitorSelector: {}\ngrafana:\n  persistence:\n    enabled: true\n    type: pvc\n    size: 1G\n    storageClassName: hostpath\n</code></pre> <pre><code>$ helm install kube-prom stable/prometheus-operator -f prometheus-operator-values.yml --namespace monitoring\n\n kubectl get pod  -n monitoring \nNAME                                                  READY   STATUS              RESTARTS   AGE\nkube-prom-grafana-58dd7948b9-8pc4z                    2/2     Running             0          16h\nkube-prom-grafana-test                                0/1     Error               0          16h\nkube-prom-kube-state-metrics-d5554cd6-lpjtt           1/1     Running             0          16h\nkube-prom-prometheus-node-exporter-w7ts8              1/1     Running             0          16h\nkube-prom-prometheus-opera-admission-create-trvmv     0/1     ContainerCreating   0          16h\nkube-prom-prometheus-opera-operator-8b968895f-dmd8c   2/2     Running             0          16h\nprometheus-kube-prom-prometheus-opera-prometheus-0    3/3     Running             1          16h\n</code></pre>"},{"location":"chap15/1Jenkins_Prometheus/#3-jenkins-service-servicemonitor","title":"3\u3001\u4e3a Jenkins Service \u521b\u5efa ServiceMonitor","text":"<p><code>jenkins-sm.yaml</code></p> <pre><code>apiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  name: jenkins\n  labels:\n    prometheus: kube-prometheus\nspec:\n  selector:\n    # note, this matches on the service, not the deployment or pod\n    matchLabels:\n      k8s-app: jenkins\n  # jobLabel: app\n  namespaceSelector:\n    matchNames:\n      - devops\n  endpoints:\n  - targetPort: 30080\n    path: /prometheus\n    interval: 10s\n</code></pre> <pre><code>$  kubectl get servicemonitor \nNAME      AGE\njenkins   14h\n</code></pre> <p>\u7a0d\u7b49\u4e00\u4f1a\u513f\uff0c prometheus \u4f1a\u81ea\u52a8\u52a0\u8f7dJenkins \u7684 target</p> <p></p> <p></p>"},{"location":"chap15/1Jenkins_Prometheus/#4grafana-jenkins-dashboard","title":"4\u3001\u5728Grafana \u4e2d \u6dfb\u52a0 Jenkins \u7684 dashboard","text":""},{"location":"chap15/1Jenkins_Prometheus/#4-1-grafana-json-dashboard","title":"4-1 \u4e0b\u8f7d Grafana json dashboard","text":"<p>https://grafana.com/grafana/dashboards/9964</p> <p></p>"},{"location":"chap15/1Jenkins_Prometheus/#4-2-grafana-json-dashboard","title":"4-2 Grafana \u4e2d\u52a0\u8f7d  json dashboard","text":""},{"location":"chap15/2Jenkins_InfluxDB_Grafana/","title":"\u7b2c\u4e8c\u8282 Jenkins+InfluxDB+Grafana \u6536\u96c6\u6784\u5efa\u6570\u636e","text":""},{"location":"chap15/2Jenkins_InfluxDB_Grafana/#1","title":"1\u3001\u6b65\u9aa4\u4e0e\u65b9\u6848","text":""},{"location":"chap15/2Jenkins_InfluxDB_Grafana/#1-1","title":"1-1 \u5177\u4f53\u6b65\u9aa4","text":"<ol> <li>\u642d\u5efajenkins\u3001InfluxDB\u3001Grafana\u3002</li> <li>Jenkins\u5b89\u88c5\u63d2\u4ef6\u3001\u914d\u7f6e\u6570\u636e\u5e93\u5730\u5740\u3001\u7f16\u5199Pipeline\u3001\u81ea\u5b9a\u4e49\u6570\u636e\u3002</li> <li>InfluxDB\u521b\u5efa\u6570\u636e\u5e93\u3001\u521b\u5efa\u7528\u6237\u3002</li> <li>Grafana\u5efa\u7acb\u7edf\u4e00\u7684\u5ea6\u91cf\u6a21\u677f\uff0c\u4f7f\u7528\u53d8\u91cf\u66ff\u6362\u56fa\u5b9a\u7684\u9879\u76ee\u540d\u79f0\u3002</li> </ol>"},{"location":"chap15/2Jenkins_InfluxDB_Grafana/#1-2","title":"1-2 \u6574\u4f53\u65b9\u6848","text":""},{"location":"chap15/2Jenkins_InfluxDB_Grafana/#2influxdb","title":"2\u3001\u5feb\u901f\u5b89\u88c5InfluxDB","text":"<p>influxdb.yml</p> <pre><code>---\nkind: Deployment\napiVersion: apps/v1\nmetadata:\n  labels:\n    k8s-app: influxdb\n  name: influxdb\n  namespace: devops\nspec:\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      k8s-app: influxdb\n  template:\n    metadata:\n      labels:\n        k8s-app: influxdb\n      namespace: devops\n      name: influxdb\n    spec:\n      containers:\n        - name: influxdb\n          image: influxdb:1.7.9\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 8086\n              name: web2\n              protocol: TCP\n          resources:\n            limits:\n              cpu: 1000m\n              memory: 2Gi\n            requests:\n              cpu: 500m\n              memory: 512Mi\n          volumeMounts:\n            - name: dbhome\n              mountPath: /var/lib/influxdb\n      volumes:\n        - name: dbhome\n          hostPath:\n            path: .../Jenkins/influxdb\n            type: Directory\n---\napiVersion: v1\nkind: Service\nmetadata:\n name: influxdb\n namespace: devops\n labels:\n   k8s-app: influxdb\nspec:\n selector:\n   k8s-app: influxdb\n type: NodePort\n ports:\n - name: web\n   port: 8086\n   targetPort: 8086\n   nodePort: 30086\n</code></pre> <pre><code>$ kubectl get pod -n devops | grep inf\ninfluxdb-6476d5bddd-vmhw2       1/1     Running   1          24h\n</code></pre>"},{"location":"chap15/2Jenkins_InfluxDB_Grafana/#3","title":"3\u3001\u51c6\u5907\u5de5\u4f5c","text":""},{"location":"chap15/2Jenkins_InfluxDB_Grafana/#3-1","title":"3-1 \u521b\u5efa\u6570\u636e\u5e93","text":"<pre><code>$ curl -G http://localhost:30086/query --data-urlencode \"q=SHOW DATABASES\"\n{\"results\":[{\"statement_id\":0,\"series\":[{\"name\":\"databases\",\"columns\":[\"name\"],\"values\":[[\"_internal\"]]}]}]}\n</code></pre> <pre><code>$ curl -X POST http://localhost:30086/query --data-urlencode \"q=CREATE DATABASE jenkins\"\n\n$ curl -G http://localhost:30086/query --data-urlencode \"q=SHOW DATABASES\"\n{\"results\":[{\"statement_id\":0,\"series\":[{\"name\":\"databases\",\"columns\":[\"name\"],\"values\":[[\"_internal\"],[\"jenkins\"]]}]}]}\n\n\n\n$ curl -X POST http://localhost:30086/query --data-urlencode \"q=CREATE USER jenkins WITH PASSWORD 'root123' WITH ALL \nPRIVILEGES\"\n{\"results\":[{\"statement_id\":0}]}\n\n\n$ curl -G http://localhost:30086/query --data-urlencode \"q=SHOW USERS\"\n{\"results\":[{\"statement_id\":0,\"series\":[{\"columns\":[\"user\",\"admin\"],\"values\":[[\"jenkins\",true]]}]}]}\n</code></pre>"},{"location":"chap15/2Jenkins_InfluxDB_Grafana/#3-2-jenkins","title":"3-2 \u914d\u7f6eJenkins","text":"<p>\u5b89\u88c5influxdb\u63d2\u4ef6\u3001\u914d\u7f6eInfluxdb\u4fe1\u606f\u3002</p> <p>https://plugins.jenkins.io/influxdb/</p> <p></p>"},{"location":"chap15/2Jenkins_InfluxDB_Grafana/#3-3-pipeline","title":"3-3 \u7f16\u5199pipeline\u4ee3\u7801","text":"<pre><code>pipeline {\n    agent { node { label \"hostmachine\"}}\n\n    stages{\n        stage(\"test\"){\n\n            steps{\n\n                script{\n                        measurementName = \"${JOB_NAME}\".split(\"-\")[0]\n    SERVICE_NAME = \"${JOB_NAME}\"\n    BUILD_AGENT = \"hostmachine\"\n    BUILD_RESULT = [\"SUCCESS\":1,\"FAILURE\":0][\"${currentBuild.currentResult}\"]\n    currentBuild.description = \"Trigger By admin\"\n\n    httpRequest httpMode: 'POST', \n                requestBody: \"\"\"${measurementName},build_number=${BUILD_ID},build_agent_name=${BUILD_AGENT} project_name=\\\"${SERVICE_NAME}\\\",build_id=${BUILD_ID},build_time=${currentBuild.duration},build_result=${BUILD_RESULT},build_desc=\\\"${currentBuild.description}\\\",tests_passed=10,tests_failed=2,tests_skipped=3 1434055564000000000\"\"\", \n                url: 'http://localhost:30086/write?db=jenkins'\n                }\n            }\n        }\n\n\n    }\n\n    post{\n\n        success{\n            script{\n                currentBuild.description = \"Trigger by admin\"\n\n                influxDbPublisher  customPrefix: '', \n                                        customProjectName: \"${JOB_NAME}\",\n                                        jenkinsEnvParameterField: \"tests_passed=\" + 10 + \"\\ntests_skipped=\" + 2 + \"\\ntests_failed=\" + 3, // OPTIONAL, \u81ea\u5b9a\u4e49\u5b57\u6bb5\n                                        measurementName: \"${JOB_NAME.split('-')[0]}\", // OPTIONAL, \u8868\u540d\u79f0\n                                        jenkinsEnvParameterTag: 'build_number=${BUILD_ID}', \n                                        selectedTarget: 'influxdb'\n\n            }\n        }\n    }\n}\n</code></pre> <p>Pipeline2</p> <pre><code>try {\n    //pipeline\n    currentBuild.description = \"\u6784\u5efa\u6210\u529f\"   //\u5b9a\u4e49Jenkins\u6784\u5efa\u63cf\u8ff0\uff0c\u9ed8\u8ba4\u65e0\u3002\n} catch(err){\n    currentBuild.description = \"\u6784\u5efa\u5931\u8d25\"   //\u5b9a\u4e49Jenkins\u6784\u5efa\u63cf\u8ff0\uff0c\u9ed8\u8ba4\u65e0\u3002\n    throw err\n\n}finally{\n    step([$class: 'InfluxDbPublisher',\n        customData: null,\n        customDataMap: null,\n        customPrefix: null,\n        target: 'influxdb',         // Jenkins\u4e2d\u914d\u7f6e\u7684Influxdb\u3002\n        selectedTarget: 'influxdb', // Jenkins\u4e2d\u914d\u7f6e\u7684Influxdb\u3002\n        //jenkinsEnvParameterTag: 'KEY=' + env.PARAM,     // OPTIONAL,\u81ea\u5b9a\u4e49tag\n        jenkinsEnvParameterField: 'build_agent_name=' + 'master' + '\\n' + 'build_status_message=' + currentBuild.description, // OPTIONAL, \u81ea\u5b9a\u4e49\u5b57\u6bb5\n        measurementName: 'jenkins_data', // OPTIONAL, \u8868\u540d\u79f0\n        replaceDashWithUnderscore: false, // OPTIONAL, \u662f\u5426\u66ff\u6362 \"-\"\u4e3a \"_\"\u3002\n    ])\n}\n\n\n//\u57fa\u4e8e\u63d2\u4ef6\u81ea\u5b9a\u4e49\u5b57\u6bb5\u540d\u79f0\uff08\u975e\u5b8c\u5168\u81ea\u5b9a\u4e49\uff09\n/*\nstep([$class: 'InfluxDbPublisher',\n            customData: null,\n            customDataMap: null,\n            customPrefix: null,\n            target: 'influxdb',\n            selectedTarget: 'influxdb', \n            jenkinsEnvParameterTag: 'project_name=' + \"${JOB_NAME}\".split('/')[-1] ,     // OPTIONAL, \u81ea\u5b9a\u4e49project_name\n            jenkinsEnvParameterField: 'build_agent_name=' + 'master'  +  \"\\n\" +           //\u81ea\u5b9a\u4e49\u53c2\u6570\u5217\u8868\uff0c\u6bcf\u4e2a\u53c2\u6570\u52a0\u4e0a\u4e00\u4e2a\u6362\u884c\u7b26\n                                      'build_status_message=' + currentBuild.description +  \"\\n\" + \n                                      'midwareType=' + \"${midwareType}\" +  \"\\n\" + \n                                      'listenPort=' + \"${port}\" +  \"\\n\" + \n                                      'runUser=' + \"${user}\" +  \"\\n\" +\n                                      'repoName=' + \"${srcUrl}\".split(\"/\")[-1] - '.git' +  '\\n' + \n                                      'project_name=' + \"${JOB_NAME}\".split('/')[-1]  +  '\\n' +\n                                      'deployHosts=' + \"${targetHosts}\" ,\n            measurementName: 'jenkins_data', \n            replaceDashWithUnderscore: false,\n        ])\n*/\n</code></pre>"},{"location":"chap15/2Jenkins_InfluxDB_Grafana/#3-4-influxdbpublisher-sharedlib-optional","title":"3-4 InfluxDbPublisher SharedLib \uff08Optional)","text":"<pre><code>package org.devops \n\n//\u521b\u5efa\u6570\u636e\u5e93\ndef CreateDb(dbName){\n   sh \"\"\"\n      curl -XPOST 'http://localhost:30086/query' --data-urlencode 'q=CREATE DATABASE \\\"${dbName}\\\"'\"\n      \"\"\"\n}\n\n\ndef WriteData(){\n    measurementName = \"${JOB_NAME}\".split(\"-\")[0]\n    SERVICE_NAME = \"${JOB_NAME}\"\n    BUILD_AGENT = \"master\"\n    BUILD_RESULT = [\"SUCCESS\":1,\"FAILURE\":0][\"${currentBuild.currentResult}\"]\n    wrap([$class: 'BuildUser']){\n        currentBuild.description = \"Trigger By ${$BUILD_USER}\"\n    }\n\n\n    httpRequest httpMode: 'POST', \n            requestBody: \"\"\"${measurementName},build_number=${BUILD_ID},build_agent_name=${BUILD_AGENT} project_name=\\\"${SERVICE_NAME}\\\",build_id=${BUILD_ID},build_time=${currentBuild.duration},build_result=${BUILD_RESULT},build_desc=\\\"${currentBuild.description}\\\",tests_passed=10,tests_failed=2,tests_skipped=3 1434055564000000000\"\"\", \n            url: 'http://localhost:30086/write?db=jenkins'\n\n\n}\n</code></pre>"},{"location":"chap15/2Jenkins_InfluxDB_Grafana/#3-5","title":"3-5 \u6784\u5efa\u6d4b\u8bd5","text":"<pre><code>$ curl -G http://localhost:30086/query --data-urlencode \"q=SHOW SERIES on jenkins\"\n{\"results\":[{\"statement_id\":0,\"series\":[{\"columns\":[\"key\"],\"values\":[[\"demo,build_agent_name=master,build_number=1\"],[\"demo,build_agent_name=master\n,build_number=2\"],[\"demo,build_agent_name=master,build_number=3\"],[\"devops,build_agent_name=hostmachine,build_number=1\"],[\"devops,build_agent_name=\nhostmachine,build_number=2\"],[\"devops,build_agent_name=hostmachine,build_number=3\"],[\"test,build_agent_name=master,build_number=2\"]]}]}]}\n\n\n$ curl -G http://localhost:30086/query?db=jenkins --data-urlencode  \"q=select * from devops\"\n{\"results\":[{\"statement_id\":0,\"series\":[{\"name\":\"devops\",\"columns\":[\"time\",\"build_agent_name\",\"build_desc\",\"build_id\",\"build_number\",\"build_result\"\n,\"build_time\",\"project_name\",\"tests_failed\",\"tests_passed\",\"tests_skipped\"],\"values\":[[\"2015-06-11T20:46:04Z\",\"hostmachine\",\"Trigger By admin\",1,\"1\n\",1,2860,\"devops-test-service\",2,10,3],[\"2015-06-11T20:46:04Z\",\"hostmachine\",\"Trigger By admin\",3,\"3\",1,706,\"devops-test-service\",2,10,3],[\"2015-06\n-11T20:46:04Z\",\"hostmachine\",\"Trigger By admin\",2,\"2\",1,1512,\"devops-test-service\",2,10,3]]}]}]}\n</code></pre>"},{"location":"chap15/2Jenkins_InfluxDB_Grafana/#4grafana","title":"4\u3001\u914d\u7f6eGrafana","text":""},{"location":"chap15/2Jenkins_InfluxDB_Grafana/#4-1-influxdb-datasources","title":"4-1 \u5bfc\u5165 influxDb DataSources","text":"<p>\u6548\u679c\u56fe</p>"},{"location":"chap15/2Jenkins_InfluxDB_Grafana/#4-1-dashboard-json","title":"4-1 \u5bfc\u5165 Dashboard Json","text":"<p><code>jenkins_build_status.json</code></p> <p></p> <p></p>"},{"location":"chap15/3Jenkins_python_API/","title":"\u7b2c\u4e09\u8282 Jenkins Python API \u5b9e\u8df5","text":""},{"location":"chap15/3Jenkins_python_API/#1-jenkins-python-api","title":"1\u3001\u67e5\u8be2\u4f7f\u7528 Jenkins  Python API","text":"<ul> <li>http://jenkins_url/api/python?pretty=true</li> <li>http://jenkins_url/api/</li> </ul> <p>Python Jenkins API Docs</p>"},{"location":"chap15/3Jenkins_python_API/#1-1-python-jenkins","title":"1-1 \u5b89\u88c5 python-jenkins \u5e93","text":"<pre><code>pip3 install python-jenkins\n</code></pre>"},{"location":"chap15/3Jenkins_python_API/#2jenkins-python-api","title":"2\u3001\u5e38\u7528Jenkins Python API \u7684\u65b9\u6cd5","text":""},{"location":"chap15/3Jenkins_python_API/#2-1","title":"2-1 \u5e38\u7528\u65b9\u6cd5","text":"<p><code>test.py</code></p> <pre><code>import jenkins\nserver = jenkins.Jenkins(\"http://127.0.0.1:30080\",username=\"admin\",password=\"admin\")\nprint(server.get_whoami())\n</code></pre> <pre><code>{'_class': 'hudson.model.User', 'absoluteUrl': 'http://192.168.33.1:30080/user/admin', 'description': None, 'fullName': 'admin', 'id': 'admin', 'property': [{'_class': 'jenkins.security.ApiTokenProperty'}, {'_class': 'com.cloudbees.plugins.credentials.UserCredentialsProvider$UserCredentialsProperty'}, {'_class': 'hudson.plugins.emailext.watching.EmailExtWatchAction$UserProperty', 'triggers': []}, {'_class': 'hudson.model.MyViewsProperty'}, {'_class': 'org.jenkinsci.plugins.displayurlapi.user.PreferredProviderUserProperty'}, {'_class': 'hudson.model.PaneStatusProperties'}, {'_class': 'jenkins.security.seed.UserSeedProperty'}, {'_class': 'hudson.search.UserSearchProperty', 'insensitiveSearch': True}, {'_class': 'hudson.model.TimeZoneProperty'}, {'_class': 'hudson.security.HudsonPrivateSecurityRealm$Details'}, {'_class': 'hudson.tasks.Mailer$UserProperty', 'address': 'admin@sap.com'}, {'_class': 'jenkins.security.LastGrantedAuthoritiesProperty'}]}\n</code></pre> <pre><code>import jenkins\nserver = jenkins.Jenkins(\"http://127.0.0.1:30080\",username=\"admin\",password=\"admin\")\nprint(dir(server))\n</code></pre> <pre><code>['__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_add_missing_builds', '_auth_resolved', '_auths', '_build_url', '_get_encoded_params', '_get_job_folder', '_get_tag_text', '_get_view_jobs', '_maybe_add_auth', '_request', '_response_handler', '_session', '_timeout_warning_issued', 'assert_credential_exists', 'assert_folder', 'assert_job_exists', 'assert_node_exists', 'assert_promotion_exists', 'assert_view_exists', 'auth', 'build_job', 'build_job_url', 'cancel_queue', 'check_jenkinsfile_syntax', 'copy_job', 'create_credential', 'create_folder', 'create_job', 'create_node', 'create_promotion', 'create_view', 'credential_exists', 'crumb', 'debug_job_info', 'delete_build', 'delete_credential', 'delete_job', 'delete_node', 'delete_promotion', 'delete_view', 'disable_job', 'disable_node', 'enable_job', 'enable_node', 'get_all_jobs', 'get_build_console_output', 'get_build_env_vars', 'get_build_info', 'get_build_test_report', 'get_credential_config', 'get_credential_info', 'get_info', 'get_job_config', 'get_job_info', 'get_job_info_regex', 'get_job_name', 'get_jobs', 'get_node_config', 'get_node_info', 'get_nodes', 'get_plugin_info', 'get_plugins', 'get_plugins_info', 'get_promotion_config', 'get_promotion_name', 'get_promotions', 'get_promotions_info', 'get_queue_info', 'get_queue_item', 'get_running_builds', 'get_version', 'get_view_config', 'get_view_name', 'get_views', 'get_whoami', 'install_plugin', 'is_folder', 'jenkins_open', 'jenkins_request', 'job_exists', 'jobs_count', 'list_credentials', 'maybe_add_crumb', 'node_exists', 'promotion_exists', 'quiet_down', 'reconfig_credential', 'reconfig_job', 'reconfig_node', 'reconfig_promotion', 'reconfig_view', 'rename_job', 'run_script', 'server', 'set_next_build_number', 'stop_build', 'timeout', 'upsert_job', 'view_exists', 'wait_for_normal_op', 'wipeout_job_workspace']\n</code></pre> <p></p> <p></p> <p></p>"},{"location":"chap15/3Jenkins_python_API/#2-2-job","title":"2-2 Job \u65b9\u6cd5\u6d4b\u8bd5","text":""},{"location":"chap15/3Jenkins_python_API/#2-1-1-job","title":"2-1-1 \u624b\u5de5\u521b\u5efa\u6a21\u677fjob","text":""},{"location":"chap15/3Jenkins_python_API/#2-1-2-job-config","title":"2-1-2 \u67e5\u8be2 job \u7684 config","text":"<pre><code>print(server.get_job_config('test-devops-service'))\n</code></pre> <pre><code>&lt;?xml version='1.1' encoding='UTF-8'?&gt;\n&lt;flow-definition plugin=\"workflow-job@2.39\"&gt;\n  &lt;description&gt;&lt;/description&gt;\n  &lt;keepDependencies&gt;false&lt;/keepDependencies&gt;\n  &lt;properties&gt;\n    &lt;com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin=\"gitlab-plugin@1.5.13\"&gt;\n      &lt;gitLabConnection&gt;gitlab-conn&lt;/gitLabConnection&gt;\n    &lt;/com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty&gt;\n    &lt;hudson.model.ParametersDefinitionProperty&gt;\n      &lt;parameterDefinitions&gt;\n        &lt;hudson.model.StringParameterDefinition&gt;\n          &lt;name&gt;srcType&lt;/name&gt;\n          &lt;description&gt;&lt;/description&gt;\n          &lt;defaultValue&gt;svn&lt;/defaultValue&gt;\n          &lt;trim&gt;false&lt;/trim&gt;\n        &lt;/hudson.model.StringParameterDefinition&gt;\n      &lt;/parameterDefinitions&gt;\n    &lt;/hudson.model.ParametersDefinitionProperty&gt;\n  &lt;/properties&gt;\n  &lt;definition class=\"org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition\" plugin=\"workflow-cps@2.82\"&gt;\n    &lt;script&gt;&lt;/script&gt;\n    &lt;sandbox&gt;true&lt;/sandbox&gt;\n  &lt;/definition&gt;\n  &lt;triggers/&gt;\n  &lt;disabled&gt;false&lt;/disabled&gt;\n&lt;/flow-definition&gt;\n</code></pre>"},{"location":"chap15/3Jenkins_python_API/#2-1-3-jobconfigjob","title":"2-1-3 \u5229\u7528\u6a21\u677fjob\u7684config\u6587\u4ef6\u521b\u5efa\u65b0\u7684job","text":"<pre><code>import jenkins\nserver = jenkins.Jenkins(\"http://127.0.0.1:30080\",username=\"admin\",password=\"admin\")\n\nconfig_xml = server.get_job_config('test-devops-service')\n\nif(server.job_exists(\"test-job-service-demo\")== True):\n    print(\"The job already exists\")\nelse:\n    server.create_job(\"test-job-service-demo\",config_xml)\n    print(\"Create new job...\")\n</code></pre>"},{"location":"chap15/3Jenkins_python_API/#2-1-4-copyjobjob","title":"2-1-4 Copy\u6a21\u677fjob\u5230\u65b0\u7684Job","text":"<pre><code>import jenkins\nserver = jenkins.Jenkins(\"http://127.0.0.1:30080\",username=\"admin\",password=\"admin\")\n\nif (server.job_exists(\"test-job-service-copy\") != True):\n    print(\"The Dest job doesnt exists\")\n    server.copy_job(\"test-job-service-demo\",\"test-job-service-copy\")\nelse:\n    print(\"The Dest job exists\")\n</code></pre>"},{"location":"chap15/3Jenkins_python_API/#3jenkins-python-api-job","title":"3\u3001Jenkins Python API \u811a\u672c\u521b\u5efa Job","text":"<p>jobs.py</p> <p>\u5c06srcType \u4ece svn \u6539\u5230 git</p> <pre><code>import jenkins\n\n# login\nserverUrl = \"http://127.0.0.1:30080\"\nusername = \"admin\"\npassword = \"admin\"\n\nserver = jenkins.Jenkins(serverUrl,username,password)\n\ndefProjectName = \"test-devops-service\"\nnewProjectName = \"test-devops-service02\"\n\n\nif server.job_exists(newProjectName) != True: \n\n    print(\"The project doesnt exist\")\n\n    config_xml = server.get_job_config(defProjectName)\n    newconfig_xml = config_xml.replace(\"&lt;defaultValue&gt;svn&lt;/defaultValue&gt;\",\"&lt;defaultValue&gt;git&lt;/defaultValue&gt;\" )\n\n    print(newconfig_xml)\n\n    server.create_job(newProjectName,newconfig_xml)\nelse:\n    print(\"The project exist\")\n</code></pre> <p></p>"},{"location":"chap15/4Jenkins_REST_API/","title":"\u7b2c\u56db\u8282 Jenkins REST API \u4f7f\u7528\u5b9e\u8df5","text":""},{"location":"chap15/4Jenkins_REST_API/#1jenkins-rest-api","title":"1\u3001Jenkins REST API \u4ecb\u7ecd","text":"<ul> <li>Job API: http://127.0.0.1:30080/job/jobname/api/</li> <li>View API: http://192.168.33.11:8080/view/viewname/api/</li> </ul>"},{"location":"chap15/4Jenkins_REST_API/#1-1","title":"1-1 \u83b7\u53d6\u9879\u76ee\u4fe1\u606f","text":"<ul> <li>\u63a5\u53e3\uff1a http://127.0.0.1:30080/job/{projectNarne}/api/json \u3002</li> <li>\u65b9\u5f0f\uff1aGET </li> <li>\u5b9e\u4f8b\uff1ahttp://127.0.0.1:30080/job/demo-test-03/api/json </li> </ul>"},{"location":"chap15/4Jenkins_REST_API/#1-2","title":"1-2 \u83b7\u53d6\u9879\u76ee\u6784\u5efa\u4fe1\u606f","text":"<ul> <li>\u63a5\u53e3: http://127.0.0.1:30080/job/{projectName}/{buildNumber}/api/json </li> <li>\u65b9\u5f0f\uff1aGET </li> <li>\u5b9e\u4f8b\uff1a http://127.0.0.1:30080/job/demo-test-03/1/api/json \u3002</li> </ul>"},{"location":"chap15/4Jenkins_REST_API/#1-3","title":"1-3 \u83b7\u53d6\u9879\u76ee\u914d\u7f6e","text":"<ul> <li>\u63a5\u53e3\uff1a http://127.0.0.1:30080/job/{projectName}/config.xml \u3002</li> <li>\u5b9e\u4f8b\uff1a http://127.0.0.1:30080/job/test-devops-service/config.xml \u3002</li> <li>\u65b9\u5f0f\uff1aGET</li> </ul>"},{"location":"chap15/4Jenkins_REST_API/#1-4","title":"1-4 \u521b\u5efa\u9879\u76ee","text":"<ul> <li>\u63a5\u53e3\uff1a http://127.0.0.1:30080/createltem?name={projectName} </li> <li>\u53c2\u6570\uff1a<code>--data-binary@conflg.xml</code></li> <li>\u5934\u90e8\uff1a<code>-H \"Content-Type:text/xml\"</code> </li> <li>\u65b9\u5f0f\uff1aPOST</li> </ul>"},{"location":"chap15/4Jenkins_REST_API/#1-5","title":"1-5 \u7981\u7528\u9879\u76ee","text":"<ul> <li>\u63a5\u53e3\uff1ahttp://127.0.0.1:30080/job/{projectName}/disable \u3002</li> <li>\u65b9\u5f0f\uff1aPOST</li> </ul>"},{"location":"chap15/4Jenkins_REST_API/#1-6","title":"1-6 \u5220\u9664\u9879\u76ee","text":"<ul> <li>\u63a5\u53e3\uff1ahttp://127.0.0.1:30080/job/{projectName}/doDelete </li> <li>\u65b9\u5f0f\uff1aPOST</li> </ul>"},{"location":"chap15/4Jenkins_REST_API/#1-7","title":"1-7 \u6784\u5efa\u9879\u76ee","text":"<ul> <li>\u63a5\u53e3\uff1ahttp://127.0.0.1:30080/job/{projectName}/build </li> <li>\u65b9\u5f0f\uff1aPOST </li> </ul>"},{"location":"chap15/4Jenkins_REST_API/#1-8","title":"1-8 \u53c2\u6570\u5316\u6784\u5efa","text":"<ul> <li>\u63a5\u53e3\uff1ahttp://127.0.0.1:30080/job/{projectName}/buiidWithParameters </li> <li>\u65b9\u5f0f\uff1aPOST</li> </ul>"},{"location":"chap15/4Jenkins_REST_API/#2jenkins-rest-api","title":"2\u3001Jenkins REST API \u5171\u4eab\u5e93\u5c01\u88c5","text":""},{"location":"chap15/4Jenkins_REST_API/#2-1-httprequest","title":"2-1 \u4f7f\u7528 httprequest \u5c01\u88c5\u8bf7\u6c42","text":"<ul> <li>\u5982\u679c\u6ca1\u6709\u505a\u8ba4\u8bc1\u96c6\u6210\uff1a\u7528\u6237\u540d\uff0b\u5bc6\u7801 </li> <li>\u5982\u679c\u505a\u4e86\u96c6\u6210\uff1a\u7528\u6237\u540d\uff0btoken </li> </ul> <ul> <li>admin</li> <li>11e59da9409d0bae602b1d70ac9041f2d0</li> <li>api-token</li> </ul>"},{"location":"chap15/4Jenkins_REST_API/#2-2-httprequest-pipeline","title":"2-2 \u6d4b\u8bd5 httprequest \u8bf7\u6c42 Pipeline","text":"<ul> <li>Disable job: <code>test-devops-service</code></li> </ul> <pre><code>pipeline{\n    agent { node { label \"master\"}}\n\n    stages{\n        stage('test'){\n            steps{\n                script{\n                    httpRequest authentication: 'api-token',\n                            httpMode: 'POST',\n                            responseHandle: 'NONE',\n                            url: 'http://127.0.0.1:30080/job/test-devops-service/disable'\n                }\n            }\n        }\n    }\n}\n</code></pre> <p>Console Output</p> <pre><code>[Pipeline] httpRequest\nHttpMethod: POST\nURL: http://127.0.0.1:30080/job/test-devops-service/disable\nUsing authentication: api-token\nSending request to url: http://127.0.0.1:30080/job/test-devops-service/disable\nResponse Code: HTTP/1.1 302 Found\nSuccess code from [100\u2025399]\n</code></pre> <p></p>"},{"location":"chap15/4Jenkins_REST_API/#2-3-jenkinsapi","title":"2-3 jenkinsapi \u5171\u4eab\u5e93\u4ee3\u7801","text":"<p><code>jenkinsapi.groovy</code></p> <pre><code>package org.devops\n\n//\u5c01\u88c5HTTP\u8bf7\u6c42\ndef HttpReq(reqType,reqUrl,reqBody){\n    def jenkinsServer = 'http://127.0.0.1:30080'\n    result = httpRequest authentication: 'api-token',\n                        httpMode: reqType,\n                        consoleLogResponseBody: true,\n                        ignoreSslErrors: true, \n                        requestBody: reqBody,\n                        url: \"${jenkinsServer}/${reqUrl}\"\n                        //quiet: true\n\n}\n\n\n//\u65b0\u5efa\u9879\u76ee\n\ndef CreateProject(projectName){\n\n    withCredentials([usernamePassword(credentialsId: 'api-token', passwordVariable: 'password', usernameVariable: 'username')]) {\n\n        sh \"\"\"\n\n           curl -u ${username}:${password} -X GET 'http://127.0.0.10:30080/job/test-devops-service/config.xml' -o config.xml\n           ls -l \n\n           curl -u ${username}:${password} -X POST 'http://127.0.0.1:30080/createItem?name=${projectName}' -H 'Content-Type:text/xml' --data-binary @config.xml\n\n\n        \"\"\"\n    }\n}\n\n\n//\u7981\u7528\u9879\u76ee\n\ndef Project(projectName,option){\n\n    println(projectName)\n    println(option)\n\n    options = [ \"DisableProject\": \"disable\",\n                \"EnableProject\":\"enable\",\n                \"DeleteProject\":\"doDelete\",\n                \"BuildProject\":\"build\"]\n\n    result = HttpReq('POST',\"job/${projectName}/${options[option]}\",'')\n\n}\n</code></pre>"},{"location":"chap15/4Jenkins_REST_API/#2-4","title":"2-4 \u9879\u76ee\u64cd\u4f5c\u6d41\u6c34\u7ebf","text":"<p>\u521b\u5efa\u4e00\u4e2a\u6d41\u6c34\u7ebf\u9879\u76ee\u5177\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u5b57\u7b26\u53c2\u6570<code>projectName</code>\u7528\u4e8e\u586b\u5199\u7528\u6237\u540d\u79f0\u3002\u4e00\u4e2a\u9009\u9879\u53c2\u6570<code>manageOpts</code>\u7528\u4e8e\u9879\u76ee\u7684\u64cd\u4f5c</p> <p>manageOpts: </p> <ul> <li>CreateProject   \u521b\u5efa\u9879\u76ee</li> <li>DisableProject  \u7981\u7528\u9879\u76ee</li> <li>EnableProject  \u542f\u52a8\u9879\u76ee </li> <li>DeleteProject  \u5220\u9664\u9879\u76ee</li> <li>Build Project  \u6784\u5efa\u9879\u76ee </li> </ul> <pre><code>@Library('jenkinslib@master') _\n\ndef jenkinsapi = new org.devops.jenkinsapi()\n\n// String projectName = \"${env.projectName}\"\n// String manageOpts = \"${env.manageOpts}\"\n\npipeline {\n\n    agent { node {label \"master\"}}\n\n    parameters {\n        string(name: 'projectName', defaultValue: '', description: 'Please add your projectName')\n        choice(name: 'manageOpts', choices: 'DisableProject\\nEnableProject\\nDeleteProject\\nBuildProject\\nCreateProject', description: 'Please chose your manageOpts')\n    }\n\n\n    stages{\n        stage(\"test\"){\n            steps{\n                script{\n\n                    if (manageOpts == \"CreateProject\"){\n                        jenkinsapi.CreateProject(projectName)\n                    } else {\n                        jenkinsapi.Project(projectName,manageOpts)\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre> <p></p> <p>CreateProject: test Console Output</p> <pre><code>...\n[Pipeline] sh\n+ curl -u ****:**** -X GET http://127.0.0.10:30080/job/test-devops-service/config.xml -o config.xml\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n100  1056  100  1056    0     0   253k      0 --:--:-- --:--:-- --:--:--  343k\n+ ls -l\ntotal 4\n-rw-r--r-- 1 jenkins jenkins 1056 Sep  9 03:03 config.xml\n+ curl -u ****:**** -X POST http://127.0.0.1:30080/createItem?name=test -H Content-Type:text/xml --data-binary @config.xml\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n100  1056    0     0  100  1056      0  81670 --:--:-- --:--:-- --:--:-- 88000\n[Pipeline] }\n..\n</code></pre>"},{"location":"chap15/5Jenkins_DSL/","title":"\u7b2c\u4e94\u8282 Jenkins Core Api &amp; Job DSL\u521b\u5efa\u9879\u76ee","text":"<p>\u5728\u5927\u89c4\u6a21\u7684Jenkins\u5b9e\u8df5\u4e2d\u521b\u5efa\u9879\u76ee\u4e5f\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u4f55\u901a\u8fc7\u6a21\u677f\u81ea\u52a8\u5316\u7684\u521b\u5efaJenkins\u9879\u76ee\u5462\uff1f \u53ef\u4ee5\u901a\u8fc7\u5b89\u88c5Job Dsl\u63d2\u4ef6\u540e\uff0c\u901a\u8fc7 Dsl\u76f4\u63a5\u521b\u5efa\u9879\u76ee\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5de5\u5177\u5c06dsl\u8f6c\u6362\u4e3axml\uff0c\u7136\u540e\u518d\u901a\u8fc7Jenkins API\u521b\u5efa\u9879\u76ee\u3002\u76f8\u5bf9\u6bd4\u8f83\u7b2c\u4e00\u79cd\u65b9\u5f0f\u66f4\u52a0\u76f4\u63a5\u4e00\u4e9b\uff0c\u7531\u4e8e\u65f6\u95f4\u95ee\u9898\u4eca\u5929\u6682\u65f6\u5206\u4eab\u7b2c\u4e8c\u79cd\u521b\u5efa\u9879\u76ee\u7684\u65b9\u5f0f\u3002</p>"},{"location":"chap15/5Jenkins_DSL/#1jenkins-job-dsl","title":"1\u3001Jenkins Job DSL \u5e94\u7528\u5b9e\u8df5","text":""},{"location":"chap15/5Jenkins_DSL/#1-1","title":"1-1 \u5b89\u88c5\u63d2\u4ef6","text":"<ul> <li>job DSL <ul> <li>\u7528\u4e8e\u6269\u5c55\uff0c\u53ef\u4ee5\u901a\u8fc7\u63d2\u4ef6\u81ea\u5e26\u7684dsl\u65b9\u6cd5\u6765\u5b8c\u6210\u4e00\u4e9b\u7684\u64cd\u4f5c\u3002 </li> </ul> </li> <li>XML job to Job DSL <ul> <li>\u5c06\u4e00\u4e2a\u9879\u76ee\u8f6c\u6362\u6210DSL\u683c\u5f0f </li> </ul> </li> </ul>"},{"location":"chap15/5Jenkins_DSL/#1-2","title":"1-2 \u8d44\u6e90\u6587\u4ef6","text":"<ul> <li> <p>DSL \u8bed\u6cd5</p> <ul> <li>https://jenkinsci.github.io/job-dsl-plugin/#path/pipelinejob</li> </ul> </li> <li> <p>DSL\u8f6c\u6362XML </p> <ul> <li>http://job-dsl.herokuapp.com/</li> </ul> </li> </ul>"},{"location":"chap15/5Jenkins_DSL/#1-3-dsl","title":"1-3 \u4f7f\u7528DSL","text":"<p>\u901a\u8fc7XML Job TO dsl \u751f\u6210DSL\u8bed\u53e5</p> <p>Example</p> <pre><code>pipelineJob(\"test-schdule-service\") {\n  description(\"this is my first job\")\n  keepDependencies(false)\n  parameters {\n    choiceParam(\"test\", [1, 2, 3], \"\")\n  }\n  definition {\n    cpsScm {\n      scm {\n        git {\n          remote {\n            github(\"https://gitlab.com/xxx/xxx.git\", \"https\")\n            credentials(\"24982560-17fc-4589-819b-bc5bea89da77\")\n          }\n          branch(\"*/master\")\n        }\n      }\n      scriptPath(\"Jenkinsfile\")\n    }\n  }\n  disabled(false)\n}\n</code></pre> <p></p> <p>\u5efa\u7acb<code>Free style job</code></p> <p></p> <p></p> <p></p>"},{"location":"chap15/5Jenkins_DSL/#2jenkins-core-api","title":"2\u3001Jenkins Core API \u5e94\u7528","text":"<ul> <li>https://javadoc.jenkins-ci.org/</li> </ul>"},{"location":"chap15/5Jenkins_DSL/#2-1-jenkins-core-api","title":"2-1 \u901a\u8fc7Jenkins Core Api\u521b\u5efa\u9879\u76ee","text":"<pre><code>import javax.xml.transform.stream.StreamSource\nimport jenkins.model.Jenkins\n\n//\u521b\u5efa\u9879\u76ee\nvoid createOrUpdateJob(String name, String xml) {\n    def j = Jenkins.instance\n    String fullName = name\n    if(name.contains('/')) {\n        j = j.getItemByFullName(name.tokenize('/')[0..-2])\n        name = name.tokenize('/')[-1]\n    }\n    Jenkins.checkGoodName(name)\n    if(j.getItem(name) == null) {\n        println \"Created job \\\"${fullName}\\\".\"\n        j.createProjectFromXML(name, new ByteArrayInputStream(xml.getBytes()))\n        j.save()\n    }\n    else if(j.getItem(name).configFile.asString().trim() != xml.trim()) {\n        j.getItem(name).updateByXml(new StreamSource(new ByteArrayInputStream(xml.getBytes())))\n        j.getItem(name).save()\n        println \"Job \\\"${fullName}\\\" already exists.  Updated using XML.\"\n    }\n    else {\n        println \"Nothing changed.  Job \\\"${fullName}\\\" already exists.\"\n    }\n}\n\ntry {\n    //just by trying to access properties should throw an exception\n    // itemName == null\n    // xmlData == null\n    // isPropertiesSet = true\n} catch(MissingPropertyException e) {\n    println 'ERROR Can\\'t create job.'\n    println 'ERROR Missing properties: itemName, xmlData'\n    return\n}\n\nString xmlData = \"\"\"&lt;!-- 1. test-schdule-service --&gt;\n&lt;flow-definition&gt;\n    &lt;actions&gt;&lt;/actions&gt;\n    &lt;description&gt;this is my first job&lt;/description&gt;\n    &lt;keepDependencies&gt;false&lt;/keepDependencies&gt;\n    &lt;properties&gt;\n        &lt;hudson.model.ParametersDefinitionProperty&gt;\n            &lt;parameterDefinitions&gt;\n                &lt;hudson.model.ChoiceParameterDefinition&gt;\n                    &lt;choices class='java.util.Arrays$ArrayList'&gt;\n                        &lt;a class='string-array'&gt;\n                            &lt;string&gt;1&lt;/string&gt;\n                            &lt;string&gt;2&lt;/string&gt;\n                            &lt;string&gt;3&lt;/string&gt;\n                        &lt;/a&gt;\n                    &lt;/choices&gt;\n                    &lt;name&gt;test&lt;/name&gt;\n                    &lt;description&gt;&lt;/description&gt;\n                &lt;/hudson.model.ChoiceParameterDefinition&gt;\n            &lt;/parameterDefinitions&gt;\n        &lt;/hudson.model.ParametersDefinitionProperty&gt;\n        &lt;com.coravy.hudson.plugins.github.GithubProjectProperty&gt;\n            &lt;projectUrl&gt;https://github.com/https://gitlab.com/xxx/xxx.git/&lt;/projectUrl&gt;\n        &lt;/com.coravy.hudson.plugins.github.GithubProjectProperty&gt;\n    &lt;/properties&gt;\n    &lt;triggers&gt;&lt;/triggers&gt;\n    &lt;definition class='org.jenkinsci.plugins.workflow.cps.CpsScmFlowDefinition'&gt;\n        &lt;scriptPath&gt;Jenkinsfile&lt;/scriptPath&gt;\n        &lt;lightweight&gt;false&lt;/lightweight&gt;\n        &lt;scm class='hudson.plugins.git.GitSCM'&gt;\n            &lt;userRemoteConfigs&gt;\n                &lt;hudson.plugins.git.UserRemoteConfig&gt;\n                    &lt;url&gt;https://github.com/https://gitlab.com/xxx/xxx.git.git&lt;/url&gt;\n                    &lt;credentialsId&gt;24982560-17fc-4589-819b-bc5bea89da77&lt;/credentialsId&gt;\n                &lt;/hudson.plugins.git.UserRemoteConfig&gt;\n            &lt;/userRemoteConfigs&gt;\n            &lt;branches&gt;\n                &lt;hudson.plugins.git.BranchSpec&gt;\n                    &lt;name&gt;*/master&lt;/name&gt;\n                &lt;/hudson.plugins.git.BranchSpec&gt;\n            &lt;/branches&gt;\n            &lt;configVersion&gt;2&lt;/configVersion&gt;\n            &lt;doGenerateSubmoduleConfigurations&gt;false&lt;/doGenerateSubmoduleConfigurations&gt;\n            &lt;gitTool&gt;Default&lt;/gitTool&gt;\n            &lt;browser class='hudson.plugins.git.browser.GithubWeb'&gt;\n                &lt;url&gt;https://github.com/https://gitlab.com/xxx/xxx.git/&lt;/url&gt;\n            &lt;/browser&gt;\n        &lt;/scm&gt;\n    &lt;/definition&gt;\n    &lt;disabled&gt;false&lt;/disabled&gt;\n&lt;/flow-definition&gt;\n\"\"\"\nString itemName = \"my-first-pipeline\"\n\ncreateOrUpdateJob(itemName, xmlData)\n</code></pre>"},{"location":"chap15/5Jenkins_DSL/#2-2-jenkins-script-console","title":"2-2 \u901a\u8fc7Jenkins Script Console\u8fd0\u884c","text":""},{"location":"chap16/1cd_intro/","title":"L1 \u91cf\u8eab\u5b9a\u5236\u4f60\u7684\u6301\u7eed\u4ea4\u4ed8\u4f53\u7cfb","text":""},{"location":"chap16/1cd_intro/#1","title":"1 \u6301\u7eed\u4ea4\u4ed8\u5230\u5e95\u6709\u4ec0\u4e48\u4ef7\u503c\uff1f","text":""},{"location":"chap16/1cd_intro/#1-1","title":"1-1 \u6301\u7eed\u96c6\u6210\u3001\u6301\u7eed\u4ea4\u4ed8\u548c\u6301\u7eed\u90e8\u7f72\u7684\u5173\u7cfb","text":"<p>\u6211\u4eec\u901a\u5e38\u4f1a\u628a\u8f6f\u4ef6\u7814\u53d1\u5de5\u4f5c\u62c6\u89e3\uff0c\u62c6\u5206\u6210\u4e0d\u540c\u6a21\u5757\u6216\u4e0d\u540c\u56e2\u961f\u540e\u8fdb\u884c\u7f16\u7801\uff0c\u7f16\u7801\u5b8c\u6210\u540e\uff0c\u8fdb\u884c\u96c6\u6210\u6784\u5efa\u548c\u6d4b\u8bd5\u3002\u8fd9\u4e2a\u4ece\u7f16\u7801\u5230\u6784\u5efa\u518d\u5230\u6d4b\u8bd5\u7684\u53cd\u590d\u6301\u7eed\u8fc7\u7a0b\uff0c\u5c31\u53eb\u4f5c\u201c\u6301\u7eed\u96c6\u6210\u201d\u3002</p> <p>\u201c\u6301\u7eed\u96c6\u6210\u201d\u4e00\u65e6\u5b8c\u6210\uff0c\u5219\u4ee3\u8868\u4ea7\u54c1\u5904\u5728\u4e00\u4e2a\u53ef\u4ea4\u4ed8\u72b6\u6001\uff0c\u4f46\u5e76\u4e0d\u4ee3\u8868\u8fd9\u662f\u6700\u4f18\u72b6\u6001\uff0c\u8fd8\u9700\u8981\u6839\u636e\u5916\u90e8\u4f7f\u7528\u8005\u7684\u53cd\u9988\u9010\u6b65\u4f18\u5316\u3002\u5f53\u7136\u8fd9\u91cc\u7684\u4f7f\u7528\u8005\u5e76\u4e0d\u4e00\u5b9a\u662f\u771f\u6b63\u7684\u7528\u6237\uff0c\u8fd8\u53ef\u80fd\u662f\u6d4b\u8bd5\u4eba\u5458\u3001\u4ea7\u54c1\u4eba\u5458\u3001\u7528\u6237\u4f53\u9a8c\u5de5\u7a0b\u5e08\u3001\u5b89\u5168\u5de5\u7a0b\u5e08\u3001\u4f01\u4e1a\u9886\u5bfc\u7b49\u7b49\u3002</p> <p>\u8fd9\u4e2a\u5728\u201c\u6301\u7eed\u96c6\u6210\u201d\u4e4b\u540e\uff0c\u83b7\u53d6\u5916\u90e8\u5bf9\u8f6f\u4ef6\u7684\u53cd\u9988\u518d\u901a\u8fc7\u201c\u6301\u7eed\u96c6\u6210\u201d\u8fdb\u884c\u4f18\u5316\u7684\u8fc7\u7a0b\u5c31\u53eb\u4f5c\u201c\u6301\u7eed\u4ea4\u4ed8\u201d\uff0c\u5b83\u662f\u201c\u6301\u7eed\u96c6\u6210\u201d\u7684\u81ea\u7136\u5ef6\u7eed\u3002</p> <p>\u800c\u201c\u6301\u7eed\u90e8\u7f72\u201d\u5c31\u662f\u5c06\u53ef\u4ea4\u4ed8\u4ea7\u54c1\uff0c\u5feb\u901f\u4e14\u5b89\u5168\u5730\u4ea4\u4ed8\u7528\u6237\u4f7f\u7528\u7684\u4e00\u5957\u65b9\u6cd5\u548c\u7cfb\u7edf\uff0c\u5b83\u662f\u201c\u6301\u7eed\u4ea4\u4ed8\u201d\u7684\u6700\u540e\u201c\u4e00\u516c\u91cc\u201d\u3002</p> <p>\u53ef\u89c1\uff0c\u201c\u6301\u7eed\u4ea4\u4ed8\u201d\u662f\u4e00\u4e2a\u627f\u4e0a\u542f\u4e0b\u7684\u8fc7\u7a0b\uff0c\u5b83\u4f7f\u201c\u6301\u7eed\u96c6\u6210\u201d\u6709\u4e86\u5b9e\u9645\u4e1a\u52a1\u4ef7\u503c\uff0c\u5f62\u6210\u4e86\u95ed\u73af\uff0c\u800c\u53c8\u4e3a\u5c06\u6765\u8fbe\u5230\u201c\u6301\u7eed\u90e8\u7f72\u201d\u7684\u9ad8\u7ea7\u76ee\u6807\u505a\u597d\u4e86\u94fa\u57ab\u3002</p>"},{"location":"chap16/1cd_intro/#1-2","title":"1-2 \u6301\u7eed\u4ea4\u4ed8\u7684\u663e\u6027\u4ef7\u503c","text":"<p>\u6301\u7eed\u4ea4\u4ed8\u4e5f\u901a\u5e38\u4ee5\u201c\u53d1\u5e03\u6d41\u6c34\u7ebf\u201d\u7684\u65b9\u5f0f\u6765\u89e3\u91ca\uff0c\u5373\u7814\u53d1\u56e2\u961f\u4ece\u5f00\u53d1\uff0c\u5230\u6d4b\u8bd5\uff0c\u518d\u5230\u90e8\u7f72\uff0c\u6700\u7ec8\u5c06\u4ea7\u54c1\u4ea4\u4ed8\u7ed9\u6700\u7ec8\u7528\u6237\u4f7f\u7528\u7684\u8fc7\u7a0b\u3002\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>\u867d\u7136\u6301\u7eed\u4ea4\u4ed8\u7740\u91cd\u6253\u9020\u7684\u662f\u53d1\u5e03\u6d41\u6c34\u7ebf\u7684\u90e8\u5206\uff0c\u4f46\u5b83\u6240\u8981\u8fbe\u5230\u7684\u76ee\u6807\u662f\u5728\u201c\u6700\u7ec8\u7528\u6237\u201d\u548c\u201c\u7814\u53d1\u56e2\u961f\u201d\u4e4b\u95f4\u5efa\u7acb\u7d27\u5bc6\u7684\u53cd\u9988\u73af\uff1a\u901a\u8fc7\u6301\u7eed\u4ea4\u4ed8\u65b0\u7684\u8f6f\u4ef6\u7248\u672c\uff0c\u4ee5\u9a8c\u8bc1\u65b0\u60f3\u6cd5\u548c\u8f6f\u4ef6\u6539\u52a8\u7684\u6b63\u786e\u6027\uff0c\u5e76\u8861\u91cf\u8fd9\u4e9b\u6539\u52a8\u5bf9\u8f6f\u4ef6\u4ef7\u503c\u7684\u5f71\u54cd\u3002</p> <p>\u8fd9\u91cc\u8bf4\u7684\u201c\u8f6f\u4ef6\u4ef7\u503c\u201d\uff0c\u8bf4\u767d\u4e86\u5c31\u662f\u6536\u5165\u3001\u65e5\u6d3b\u3001GMV \u7b49 KPI \u6307\u6807\u4e86\u3002</p>"},{"location":"chap16/1cd_intro/#2","title":"2 \u5f71\u54cd\u6301\u7eed\u4ea4\u4ed8\u7684\u56e0\u7d20\u6709\u54ea\u4e9b\uff1f","text":""},{"location":"chap16/1cd_intro/#2-1","title":"2-1 \u7ec4\u7ec7\u548c\u6587\u5316\u56e0\u7d20","text":"<ul> <li>\u7b2c\u4e00\u4e2a\u5c42\u6b21\uff1a\u7d27\u5bc6\u914d\u5408\uff0c\u8fd9\u662f\u7ec4\u7ec7\u53d1\u5c55\uff0c\u90e8\u95e8\u5408\u4f5c\u7684\u57fa\u7840\u3002</li> <li>\u7b2c\u4e8c\u4e2a\u5c42\u6b21\uff1a\u96c6\u601d\u5e7f\u76ca\uff0c\u8fd9\u5c31\u9700\u8981\u7ec4\u7ec7\u5185\u5404\u4e2a\u4e0d\u540c\u90e8\u95e8\uff0c\u6216\u4e0d\u540c\u804c\u80fd\u7684\u89d2\u8272\uff0c\u8df3\u51fa\u81ea\u8eab\u7684\u201c\u8212\u9002\u533a\u201d\u3002</li> <li>\u7b2c\u4e09\u4e2a\u5c42\u6b21\uff1a\u81ea\u6211\u9a71\u52a8\uff0c\u662f\u7406\u60f3\u4e2d\u7684\u5b8c\u7f8e\u7ec4\u7ec7\u5f62\u5f0f\u3002</li> </ul> <p>\u6301\u7eed\u96c6\u6210\u7684\u4e09\u4e2a\u5c42\u6b21</p> <ul> <li>\u5206\u6a21\u5757\u7f16\u7801\uff1b</li> <li>\u6574\u4f53\u96c6\u6210\uff1b</li> <li>\u5b9e\u73b0\u4ee5\u4e0a\u4e24\u4e2a\u8fc7\u7a0b\u7684\u81ea\u52a8\u5316\uff0c\u5e76\u5f62\u6210\u95ed\u73af\uff1b</li> </ul> <p>\u4e00\u822c\u8f6f\u4ef6\u4f01\u4e1a\u4e0e\u4ea4\u4ed8\u6709\u5173\u7684\u7814\u53d1\u90e8\u95e8\u5305\u62ec\u56db\u4e2a\uff1a\u4ea7\u54c1\u3001\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u8fd0\u7ef4\u3002\u800c\u8fd9\u56db\u4e2a\u90e8\u95e8\u5929\u7136\u5730\u5f62\u6210\u4e86\u4e00\u4e2a\u751f\u4ea7\u6d41\u6c34\u7ebf\uff0c\u6240\u4ee5\u5f62\u6210\u7406\u60f3\u7ec4\u7ec7\u7684\u7b2c\u4e00\u5c42\u6b21\u7d27\u5bc6\u914d\u5408\uff0c\u57fa\u672c\u6ca1\u4ec0\u4e48\u95ee\u9898\u3002</p> <p>\u4f46\u662f\uff0c\u8981\u8fbe\u5230\u7b2c\u4e8c\u5c42\u6b21\u96c6\u601d\u5e7f\u76ca\u7684\u96be\u5ea6\uff0c\u5f80\u5f80\u5c31\u5f88\u5927\u3002\u56e0\u4e3a\uff0c\u6bcf\u4e2a\u90e8\u95e8\u6709\u81ea\u8eab\u7684\u5229\u76ca\uff0c\u4ee5\u53ca\u81ea\u5df1\u7684\u5de5\u4f5c\u65b9\u5f0f\u548c\u76ee\u6807\u3002</p> <ul> <li>\u6bd4\u5982\uff0c\u4ea7\u54c1\u4eba\u5458\u548c\u6d4b\u8bd5\u4eba\u5458\u5c31\u662f\u4e00\u5bf9\u77db\u76fe\u4f53\uff1a\u4ea7\u54c1\u4eba\u5458\u5e0c\u671b\u4ea7\u54c1\u5c3d\u5feb\u4e0a\u7ebf\uff0c\u800c\u6d4b\u8bd5\u4eba\u5458\u5219\u5e0c\u671b\u591a\u7559\u65f6\u95f4\u8fdb\u884c\u66f4\u5b8c\u6574\u7684\u6d4b\u8bd5\u3002</li> <li>\u53c8\u6bd4\u5982\uff0c\u5f00\u53d1\u4eba\u5458\u548c\u8fd0\u7ef4\u4eba\u5458\u4e5f\u7ecf\u5e38\u77db\u76fe\uff1a\u5f00\u53d1\u4eba\u5458\u5e0c\u671b\u80fd\u6709\u5b8c\u5168\u6743\u9650\uff0c\u800c\u8fd0\u7ef4\u4eba\u5458\u5374\u63a7\u5236\u7740\u751f\u4ea7\u7684 root\u3002</li> </ul> <p>\u7ec7\u7684\u95ee\u9898\uff0c\u8fd8\u662f\u9700\u8981\u901a\u8fc7\u7ec4\u7ec7\u53d8\u9769\u6765\u89e3\u51b3\u3002\u901a\u5e38\u6211\u4eec\u4f1a\u91c7\u7528\u4ee5\u4e0b\u4e09\u79cd\u65b9\u6848\uff1a</p> <ul> <li>\u6210\u7acb\u9879\u76ee\u7ba1\u7406\u529e\u516c\u5ba4\uff08Project Manage Office\uff0c\u7b80\u79f0 PMO\uff09\u8fd9\u6837\u7684\u76d1\u7763\u578b\u7ec4\u7ec7\uff0c\u5e2e\u52a9\u6301\u7eed\u4ea4\u4ed8\u843d\u5730\uff1b</li> <li>\u72ec\u7acb\u5efa\u7acb\u5de5\u7a0b\u6548\u80fd\u90e8\u95e8\uff0c\u5168\u9762\u8d1f\u8d23\u5305\u62ec\u6301\u7eed\u4ea4\u4ed8\u5728\u5185\u7684\u7814\u53d1\u6548\u7387\u63d0\u5347\u5de5\u4f5c\uff1b</li> <li>\u4f7f\u7528\u654f\u6377\u5f62\u5f0f\uff0c\u5982 Scrum\uff0c\u6253\u7834\u804c\u80fd\u90e8\u95e8\u95f4\u7684\u201c\u9694\u79bb\u5899\u201d\uff0c\u4ee5\u4ea7\u54c1\u7684\u5f62\u5f0f\u7ec4\u7ec7\u56e2\u961f\uff0c\u5404\u56e2\u961f\u81ea\u884c\u63a8\u8fdb\u6301\u7eed\u4ea4\u4ed8 \u3002</li> </ul> <p>\u603b\u800c\u8a00\u4e4b\uff0c\u6301\u7eed\u4ea4\u4ed8\u5fc5\u987b\u6709\u4e0e\u5176\u76f8\u9002\u5e94\u7684\u7ec4\u7ec7\u548c\u6587\u5316\uff0c\u5426\u5219\u5c06\u5f88\u96be\u5b9e\u65bd\u3002</p>"},{"location":"chap16/1cd_intro/#2-2","title":"2-2 \u6d41\u7a0b\u56e0\u7d20","text":"<p>\u8981\u8bf4\u6301\u7eed\u4ea4\u4ed8\u5bf9\u4f01\u4e1a\u548c\u7ec4\u7ec7\u6539\u53d8\u6700\u591a\u7684\u662f\u4ec0\u4e48\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f\u6d41\u7a0b\u3002</p> <ul> <li>\u8017\u65f6\u8f83\u957f\u7684\u6d41\u7a0b\u3002\u6bd4\u5982\uff0c\u4e00\u4e2a\u529f\u80fd\u7684\u7814\u53d1\u8fed\u4ee3\u5468\u671f\u4e3a 5 \u5929\uff0c\u800c\u5176\u4e2d\u6709\u4e00\u4e2a\u4e0a\u7ebf\u5ba1\u6838\u6d41\u7a0b\uff0c\u9700\u8981\u82b1\u8d39 3 \u5929\u65f6\u95f4\uff0c\u90a3\u8fd9\u4e2a\u6d41\u7a0b\u5c31\u4e25\u91cd\u5f71\u54cd\u4e86\u6301\u7eed\u4ea4\u4ed8\uff0c\u5fc5\u987b\u88ab\u6253\u7834\u3002</li> <li>\u5b8c\u5168\u4eba\u5de5\u7c7b\u7684\u6d41\u7a0b\u3002 \u5b8c\u5168\u4eba\u5de5\u64cd\u4f5c\u7684\u6d41\u7a0b\uff0c\u4e00\u822c\u6548\u7387\u4f4e\u4e0b\uff0c\u4e14\u8d28\u91cf\u96be\u4ee5\u4fdd\u8bc1\uff0c\u6301\u7eed\u4ea4\u4ed8\u7684\u9010\u6b65\u6df1\u5165\u4f1a\u901a\u8fc7\u81ea\u52a8\u5316\u66ff\u4ee3\u8fd9\u4e9b\u4eba\u5de5\u6d41\u7a0b\u7684\u5b58\u5728\u3002</li> <li>\u4fe1\u606f\u62a5\u5907\u7c7b\u7684\u6d41\u7a0b\u3002 \u6301\u7eed\u4ea4\u4ed8\u8fc7\u7a0b\u4e2d\u540c\u6837\u4f1a\u4ea7\u751f\u5404\u79cd\u4fe1\u606f\u6d41\uff0c\u8fd9\u4e9b\u4fe1\u606f\u6709\u4e9b\u9700\u8981\u5e7f\u64ad\uff0c\u6709\u4e9b\u9700\u8981\u5b9a\u70b9\u4f20\u9012\u3002\u5b9e\u65bd\u6301\u7eed\u4ea4\u4ed8\u540e\uff0c\u8fd9\u4e9b\u4fe1\u606f\u62a5\u5907\u7c7b\u7684\u6d41\u7a0b\u4e00\u5b9a\u4f1a\u901a\u8fc7\u5f02\u6b65\u6d88\u606f\u7b49\u65b9\u5f0f\u8fdb\u884c\u6539\u9020\u3002</li> </ul> <p>\u5176\u4e2d\uff0c\u5982\u4f55\u5bf9\u5f85\u5ba1\u6279\u6d41\u7a0b\u662f\u91cd\u70b9\u3002</p> <p>\u5728\u6301\u7eed\u4ea4\u4ed8\u8fc7\u7a0b\u4e2d\uff0c\u5176\u5b9e\u6700\u8ba9\u4f60\u5934\u75db\u7684\u5e94\u8be5\u662f\u4e00\u4e9b\u5ba1\u6279\u6d41\u7a0b\u3002\u8fd9\u4e9b\u6d41\u7a0b\u65e2\u7136\u53eb\u505a\u5ba1\u6279\uff0c\u90a3\u5c31\u4ee3\u8868\u7740\u6388\u6743\u4e0e\u8d23\u4efb\uff0c\u4ee3\u8868\u7740\u4e25\u8c28\u4e0e\u4e25\u8083\uff0c\u56e0\u6b64\u4e5f\u4e00\u5b9a\u6709\u5176\u5b58\u5728\u7684\u4ef7\u503c\u548c\u610f\u4e49\uff0c\u4e0d\u80fd\u8f7b\u6613\u88ab\u53bb\u9664\u6216\u6253\u7834\u3002</p>"},{"location":"chap16/1cd_intro/#2-3","title":"2-3 \u67b6\u6784\u56e0\u7d20","text":"<p>\u5f71\u54cd\u6301\u7eed\u4ea4\u4ed8\u7684\u67b6\u6784\u56e0\u7d20\uff0c\u4e3b\u8981\u6709\u4e24\u5927\u90e8\u5206\uff1a\u7cfb\u7edf\u67b6\u6784\u548c\u90e8\u7f72\u67b6\u6784</p> <ul> <li>\u7b2c\u4e00\uff0c\u7cfb\u7edf\u67b6\u6784<ul> <li>\u7cfb\u7edf\u67b6\u6784\u6307\u7cfb\u7edf\u7684\u7ec4\u6210\u7ed3\u6784\uff0c\u5b83\u51b3\u5b9a\u4e86\u7cfb\u7edf\u7684\u8fd0\u884c\u6a21\u5f0f\uff0c\u5c42\u6b21\u7ed3\u6784\uff0c\u8c03\u7528\u5173\u7cfb\u7b49\u3002\u6211\u4eec\u901a\u5e38\u4f1a\u9047\u5230\u7684\u7cfb\u7edf\u67b6\u6784\u5305\u62ec\uff1a<ul> <li>\u5355\u4f53\u67b6\u6784\uff0c\u4e00\u4e2a\u90e8\u7f72\u5305\uff0c\u5305\u542b\u4e86\u5e94\u7528\u6240\u6709\u529f\u80fd\uff1b</li> <li>SOA \u67b6\u6784\uff0c\u9762\u5411\u670d\u52a1\uff0c\u901a\u8fc7\u670d\u52a1\u95f4\u7684\u63a5\u53e3\u548c\u5951\u7ea6\u8054\u7cfb\uff1b</li> <li>\u5fae\u670d\u52a1\u67b6\u6784\uff0c\u6309\u4e1a\u52a1\u9886\u57df\u5212\u5206\u4e3a\u72ec\u7acb\u7684\u670d\u52a1\u5355\u5143\uff0c\u53ef\u72ec\u7acb\u90e8\u7f72\uff0c\u677e\u8026\u5408\u3002</li> </ul> </li> </ul> </li> </ul> <p>\u5bf9\u5355\u4f53\u67b6\u6784\u6765\u8bf4\uff1a</p> <ul> <li> <p>\u6574\u4e2a\u5e94\u7528\u4f7f\u7528\u4e00\u4e2a\u4ee3\u7801\u4ed3\u5e93\uff0c\u5728\u7cfb\u7edf\u7b80\u5355\u7684\u60c5\u51b5\u4e0b\uff0c\u56e0\u4e3a\u7ba1\u7406\u7b80\u5355\uff0c\u53ef\u4ee5\u5feb\u901f\u7b80\u5355\u5730\u505a\u5230\u6301\u7eed\u96c6\u6210\uff1b</p> <ul> <li>\u4f46\u662f\u4e00\u65e6\u7cfb\u7edf\u590d\u6742\u8d77\u6765\uff0c\u4ed3\u5e93\u5c31\u4f1a\u8d8a\u53d8\u8d8a\u5927\uff0c\u5f00\u53d1\u56e2\u961f\u4e5f\u4f1a\u8d8a\u6765\u8d8a\u5927\uff0c\u591a\u56e2\u961f\u7ef4\u62a4\u4e00\u4e2a\u4ee3\u7801\u4ed3\u5e93\u7b80\u76f4\u5c31\u662f\u5669\u68a6\uff0c\u4f1a\u4ea7\u751f\u5927\u91cf\u7684\u51b2\u7a81\uff1b</li> <li>\u800c\u4e14\u6301\u7eed\u96c6\u6210\u7684\u7f16\u8bd1\u65f6\u95f4\u4e5f\u4f1a\u968f\u7740\u4ed3\u5e93\u53d8\u5927\u800c\u53d8\u957f\uff0c\u56e2\u961f\u518d\u4e5f\u627f\u53d7\u4e0d\u8d77\u4e00\u6b21\u7f16\u8bd1\u51e0\u5341\u5206\u949f\uff0c\u7ed3\u679c\u6700\u7ec8\u5931\u8d25\u7684\u75db\u82e6\u3002</li> </ul> </li> <li> <p>\u5e94\u7528\u53d8\u590d\u6742\u540e\uff0c\u6d4b\u8bd5\u9700\u8981\u5168\u56de\u5f52\uff0c\u56e0\u4e3a\u4e0d\u7ba1\u591a\u4e48\u5c0f\u7684\u529f\u80fd\u53d8\u66f4\uff0c\u90fd\u4f1a\u5f15\u8d77\u6574\u4e2a\u5e94\u7528\u7684\u91cd\u65b0\u7f16\u8bd1\u548c\u6253\u5305\u3002\u5373\u4f7f\u5728\u6709\u9ad8\u8986\u76d6\u7387\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u7684\u5e2e\u52a9\u4e0b\uff0c\u6d4b\u8bd5\u6240\u8981\u82b1\u8d39\u7684\u65f6\u95f4\u6210\u672c\u4ecd\u65e7\u5de8\u5927\uff0c\u4e14\u9519\u8bef\u6210\u672c\u6602\u8d35\u3002</p> </li> <li> <p>\u5728\u5e94\u7528\u6bd4\u8f83\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u505a\u5230\u5355\u673a\u90e8\u7f72\uff0c\u7b80\u5355\u76f4\u63a5\uff0c\u8fd9\u6709\u5229\u4e8e\u6301\u7eed\u4ea4\u4ed8\uff1b</p> <ul> <li>\u4f46\u662f\u4e00\u65e6\u5e94\u7528\u590d\u6742\u8d77\u6765\uff0c\u6bcf\u6b21\u90e8\u7f72\u7684\u4ee3\u4ef7\u4e5f\u53d8\u5f97\u8d8a\u6765\u8d8a\u9ad8\uff0c\u8fd9\u548c\u4e4b\u524d\u8bf4\u7684\u6784\u5efa\u8d8a\u6765\u8d8a\u6162\u662f\u4e00\u4e2a\u9053\u7406\u3002\u800c\u4e14\u90e8\u7f72\u4ee3\u4ef7\u9ad8\u4f1a\u76f4\u63a5\u5f71\u54cd\u751f\u4ea7\u7a33\u5b9a\u6027\u3002\u8fd9\u663e\u7136\u4e0d\u662f\u6301\u7eed\u4ea4\u4ed8\u60f3\u8981\u7684\u7ed3\u679c\u3002</li> </ul> </li> </ul> <p>\u5bf9 SOA \u67b6\u6784\u6765\u8bf4\uff1a</p> <ul> <li>\u7531\u4e8e\u670d\u52a1\u7684\u62c6\u5206\uff0c\u4f7f\u5f97\u5e94\u7528\u7684\u4ee3\u7801\u7ba1\u7406\u3001\u6784\u5efa\u3001\u6d4b\u8bd5\u90fd\u53d8\u5f97\u66f4\u8f7b\u91cf\uff0c\u8fd9\u6709\u5229\u4e8e\u6301\u7eed\u96c6\u6210\u7684\u5b9e\u65bd\u3002</li> <li>\u56e0\u4e3a\u5206\u5e03\u5f0f\u7684\u90e8\u7f72\uff0c\u4f7f\u5f97\u6d4b\u8bd5\u73af\u5883\u7684\u6cbb\u7406\uff0c\u6d4b\u8bd5\u90e8\u7f72\u53d8\u5f97\u975e\u5e38\u590d\u6742\uff0c\u8fd9\u91cc\u5c31\u9700\u8981\u6301\u7eed\u4ea4\u4ed8\u8fc7\u7a0b\u4e2d\u8003\u8651\u670d\u52a1\u4e0e\u670d\u52a1\u95f4\u7684\u4f9d\u8d56\uff0c\u73af\u5883\u7684\u9694\u79bb\u7b49\u7b49\u3002</li> <li>\u4e00\u4e9b\u65b0\u6280\u672f\u548c\u7ec4\u4ef6\u7684\u5f15\u5165\uff0c\u6bd4\u5982\u670d\u52a1\u53d1\u73b0\u3001\u914d\u7f6e\u4e2d\u5fc3\u3001\u8def\u7531\u3001\u7f51\u5173\u7b49\uff0c\u4f7f\u5f97\u6301\u7eed\u4ea4\u4ed8\u8fc7\u7a0b\u4e2d\u4e0d\u5f97\u4e0d\u53bb\u8003\u8651\u8fd9\u4e9b\u4e2d\u95f4\u4ef6\u7684\u9002\u914d\u3002</li> </ul> <p>\u5bf9\u5fae\u670d\u52a1\u67b6\u6784\u6765\u8bf4\uff1a</p> <ul> <li>\u5176\u5b9e\uff0c\u5fae\u670d\u52a1\u67b6\u6784\u662f\u4e00\u79cd SOA \u67b6\u6784\u7684\u6f14\u5316\uff0c\u5b83\u7ed9\u6301\u7eed\u4ea4\u4ed8\u5e26\u6765\u7684\u5f71\u54cd\u548c\u6311\u6218\u4e5f\u57fa\u672c\u4e0e SOA \u67b6\u6784\u4e00\u81f4\u3002</li> <li>\u5f53\u7136\uff0c\u5982\u679c\u4f60\u91c7\u7528\u5bb9\u5668\u6280\u672f\u6765\u627f\u8f7d\u4f60\u7684\u5fae\u670d\u52a1\u67b6\u6784\uff0c\u5c31\u53e6\u5f53\u522b\u8bba\u4e86\uff0c\u8fd9\u5b8c\u5168\u662f\u4e00\u4e2a\u6301\u7eed\u4ea4\u4ed8\u5168\u65b0\u7684\u9886\u57df\uff0c\u8fd9\u90e8\u5206\u5185\u5bb9\u6211\u5c06\u5728\u540e\u7eed\u6587\u7ae0\u4e2d\u8ddf\u4f60\u5206\u4eab</li> </ul> <p>\u7b2c\u4e8c\uff0c\u90e8\u7f72\u67b6\u6784</p> <p>\u90e8\u7f72\u67b6\u6784\u6307\u7684\u662f\uff0c\u7cfb\u7edf\u5728\u5404\u79cd\u73af\u5883\u4e0b\u7684\u90e8\u7f72\u65b9\u6cd5\uff0c\u9a8c\u6536\u6807\u51c6\uff0c\u7f16\u6392\u6b21\u5e8f\u7b49\u7684\u96c6\u5408\u3002\u5b83\u5c06\u76f4\u63a5\u5f71\u54cd\u4f60\u6301\u7eed\u4ea4\u4ed8\u7684\u201c\u6700\u540e\u4e00\u516c\u91cc\u201d\u3002</p> <ul> <li>\u9996\u5148\uff0c\u4f60\u9700\u8981\u8003\u8651\uff0c\u662f\u5426\u6709\u7edf\u4e00\u7684\u90e8\u7f72\u6807\u51c6\u548c\u65b9\u5f0f\u3002</li> <li>\u5176\u6b21\uff0c\u9700\u8981\u8003\u8651\u53d1\u5e03\u7684\u7f16\u6392\u6b21\u5e8f\u3002</li> <li>\u518d\u6b21\uff0c\u662f markdown \u4e0e markup \u673a\u5236\u3002 </li> <li>\u6700\u540e\uff0c\u662f\u9884\u70ed\u4e0e\u81ea\u68c0\u3002 </li> </ul>"},{"location":"chap16/2config_mgt/","title":"L2 \u914d\u7f6e\u7ba1\u7406","text":""},{"location":"chap16/2config_mgt/#1","title":"1 \u4ee3\u7801\u5206\u652f\u7b56\u7565\u7684\u9009\u62e9","text":"<p>\u4f60\u9700\u8981\u601d\u8003\u7684\u51e0\u4e2a\u95ee\u9898\u5982\u4e0b\uff1a</p> <ul> <li>Google \u548c Facebook \u8fd9\u4e24\u4e2a\u4e92\u8054\u7f51\u5927\u5496\u90fd\u5728\u7528\u4e3b\u5e72\u5f00\u53d1\uff08Trunk Based Development\uff0c\u7b80\u79f0 TBD\uff09\uff0c\u6211\u4eec\u662f\u4e0d\u662f\u4e5f\u53c2\u7167\u5b83\u4fe9\uff0c\u91c7\u7528\u4e3b\u5e72\u5f00\u53d1\u5206\u652f\u7b56\u7565\uff1f</li> <li>\u7528 Google \u641c\u7d22\u4e00\u4e0b\uff0c\u4f1a\u53d1\u73b0\u6709\u4e2a\u6392\u540d\u5f88\u9760\u524d\u7684\u5206\u652f\u7b56\u7565\uff0c\u53eb\u201cA successful Git branching model\u201d\uff08\u7b80\u79f0 Git Flow\uff09\uff0c\u5b83\u771f\u7684\u597d\u7528\u5417\uff1f\u56e2\u961f\u53ef\u4ee5\u76f4\u63a5\u5957\u7528\u5417\uff1f</li> <li>GitHub \u548c GitLab \u8fd9\u4e24\u4e2a\u5f53\u4e0b\u6700\u6d41\u884c\u7684\u4ee3\u7801\u7ba1\u7406\u5e73\u53f0\uff0c\u5404\u81ea\u63a8\u51fa\u4e86 GitHub Flow \u548c GitLab Flow\uff0c\u5b83\u4eec\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u9002\u5408\u6211\u4f7f\u7528\u5417\uff1f</li> </ul>"},{"location":"chap16/2config_mgt/#1-1-tbd","title":"1-1 \u8c08\u8c08\u4e3b\u5e72\u5f00\u53d1\uff08TBD\uff09","text":"<p>\u4e3b\u5e72\u5f00\u53d1\u662f\u4e00\u4e2a\u6e90\u4ee3\u7801\u63a7\u5236\u7684\u5206\u652f\u6a21\u578b\uff0c\u5f00\u53d1\u8005\u5728\u4e00\u4e2a\u79f0\u4e3a \u201ctrunk\u201d \u7684\u5206\u652f\uff08Git \u79f0 master\uff09 \u4e2d\u5bf9\u4ee3\u7801\u8fdb\u884c\u534f\u4f5c\uff0c\u9664\u4e86\u53d1\u5e03\u5206\u652f\u5916\u6ca1\u6709\u5176\u4ed6\u5f00\u53d1\u5206\u652f\u3002</p> <p>Google \u548c Facebook \u90fd\u662f\u91c7\u7528\u201c\u4e3b\u5e72\u5f00\u53d1\u201d\u7684\u65b9\u5f0f\uff0c\u4ee3\u7801\u4e00\u822c\u76f4\u63a5\u63d0\u4ea4\u5230\u4e3b\u5e72\u7684\u5934\u90e8\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6240\u6709\u7528\u6237\u770b\u5230\u7684\u90fd\u662f\u540c\u4e00\u4efd\u4ee3\u7801\u7684\u6700\u65b0\u7248\u672c\u3002</p> <p>\u201c\u4e3b\u5e72\u5f00\u53d1\u201d\u786e\u5b9e\u907f\u514d\u4e86\u5408\u5e76\u5206\u652f\u65f6\u7684\u9ebb\u70e6\uff0c\u56e0\u6b64\u50cf Google \u8fd9\u6837\u7684\u516c\u53f8\u4e00\u822c\u5c31\u4e0d\u91c7\u7528\u5206\u652f\u5f00\u53d1\uff0c\u5206\u652f\u53ea\u7528\u6765\u53d1\u5e03\u3002</p> <p>\u5927\u591a\u6570\u65f6\u5019\uff0c\u53d1\u5e03\u5206\u652f\u662f\u4e3b\u5e72\u67d0\u4e2a\u65f6\u70b9\u7684\u5feb\u7167\u3002</p> <p>\u4ee5\u540e\u7684\u6539 Bug \u548c\u529f\u80fd\u589e\u5f3a\uff0c\u90fd\u662f\u63d0\u4ea4\u5230\u4e3b\u5e72\uff0c\u5fc5\u8981\u65f6 cherry-pick \uff08\u9009\u62e9\u90e8\u5206\u53d8\u66f4\u96c6\u5408\u5e76\u5230\u5176\u4ed6\u5206\u652f\uff09\u5230\u53d1\u5e03\u5206\u652f\u3002\u4e0e\u4e3b\u5e72\u957f\u671f\u5e76\u884c\u7684\u7279\u6027\u5206\u652f\u6781\u4e3a\u5c11\u89c1\u3002</p> <p>\u7531\u4e8e\u4e0d\u91c7\u7528\u201c\u7279\u6027\u5206\u652f\u5f00\u53d1\u201d\uff0c\u6240\u6709\u63d0\u4ea4\u7684\u4ee3\u7801\u90fd\u88ab\u96c6\u6210\u5230\u4e86\u4e3b\u5e72\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u4e3b\u5e72\u4e0a\u7ebf\u540e\u7684\u6709\u6548\u6027\uff0c\u4e00\u822c\u4f1a\u4f7f\u7528\u7279\u6027\u5207\u6362\uff08feature toggle\uff09\u3002\u7279\u6027\u5207\u6362\u5c31\u50cf\u4e00\u4e2a\u5f00\u5173\u53ef\u4ee5\u5728\u8fd0\u884c\u671f\u95f4\u9690\u85cf\u3001\u542f\u7528\u6216\u7981\u7528\u7279\u5b9a\u529f\u80fd\uff0c\u9879\u76ee\u56e2\u961f\u53ef\u4ee5\u501f\u52a9\u8fd9\u79cd\u65b9\u5f0f\u52a0\u901f\u5f00\u53d1\u8fc7\u7a0b\u3002</p>"},{"location":"chap16/2config_mgt/#1-2","title":"1-2 \u8c08\u8c08\u7279\u6027\u5206\u652f\u5f00\u53d1","text":"<ul> <li>\u7b2c\u4e00\uff0cGit Flow</li> </ul> <p>Git \u521a\u51fa\u6765\u7684\u90a3\u4e9b\u5e74\uff0c\u53ef\u53c2\u8003\u7684\u6a21\u578b\u4e0d\u591a\uff0c\u6240\u4ee5 Git Flow \u6a21\u578b\u5728 2011 \u5e74\u5de6\u53f3\u88ab\u5927\u5bb6\u5f53\u4f5c\u4e86\u63a8\u8350\u7684\u5206\u652f\u6a21\u578b\uff0c\u81f3\u4eca\u4e5f\u8fd8\u6709\u9879\u76ee\u56e2\u961f\u5728\u4f7f\u7528\u3002\u7136\u800c\uff0cGit Flow \u70e6\u7410\u7684\u6d41\u7a0b\u4e5f\u88ab\u8bb8\u591a\u7814\u53d1\u56e2\u961f\u5410\u69fd\uff0c\u5927\u5bb6\u666e\u904d\u8ba4\u4e3a hotfix \u548c release \u5206\u652f\u663e\u5f97\u591a\u4f59\uff0c\u5e73\u65f6\u90fd\u4e0d\u4f1a\u53bb\u7528\u3002</p> <p></p> <ul> <li>\u7b2c\u4e8c\uff0cGitHub Flow</li> </ul> <p>GitHub Flow \u662f GitHub \u6240\u4f7f\u7528\u7684\u4e00\u79cd\u7b80\u5355\u6d41\u7a0b\u3002\u8be5\u6d41\u7a0b\u53ea\u4f7f\u7528 master \u548c\u7279\u6027\u5206\u652f\uff0c\u5e76\u501f\u52a9 GitHub \u7684 pull request \u529f\u80fd\u3002</p> <p></p> <p>\u5728 GitHub Flow \u4e2d\uff0cmaster \u5206\u652f\u4e2d\u5305\u542b\u7a33\u5b9a\u7684\u4ee3\u7801\uff0c\u5b83\u5df2\u7ecf\u6216\u5373\u5c06\u88ab\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\u3002</p> <p>\u4efb\u4f55\u5f00\u53d1\u4eba\u5458\u90fd\u4e0d\u5141\u8bb8\u628a\u672a\u6d4b\u8bd5\u6216\u672a\u5ba1\u67e5\u7684\u4ee3\u7801\u76f4\u63a5\u63d0\u4ea4\u5230 master \u5206\u652f\u3002</p> <p>\u5bf9\u4ee3\u7801\u7684\u4efb\u4f55\u4fee\u6539\uff0c\u5305\u62ec Bug \u4fee\u590d\u3001\u70ed\u4fee\u590d\u3001\u65b0\u529f\u80fd\u5f00\u53d1\u7b49\u90fd\u5728\u5355\u72ec\u7684\u5206\u652f\u4e2d\u8fdb\u884c\u3002\u4e0d\u7ba1\u662f\u4e00\u884c\u4ee3\u7801\u7684\u5c0f\u6539\u52a8\uff0c\u8fd8\u662f\u9700\u8981\u51e0\u4e2a\u661f\u671f\u5f00\u53d1\u7684\u65b0\u529f\u80fd\uff0c\u90fd\u91c7\u7528\u540c\u6837\u7684\u65b9\u5f0f\u6765\u7ba1\u7406\u3002</p> <p>\u5f53\u9700\u8981\u4fee\u6539\u65f6\uff0c\u4ece master \u5206\u652f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5206\u652f\uff0c\u6240\u6709\u76f8\u5173\u7684\u4ee3\u7801\u4fee\u6539\u90fd\u5728\u65b0\u5206\u652f\u4e2d\u8fdb\u884c\u3002\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u81ea\u7531\u5730\u63d0\u4ea4\u4ee3\u7801\u548c\u63d0\u4ea4\u5230\u8fdc\u7a0b\u4ed3\u5e93\u3002</p> <p>\u5f53\u65b0\u5206\u652f\u4e2d\u7684\u4ee3\u7801\u5168\u90e8\u5b8c\u6210\u4e4b\u540e\uff0c\u901a\u8fc7 GitHub \u63d0\u4ea4\u4e00\u4e2a\u65b0\u7684 pull request\u3002\u56e2\u961f\u4e2d\u7684\u5176\u4ed6\u4eba\u5458\u4f1a\u5bf9\u4ee3\u7801\u8fdb\u884c\u5ba1\u67e5\uff0c\u63d0\u51fa\u76f8\u5173\u7684\u4fee\u6539\u610f\u89c1\u3002\u7531\u6301\u7eed\u96c6\u6210\u670d\u52a1\u5668\uff08\u5982 Jenkins\uff09\u5bf9\u65b0\u5206\u652f\u8fdb\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u3002\u5f53\u4ee3\u7801\u901a\u8fc7\u81ea\u52a8\u5316\u6d4b\u8bd5\u548c\u4ee3\u7801\u5ba1\u67e5\u4e4b\u540e\uff0c\u8be5\u5206\u652f\u7684\u4ee3\u7801\u88ab\u5408\u5e76\u5230 master \u5206\u652f\u3002\u518d\u4ece master \u5206\u652f\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\u3002</p> <p>GitHub Flow \u7684\u597d\u5904\u5728\u4e8e\u975e\u5e38\u7b80\u5355\u5b9e\u7528\uff0c\u5f00\u53d1\u4eba\u5458\u9700\u8981\u6ce8\u610f\u7684\u4e8b\u9879\u975e\u5e38\u5c11\uff0c\u5f88\u5bb9\u6613\u5f62\u6210\u4e60\u60ef\u3002\u5f53\u9700\u8981\u4fee\u6539\u65f6\uff0c\u53ea\u8981\u4ece master \u5206\u652f\u521b\u5efa\u65b0\u5206\u652f\uff0c\u5b8c\u6210\u4e4b\u540e\u901a\u8fc7 pull request \u548c\u76f8\u5173\u7684\u4ee3\u7801\u5ba1\u67e5\uff0c\u5408\u5e76\u56de master \u5206\u652f\u5c31\u53ef\u4ee5\u4e86\u3002</p> <ul> <li>\u7b2c\u4e09\uff0cGitLab Flow</li> </ul> <p>\u4e0a\u9762\u63d0\u5230\u7684 GitHub Flow\uff0c\u9002\u7528\u4e8e\u7279\u6027\u5206\u652f\u5408\u5165 master \u540e\u5c31\u80fd\u9a6c\u4e0a\u90e8\u7f72\u5230\u7ebf\u4e0a\u7684\u8fd9\u7c7b\u9879\u76ee\uff0c\u4f46\u5e76\u4e0d\u662f\u6240\u6709\u56e2\u961f\u90fd\u4f7f\u7528 GitHub \u6216\u4f7f\u7528 pull request \u529f\u80fd\uff0c\u800c\u662f\u4f7f\u7528\u5f00\u6e90\u5e73\u53f0 GitLab\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u516c\u53f8\u7ea7\u522b\u800c\u8a00\uff0c\u4ee3\u7801\u4f5c\u4e3a\u8d44\u4ea7\uff0c\u4e0d\u4f1a\u968f\u610f\u7ef4\u62a4\u5728\u8f83\u516c\u5f00\u7684 GitHub \u4e0a\uff08\u9664\u975e\u91c7\u7528\u4f01\u4e1a\u7248\uff09\u3002</p> <p>GitLab Flow \u9488\u5bf9\u4e0d\u540c\u7684\u53d1\u5e03\u573a\u666f\uff0c\u5728 GitHub Flow\uff08\u7279\u6027\u5206\u652f\u52a0 master \u5206\u652f\uff09\u7684\u57fa\u7840\u4e0a\u505a\u4e86\u6539\u826f\uff0c\u989d\u5916\u884d\u751f\u51fa\u4e86\u4e09\u4e2a\u5b50\u7c7b\u6a21\u578b\uff0c\u5982\u8868 2 \u6240\u793a\u3002</p> <p></p> <p>\u8868 2 GitLab Flow \u7684\u4e09\u4e2a\u5206\u652f</p> <p></p> <p>\u56fe 3 \u5e26\u751f\u4ea7\u5206\u652f\u7684 GitLab Flow</p> <p></p> <p>\u56fe 4 \u5e26\u73af\u5883\u5206\u652f\u7684 GitLab Flow</p> <p></p> <p>GitLab Flow \u7684\u7279\u6027\u5206\u652f\u5408\u5165 master \u7528\u7684\u662f\u201cMerge Request\u201d\uff0c\u529f\u80fd\u4e0e GitHub Flow \u7684\u201cpull request\u201d\u76f8\u540c\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002</p> <p>\u901a\u8fc7 Git Flow\u3001GitHub Flow \u548c GitLab Flow\uff083 \u4e2a\u884d\u751f\u7c7b\u522b\uff09 \u8fd9\u51e0\u4e2a\u5177\u4f53\u6a21\u578b\u7684\u4ecb\u7ecd\uff0c\u6211\u7ed9\u4f60\u603b\u7ed3\u4e00\u4e0b\u7279\u6027\u5206\u652f\u5f00\u53d1\u7684\u4f18\u7f3a\u70b9\u3002</p> <p></p>"},{"location":"chap16/2config_mgt/#1-3","title":"1-3 \u9009\u51fa\u6700\u9002\u5408\u7684\u5206\u652f\u7b56\u7565","text":""},{"location":"chap16/2config_mgt/#2","title":"2 \u4f9d\u8d56\u7ba1\u7406","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u7684\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\uff0c\u6bd4\u5982 CentOS \u7684 yum\uff0cDebian \u7684 apt\uff0cArch \u7684 Packman\uff0cmacOS \u7684 Homebrew\uff1b \u7f16\u7a0b\u8bed\u8a00\u7684\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\uff0c\u6bd4\u5982 Java \u7684 Maven\uff0c <code>.Net</code> \u7684 nuget\uff0cNode.js \u7684 npm\uff0cGolang \u7684 <code>go get</code>\uff0cPython \u7684 pip\uff0cRuby \u7684 Gem \u3002</p> <p>\u8fd9\u4e9b\u5e73\u53f0\u7684\u89e3\u51b3\u601d\u8def\u90fd\u662f\u5c06\u4f9d\u8d56\u653e\u5230\u5171\u540c\u7684\u4ed3\u5e93\uff0c\u7136\u540e\u7ba1\u7406\u5de5\u5177\u901a\u8fc7\u4f9d\u8d56\u63cf\u8ff0\u6587\u4ef6\u53bb\u4e2d\u592e\u4ed3\u5e93\u83b7\u53d6\u76f8\u5e94\u7684\u5305\u3002</p> <p>\u4e00\u4e2a\u5178\u578b\u7684\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\u901a\u5e38\u4f1a\u6709\u4ee5\u4e0b\u51e0\u4e2a\u7279\u6027\uff1a</p> <ul> <li>\u7edf\u4e00\u7684\u547d\u540d\u89c4\u5219\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u662f\u5750\u6807\uff0c\u5728\u4ed3\u5e93\u4e2d\u662f\u552f\u4e00\u7684\uff0c\u53ef\u4ee5\u88ab\u51c6\u786e\u5b9a\u4f4d\u5230\uff1b</li> <li>\u7edf\u4e00\u7684\u4e2d\u5fc3\u4ed3\u5e93\u53ef\u4ee5\u5b58\u50a8\u7ba1\u7406\u4f9d\u8d56\u548c\u5143\u6570\u636e\uff1b</li> <li>\u7edf\u4e00\u7684\u4f9d\u8d56\u914d\u7f6e\u63cf\u8ff0\u6587\u4ef6\uff1b</li> <li>\u672c\u5730\u4f7f\u7528\u7684\u5ba2\u6237\u7aef\u53ef\u4ee5\u89e3\u6790\u4e0a\u8ff0\u7684\u6587\u4ef6\u4ee5\u53ca\u62c9\u53d6\u6240\u9700\u7684\u4f9d\u8d56\u3002</li> </ul>"},{"location":"chap16/2config_mgt/#2-1-maven","title":"2-1 Maven \u5982\u4f55\u7ba1\u7406\u4f9d\u8d56\uff1f","text":"<p>Maven \u662f Java \u751f\u6001\u7cfb\u7edf\u91cc\u9762\u4e00\u6b3e\u975e\u5e38\u5f3a\u5927\u7684\u6784\u5efa\u5de5\u5177\uff0c\u5176\u4e2d\u4e00\u9879\u975e\u5e38\u91cd\u8981\u7684\u5de5\u4f5c\u5c31\u662f\u5bf9\u9879\u76ee\u4f9d\u8d56\u8fdb\u884c\u7ba1\u7406\u3002</p> <p>Maven \u4f7f\u7528 XML \u683c\u5f0f\u7684\u6587\u4ef6\u8fdb\u884c\u4f9d\u8d56\u914d\u7f6e\u63cf\u8ff0\u7684\u65b9\u5f0f\uff0c\u53eb\u4f5c POM\uff08Project Object Model \uff09\uff0c\u4ee5\u4e0b\u5c31\u662f\u4e00\u6bb5\u7b80\u5355\u7684 pom.xml \u6587\u4ef6\u7247\u6bb5\uff1a</p> <p></p> <p>\u5728 POM \u4e2d\uff0c\u6839\u5143\u7d20 project \u4e0b\u7684 dependencies \u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a dependency \u5143\u7d20\uff0c\u4ee5\u58f0\u660e\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u9879\u76ee\u4f9d\u8d56\u3002\u6bcf\u4e2a\u4f9d\u8d56\u53ef\u4ee5\u5305\u542b\u7684\u5143\u7d20\u6709\uff1a</p> <ol> <li>groupId\u3001artifactId\u3001version\uff1a \u4f9d\u8d56\u7684\u57fa\u672c\u5750\u6807\uff1b</li> <li>type\uff1a \u4f9d\u8d56\u7684\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3a jar\uff1b</li> <li>scope\uff1a \u4f9d\u8d56\u7684\u8303\u56f4\uff1b</li> <li>optional\uff1a \u6807\u8bb0\u4f9d\u8d56\u662f\u5426\u53ef\u9009\uff1b</li> <li>exclusions\uff1a \u7528\u6765\u6392\u9664\u4f20\u9012\u6027\u4f9d\u8d56\uff1b</li> </ol> <p>\u8981\u60f3\u7528\u597d Maven \u7ba1\u7406\u4f9d\u8d56\uff0c\u4f60\u5fc5\u987b\u7406\u89e3\u6bcf\u4e00\u9879\u7684\u542b\u4e49\uff0c\u800c\u65b0\u624b\u901a\u5e38\u50bb\u50bb\u5206\u4e0d\u6e05\u695a\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4f9d\u8d56\u8303\u56f4\u8fd9\u4e00\u9879\uff0cMaven \u5728\u4e0d\u540c\u7684\u65f6\u671f\u4f1a\u4f7f\u7528\u4e0d\u540c\u7684 classpath \uff1a</p> <ul> <li>\u6bd4\u5982\uff0cjunit \u53ea\u6709\u5728\u6d4b\u8bd5\u7684\u65f6\u5019\u6709\u7528\uff0c\u90a3\u4e48\u5c06\u5176\u8bbe\u4e3a test scope \u5c31\u53ef\u4ee5\uff1b</li> <li>\u518d\u6bd4\u5982 \uff0cservlet API \u8fd9\u4e2a jar \u5305\u53ea\u9700\u8981\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u63d0\u4f9b\u63a5\u53e3\uff0c\u4f46\u662f\u5b9e\u9645\u5728\u8fd0\u884c\u65f6\u4f1a\u6709\u5bf9\u5e94\u7684 servlet \u5bb9\u5668\u63d0\u4f9b\uff0c\u6240\u4ee5\u6ca1\u5fc5\u8981\u6253\u5230 war \u5305\u4e2d\u53bb\uff0c\u8fd9\u65f6\u5019\u53ea\u9700\u8981\u6307\u5b9a\u5728 provided scope \u5c31\u53ef\u4ee5\u4e86</li> </ul> <p>\u5305\u7ba1\u7406\u5de5\u5177\u8fd8\u89e3\u51b3\u4e86\u4f9d\u8d56\u4f20\u9012\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u4f60\u7684\u9879\u76ee A \u4f9d\u8d56\u4e86 B\uff0c\u800c B \u4f9d\u8d56\u4e86 C \u548c D\uff0c\u90a3\u4e48\u5728\u83b7\u53d6\u4f9d\u8d56\u7684\u65f6\u5019\u4f1a\u628a B\u3001C\u3001D \u90fd\u4e00\u8d77\u62c9\u4e0b\u6765\uff0c\u8fd9\u6837\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u65f6\u95f4\u3002</p> <ul> <li>\u7b2c\u4e00\u539f\u5219\uff1a \u6700\u77ed\u8def\u5f84\u4f18\u5148\u539f\u5219\u3002 \u6bd4\u5982\uff0cA \u4f9d\u8d56\u4e86 B \u548c C\uff0c\u800c B \u4e5f\u4f9d\u8d56\u4e86 C\uff0c\u90a3\u4e48 Maven \u4f1a\u4f7f\u7528 A \u4f9d\u8d56\u7684 C \u7684\u7248\u672c\uff0c\u56e0\u4e3a\u5b83\u7684\u8def\u5f84\u662f\u6700\u77ed\u7684\u3002</li> <li>\u7b2c\u4e8c\u539f\u5219\uff1a \u7b2c\u4e00\u58f0\u660e\u4f18\u5148\u539f\u5219\u3002 \u6bd4\u5982\uff0cA \u4f9d\u8d56\u4e86 B \u548c C\uff0cB \u548c C \u5206\u522b\u4f9d\u8d56\u4e86 D\uff0c\u90a3\u4e48 Maven \u4f1a\u4f7f\u7528 B \u4f9d\u8d56\u7684 D \u7684\u7248\u672c\uff0c\u56e0\u4e3a\u5b83\u662f\u6700\u5148\u58f0\u660e\u7684\u3002</li> </ul> <p>\u6839\u636e\u8fd9\u4e24\u4e2a\u539f\u5219\uff0cMaven \u5c31\u53ef\u4ee5\u786e\u5b9a\u4e00\u4e2a\u9879\u76ee\u6240\u6709\u4f9d\u8d56\u7684\u5217\u8868\uff0c\u4f46\u5b83\u5904\u7406\u4f9d\u8d56\u7684\u65b9\u5f0f\u8fd8\u662f\u6709\u4e9b\u7b80\u5355\u7c97\u66b4\u3002\u6709\u65f6 Maven \u7684\u51b3\u5b9a\u7ed3\u679c\u5e76\u4e0d\u662f\u4f60\u60f3\u8981\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u4f7f\u7528 Maven \u7684\u65f6\u5019\u8fd8\u662f\u8981\u591a\u52a0\u5c0f\u5fc3\u3002</p>"},{"location":"chap16/2config_mgt/#2-2-maven","title":"2-2 Maven \u6700\u4f73\u5b9e\u8df5","text":"<ul> <li>\u751f\u4ea7\u73af\u5883\u5c3d\u91cf\u4e0d\u4f7f\u7528 SNAPSHOT \u6216\u8005\u662f\u5e26\u6709\u8303\u56f4\u7684\u4f9d\u8d56\u7248\u672c\uff0c\u53ef\u4ee5\u51cf\u5c11\u4e0a\u7ebf\u540e\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u6211\u4eec\u5fc5\u987b\u4fdd\u8bc1\uff0c\u6d4b\u8bd5\u73af\u5883\u7684\u5305\u548c\u751f\u4ea7\u73af\u5883\u662f\u4e00\u81f4\u7684\u3002</li> <li>\u5c06 POM \u5206\u6210\u591a\u4e2a\u5c42\u6b21\u7684\u7ee7\u627f\u5173\u7cfb\uff0c\u6bd4\u5982\u643a\u7a0b\u7684 POM \u7ee7\u627f\u6811\u4e00\u822c\u662f\u8fd9\u6837\uff1a</li> </ul> <pre><code>corp pom\n    ctrip pom/qunar pom\n        bu pom\n            product pom\n                project parent pom\n                    project sub module pom\n</code></pre> <p>\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u6bcf\u4e00\u5c42\u90fd\u53ef\u4ee5\u5b9a\u4e49\u8fd9\u4e00\u7ea7\u522b\u7684\u4f9d\u8d56\u3002 \u5176\u4e2d <code>ctrip pom/qunar pom</code> \u6211\u4eec\u53eb\u5b83\u4e3a\u516c\u53f8\u7684 super-pom\uff0c\u6bcf\u4e2a\u9879\u76ee\u5fc5\u987b\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u7ee7\u627f\u5176\u6240\u5728\u516c\u53f8\u7684 super-pom\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u6bcf\u4e00\u5c42\u90fd\u53ef\u4ee5\u5b9a\u4e49\u8fd9\u4e00\u7ea7\u522b\u7684\u4f9d\u8d56\uff0c\u4fbf\u4e8e\u5404\u4e2a\u5c42\u6b21\u7684\u7edf\u4e00\u7ba1\u7406\u3002</p> <p>\u4e3a\u4ec0\u4e48\u6211\u672c\u5730\u53ef\u4ee5\u7f16\u8bd1\u901a\u8fc7\uff0c\u800c\u4f60\u4eec\u7f16\u8bd1\u7cfb\u7edf\u7f16\u8bd1\u901a\u4e0d\u8fc7\uff1f\u201d\u96be\u9053 Maven \u5728\u5de5\u4f5c\u7684\u65f6\u5019\u8fd8\u770b\u8138\uff1f \u5f53\u7136\u4e0d\u662f!</p> <p>\u9047\u5230\u8fd9\u6837\u7684\u60c5\u51b5\u4e0d\u8981\u6025\uff0c\u5904\u7406\u8d77\u6765\u901a\u5e38\u6709\u5982\u4e0b\u201c\u4e09\u677f\u65a7\u201d\uff1a</p> <ol> <li>\u786e\u8ba4\u5f00\u53d1\u64cd\u4f5c\u7cfb\u7edf\uff0cJava \u7248\u672c\uff0cMaven \u7248\u672c\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\u64cd\u4f5c\u7cfb\u7edf\u5bf9 Java \u7f16\u8bd1\u7684\u5f71\u54cd\u662f\u6700\u5c0f\u7684\uff0c\u4f46\u662f\u5076\u5c14\u4e5f\u4f1a\u9047\u5230\u4e00\u4e9b\u6bd4\u5982\u5206\u9694\u7b26\uff08\u5192\u53f7\u4e0e\u5206\u53f7\uff09\u4e4b\u7c7b\u7684\u95ee\u9898\u3002Java \u548c Maven \u7684\u7248\u672c\u5e94\u5c3d\u91cf\u4e0e\u751f\u4ea7\u7f16\u8bd1\u7cfb\u7edf\u4fdd\u6301\u4e00\u81f4\uff0c\u4ee5\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\u3002</li> <li>\u5982\u679c\u786e\u8ba4\u4e86\u5f00\u53d1\u64cd\u4f5c\u7cfb\u7edf\u6ca1\u95ee\u9898\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u628a\u7528\u6237\u7684\u9879\u76ee\u62c9\u5230\u81ea\u5df1\u7684\u672c\u5730\uff0c\u5e76\u4e14\u5220\u9664\u672c\u5730\u4f9d\u8d56\u7684\u7f13\u5b58\uff0c\u4e5f\u5c31\u662f\u5220\u9664 .m2 \u76ee\u5f55\u4e0b\u7684\u5b50\u76ee\u5f55\uff0c\u51cf\u5c11\u5e72\u6270\uff0c\u6267\u884c\u7f16\u8bd1\u3002\u82e5\u7f16\u8bd1\u901a\u4e0d\u8fc7\uff0c\u8bf4\u660e\u7528\u6237\u672c\u5730\u5c31\u6709\u95ee\u9898\uff0c\u8ba9\u4ed6\u4e5f\u5220\u6389\u81ea\u5df1\u672c\u5730\u7684\u7f13\u5b58\u627e\u95ee\u9898\u3002\u5982\u679c\u53ef\u4ee5\u7f16\u8bd1\u901a\u8fc7\uff0c\u8bf4\u660e\u95ee\u9898\u51fa\u5728\u7f16\u8bd1\u7cfb\u7edf\uff0c\u8fdb\u5165\u7b2c 3 \u6b65\u3002</li> <li>\u4f7f\u7528 mvn dependency \u547d\u4ee4\u5bf9\u6bd4\u751f\u4ea7\u7f16\u8bd1\u7cfb\u7edf\u4e0e\u672c\u5730\u4f9d\u8d56\u6811\u7684\u533a\u522b\uff0c\u68c0\u67e5\u7f16\u8bd1\u7cfb\u7edf\u672c\u5730\u662f\u5426\u88ab\u7f13\u5b58\u4e86\u9519\u8bef\u7684 jar \u5305\uff0c\u4ece\u800c\u5bfc\u81f4\u4e86\u7f16\u8bd1\u5931\u8d25\u3002\u6709\u65f6\u5019\u8fd9\u79cd\u9519\u8bef\u4f1a\u9690\u85cf\u5f97\u6bd4\u8f83\u6df1\uff0c\u975e\u5e38\u96be\u67e5\uff0c\u9700\u8981\u5f88\u5927\u7684\u8010\u5fc3\u3002</li> </ol>"},{"location":"chap16/2config_mgt/#3","title":"3 \u4ee3\u7801\u56de\u6eda","text":"<ul> <li>\u5305\u56de\u6eda\u662f\u6307\uff0c\u7ebf\u4e0a\u8fd0\u884c\u7684\u7cfb\u7edf\uff0c\u4ece\u73b0\u5728\u7684\u7248\u672c\u56de\u6eda\u5230\u4ee5\u524d\u7a33\u5b9a\u7684\u8001\u7248\u672c\u3002</li> <li>\u4ee3\u7801\u56de\u6eda\u662f\u6307\uff0cGit \u5206\u652f\u7684\u6307\u9488\uff08\u6e38\u6807\uff09\uff0c\u4ece\u6307\u5411\u5f53\u524d\u6709\u95ee\u9898\u7684\u7248\u672c\u6539\u4e3a\u6307\u5411\u4e00\u4e2a\u8be5\u5206\u652f\u5386\u53f2\u6811\u4e0a\u6ca1\u95ee\u9898\u7684\u7248\u672c\uff0c\u800c\u8fd9\u4e2a\u7248\u672c\u53ef\u4ee5\u662f\u66fe\u7ecf\u7684 commit\uff0c\u4e5f\u53ef\u4ee5\u662f\u65b0\u5efa\u7684 commit\u3002</li> </ul>"},{"location":"chap16/2config_mgt/#3-1","title":"3-1 \u4f60\u662f\u4e0d\u662f\u4e5f\u9047\u5230\u4e86\u95ee\u9898\uff1f","text":"<ul> <li> <p>\u6211\u672c\u5730\u7684\u5206\u652f\u901a\u8fc7 <code>reset --hard</code> \u7684\u65b9\u5f0f\u505a\u4e86\u4ee3\u7801\u56de\u6eda\uff0c\u60f3\u901a\u8fc7 push \u7684\u65b9\u5f0f\u8ba9\u8fdc\u7aef\u7684\u5206\u652f\u4e5f\u4e00\u8d77\u56de\u6eda\uff0c\u6267\u884c push \u547d\u4ee4\u65f6\u5374\u62a5\u9519\uff0c\u8be5\u600e\u4e48\u529e\uff1f </p> <ul> <li>\u7b54\uff1a\u5982\u679c\u4e0d\u52a0 <code>-f</code> \u53c2\u6570\uff0c\u6267\u884c <code>reset --hard</code> \u540e\uff0cpush \u4f1a\u88ab\u62d2\u7edd\uff0c\u56e0\u4e3a\u4f60\u5f53\u524d\u5206\u652f\u7684\u6700\u65b0\u63d0\u4ea4\u843d\u540e\u4e8e\u5176\u5bf9\u5e94\u7684\u8fdc\u7a0b\u5206\u652f\u3002push \u65f6\u52a0\u4e0a <code>-f</code> \u53c2\u6570\u4ee3\u8868\u5f3a\u5236\u8986\u76d6\u3002</li> </ul> </li> <li> <p>\u7ebf\u4e0a\u4ea7\u54c1\u5305\u5df2\u7ecf\u56de\u6eda\u5230\u6628\u5929\u7684\u7248\u672c\u4e86\uff0c\u6211\u6e05\u6e05\u695a\u695a\u5730\u8bb0\u5f97\u6628\u5929\u6211\u628a\u53d1\u5e03\u5206\u652f\u4e0a\u7684\u4ee3\u7801\u4e5f <code>reset --hard</code>\u5230\u5bf9\u5e94\u7684<code>commit</code> \u4e86\uff0c\u600e\u4e48\u90a3\u51e0\u4e2a\u6709\u95ee\u9898\u7684 commit \u4eca\u5929\u53c8\u5e26\u5230\u53d1\u5e03\u5206\u652f\u4e0a\u4e86\uff1f\u771f\u662f\u8981\u547d</p> <ul> <li>\u7b54\uff1a\u96c6\u6210\u5206\u652f\u4e0d\u80fd\u7528 <code>reset --hard</code> \u505a\u56de\u6eda\uff0c\u5e94\u8be5\u91c7\u7528\u96c6\u6210\u5206\u652f\u4e0a\u65b0\u589e commit \u7684\u65b9\u5f0f\u8fbe\u5230\u56de\u6eda\u7684\u76ee\u7684\u3002</li> </ul> </li> <li> <p>\u6211\u521a\u521a\u5728 GitLab \u4e0a\u63a5\u7eb3\u4e86\u4e00\u4e2a\u5408\u5e76\u8bf7\u6c42\uff08Merge Request\uff09\uff0c\u53d8\u66f4\u5df2\u7ecf\u5408\u5165\u5230 master \u4e0a\u4e86\uff0c\u4f46\u73b0\u5728\u6211\u53d1\u73b0\u8fd9\u4e2a\u5408\u5e76\u51fa\u6765\u7684 commit \u6709\u8f83\u5927\u7684\u8d28\u91cf\u95ee\u9898\uff0c\u6211\u5fc5\u987b\u628a master \u56de\u6eda\u5230\u5408\u5e76\u4e4b\u524d\uff0c\u6211\u8be5\u600e\u4e48\u529e\uff1f </p> <ul> <li>\u7b54\uff1a\u53ef\u4ee5\u5728 GitLab \u4e0a\u627e\u5230\u90a3\u4e2a\u5408\u5e76\u8bf7\u6c42\uff0c\u70b9\u51fb revert \u6309\u94ae\u3002</li> </ul> </li> <li> <p>\u521a\u521a\u7ebf\u4e0a A \u4ea7\u54c1 V6.2 \u7684\u5305\u6709\u95ee\u9898\uff0c\u6211\u5df2\u7ecf\u628a A \u7684\u4ea7\u54c1\u5305\u56de\u9000\u5230 V6.1 \u7248\u672c\u4e86\uff0c\u8bf7\u95ee\u53d1\u5e03\u5206\u652f\u4e0a\u7684\u4ee3\u7801\u4e5f\u8981\u56de\u6eda\u5230 V6.1 \u5bf9\u5e94\u7684 commit \u5417\uff1f </p> <ul> <li>\u7b54\uff1a\u4f60\u53ef\u4ee5\u5728\u4e0b\u6587\u201c\u54ea\u4e9b\u60c5\u51b5\u4e0b\u9700\u8981\u56de\u6eda\u4ee3\u7801\uff1f\u201d\u548c\u201c\u54ea\u4e9b\u60c5\u51b5\u4e0b\u5305\u7684\u56de\u6eda\u65e0\u9700\u56de\u6eda\u4ee3\u7801\uff1f\u201d\u4e2d\u627e\u5230\u7b54\u6848\u3002</li> </ul> </li> <li> <p>\u4ea7\u54c1\u5305\u7684\u56de\u6eda\u53ef\u4ee5\u5728\u6211\u4eec\u516c\u53f8\u6301\u7eed\u4ea4\u4ed8\u4e91\u5e73\u53f0\u4e0a\u6267\u884c\uff0c\u5e73\u53f0\u80fd\u4e0d\u80fd\u4e5f\u63d0\u4f9b\u4ee3\u7801\u4e00\u952e\u56de\u6eda\u7684\u529f\u80fd\uff1f\u8fd9\u6837\u6211\u4eec\u56de\u6eda\u4ee3\u7801\u80fd\u76f8\u5bf9\u8f7b\u677e\u4e00\u4e9b\u3002</p> <ul> <li>\u7b54\uff1a\u9488\u5bf9\u5df2\u4e0a\u7ebf\u53d1\u5e03\u7684\u7248\u672c\uff0c\u6211\u8ba4\u4e3a\u6301\u7eed\u4ea4\u4ed8\u5e73\u53f0\u63d0\u4f9b\u4e00\u952e\u56de\u6eda\u7684\u65b9\u5f0f\u8fd8\u662f\u6709\u5fc5\u8981\u7684\u3002\u8fd9\u4e48\u505a\u53ef\u4ee5\u89c4\u8303\u96c6\u6210\u5206\u652f\u4e0a\u7ebf\u540e\u4ee3\u7801\u56de\u6eda\u7684\u884c\u4e3a\uff0c\u4e5f\u80fd\u51cf\u5c11\u4eba\u4e3a\u5931\u8bef\u3002</li> </ul> </li> </ul>"},{"location":"chap16/2config_mgt/#3-2","title":"3-2 \u54ea\u4e9b\u60c5\u51b5\u4e0b\u9700\u8981\u56de\u6eda\u4ee3\u7801\uff1f","text":"<p>\u5728\u4ee3\u7801\u96c6\u6210\u524d\u548c\u96c6\u6210\u540e\uff0c\u90fd\u6709\u53ef\u80fd\u9700\u8981\u56de\u6eda\u4ee3\u7801\u3002</p> <p>\u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a\u5f00\u53d1\u4eba\u5458\u72ec\u7acb\u4f7f\u7528\u7684\u5206\u652f\u4e0a\uff0c\u5982\u679c\u6700\u8fd1\u4ea7\u751f\u7684 commit \u90fd\u6ca1\u6709\u4ef7\u503c\uff0c\u5e94\u8be5\u5e9f\u5f03\u6389\uff0c\u6b64\u65f6\u5c31\u9700\u8981\u628a\u4ee3\u7801\u56de\u6eda\u5230\u4ee5\u524d\u7684\u7248\u672c\u3002 \u5982\u56fe 1 \u6240\u793a\u3002</p> <p></p> <p>\u56fe 1 \u4e2a\u4eba\u5206\u652f\u56de\u6eda</p> <p>\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\u4ee3\u7801\u96c6\u6210\u5230\u56e2\u961f\u7684\u96c6\u6210\u5206\u652f\u4e14\u5c1a\u672a\u53d1\u5e03\uff0c\u4f46\u5728\u540e\u7eed\u6d4b\u8bd5\u4e2d\u53d1\u73b0\u8fd9\u90e8\u5206\u4ee3\u7801\u6709\u95ee\u9898\uff0c\u4e14\u4e00\u65f6\u534a\u4f1a\u513f\u89e3\u51b3\u4e0d\u6389\uff0c\u4e3a\u4e86\u4e0d\u628a\u95ee\u9898\u4f20\u9012\u7ed9\u4e0b\u6b21\u7684\u96c6\u6210\uff0c\u6b64\u65f6\u5c31\u9700\u8981\u628a\u6709\u95ee\u9898\u7684\u4ee3\u7801\u4ece\u96c6\u6210\u5206\u652f\u4e2d\u56de\u6eda\u6389\u3002 \u5982\u56fe 2 \u6240\u793a\u3002</p> <p></p> <p>\u56fe 2 \u96c6\u6210\u5206\u652f\u4e0a\u7ebf\u524d\u56de\u6eda</p> <p>\u7b2c\u4e09\u79cd\u60c5\u51b5\uff1a\u4ee3\u7801\u5df2\u7ecf\u53d1\u5e03\u5230\u7ebf\u4e0a\uff0c\u7ebf\u4e0a\u5305\u56de\u6eda\u540e\u53d1\u73b0\u662f\u65b0\u4e0a\u7ebf\u7684\u4ee3\u7801\u5f15\u8d77\u7684\u95ee\u9898\uff0c\u4e14\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u4fee\u590d\uff0c\u6b64\u65f6\u53c8\u6709\u5176\u4ed6\u529f\u80fd\u9700\u8981\u4e0a\u7ebf\uff0c\u90a3\u4e48\u4e3b\u5e72\u5206\u652f\u5fc5\u987b\u628a\u4ee3\u7801\u56de\u6eda\u5230\u4ea7\u54c1\u5305 V0529 \u5bf9\u5e94\u7684 commit\u3002 \u5982\u56fe 3 \u6240\u793a\u3002</p> <p></p> <p>\u56fe 3 \u96c6\u6210\u5206\u652f\u4e0a\u7ebf\u540e\u56de\u6eda</p>"},{"location":"chap16/2config_mgt/#3-3","title":"3-3 \u54ea\u4e9b\u60c5\u51b5\u4e0b\u5305\u7684\u56de\u6eda\u65e0\u9700\u56de\u6eda\u4ee3\u7801\uff1f","text":"<ul> <li>\u7ebf\u4e0a\u56de\u6eda\u540e\uff0c\u67e5\u51fa\u5e76\u4e0d\u662f\u56e0\u4e3a\u6e90\u4ee3\u7801\u6709\u95ee\u9898\u3002</li> <li>\u4e0b\u6b21\u7ebf\u4e0a\u53d1\u5e03\uff0c\u5c31\u662f\u7528\u6765\u4fee\u590d\u521a\u624d\u7ebf\u4e0a\u8fd0\u884c\u7684\u95ee\u9898\u3002</li> </ul>"},{"location":"chap16/2config_mgt/#3-4","title":"3-4 \u4ee3\u7801\u56de\u6eda\u5fc5\u987b\u9075\u5faa\u7684\u539f\u5219","text":"<p>\u96c6\u6210\u5206\u652f\u4e0a\u7684\u4ee3\u7801\u56de\u6eda\u575a\u51b3\u4e0d\u7528 <code>reset --hard</code> \u7684\u65b9\u5f0f\uff0c\u539f\u56e0\u5982\u4e0b\uff1a</p> <ul> <li>\u96c6\u6210\u5206\u652f\u4e0a\u7684 commit \u90fd\u662f\u9879\u76ee\u9636\u6bb5\u6027\u7684\u6210\u679c\uff0c\u5373\u4f7f\u6700\u8fd1\u7684\u53d1\u5e03\u4e0d\u9700\u8981\u67d0\u4e9b commit \u7684\u529f\u80fd\uff0c\u4f46\u4ecd\u7136\u9700\u8981\u4fdd\u7559\u8fd9\u4e9b commit \uff0c\u4ee5\u5907\u540e\u7eed\u4e4b\u9700\u3002</li> <li>\u5f00\u53d1\u4eba\u5458\u4f1a\u57fa\u4e8e\u96c6\u6210\u5206\u652f\u4e0a\u7684 commit \u62c9\u53d6\u65b0\u5206\u652f\uff0c\u5982\u679c\u96c6\u6210\u5206\u652f\u91c7\u7528 reset \u7684\u65b9\u5f0f\u6e05\u9664\u4e86\u8be5 commit \uff0c\u4e0b\u6b21\u5f00\u53d1\u4eba\u5458\u628a\u65b0\u5206\u652f\u5408\u5e76\u56de\u96c6\u6210\u5206\u652f\u65f6\uff0c\u53c8\u4f1a\u628a\u88ab\u6e05\u9664\u7684 commit \u7533\u8bf7\u5408\u5165\uff0c\u5f88\u53ef\u80fd\u5bfc\u81f4\u4e0d\u9700\u8981\u7684\u529f\u80fd\u518d\u6b21\u88ab\u5f15\u5165\u5230\u96c6\u6210\u5206\u652f\u3002</li> </ul>"},{"location":"chap16/2config_mgt/#3-5","title":"3-5 \u4e09\u79cd\u5178\u578b\u56de\u6eda\u573a\u666f\u53ca\u56de\u6eda\u7b56\u7565","text":"<p>\u7b2c\u4e00\uff0c\u4e2a\u4eba\u5206\u652f\u56de\u6eda</p> <ul> <li>feature-x \u5206\u652f\u56de\u6eda\u524d HEAD \u6307\u9488\u6307\u5411 C6 \u3002</li> <li>\u5728\u4e2a\u4eba\u5de5\u4f5c\u673a\u4e0a\uff0c\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4</li> </ul> <pre><code>$ git checkout feature-x   \n$ git reset --hard  C3 \u7684 HASH \u503c\n</code></pre> <p>\u5982\u679c feature-x \u5df2\u7ecf push \u5230\u8fdc\u7aef\u4ee3\u7801\u5e73\u53f0\u4e86\uff0c\u5219\u8fdc\u7aef\u5206\u652f\u4e5f\u9700\u8981\u56de\u6eda\uff1a</p> <pre><code>$ git push -f origin  feature-x\n</code></pre> <p>\u7b2c\u4e8c\uff0c\u96c6\u6210\u5206\u652f\u4e0a\u7ebf\u524d\u56de\u6eda</p> <ul> <li>\u5047\u5b9a\u8d70\u7279\u6027\u5206\u652f\u5f00\u53d1\u6a21\u5f0f\uff0c\u4e0a\u9762\u7684 commit \u90fd\u662f\u7279\u6027\u5206\u652f\u901a\u8fc7 merge request \u5408\u5165 master \u4ea7\u751f\u7684 commit\u3002</li> <li>\u96c6\u6210\u540e\uff0c\u6d4b\u8bd5\u73af\u5883\u4e2d\u53d1\u73b0 C4 \u548c C6 \u7684\u529f\u80fd\u6709\u95ee\u9898\uff0c\u4e0d\u80fd\u4e0a\u7ebf\uff0c\u9700\u9a6c\u4e0a\u56de\u6eda\u4ee3\u7801\uff0c\u4ee5\u4fbf C5 \u7684\u529f\u80fd\u4e0a\u7ebf\u3002</li> <li>\u56e2\u961f\u6210\u5458\u53ef\u4ee5\u5728 GitLab \u4e0a\u627e\u5230 C4 \u548c C6 \u5408\u5165 master \u7684\u5408\u5e76\u8bf7\u6c42\uff0c\u7136\u540e\u70b9\u51fb revert \u3002</li> </ul> <p></p> <p>\u56de\u6eda\u540e master \u5206\u652f\u53d8\u6210\u5982\u6240\u793a\uff0cC4\u2019\u662f revert C4 \u4ea7\u751f\u7684 commit\uff0cC6\u2019\u662f revert C6 \u4ea7\u751f\u7684 commit\u3002\u901a\u8fc7 revert \u64cd\u4f5c\uff0cC4 \u548c C6 \u53d8\u66f4\u7684\u5185\u5bb9\u5728 master \u5206\u652f\u4e0a\u5c31\u88ab\u6e05\u9664\u6389\u4e86\uff0c\u800c C5 \u53d8\u66f4\u7684\u5185\u5bb9\u8fd8\u4fdd\u7559\u5728 master \u5206\u652f\u4e0a\u3002</p> <p></p> <p>\u7b2c\u4e09\uff0c\u96c6\u6210\u5206\u652f\u4e0a\u7ebf\u540e\u56de\u6eda</p> <ul> <li>C3 \u6253\u5305\u5e76\u4e0a\u7ebf\uff0c\u751f\u6210\u7ebf\u4e0a\u7684\u7248\u672c V0529\uff0c\u8fd0\u884c\u6b63\u786e\u3002\u4e4b\u540e C6 \u4e5f\u6253\u5305\u5e76\u4e0a\u7ebf\uff0c\u751f\u6210\u7ebf\u4e0a\u7248\u672c V0530\uff0c\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\u540e\u53d1\u73b0\u6709\u95ee\u9898\u3002C4 \u548c C5 \u5e76\u6ca1\u6709\u5355\u72ec\u6253\u5305\u4e0a\u7ebf\uff0c\u6240\u4ee5\u6ca1\u6709\u5bf9\u5e94\u7684\u7ebf\u4e0a\u7248\u672c\u3002</li> <li>\u9879\u76ee\u7ec4\u628a\u4ea7\u54c1\u5305\u4ece V0530 \u56de\u6eda\u5230 V0529\uff0c\u7ecf\u8fc7\u5b9a\u4f4d\uff0cV0530 \u7684\u4ee3\u7801\u6709\u95ee\u9898\uff0c\u4f46\u77ed\u65f6\u95f4\u4e0d\u80fd\u4fee\u590d\uff0c\u4e8e\u662f\uff0c\u9879\u76ee\u7ec4\u51b3\u5b9a\u56de\u6eda\u4ee3\u7801\u3002</li> <li>C4 \u548c C5 \u6ca1\u6709\u5355\u72ec\u4e0a\u8fc7\u7ebf\uff0c\u56e0\u6b64\u4ece\u7ebf\u4e0a\u5305\u7684\u89d2\u5ea6\u770b\uff0c\u4e0d\u80fd\u56de\u6eda\u5230 C4 \u6216 C5\uff0c\u5e94\u8be5\u56de\u6eda\u5230 C3\u3002</li> <li>\u8003\u8651\u5230\u7ebf\u4e0a\u5305\u53ef\u4ee5\u56de\u6eda\u5230\u66fe\u53d1\u5e03\u8fc7\u7684\u4efb\u610f\u4e00\u4e2a\u6b63\u786e\u7684\u7248\u672c\u3002\u4e3a\u4e86\u9002\u5e94\u7ebf\u4e0a\u5305\u7684\u8fd9\u4e2a\u7279\u70b9\uff0c\u7ebf\u4e0a\u5305\u56de\u6eda\u89e6\u53d1\u7684\u4ee3\u7801\u56de\u6eda\u6211\u4eec\u51b3\u5b9a\u4e0d\u7528 \u4e00\u4e2a\u4e2a revert C4\u3001C5 \u548c C6 \u7684\u65b9\u5f0f\uff0c\u800c\u662f\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 commit\uff0c\u5b83\u7684\u5185\u5bb9\u7b49\u4e8e C3 \u7684\u5185\u5bb9\u3002</li> <li>\u5177\u4f53\u56de\u6eda\u6b65\u9aa4\uff1a</li> </ul> <pre><code>$ git fetch origin  \n$ git checkout master\n$ git reset --hard  V0529         # \u628a\u672c\u5730\u7684 master \u5206\u652f\u7684\u6307\u9488\u56de\u9000\u5230 V0529\uff0c\u6b64\u65f6\u6682\u5b58\u533a (index) \u91cc\u5c31\u6307\u5411 V0529 \u91cc\u7684\u5185\u5bb9\u4e86\u3002\n$ git reset --soft  origin/master  # --soft \u4f7f\u5f97\u672c\u5730\u7684 master \u5206\u652f\u7684\u6307\u9488\u91cd\u65b0\u56de\u5230 V05javascript:;30\uff0c\u800c\u6682\u5b58\u533a (index) \u53d8\u6210 V0529 \u7684\u5185\u5bb9\u3002\n$ git commit -m \"rollback to V0529\"  # \u628a\u6682\u5b58\u533a\u91cc\u7684\u5185\u5bb9\u63d0\u4ea4\uff0c\u8fd9\u6837\u4e00\u6765\u65b0\u751f\u6210\u7684 commit \u7684\u5185\u5bb9\u548c V0529 \u76f8\u540c\u3002 \n$ git push origin  master        # \u8fdc\u7aef\u7684 master \u4e5f\u88ab\u56de\u6eda\u3002\n</code></pre> <p></p> <p>\u56de\u6eda\u540e\u7684\u793a\u610f\u56fe</p> <p>C3\u2019\u7684\u5185\u5bb9\u7b49\u4e8e C3\uff0cmaster \u5206\u652f\u5df2\u6e05\u9664 C4\u3001C5 \u548c C6 \u7684\u53d8\u66f4\u3002</p> <p>\u73b0\u5728 master \u53c8\u56de\u5230\u4e86\u6b63\u786e\u7684\u72b6\u6001\uff0c\u5176\u4ed6\u529f\u80fd\u53ef\u4ee5\u7ee7\u7eed\u4e0a\u7ebf\u3002</p> <p>\u5982\u679c\u8981\u4fee\u590d C4\u3001C5 \u548c C6 \u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u5728\u5f00\u53d1\u5206\u652f\u4e0a\u5148 revert \u6389 C3\u2019 \uff0c\u8fd9\u6837\u88ab\u6e05\u9664\u7684\u51e0\u4e2a commit \u7684\u5185\u5bb9\u53c8\u6062\u590d\u4e86\u3002</p>"},{"location":"chap16/3Env_mgt/","title":"L3 \u73af\u5883\u7ba1\u7406","text":""},{"location":"chap16/3Env_mgt/#1","title":"1 \u6d4b\u8bd5\u73af\u5883\u8981\u591a\u5c11","text":""},{"location":"chap16/3Env_mgt/#1-1","title":"1-1 \u4e92\u8054\u7f51\u516c\u53f8\u6d4b\u8bd5\u73af\u5883\u7684\u7ed3\u6784","text":"<p>\u76ee\u524d\u4e92\u8054\u7f51\u516c\u53f8\u5e38\u89c1\u7684\u73af\u5883\u6a21\u578b\u4e00\u822c\u5206\u4e3a\u5f00\u53d1\u73af\u5883\uff0c\u529f\u80fd\u6d4b\u8bd5\u73af\u5883\uff0c\u9a8c\u6536\u6d4b\u8bd5\u73af\u5883\uff0c\u9884\u53d1\u5e03\u73af\u5883\uff0c\u751f\u4ea7\u73af\u5883\u8fd9\u4e94\u4e2a\u5927\u5957\u73af\u5883\u3002</p> <ul> <li>\u7b2c\u4e00\uff0c\u5f00\u53d1\u73af\u5883</li> </ul> <p>\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\uff0c\u5355\u673a\u5df2\u7ecf\u65e0\u6cd5\u5b8c\u6574\u5730\u8fd0\u884c\u4e1a\u52a1\u5e94\u7528\uff0c\u8fd9\u5c31\u9700\u8981\u5f00\u53d1\u73af\u5883\u5185\u5305\u542b\u4e00\u5957\u5b8c\u6574\u7684\u4e1a\u52a1\u5e94\u7528\u4f9d\u8d56\u4ee5\u53ca\u76f8\u5173\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u4ee5\u4fdd\u8bc1\u4e1a\u52a1\u5f00\u53d1\u540c\u5b66\u80fd\u5728\u672c\u5730\u5b8c\u6210\u5f00\u53d1\u6d4b\u8bd5\u3002</p> <ul> <li>\u7b2c\u4e8c\uff0c\u529f\u80fd\u6d4b\u8bd5\u73af\u5883</li> </ul> <p>\u5728\u5f00\u53d1\u73af\u5883\u4e0b\uff0c\u6bcf\u4e2a\u4e0b\u6e38\u4f9d\u8d56\u5e94\u7528\u90fd\u53ea\u6709\u4e00\u4e2a\u53ef\u7528\u7684 stable \u7248\u672c\u3002\u800c\u5728\u5b9e\u9645\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u7531\u4e8e\u9879\u76ee\u7684\u5e76\u884c\u5f00\u53d1\uff0c\u5f80\u5f80\u4f1a\u540c\u65f6\u5b58\u5728\u591a\u4e2a\u53ef\u4f9d\u8d56\u7684\u7248\u672c\u3002\u800c\u6bcf\u4e2a\u9879\u76ee\u7ec4\u7684\u540c\u5b66\u5728\u6d4b\u8bd5\u65f6\uff0c\u90fd\u5e0c\u671b\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\u7684\u5173\u952e\u4f9d\u8d56\u5e94\u7528\u662f\u53ef\u4ee5\u88ab\u72ec\u5360\u7684\uff0c\u7248\u672c\u662f\u56fa\u5b9a\u7684\uff0c\u4e0d\u4f1a\u88ab\u5176\u4ed6\u9879\u76ee\u7ec4\u5e72\u6270\u3002</p> <p>\u6240\u4ee5\uff0c\u4e00\u5957\u72ec\u7acb\u7684\u529f\u80fd\u6d4b\u8bd5\u73af\u5883\u5c31\u5f88\u6709\u5fc5\u8981\u4e86\u3002\u901a\u5e38\uff0c\u4e92\u8054\u7f51\u4f01\u4e1a\u4f1a\u901a\u8fc7\u4e2d\u95f4\u4ef6\u7684\u65b9\u5f0f\u5206\u5272\u51fa\u4e00\u5757\u9694\u79bb\u533a\u57df\uff0c\u5728\u529f\u80fd\u6d4b\u8bd5\u73af\u5883\u4e2d\u521b\u5efa\u591a\u4e2a\u5b50\u73af\u5883\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <ul> <li>\u7b2c\u4e09\uff0c\u9a8c\u6536\u6d4b\u8bd5\u73af\u5883</li> </ul> <p>\u9a8c\u6536\u6d4b\u8bd5\u73af\u5883\u548c\u529f\u80fd\u6d4b\u8bd5\u73af\u5883\u662f\u5b8c\u5168\u9694\u79bb\u7684\u3002\u5f53\u529f\u80fd\u6d4b\u8bd5\u901a\u8fc7\u540e\uff0c\u4f60\u53ef\u4ee5\u5728\u9a8c\u6536\u6d4b\u8bd5\u73af\u5883\u8fdb\u884c\u6700\u7ec8\u7684\u9a8c\u6536\u3002</p> <p>\u5b83\u9664\u4e86\u53ef\u4ee5\u7528\u4f5c\u6d4b\u8bd5\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u7528\u4f5c\u4ea7\u54c1\u5c55\u793a\u3002\u6240\u4ee5\uff0c\u9664\u4e86\u6d4b\u8bd5\u548c\u5f00\u53d1\u4eba\u5458\uff0c\u4ea7\u54c1\u7ecf\u7406\u4e5f\u662f\u9a8c\u6536\u6d4b\u8bd5\u73af\u5883\u7684\u4e3b\u8981\u4f7f\u7528\u8005\u3002</p> <ul> <li>\u7b2c\u56db\uff0c\u9884\u53d1\u5e03\u73af\u5883</li> </ul> <p>\u5230\u4e86\u9884\u53d1\u5e03\u9636\u6bb5\uff0c\u5e94\u7528\u5df2\u7ecf\u8fdb\u5165\u4e86\u751f\u4ea7\u7f51\u7edc\uff0c\u548c\u771f\u5b9e\u7684\u751f\u4ea7\u5e94\u7528\u5171\u4eab\u540c\u4e00\u5957\u6570\u636e\u5e93\u7b49\u57fa\u7840\u8bbe\u65bd\u3002</p> <p>\u9884\u53d1\u5e03\u662f\u6b63\u5f0f\u53d1\u5e03\u524d\u7684\u6700\u540e\u4e00\u6b21\u6d4b\u8bd5\uff0c\u5728\u8fd9\u4e2a\u73af\u5883\u4e2d\u5f80\u5f80\u53ef\u4ee5\u53d1\u73b0\u7ebf\u4e0b\u73af\u5883\u4e2d\u53d1\u73b0\u4e0d\u4e86\u7684 Bug\u3002\u8fd9\u4e2a\u73af\u5883\u7684\u8fd0\u7ef4\u6807\u51c6\u7b49\u540c\u4e8e\u751f\u4ea7\u73af\u5883\uff0c\u4e00\u822c\u4e0d\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u76f4\u63a5\u767b\u5f55\u673a\u5668\u3002</p> <p>\u6839\u636e\u4e0d\u540c\u7684\u4e1a\u52a1\u9700\u6c42\u548c\u90e8\u7f72\u7b56\u7565\uff0c\u4e0d\u540c\u516c\u53f8\u5bf9\u9884\u53d1\u5e03\u73af\u5883\u7684\u5b9e\u73b0\u4e5f\u6709\u6240\u4e0d\u540c\uff1a</p> <p>\u4e00\u79cd\u6bd4\u8f83\u5e38\u89c1\u7684\u65b9\u5f0f\u662f\uff0c\u5c06\u91d1\u4e1d\u96c0\u53d1\u5e03\u4f5c\u4e3a\u9884\u53d1\u5e03\uff0c\u4ece\u63a5\u5165\u771f\u5b9e\u6d41\u91cf\u7684\u96c6\u7fa4\u4e2d\u6311\u9009\u4e00\u53f0\u6216\u4e00\u5c0f\u7ec4\u673a\u5668\u5148\u8fdb\u884c\u7248\u672c\u66f4\u65b0\uff0c\u901a\u8fc7\u624b\u5de5\u6d4b\u8bd5\u4ee5\u53ca\u81ea\u52a8\u5316\u6d4b\u8bd5\u548c\u76d1\u63a7\u7cfb\u7edf\u9a8c\u8bc1\uff0c\u964d\u4f4e\u65b0\u7248\u672c\u53d1\u5e03\u7684\u98ce\u9669\u3002 \u53e6\u4e00\u79cd\u505a\u6cd5\u662f\uff0c\u72ec\u7acb\u51fa\u4e00\u7ec4\u59cb\u7ec8\u4e0d\u63a5\u5165\u771f\u5b9e\u6d41\u91cf\u7684\u673a\u5668\uff0c\u8c03\u7528\u5728\u9884\u53d1\u5e03\u73af\u5883\u4e2d\u5f62\u6210\u95ed\u73af\u3002 \u76f8\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u65b9\u5f0f\uff0c\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u5bf9\u751f\u4ea7\u73af\u5883\u7684\u5f71\u54cd\u66f4\u5c0f\uff0c\u4f46\u9700\u8981\u989d\u5916\u7684\u8d44\u6e90\u548c\u7ef4\u62a4\u6210\u672c\u3002</p> <ul> <li>\u7b2c\u4e94\uff0c\u751f\u4ea7\u73af\u5883</li> </ul> <p>\u751f\u4ea7\u73af\u5883\u662f\u7528\u6237\u771f\u5b9e\u4f7f\u7528\u7684\u73af\u5883\uff0c\u5bf9\u5b89\u5168\u6027\u548c\u7a33\u5b9a\u6027\u7684\u8981\u6c42\u6700\u9ad8\u3002</p>"},{"location":"chap16/3Env_mgt/#_1","title":"\u4ec0\u4e48\u662f\u597d\u7684\u6d4b\u8bd5\u73af\u5883\uff1f","text":"<p>\u800c\u6bcf\u79cd\u89d2\u8272\u5bf9\u4e8e\u4ea7\u54c1\u7814\u53d1\u6d41\u7a0b\u4e2d\u7684\u9700\u6c42\u4e5f\u662f\u4e0d\u540c\u7684\uff1a</p> <ul> <li>\u5f00\u53d1\u540c\u5b66\u5173\u6ce8\u7814\u53d1\u6548\u7387\uff1b</li> <li>\u6d4b\u8bd5\u540c\u5b66\u5173\u6ce8\u6d4b\u8bd5\u7684\u53ef\u9760\u6027\uff1b</li> <li>\u4ea7\u54c1\u7ecf\u7406\u66f4\u5173\u6ce8\u7684\u662f\u771f\u5b9e\u7684\u7528\u6237\u4f53\u9a8c\u548c\u4ea7\u54c1\u7684\u5b8c\u6574\u6027\uff1b</li> <li>\u9884\u53d1\u5e03\u73af\u5883\u7684\u9700\u6c42\u5176\u5b9e\u6765\u81ea\u4e8e\u8fd0\u7ef4\u540c\u5b66\uff0c\u4ed6\u4eec\u9700\u8981\u4fdd\u8bc1\u751f\u4ea7\u73af\u5883\u7684\u7a33\u5b9a\u6027\uff0c\u51cf\u5c11\u751f\u4ea7\u73af\u5883\u7684\u53d8\u66f4\uff0c\u6240\u4ee5\u9700\u8981\u5c06\u9884\u53d1\u5e03\u73af\u5883\u4e0e\u7ebf\u4e0b\u73af\u5883\u5b8c\u5168\u9694\u79bb\u3002</li> </ul> <p>\u4ee5\u4e0b\u51e0\u4e2a\u9700\u6c42\u90fd\u662f\u5fc5\u987b\u88ab\u505a\u5230\u7684</p> <ul> <li>\u53ef\u5f97\u6027\uff0c\u5373\u5728\u5f00\u53d1\u4e00\u4e2a\u65b0\u9879\u76ee\u65f6\uff0c\u80fd\u5feb\u901f\u83b7\u53d6\u6784\u5efa\u4e00\u4e2a\u73af\u5883\u9700\u8981\u7684\u673a\u5668\uff0c\u57fa\u7840\u8bbe\u65bd\u3002\u6700\u597d\u7684\u60c5\u51b5\u662f\uff0c\u80fd\u968f\u65f6\u53ef\u5f97\uff0c\u968f\u65f6\u5f52\u8fd8\u3002</li> <li>\u5feb\u901f\u90e8\u7f72\uff0c\u5373\u5728\u642d\u5efa\u65b0\u73af\u5883\u65f6\uff0c\u80fd\u4ee5\u6700\u5feb\u7684\u901f\u5ea6\u6784\u5efa\u51fa\u4e00\u6574\u5957\u5b8c\u6574\u7684\u73af\u5883\u3002\u6d4b\u8bd5\u73af\u5883\u7684\u90e8\u7f72\u5f88\u9891\u7e41\uff0c\u5728\u4ee3\u7801\u63d0\u4ea4\u540e\uff0c\u80fd\u5728\u5f88\u77ed\u7684\u65f6\u95f4\u5185\u6784\u5efa\u4ee3\u7801\uff0c\u5728\u73af\u5883\u4e0a\u66f4\u65b0\uff0c\u5c31\u80fd\u66f4\u65e9\u5f00\u59cb\u6d4b\u8bd5\u3002</li> <li>\u72ec\u7acb\u6027\uff0c\u5373\u4e00\u4e2a\u73af\u5883\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u4e0d\u53d7\u5176\u4ed6\u9879\u76ee\u6d4b\u8bd5\u4eba\u5458\u7684\u5e72\u6270\u3002</li> <li>\u7a33\u5b9a\u6027\uff0c\u5373\u4e0d\u4f1a\u56e0\u4e3a\u4e0b\u6e38\u670d\u52a1\uff0c\u57fa\u7840\u8bbe\u65bd\u7684\u5f02\u5e38\uff0c\u9020\u6210\u6d4b\u8bd5\u4e2d\u65ad\u3001\u7b49\u5f85\u3002</li> <li>\u9ad8\u4eff\u771f\uff0c\u4e3b\u8981\u5206\u4e3a\u4e24\u4e2a\u65b9\u9762\uff1a\u201c\u6d4b\u8bd5\u6570\u636e\u771f\u5b9e\u201d\uff0c\u5373\u80fd\u5728\u6d4b\u8bd5\u73af\u5883\u6784\u5efa\u51fa\u771f\u5b9e\u7684\u6d4b\u8bd5\u7528\u4f8b\uff1b\u201c\u73af\u5883\u771f\u5b9e\u201d\uff0c\u5373\u57fa\u7840\u670d\u52a1\u7684\u67b6\u6784\u548c\u884c\u4e3a\u4e0e\u7ebf\u4e0a\u73af\u5883\u4fdd\u6301\u4e00\u81f4\uff0c\u907f\u514d\u56e0\u4e3a\u73af\u5883\u4e0d\u4e00\u81f4\u9020\u6210\u6d4b\u8bd5\u7ed3\u679c\u4e0d\u4e00\u81f4\u3002</li> </ul>"},{"location":"chap16/3Env_mgt/#2","title":"2 \u5404\u73af\u5883\u7684\u91cd\u8981\u6027","text":"<p>\u4ece\u9762\u5411\u7684\u76ee\u6807\u6765\u770b\uff0c\u73af\u5883\u914d\u7f6e\u5927\u4f53\u4e0a\u53ef\u4ee5\u5206\u4e3a\u4e24\u5927\u90e8\u5206\uff1a</p> <ul> <li>\u4ee5\u73af\u5883\u4e2d\u6bcf\u53f0\u670d\u52a1\u5668\u4e3a\u5bf9\u8c61\u7684\u8fd0\u884c\u65f6\u914d\u7f6e\uff1b</li> <li>\u4ee5\u4e00\u4e2a\u73af\u5883\u4e3a\u6574\u4f53\u76ee\u6807\u7684\u72ec\u7acb\u73af\u5883\u914d\u7f6e\u3002</li> </ul>"},{"location":"chap16/3Env_mgt/#2-1","title":"2-1 \u670d\u52a1\u5668\u8fd0\u884c\u65f6\u914d\u7f6e","text":"<p>\u4ee5\u4e00\u4e2a Java Web \u5e94\u7528\u4e3a\u4f8b\uff0c\u9700\u8981\u54ea\u4e9b\u8fd0\u884c\u65f6\u914d\u7f6e\u5462\uff1f</p> <ul> <li>\u5b89\u88c5 war \u5305\u8fd0\u884c\u4f9d\u8d56\u7684\u57fa\u7840\u73af\u5883\uff0c\u6bd4\u5982 JDK\uff0cTomcat \u7b49\u3002</li> <li>\u4fee\u6539 Tomcat \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5173\u6ce8\u70b9\u4e3b\u8981\u5305\u62ec\uff1a\u5e94\u7528\u7684\u65e5\u5fd7\u76ee\u5f55\uff0c\u65e5\u5fd7\u7684\u8f93\u51fa\u683c\u5f0f\uff0cwar \u5305\u7684\u5b58\u653e\u4f4d\u7f6e\u3002Tomcat \u7684 server.xml \u914d\u7f6e\u5305\u62ec\uff1a\u8fde\u63a5\u6570\u3001 \u7aef\u53e3\u3001\u7ebf\u7a0b\u6c60\u7b49\u53c2\u6570\u3002</li> <li>\u914d\u7f6e Java \u53c2\u6570\uff0c\u5305\u62ec JVM \u5806\u5185\u5b58\u7684 xmx\u3001xmn \u7b49\u53c2\u6570\uff0cGC \u65b9\u5f0f\u3001\u53c2\u6570\uff0cJMX \u76d1\u63a7\u5f00\u542f\u7b49\u3002</li> <li>\u8003\u8651\u64cd\u4f5c\u7cfb\u7edf\u53c2\u6570\uff0c\u6bd4\u8f83\u5e38\u89c1\u7684\u4e00\u4e2a\u914d\u7f6e\u662f Linux \u7684\u6587\u4ef6\u53e5\u67c4\u6570\uff0c\u5982\u679c\u5e94\u7528\u5bf9\u7f51\u7edc\u73af\u5883\u6709\u4e00\u4e9b\u7279\u6b8a\u8981\u6c42\u7684\u8bdd\uff0c\u8fd8\u9700\u8981\u8c03\u6574\u7cfb\u7edf\u7684 TCP \u53c2\u6570\u7b49\u914d\u7f6e\u3002</li> </ul> <p>\u6211\u4eec\u4e0d\u5149\u8981\u8003\u8651\u5355\u4e2a\u5b9e\u4f8b\u521d\u59cb\u5316\u914d\u7f6e\uff0c\u8fd8\u8981\u8003\u8651\u6bcf\u6b21 JDK\u3001Tomcat \u7b49\u57fa\u7840\u8f6f\u4ef6\u7684\u7248\u672c\u5347\u7ea7\u5f15\u8d77\u7684\u8fd0\u884c\u65f6\u914d\u7f6e\u7684\u53d8\u66f4\uff0c\u800c\u4e14\u8fd9\u4e9b\u53d8\u66f4\u90fd\u9700\u8981\u88ab\u6e05\u6670\u5730\u8bb0\u5f55\u4e0b\u6765\uff0c\u4ece\u800c\u4fdd\u8bc1\u6269\u5bb9\u51fa\u65b0\u7684\u670d\u52a1\u5668\u65f6\u80fd\u53d6\u5230\u6b63\u786e\u7684\u3001\u6700\u65b0\u7684\u914d\u7f6e\u3002</p>"},{"location":"chap16/3Env_mgt/#2-2","title":"2-2 \u72ec\u7acb\u73af\u5883\u914d\u7f6e","text":"<p>\u72ec\u7acb\u73af\u5883\u914d\u7f6e\u7684\u4e3b\u8981\u76ee\u7684\u662f\uff0c\u4fdd\u8bc1\u4e00\u4e2a\u73af\u5883\u80fd\u591f\u5b8c\u6574\u8fd0\u4f5c\u7684\u540c\u65f6\uff0c\u53c8\u4fdd\u8bc1\u8db3\u591f\u7684\u9694\u79bb\u6027\uff0c\u4f7f\u5176\u6210\u4e3a\u4e00\u4e2a\u5185\u805a\u7684\u6574\u4f53\u3002</p> <p>\u6240\u4ee5\uff0c\u8981\u8ba9\u4e00\u4e2a\u73af\u5883\u80fd\u591f\u7b26\u5408\u9700\u6c42\u7684\u6b63\u5e38\u8fd0\u4f5c\uff0c\u4f60\u9700\u8981\u8003\u8651\u7684\u5185\u5bb9\u5305\u62ec\uff1a</p> <ul> <li>\u8fd9\u4e2a\u73af\u5883\u6240\u4f9d\u8d56\u7684\u6570\u636e\u5e93\u8be5\u5982\u4f55\u914d\u7f6e\uff0c\u7f13\u5b58\u670d\u52a1\u5668\u53c8\u8be5\u5982\u4f55\u914d\u7f6e\u3002</li> <li>\u5982\u679c\u662f\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u6216\u8005 SOA \u67b6\u6784\u7684\u8bdd\uff0c\u5c31\u9700\u8981\u8003\u8651\u670d\u52a1\u4e2d\u5fc3\u3001\u914d\u7f6e\u4e2d\u5fc3\u7b49\u4e00\u7cfb\u5217\u4e2d\u95f4\u4ef6\u7684\u914d\u7f6e\u95ee\u9898\u3002</li> </ul>"},{"location":"chap16/3Env_mgt/#2-3","title":"2-3 \u73af\u5883\u4e00\u5b9a\u8981\u6807\u51c6\u5316","text":"<p>\u6700\u597d\u7684\u7b80\u5316\u65b9\u6cd5\uff0c\u83ab\u8fc7\u4e8e\u6807\u51c6\u5316\u4e86\u3002\u6240\u8c13\u6807\u51c6\u5316\uff0c\u5c31\u662f\u4e3a\u4e86\u5728\u4e00\u5b9a\u8303\u56f4\u5185\u83b7\u5f97\u6700\u4f73\u79e9\u5e8f\uff0c\u5bf9\u5b9e\u9645\u7684\u6216\u6f5c\u5728\u7684\u95ee\u9898\u5236\u5b9a\u5171\u540c\u3001\u53ef\u91cd\u590d\u4f7f\u7528\u7684\u89c4\u5219</p> <p>\u6211\u4eec\u9996\u5148\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u8bed\u8a00\u6808\u7684\u4f7f\u7528\u3001\u8fd0\u884c\u65f6\u914d\u7f6e\u6a21\u677f\u3001\u72ec\u7acb\u73af\u5883\u914d\u7f6e\u7684\u65b9\u6cd5\u7b49\u7684\u6807\u51c6\u5316\uff1a</p> <ul> <li>\u89c4\u5b9a\u516c\u53f8\u7684\u4e3b\u6d41\u8bed\u8a00\u6808\uff1b</li> <li>\u7edf\u4e00\u670d\u52a1\u5668\u5b89\u88c5\u955c\u50cf\uff1b</li> <li>\u63d0\u4f9b\u9ed8\u8ba4\u7684\u8fd0\u884c\u65f6\u914d\u7f6e\u6a21\u677f\uff1b</li> <li>\u7edf\u4e00\u57fa\u7840\u8f6f\u4ef6\u7684\u7248\u672c\uff0c\u4ee5\u53ca\u66f4\u65b0\u65b9\u5f0f\uff1b</li> <li>\u5728\u67b6\u6784\u5c42\u9762\u7edf\u4e00\u89e3\u51b3\u73af\u5883\u8def\u7531\u95ee\u9898\uff1b</li> <li>\u81ea\u52a8\u5316\u73af\u5883\u4ea7\u751f\u8fc7\u7a0b\u3002</li> </ul> <p>\u5efa\u8bae\u4f60\u5728\u5b9e\u65bd\u6301\u7eed\u4ea4\u4ed8\u7684\u540c\u65f6\uff0c\u53bb\u63a8\u52a8\u5f62\u6210\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\u7684\u89c4\u8303\uff1a</p> <ol> <li>\u4ee3\u7801\u53ca\u4f9d\u8d56\u89c4\u8303\uff1b</li> <li>\u547d\u540d\u89c4\u8303\uff1b</li> <li>\u5f00\u53d1\u89c4\u8303\uff1b</li> <li>\u914d\u7f6e\u89c4\u8303\uff1b</li> <li>\u90e8\u7f72\u89c4\u8303\uff1b</li> <li>\u5b89\u5168\u89c4\u8303\uff1b</li> <li>\u6d4b\u8bd5\u89c4\u8303\u3002</li> </ol>"},{"location":"chap16/3Env_mgt/#2-4","title":"2-4 \u73af\u5883\u914d\u7f6e","text":"<p>\u9996\u5148\uff0c\u9700\u8981\u5b9a\u4e49 Server Spec\u3002</p> <p>\u8fd9\u662f\u91cd\u4e2d\u4e4b\u91cd\uff0c\u5728\u670d\u52a1\u5668\u751f\u6210\u65f6\uff0c\u5199\u5165\u5b83\u81ea\u5df1\u7684\u63cf\u8ff0\u6587\u4ef6\u3002\u6211\u4eec\u901a\u5e38\u628a\u8fd9\u4e2a\u6587\u4ef6\u547d\u540d\u4e3a\u201cServer Spec\u201d\u3002\u5728\u8fd9\u4e2a\u6587\u4ef6\u91cc\uff0c\u8bb0\u5f55\u4e86\u8fd9\u53f0\u670d\u52a1\u5668\u7684\u6240\u6709\u8eab\u4efd\u4fe1\u606f\uff0c\u5305\u62ec\uff1aIDC\uff0c\u578b\u53f7\uff0c\u5f52\u5c5e\u73af\u5883\uff0c\u4f5c\u7528\uff0c\u6240\u5c5e\u5e94\u7528\uff0c\u670d\u52a1\u7c7b\u578b\uff0c\u8bbf\u95ee\u8def\u5f84\u7b49\u3002</p> <p>\u5176\u6b21\uff0c\u89e3\u51b3\u914d\u7f6e\u4e2d\u5fc3\u5bfb\u5740\u3002</p> <p>\u4e2d\u95f4\u4ef6\u6839\u636e Server Spec \u7684\u63cf\u8ff0\uff0c\u5bfb\u627e\u5230\u5b83\u6240\u5728\u73af\u5883\u5bf9\u5e94\u7684\u914d\u7f6e\u4e2d\u5fc3\uff0c\u4ece\u800c\u8fdb\u4e00\u6b65\u83b7\u53d6\u5176\u4ed6\u914d\u7f6e\uff0c\u5982\u6570\u636e\u5e93\u8fde\u63a5\u5b57\u7b26\u4e32\uff0c\u77ed\u4fe1\u670d\u52a1\u5730\u5740\u7b49\u7b49\u3002</p> <p>\u6700\u540e\uff0c\u5b8c\u6210\u670d\u52a1\u81ea\u53d1\u73b0\u3002</p> <p>\u5176\u5b9e\u8fd9\u5c31\u662f\u4e00\u4e2a\u670d\u52a1\u81ea\u53d1\u73b0\u7684\u8fc7\u7a0b\u3002\u6839\u636e\u670d\u52a1\u7c7b\u578b\uff0c\u8bbf\u95ee\u8def\u5f84\u7b49\uff0c\u8fd8\u53ef\u4ee5\u81ea\u52a8\u751f\u6210\u5bf9\u5e94\u7684\u8def\u7531\u914d\u7f6e\uff0c\u8d1f\u8f7d\u5747\u8861\u914d\u7f6e\u7b49\u3002</p>"},{"location":"chap16/3Env_mgt/#3","title":"3 \u4e86\u89e3\u5404\u79cd\u914d\u7f6e\u65b9\u6cd5","text":"<p>\u914d\u7f6e\u7ba1\u7406\uff1a \u662f\u901a\u8fc7\u6280\u672f\u6216\u884c\u653f\u624b\u6bb5\u5bf9\u8f6f\u4ef6\u4ea7\u54c1\u53ca\u5176\u5f00\u53d1\u8fc7\u7a0b\u548c\u751f\u547d\u5468\u671f\u8fdb\u884c\u63a7\u5236\u3001\u89c4\u8303\u7684\u4e00\u7cfb\u5217\u63aa\u65bd\u3002 \u5b83\u7684\u76ee\u6807\u662f\u8bb0\u5f55\u8f6f\u4ef6\u4ea7\u54c1\u7684\u6f14\u5316\u8fc7\u7a0b\uff0c\u786e\u4fdd\u8f6f\u4ef6\u5f00\u53d1\u8005\u5728\u8f6f\u4ef6\u751f\u547d\u5468\u671f\u7684\u5404\u4e2a\u9636\u6bb5\u90fd\u80fd\u5f97\u5230\u7cbe\u786e\u7684\u4ea7\u54c1\u914d\u7f6e\u4fe1\u606f\u3002</p> <p>\u914d\u7f6e\uff1a \u662f\u6307\u72ec\u7acb\u4e8e\u7a0b\u5e8f\u4e4b\u5916\uff0c\u4f46\u53c8\u5bf9\u7a0b\u5e8f\u4ea7\u751f\u4f5c\u7528\u7684\u53ef\u914d\u53d8\u91cf\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u540c\u4e00\u4efd\u4ee3\u7801\u5728\u4e0d\u540c\u7684\u914d\u7f6e\u4e0b\uff0c\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u8fd0\u884c\u7ed3\u679c\u3002</p> <p>\u5982\u679c\u6211\u4eec\u628a\u8fd9\u4e9b\u4fe1\u606f\u90fd\u786c\u7f16\u7801\u5728\u4ee3\u7801\u91cc\uff0c\u7ed3\u679c\u5c31\u662f\uff1a\u6bcf\u6b21\u53d1\u5e03\u56e0\u4e3a\u73af\u5883\u4e0d\u540c\uff0c\u6216\u8005\u4e1a\u52a1\u903b\u8f91\u7684\u8c03\u6574\uff0c\u90fd\u8981\u4fee\u6539\u4ee3\u7801\u3002\u800c\u4ee3\u7801\u4e00\u65e6\u88ab\u4fee\u6539\uff0c\u5c31\u9700\u8981\u5b8c\u6574\u7684\u6d4b\u8bd5\uff0c\u90a3\u4e48\u53d8\u66f4\u7684\u4ee3\u4ef7\u5c06\u662f\u5de8\u5927\u7684\u3002</p>"},{"location":"chap16/3Env_mgt/#3-1","title":"3-1 \u6784\u5efa\u65f6\u914d\u7f6e","text":"<p>\u4ee5 Maven \u4e3a\u4f8b\uff0c\u5b9e\u73b0\u591a\u73af\u5883\u7684\u6784\u5efa\u53ef\u79fb\u690d\u6027\u9700\u8981\u4f7f\u7528 profile\u3002</p> <p>profile \u662f\u4e00\u7ec4\u53ef\u9009\u7684\u914d\u7f6e\uff0c\u53ef\u4ee5\u7528\u6765\u8bbe\u7f6e\u6216\u8005\u8986\u76d6\u914d\u7f6e\u9ed8\u8ba4\u503c\u3002\u901a\u8fc7\u4e0d\u540c\u7684\u73af\u5883\u6fc0\u6d3b\u4e0d\u540c\u7684 profile\uff0c\u53ef\u4ee5\u5b9e\u73b0\u6784\u5efa\u7684\u53ef\u79fb\u690d\u6027\u3002 \u6211\u4eec\u53ef\u4ee5\u770b\u4e00\u4e2a\u7b80\u5355\u4f7f\u7528\u793a\u4f8b\uff1a</p> <p></p> <p>\u8fd9\u6bb5\u4ee3\u7801\u5b9a\u4e49\u4e86 dev \u548c prod \u4e24\u4e2a profile\uff08\u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u5176\u4ed6\u914d\u7f6e\uff0c\u5b9e\u9645\u4f7f\u7528\u4e2d\u53ef\u6309\u9700\u5b9a\u4e49\u4efb\u4f55\u914d\u7f6e\uff09\uff0c\u5e76\u4e14\u4f7f\u7528\u4e86 echo \u63d2\u4ef6\u9a8c\u8bc1 profile \u662f\u5426\u751f\u6548\uff0c\u901a\u8fc7\u8fd0\u884c\u3002</p> <pre><code>maven initialize \u2013Pdev\n</code></pre> <pre><code>maven initialize \u2013Pprod\n</code></pre> <p>\u7136\u540e\uff0c\u53ef\u4ee5\u770b\u5230\u8f93\u51fa\uff1a</p> <pre><code>[INFO] profiles.active = prod\n</code></pre> <p>\u5176\u4e2d\uff0c dev \u662f\u9ed8\u8ba4\u6fc0\u6d3b\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u4e0d\u586b\u5199\u4efb\u4f55 <code>\u2013P</code> \u53c2\u6570\uff0c\u6216\u8005 \u2013P \u53c2\u6570\u4e0d\u4e3a dev \u6216\u8005 prod\uff0c\u90fd\u4f1a\u4f7f\u7528 dev \u4f5c\u4e3a\u9ed8\u8ba4\u7684 profile\u3002</p> <p>\u8fd9\u6837\u5728\u4ee3\u7801\u6784\u5efa\u65f6\uff0c\u4f60\u5c31\u53ef\u4ee5\u6839\u636e\u5177\u4f53\u9700\u8981\u9009\u62e9\u5bf9\u5e94\u7684 profile \u4e86\u3002</p> <p>\u8fd9\u4e2a\u65b9\u6848\u770b\u8d77\u6765\u5f88\u7b80\u5355\uff0c \u4f46\u4e5f\u6709\u4e24\u4e2a\u7f3a\u70b9\uff1a</p> <ul> <li>\u5b83\u4f9d\u8d56\u4e8e\u67d0\u4e2a\u7279\u5b9a\u7684\u6784\u5efa\u5de5\u5177\uff0c\u800c\u4e14\u4f7f\u7528\u65b9\u6cd5\u4e0d\u7edf\u4e00\u3002 \u4ec0\u4e48\u610f\u601d\u5462\uff1f\u5982\u679c\u4f60\u4e0d\u4f7f\u7528 Maven \u4f5c\u4e3a\u6784\u5efa\u5de5\u5177\uff0c\u8fd9\u4e2a\u914d\u7f6e\u529f\u80fd\u5c31\u5931\u6548\u4e86\uff1b\u800c\u4e14\u5bf9\u4e8e\u8de8\u5e73\u53f0\u3001\u8de8\u8bed\u8a00\u6808\u7684\u652f\u6301\u4e5f\u4e0d\u53cb\u597d\u3002</li> <li>\u6bcf\u6b21\u90fd\u8981\u91cd\u65b0\u7f16\u8bd1\uff0c\u6d6a\u8d39\u8ba1\u7b97\u8d44\u6e90\u3002 \u5373\u4f7f\u4f60\u53ea\u662f\u66ff\u6362\u4e00\u4e9b\u914d\u7f6e\u6587\u4ef6\uff0c\u5e76\u6ca1\u6709\u6539\u52a8\u4efb\u4f55\u4ee3\u7801\uff0c\u4f46\u4e3a\u4e86\u8ba9\u914d\u7f6e\u751f\u6548\uff0c\u8fd8\u662f\u9700\u8981\u5b8c\u6210\u4ee3\u7801\u7684\u6574\u4e2a\u6784\u5efa\u8fc7\u7a0b\uff0c\u8fd9\u5c31\u4f1a\u5728\u7f16\u8bd1\u4e0a\u82b1\u8d39\u5927\u91cf\u7684\u8ba1\u7b97\u8d44\u6e90\u3002</li> </ul>"},{"location":"chap16/3Env_mgt/#3-2","title":"3-2 \u6253\u5305\u65f6\u914d\u7f6e","text":"<p>\u6b63\u56e0\u4e3a\u6784\u5efa\u65f6\u914d\u7f6e\uff0c\u9700\u8981\u9488\u5bf9\u591a\u4e2a profile \u7f16\u8bd1\u591a\u6b21\uff0c\u800c\u6301\u7eed\u4ea4\u4ed8\u6709\u4e00\u4e2a\u6838\u5fc3\u6982\u5ff5\uff0c\u5373\uff1a\u4e00\u6b21\u6784\u5efa\u591a\u6b21\u90e8\u7f72\u3002\u6253\u5305\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u800c\u88ab\u53d1\u660e\u7684\u3002</p> <p>\u6253\u5305\u65f6\u914d\u7f6e\uff0c\u9700\u8981\u501f\u52a9\u53d1\u5e03\u7684\u529b\u91cf\u4f7f\u914d\u7f6e\u751f\u6548\u3002\u800c\u5b9e\u9645\u573a\u666f\u4e2d\uff0c\u53ea\u662f\u4fee\u6539\u4e86\u914d\u7f6e\u5c31\u8981\u53d1\u5e03\u4ee3\u7801\u5f80\u5f80\u662f\u4e0d\u88ab\u63a5\u53d7\u7684\u3002\u7279\u522b\u662f\uff0c\u5982\u679c\u4f60\u8fd8\u4e0d\u5177\u5907\u5f88\u6210\u719f\u7684\u6301\u7eed\u90e8\u7f72\u80fd\u529b\uff0c\u90a3\u5c06\u4f1a\u662f\u5f88\u5934\u75db\u7684\u4e8b\u60c5\u3002</p>"},{"location":"chap16/3Env_mgt/#3-3","title":"3-3 \u8fd0\u884c\u65f6\u914d\u7f6e","text":"<p>\u968f\u7740\u7a0b\u5e8f\u529f\u80fd\u7684\u65e5\u76ca\u590d\u6742\uff0c\u7a0b\u5e8f\u7684\u914d\u7f6e\u65e5\u76ca\u589e\u591a\uff0c\u5404\u79cd\u529f\u80fd\u7684\u5f00\u5173\uff0c\u53c2\u6570\u7684\u914d\u7f6e\uff0c\u670d\u52a1\u5668\u7684\u5730\u5740\uff0c\u7b49\u7b49\u4e0d\u65ad\u589e\u52a0\u5230\u7cfb\u7edf\u4e2d\u3002\u800c\u4e14\u5e94\u7528\u5bf9\u7a0b\u5e8f\u914d\u7f6e\u7684\u671f\u671b\u503c\u4e5f\u8d8a\u6765\u8d8a\u9ad8\uff0c\u9700\u8981\u914d\u7f6e\u7cfb\u7edf\u80fd\u591f\uff1a</p> <ul> <li>\u4fee\u6539\u540e\u5b9e\u65f6\u751f\u6548\uff1b</li> <li>\u652f\u6301\u7070\u5ea6\u53d1\u5e03\uff1b</li> <li>\u80fd\u5206\u73af\u5883\u3001\u5206\u96c6\u7fa4\u7ba1\u7406\u914d\u7f6e\uff1b</li> <li>\u6709\u5b8c\u5584\u7684\u6743\u9650\u3001\u5ba1\u6838\u673a\u5236\u3002</li> </ul> <p>\u5728\u8fd9\u6837\u7684\u5927\u73af\u5883\u4e0b\uff0c\u4f20\u7edf\u7684\u914d\u7f6e\u6587\u4ef6\u3001\u6570\u636e\u5e93\u7b49\u65b9\u5f0f\u5df2\u7ecf\u8d8a\u6765\u8d8a\u65e0\u6cd5\u6ee1\u8db3\u5f00\u53d1\u4eba\u5458\u5bf9\u914d\u7f6e\u7684\u7ba1\u7406\u9700\u6c42\uff1b\u53e6\u5916\uff0c\u5bf9\u4e8e\u6570\u636e\u5e93\u8fde\u63a5\u4e32\uff0c\u5404\u4e2a\u670d\u52a1\u4e4b\u95f4\u7684 API Key \u7b49\u673a\u5bc6\u914d\u7f6e\uff0c\u5982\u679c\u653e\u5728\u4ee3\u7801\u91cc\u4e5f\u4f1a\u5f15\u8d77\u5b89\u5168\u7684\u95ee\u9898\u3002</p>"},{"location":"chap16/3Env_mgt/#3-4","title":"3-4 \u56de\u6eda\u662f\u914d\u7f6e\u6c38\u8fdc\u7684\u75db","text":"<p>\u5148\u56de\u6eda\u914d\u7f6e\u8fd8\u662f\u5148\u56de\u6eda\u4ee3\u7801\u5c31\u6210\u4e86\u4e00\u4e2a\u6b7b\u5faa\u73af\u7684\u95ee\u9898\u3002\u6700\u597d\u7684\u529e\u6cd5\u662f\u4fdd\u8bc1\u914d\u7f6e\u4e0e\u4ee3\u7801\u7684\u517c\u5bb9\u6027\uff0c\u8fd9\u6709\u70b9\u7c7b\u4f3c\u4e8e\u6570\u636e\u5e93\u7684 schema \u53d8\u66f4\u3002 \u6bd4\u5982\uff0c\u53ea\u589e\u52a0\u914d\u7f6e\u4e0d\u5220\u51cf\u914d\u7f6e\u3001\u4e0d\u6539\u53d8\u914d\u7f6e\u7684\u6570\u636e\u7c7b\u578b\u800c\u662f\u65b0\u589e\u4e00\u4e2a\u914d\u7f6e\u7b49\u65b9\u6cd5\u3002\u540c\u65f6\uff0c\u4e5f\u8981\u505a\u597d\u4ee3\u7801\u7248\u672c\u4e0e\u914d\u7f6e\u7248\u672c\u7684\u5bf9\u5e94\u7ba1\u7406</p> <p>\u6240\u4ee5\uff0c\u5bf9\u4e8e\u914d\u7f6e\u56de\u6eda\u8fd9\u4e2a\u590d\u6742\u95ee\u9898\uff0c\u6ca1\u6709\u4e00\u52b3\u6c38\u9038\u7684\u529e\u6cd5\uff0c \u53ea\u80fd\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u9009\u62e9\u6700\u9002\u5408\u81ea\u5df1\u7684\u65b9\u6848\u3002</p> <p>\u6211\u6709\u4e00\u4e2a\u63a8\u8350\u505a\u6cd5\u5c31\u662f\uff0c\u6bcf\u6b21\u56de\u6eda\u65f6\uff0c\u5c06\u53ef\u80fd\u53d1\u751f\u53d8\u5316\u7684\u914d\u7f6e\u8fdb\u884c diff \u64cd\u4f5c\uff0c\u7531\u8d1f\u8d23\u56de\u6eda\u7684\u5177\u4f53\u4eba\u6839\u636e\u7ed3\u679c\u53bb\u505a\u6700\u540e\u7684\u5224\u65ad</p> <p>\u4e09\u79cd\u914d\u7f6e\u65b9\u6848\uff1a</p> <ul> <li>\u6784\u5efa\u65f6\u914d\u7f6e\uff1a\u4f1a\u589e\u52a0\u6784\u5efa\u6210\u672c\uff1b</li> <li>\u6253\u5305\u65f6\u914d\u7f6e\uff1a\u4f9d\u8d56\u53d1\u5e03\u751f\u6548\uff1b</li> <li>\u8fd0\u884c\u65f6\u914d\u7f6e\uff1a\u914d\u7f6e\u4e2d\u5fc3\uff0c\u4fbf\u4e8e\u7ba1\u7406\u548c\u7ef4\u62a4\u3002</li> </ul>"},{"location":"chap16/3Env_mgt/#4","title":"4 \u5982\u4f55\u505a\u5230\u5206\u949f\u7ea7\u642d\u5efa\u73af\u5883","text":""},{"location":"chap16/3Env_mgt/#4-1","title":"4-1 \u73af\u5883\u6784\u5efa\u6d41\u6c34\u7ebf","text":"<ul> <li>\u865a\u62df\u673a\u73af\u5883\u51c6\u5907\uff0c\u6839\u636e\u73af\u5883\u7684\u5e94\u7528\u6570\u3001\u6bcf\u4e2a\u5e94\u7528\u9700\u8981\u7684\u786c\u4ef6\u914d\u7f6e\uff0c\u51c6\u5907\u597d\u73af\u5883\u7684\u786c\u4ef6\u8d44\u6e90\u3002</li> <li>\u5e94\u7528\u90e8\u7f72\u6d41\u6c34\u7ebf\uff0c\u5728\u6807\u51c6\u5316\u7684\u865a\u62df\u673a\u4e0a\u8fdb\u884c\u5e94\u7528\u90e8\u7f72\uff0c\u5f53\u51fa\u73b0\u95ee\u9898\u65f6\u5982\u4f55\u5bb9\u9519\u3002</li> <li>\u73af\u5883\u53d8\u66f4\uff0c\u5728 SOA \u6216\u5fae\u670d\u52a1\u7684\u67b6\u6784\u4f53\u7cfb\u4e0b\uff0c\u5e38\u5e38\u4f1a\u56e0\u4e3a\u6d4b\u8bd5\u7684\u9700\u6c42\uff0c\u5c06\u51e0\u5957\u73af\u5883\u5408\u5e76\u6216\u62c6\u5206\uff0c\u521b\u5efa\u73af\u5883\u65f6\uff0c\u4f60\u9700\u8981\u8003\u8651\u5982\u4f55\u9ad8\u6548\u5730\u5b8c\u6210\u8fd9\u4e9b\u64cd\u4f5c\u3002</li> </ul>"},{"location":"chap16/3Env_mgt/#4-2","title":"4-2 \u865a\u62df\u673a\u73af\u5883\u51c6\u5907","text":"<p>\u5efa\u8bae\u662f\uff0c\u91c7\u7528\u8d44\u6e90\u6c60\u7684\u65b9\u6848\u3002\u4f60\u53ef\u4ee5\u6839\u636e\u7528\u6237\u5e73\u65f6\u4f7f\u7528\u865a\u62df\u673a\u7684\u60c5\u51b5\uff0c\u7edf\u8ba1\u6bcf\u5929\u865a\u62df\u673a\u7533\u8bf7\u548c\u9500\u6bc1\u7684\u5177\u4f53\u6570\u91cf\uff0c\u9884\u5148\u521d\u59cb\u5316\u4e00\u5b9a\u91cf\u7684\u865a\u62df\u673a\u3002 \u8fd9\u6837\u7528\u6237\u4ece\u4e0a\u5c42\u7684 PaaS \u5e73\u53f0\u521b\u5efa\u73af\u5883\u65f6\uff0c\u5c31\u4e0d\u7528\u7b49\u5f85\u521d\u59cb\u5316\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece\u8d44\u6e90\u6c60\u4e2d\u83b7\u53d6\u865a\u62df\u673a\uff0c\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u5c31\u88ab\u8282\u7701\u4e0b\u6765\u4e86</p>"},{"location":"chap16/3Env_mgt/#4-3","title":"4-3 \u5e94\u7528\u90e8\u7f72\u6d41\u6c34\u7ebf","text":"<p>\u7531\u4e8e\u4e0d\u540c\u516c\u53f8\u7684\u4e2d\u95f4\u4ef6\u548c\u8fd0\u7ef4\u6807\u51c6\u4e0d\u540c\uff0c\u90e8\u7f72\u6d41\u6c34\u7ebf\u7684\u5dee\u5f02\u4e5f\u4f1a\u5f88\u5927\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u53ea\u4f1a\u4ece\u5355\u5e94\u7528\u90e8\u7f72\u6807\u51c6\u5316\u3001\u5e94\u7528\u90e8\u7f72\u7684\u5e76\u884c\u5ea6\uff0c\u4ee5\u53ca\u6d41\u6c34\u7ebf\u7684\u5bb9\u9519\u673a\u5236\uff0c\u8fd9\u4e09\u4e2a\u5173\u952e\u7684\u89d2\u5ea6\uff0c\u5206\u4eab\u5982\u4f55\u63d0\u901f\u73af\u5883\u7684\u642d\u5efa</p> <ul> <li>\u5355\u5e94\u7528\u90e8\u7f72\u6807\u51c6\u5316\uff0c\u8fd9\u662f\u6574\u4e2a\u73af\u5883\u90e8\u7f72\u7684\u57fa\u7840</li> <li>\u5e94\u7528\u90e8\u7f72\u7684\u5e76\u884c\u5ea6\uff0c\u4e3a\u4e86\u63d0\u9ad8\u73af\u5883\u7684\u90e8\u7f72\u901f\u5ea6\uff0c\u9700\u8981\u5c3d\u53ef\u80fd\u5f97\u6700\u5927\u5316\u5e94\u7528\u90e8\u7f72\u7684\u5e76\u884c\u5ea6</li> <li>\u6d41\u6c34\u7ebf\u7684\u5bb9\u9519\u673a\u5236<ul> <li>\u7b2c\u4e00\u79cd\u65b9\u6cd5\u662f\uff0c\u9519\u8bef\u4e2d\u65ad\u6cd5\u3002 \u521b\u5efa\u73af\u5883\u8fc7\u7a0b\u4e2d\uff0c\u5404\u79cd\u8d44\u6e90\u7533\u8bf7\u3001\u5e94\u7528\u90e8\u7f72\u51fa\u73b0\u95ee\u9898\u65f6\uff0c\u6211\u4eec\u5c06\u5de5\u4f5c\u6d41\u5feb\u7167\u4e0b\u6765\uff0c\u7136\u540e\u6536\u96c6\u6240\u6709\u7684\u5f02\u5e38\u4fe1\u606f\uff0c\u8fd4\u56de\u7ed9\u7528\u6237\u3002\u7531\u7528\u6237\u5224\u65ad\u5f53\u524d\u7684\u60c5\u51b5\uff0c\u7b49\u7528\u6237\u786e\u8ba4\u95ee\u9898\u5df2\u7ecf\u5f97\u5230\u89e3\u51b3\u540e\uff0c\u53ef\u4ee5\u89e6\u53d1\u4e00\u6b21\u5feb\u7167\u91cd\u8bd5\uff0c\u7ee7\u7eed\u88ab\u4e2d\u65ad\u7684\u6d41\u7a0b\u3002</li> <li>\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u662f\uff0c\u4f18\u5148\u5b8c\u6210\u6cd5\u3002 \u521b\u5efa\u73af\u5883\u8fc7\u7a0b\u4e2d\u53d1\u751f\u9519\u8bef\u65f6\uff0c\u5148\u8fdb\u884c\u51e0\u6b21\u91cd\u8bd5\u3002<ul> <li>\u5982\u679c\u91cd\u8bd5\u4f9d\u7136\u53d1\u751f\u9519\u8bef\u7684\u8bdd\uff0c\u5c31\u5ffd\u7565\u5f53\u524d\u9519\u8bef\uff0c\u5148\u8d70\u5b8c\u5269\u4f59\u7684\u6d41\u7a0b\uff0c\u7b49\u6240\u6709\u7684\u6d41\u7a0b\u90fd\u8d70\u5b8c\u4e86\uff0c\u518d\u4e00\u6b21\u6027\u5c06\u9519\u8bef\u8fd4\u56de\u7ed9\u7528\u6237\u3002 </li> <li>\u4ece\u6574\u4f53\u901f\u5ea6\u4e0a\u6765\u770b\uff0c\u7b2c\u4e8c\u79cd\u4f18\u5148\u5b8c\u6210\u7684\u5904\u7406\u65b9\u5f0f\u662f\u66f4\u4f18\u7684\uff0c\u800c\u4e14\u4e5f\u4f1a\u66f4\u5c11\u5730\u6253\u65ad\u7528\u6237\u3002</li> <li>\u53ea\u662f\u65b9\u5f0f\u4e8c\u9700\u8981\u4fdd\u8bc1\u7684\u5173\u952e\u539f\u5219\u662f\uff1a\u6240\u6709\u7684\u90e8\u7f72\u811a\u672c\u7684\u64cd\u4f5c\u90fd\u662f\u5e42\u7b49\u7684\uff0c\u5373\u4e24\u6b21\u64cd\u4f5c\u8fbe\u6210\u7684\u6548\u679c\u662f\u4e00\u81f4\u7684\uff0c\u5e76\u4e0d\u4f1a\u5e26\u6765\u66f4\u591a\u7684\u95ee\u9898\u3002</li> </ul> </li> </ul> </li> </ul>"},{"location":"chap16/3Env_mgt/#4-4","title":"4-4 \u73af\u5883\u53d8\u66f4","text":"<p>\u5b9e\u73b0\u4e86\u5e94\u7528\u90e8\u7f72\u6d41\u6c34\u7ebf\u540e\uff0c\u521b\u5efa\u73af\u5883\u7684\u4e3b\u6d41\u7a0b\uff0c\u5373\u865a\u673a\u51c6\u5907\u548c\u5e94\u7528\u90e8\u7f72\u5df2\u7ecf\u5b8c\u6210\uff0c\u73af\u5883\u5df2\u7ecf\u53ef\u4ee5\u5de5\u4f5c\u4e86\u3002\u4f46\u8fd8\u662f\u4e0d\u80fd\u5ffd\u7565\u4e86\u540e\u7eed\u73af\u5883\u53d8\u66f4\u7684\u9700\u6c42\u548c\u5de5\u4f5c\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7814\u53d1\u4eba\u5458\u53d8\u66f4\u73af\u5883\u4e3b\u8981\u6709\u4ee5\u4e0b 4 \u79cd\u573a\u666f\u3002</p> <ul> <li>\u5df2\u7ecf\u6709\u4e00\u5957\u65b0\u73af\u5883\uff0c\u5f53\u6709\u65b0\u9879\u76ee\u65f6\uff0c\u5f00\u53d1\u4eba\u5458\u4f1a\u6311\u9009\u90e8\u5206\u5e94\u7528\uff0c\u7ec4\u6210\u4e00\u4e2a\u72ec\u7acb\u7684\u5b50\u73af\u5883\u3002\u8fd9\u91cc\u7684\u91cd\u70b9\u662f\uff0c\u8981\u4fdd\u8bc1\u5b50\u73af\u5883\u548c\u5b8c\u6574\u73af\u5883\u7684\u8c03\u7528\u662f\u4e92\u76f8\u9694\u79bb\u7684\u3002</li> <li>\u5f53\u5b58\u5728\u591a\u4e2a\u5b50\u73af\u5883\u65f6\uff0c\u53ef\u80fd\u5728\u67d0\u4e2a\u65f6\u95f4\u70b9\u9700\u8981\u505a\u591a\u4e2a\u9879\u76ee\u7684\u96c6\u6210\uff0c\u8fd9\u65f6\u5f00\u53d1\u4eba\u5458\u9700\u8981\u5408\u5e76\u591a\u4e2a\u73af\u5883\u3002</li> <li>\u548c\u5408\u5e76\u7684\u60c5\u51b5\u76f8\u53cd\uff0c\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5f00\u53d1\u4eba\u5458\u9700\u8981\u5c06\u4e00\u4e2a\u5b50\u73af\u5883\u4e2d\u7684\u5e94\u7528\u5207\u5206\u5f00\u6765\uff0c\u5206\u4e3a\u4e24\u4e2a\u6216\u8005\u591a\u4e2a\u73af\u5883\u5206\u522b\u8fdb\u884c\u9694\u79bb\u6d4b\u8bd5\u3002</li> <li>\u5df2\u7ecf\u5b58\u5728\u4e00\u4e2a\u5b50\u73af\u5883\uff0c\u5f53\u591a\u4e2a\u5e76\u884c\u9879\u76ee\u65f6\uff0c\u5f00\u53d1\u4eba\u5458\u4f1a\u514b\u9686\u4e00\u5957\u5b8c\u6574\u7684\u5b50\u73af\u5883\u505a\u6d4b\u8bd5\u3002</li> </ul> <p>\u5bf9\u4e8e\u8fd9 4 \u4e2a\u573a\u666f\uff0c\u6211\u4eec\u9700\u8981\u5173\u6ce8\u7684\u662f\u5728\u591a\u5e76\u884c\u73af\u5883\u7684\u60c5\u51b5\u4e0b\u5e94\u7528\u62d3\u6251\u56fe\uff0c\u5305\u62ec\u7528\u6237\u8bbf\u95ee\u5e94\u7528\u7684\u5165\u53e3\u3001\u5e94\u7528\u4e4b\u95f4\u8c03\u7528\u94fe\u7684\u7ba1\u7406\uff0c\u4ee5\u53ca\u5e94\u7528\u5bf9\u6570\u636e\u5e93\u4e4b\u7c7b\u7684\u57fa\u7840\u8bbe\u65bd\u7684\u8bbf\u95ee\u3002</p> <ul> <li>\u7528\u6237\u8bbf\u95ee\u5e94\u7528\u7684\u5165\u53e3\u7ba1\u7406\u3002 \u4ee5\u6700\u5e38\u7528\u7684\u8bbf\u95ee\u5165\u53e3\uff08\u57df\u540d\uff09\u4e3a\u4f8b\uff0c\u6211\u63a8\u8350\u7684\u505a\u6cd5\u662f\u6839\u636e\u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e\u7684\u539f\u5219\uff0c\u5f53\u73af\u5883\u7ba1\u7406\u5e73\u53f0\u8bc6\u522b\u5230\u8fd9\u662f\u4e00\u4e2a Web \u5e94\u7528\u65f6\uff0c\u901a\u8fc7\u5e94\u7528\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u7684\u57df\u540d\u3001\u8def\u7531\uff0c\u73af\u5883\u540d\u7b49\u53c2\u6570\uff0c\u81ea\u52a8\u751f\u4ea7\u4e00\u4e2a\u57df\u540d\u5e76\u5728\u57df\u540d\u670d\u52a1\u4e0a\u6ce8\u518c\u3002 \u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u57df\u540d\u7684\u7ef4\u62a4\u5c3d\u91cf\u662f\u5728 SLB\uff08\u8d1f\u8f7d\u5747\u8861\uff0cServer Load Balancer\uff09\u7c7b\u4f3c\u7684\u8f6f\u8d1f\u8f7d\u4e2d\u95f4\u4ef6\u4e0a\u5b9e\u73b0\uff0c\u800c\u4e0d\u8981\u5728 DNS \u4e0a\u5b9e\u73b0\u3002\u56e0\u4e3a\u57df\u540d\u53d8\u66f4\u65f6\uff0c\u901a\u8fc7\u6cdb\u57df\u540d\u7684\u6307\u5411\uff0cSLB \u4e8c\u6b21\u89e3\u6790\u53ef\u4ee5\u505a\u5230\u57df\u540d\u8bbf\u95ee\u7684\u5b9e\u65f6\u5207\u6362\u3002\u800c\u5982\u679c\u914d\u7f6e\u5728 DNS \u4e0a\uff0c\u57df\u540d\u7684\u53d8\u66f4\u5c31\u65e0\u6cd5\u505a\u5230\u77ac\u65f6\u751f\u6548\u4e86\u3002</li> <li>\u5e94\u7528\u4e4b\u95f4\u8c03\u7528\u94fe\u7684\u7ba1\u7406</li> <li>\u5bf9\u6570\u636e\u5e93\u7684\u8bbf\u95ee\u3002 <ul> <li>\u4e00\u662f\uff0c\u6570\u636e\u5e93\u8fde\u63a5\u4e32\u7684\u7ef4\u62a4\u95ee\u9898\uff0c\u4e0e SOA \u8c03\u7528\u94fe\uff08\u5373\u670d\u52a1\u4e4b\u95f4\u7684\u8c03\u7528\u5173\u7cfb\uff09\u7684\u7ef4\u62a4\u7c7b\u4f3c\uff0c\u5b8c\u5168\u53ef\u4ee5\u501f\u9274\uff1b</li> <li>\u4e8c\u662f\uff0c\u6570\u636e\u5e93\u7684\u5feb\u901f\u521b\u5efa\u7b56\u7565\u3002 \u5bf9\u4e8e\u6570\u636e\u5e93\u4e2d\u7684\u8868\u7ed3\u6784\u548c\u6570\u636e\uff0c\u6211\u4eec\u91c7\u53d6\u7684\u65b9\u5f0f\u662f\u6839\u636e\u751f\u4ea7\u4e2d\u5b9e\u9645\u7684\u6570\u636e\u5e93\u7ed3\u6784\uff0c\u4ea7\u751f\u4e00\u4e2a\u57fa\u51c6\u5e93\uff0c\u7531\u7528\u6237\u81ea\u5df1\u6765\u7ef4\u62a4\u8fd9\u4e2a\u57fa\u51c6\u5e93\u7684\u6570\u636e\uff0c\u4fdd\u8bc1\u6570\u636e\u7684\u6709\u6548\u6027\u3002\u5e76\u5728\u73af\u5883\u521b\u5efa\u65f6\uff0c\u63d0\u4f9b\u6570\u636e\u5e93\u811a\u672c\u53d8\u66f4\u7684\u63a5\u53e3\uff0c\u6839\u636e\u4e4b\u524d\u7684\u57fa\u51c6\u5e93\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\uff0c\u7531\u6b64\u4fdd\u8bc1\u73af\u5883\u4e2d\u7684\u6570\u636e\u7b26\u5408\u9884\u671f\u3002</li> </ul> </li> </ul> <p>\u5bf9\u4e8e\u73af\u5883\u7684\u521b\u5efa\u548c\u62c6\u5206\uff0c\u6700\u4e3b\u8981\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u590d\u5236\u548c\u91cd\u65b0\u914d\u7f6e\u73af\u5883\u4e2d\u7684\u5404\u4e2a\u96f6\u4ef6\u3002</p> <ul> <li>\u73af\u5883\u521b\u5efa\uff0c\u5c31\u662f\u4e0d\u65ad\u63d0\u9ad8\u865a\u62df\u673a\u51c6\u5907\u548c\u5e94\u7528\u90e8\u7f72\u4e24\u4e2a\u6d41\u6c34\u7ebf\u7684\u901f\u5ea6\u548c\u7a33\u5b9a\u6027\uff1b</li> <li>\u73af\u5883\u62c6\u5206\uff0c\u5219\u9700\u8981\u5173\u6ce8\u4ee5\u4e0a\u6240\u8bf4\u7684\u4e09\u4e2a\u6700\u91cd\u8981\u7684\u914d\u7f6e\u5185\u5bb9\u3002</li> </ul> <p>\u800c\u73af\u5883\u7684\u5408\u5e76\u9700\u8981\u6ce8\u610f\u7684\u95ee\u9898\u662f\uff0c\u5408\u5e76\u540e\u7684\u73af\u5883\u51b2\u7a81\u3002 \u6bd4\u5982\uff0c\u4e24\u5957\u73af\u5883\u4e2d\u90fd\u5b58\u5728\u540c\u4e00\u4e2a\u670d\u52a1\u5e94\u7528\uff0c\u800c\u4e24\u8005\u7684\u7248\u672c\u662f\u4e0d\u4e00\u81f4\u7684\uff1b\u53c8\u6216\u8005\uff0c\u4e24\u4e2a\u73af\u5883\u5404\u81ea\u914d\u7f6e\u4e86\u4e00\u5957\u6570\u636e\u5e93\u3002\u6b64\u65f6\u8be5\u5982\u4f55\u5904\u7406\u5462\u3002</p> <p>\u56e0\u4e3a\u73af\u5883\u7684\u63cf\u8ff0\u5df2\u7ecf\u88ab\u4ee3\u7801\u5316\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u89e3\u51b3\u4ee3\u7801\u5408\u5e76\u7684\u51b2\u7a81\u95ee\u9898\u3002\u5728\u73af\u5883\u5408\u5e76\u524d\uff0c\u5148\u8fdb\u884c\u4e00\u6b21\u73af\u5883\u7684\u51b2\u7a81\u68c0\u6d4b\uff0c\u5982\u679c\u73af\u5883\u4e2d\u5b58\u5728\u4e0d\u53ef\u81ea\u52a8\u89e3\u51b3\u7684\u51b2\u7a81\uff0c\u5c31\u5c06\u8fd9\u4e9b\u51b2\u7a81\u7f57\u5217\u51fa\u6765\uff0c\u7531\u7528\u6237\u9009\u62e9\u5408\u9002\u7684\u670d\u52a1\u7248\u672c\u3002</p>"},{"location":"chap16/3Env_mgt/#5","title":"5 \u5bb9\u5668\u6280\u672f\u4e4b\u73af\u5883\u7ba1\u7406","text":""},{"location":"chap16/3Env_mgt/#5-1","title":"5-1 \u5bb9\u5668\u548c\u865a\u62df\u673a\u7684\u4e3b\u8981\u5dee\u5f02\uff0c\u5305\u62ec\u4e09\u4e2a\u65b9\u9762\uff1a","text":"<ul> <li>\u9996\u5148\uff0c\u591a\u4e2a\u5bb9\u5668\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u5bbf\u4e3b\u673a\u7684\u5185\u6838\uff0c\u6240\u4ee5\u5bb9\u5668\u7684\u4f53\u79ef\u8981\u6bd4\u865a\u62df\u673a\u5c0f\u5f88\u591a\uff0c\u8fd9\u5c31\u4f7f\u5f97\u5bb9\u5668\u5728\u5206\u53d1\u548c\u5b58\u50a8\u4e0a\u6bd4\u8f83\u6709\u4f18\u52bf\uff1b</li> <li>\u5176\u6b21\uff0c\u542f\u52a8\u5bb9\u5668\u4e0d\u9700\u8981\u542f\u52a8\u6574\u4e2a\u64cd\u4f5c\u7cfb\u7edf\uff0c\u6240\u4ee5\u5bb9\u5668\u90e8\u7f72\u548c\u542f\u52a8\u901f\u5ea6\u66f4\u5feb\u3001\u5f00\u9500\u66f4\u5c0f\uff0c\u4e5f\u66f4\u5bb9\u6613\u8fc1\u79fb\uff0c\u8fd9\u4f7f\u5f97\u5bb9\u5668\u62e5\u6709\u66f4\u5f3a\u7684\u6062\u590d\u80fd\u529b\uff1b</li> <li>\u6700\u540e\uff0c\u5bb9\u5668\u8fde\u5e26\u4ee3\u7801\u548c\u73af\u5883\u4e00\u8d77\u90e8\u7f72\u7684\u65b9\u5f0f\uff0c\u4fdd\u8bc1\u4e86\u5b83\u6240\u5305\u542b\u7684\u7a0b\u5e8f\u7684\u8fd0\u884c\u4f9d\u8d56\u4e0d\u4f1a\u88ab\u53d8\u66f4\uff0c\u8fd9\u5c31\u4f7f\u5f97\u5bb9\u5668\u6709\u6548\u89e3\u51b3\u4e86\u4e0d\u540c\u73af\u5883\u4e0d\u540c\u7ed3\u679c\u7684\u95ee\u9898\u3002</li> </ul>"},{"location":"chap16/3Env_mgt/#5-2","title":"5-2 \u91cd\u65b0\u5b9a\u4e49\u4ea4\u4ed8\u6807\u51c6","text":"<p>\u6ca1\u6709\u5bb9\u5668\u4e4b\u524d\uff0c\u4ea4\u4ed8\u6807\u51c6\u5305\u62ec\u8f6f\u4ef6\u73af\u5883\uff08\u4e5f\u5c31\u6240\u8c13\u7684\u673a\u5668\uff09\u548c\u8f6f\u4ef6\u4ee3\u7801\u4e24\u90e8\u5206\u3002\u4ea4\u4ed8\u7cfb\u7edf\u66f4\u5173\u6ce8\u7684\u662f\u8f6f\u4ef6\u4ee3\u7801\uff0c\u73af\u5883\u4e00\u65e6\u4ea7\u751f\u540e\uff0c\u6211\u4eec\u5c31\u4e0d\u518d\u5173\u5fc3\u6216\u8005\u5f88\u96be\u518d\u5e72\u9884\u7528\u6237\u540e\u671f\u662f\u5982\u4f55\u5bf9\u5176\u505a\u53d8\u66f4\u7684\u4e86\u3002</p> <p>\u5bb9\u5668\u6280\u672f\u7edf\u4e00\u4e86\u8f6f\u4ef6\u73af\u5883\u548c\u8f6f\u4ef6\u4ee3\u7801\uff0c\u4ea4\u4ed8\u4ea7\u7269\u4e2d\u65e2\u5305\u62ec\u4e86\u8f6f\u4ef6\u73af\u5883\uff0c\u53c8\u5305\u62ec\u4e86\u8f6f\u4ef6\u4ee3\u7801\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bb9\u5668\u5e2e\u6211\u4eec\u91cd\u65b0\u5b9a\u4e49\u4e86\u4ea4\u4ed8\u6807\u51c6\u3002</p> <p>\u7b2c\u4e00\uff0c\u4ea4\u4ed8\u7ed3\u679c\u4e00\u81f4</p> <p>\u5bb9\u5668\u955c\u50cf\u53ef\u4ee5\u628a\u8f6f\u4ef6\u7684\u8fd0\u884c\u73af\u5883\u4ee5\u53ca\u4ee3\u7801\u6253\u5305\u5728\u4e00\u8d77\uff0c\u56e0\u6b64\u53ef\u4ee5\u57fa\u4e8e\u540c\u4e00\u4e2a\u955c\u50cf\uff0c\u5728\u4e0d\u540c\u7684\u5730\u65b9\u751f\u6210\u4e00\u6a21\u4e00\u6837\u7684\u8fd0\u884c\u73af\u5883\uff0c\u4e5f\u5c31\u662f\u8bf4\u5355\u4e2a\u955c\u50cf\u7684\u4ea4\u4ed8\u7ed3\u679c\u4e0d\u53ef\u53d8\u3002</p> <p>\u5f53\u7136\uff0c\u5355\u4e2a\u5bb9\u5668\u53ea\u80fd\u63d0\u4f9b\u4e00\u4e2a\u670d\u52a1\uff0c\u800c\u5b9e\u9645\u573a\u666f\u4e0b\uff0c\u5e94\u7528\u90fd\u662f\u8dd1\u5728 SOA \u6216\u5fae\u670d\u52a1\u7684\u6846\u67b6\u4e0b\u7684\u3002\u6240\u4ee5\uff0c\u8fd8\u9700\u8981\u5229\u7528\u5982 Mesos \u6216 Kubernetes \u8fd9\u6837\u7684\u7f16\u6392\u7cfb\u7edf\uff0c\u5c06\u591a\u4e2a\u5bb9\u5668\u7ec4\u7ec7\u8d77\u6765\uff0c\u5e76\u56fa\u5316\u7f16\u6392\u8fc7\u7a0b\u3002</p> <p>\u57fa\u4e8e\u8fd9\u4e24\u4e2a\u7279\u6027\uff0c\u4e00\u65e6\u5f62\u6210\u4e86\u56fa\u5b9a\u7684\u5bb9\u5668\u955c\u50cf\u548c\u5bf9\u5e94\u7684\u7f16\u6392\uff08\u4e5f\u6210\u4e3a\u5e94\u7528\u6a21\u677f\uff09\uff0c\u90a3\u5728\u4e0d\u540c\u7684\u73af\u5883\u4e0b\uff0c\u4e00\u5b9a\u53ef\u4ee5\u91cd\u590d\u90e8\u7f72\uff0c\u4e14\u90e8\u7f72\u7ed3\u679c\u4fdd\u6301\u4e00\u81f4\u3002</p> <p>\u7b2c\u4e8c\uff0c\u4ea4\u4ed8\u81ea\u52a8\u5316</p> <p>\u5bb9\u5668\u955c\u50cf\u53ca\u5bb9\u5668\u7f16\u6392\u6280\u672f\u5f88\u597d\u5730\u89e3\u51b3\u4e86 CI \u548c CD \u95ee\u9898\uff1a</p> <ul> <li>CI \u65b9\u9762\uff0c\u4e0e\u4f20\u7edf\u65b9\u5f0f\u7684\u4e0d\u540c\u53ea\u5728\u4e8e\uff0c\u539f\u5148\u4ea4\u4ed8\u7684\u662f\u5b89\u88c5\u5305\u6216\u8f6f\u4ef6\u5305\uff0c\u800c\u5bb9\u5668\u4ea4\u4ed8\u7684\u5219\u662f\u955c\u50cf\uff1b</li> <li>CD \u65b9\u9762\uff0c\u4e0e\u4f20\u7edf\u65b9\u5f0f\u76f8\u6bd4\u5219\u6709\u4e86\u957f\u8db3\u7684\u8fdb\u6b65\u3002 \u5bf9\u4f20\u7edf\u65b9\u5f0f\u800c\u8a00\uff0c\u90e8\u7f72\u548c\u5b89\u88c5\u65b9\u5f0f\u4e0e\u8f6f\u4ef6\u7c7b\u578b\u3001\u5f00\u53d1\u65b9\u5f0f\u6709\u76f4\u63a5\u5173\u7cfb\uff0c\u5b58\u5728\u591a\u79cd\u591a\u6837\u7684\u53ef\u80fd\u3002 \u800c\u5bb9\u5668\u6280\u672f\u5219\u6ca1\u6709\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u552f\u4e00\u7684\u65b9\u5f0f\u5c31\u662f\u62c9\u8d77\u5bb9\u5668\u955c\u50cf\u3002\u8fd9\u5c31\u5927\u5927\u7b80\u5316\u4e86\u90e8\u7f72\u7684\u590d\u6742\u5ea6\uff0c\u800c\u4e14\u5728\u7f16\u6392\u7cfb\u7edf\u7684\u652f\u6301\u4e0b\uff0c\u5b8c\u6210 CD \u8d8a\u6765\u8d8a\u5bb9\u6613\u4e86\u3002</li> </ul> <p>\u7b2c\u4e09\uff0c\u4ea4\u4ed8\u4e2a\u6027\u5316</p> <p>\u6709\u4e86\u5bb9\u5668\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7edf\u4e00\u7684\u63a5\u53e3\u5b8c\u6210\u4efb\u4f55\u5e94\u7528\u7684\u90e8\u7f72\uff0c\u51e0\u4e4e\u53ef\u4ee5\u5f88\u597d\u5730\u6ee1\u8db3\u6240\u6709\u7684\u4e2a\u6027\u5316\u9700\u6c42</p> <p>\u7b2c\u56db\uff0c\u4ea4\u4ed8\u7248\u672c\u63a7\u5236</p> <p>\u5bf9\u4e8e\u5bb9\u5668\u6765\u8bf4\uff0c\u9075\u5faa\u7684\u662f\u4e0d\u53ef\u53d8\u57fa\u7840\u8bbe\u65bd\uff08Immutable Infrastructure\uff09\u7684\u7406\u5ff5\uff0c\u4e5f\u5c31\u662f\u8bf4\u4efb\u4f55\u53d8\u5316\uff0c\u5305\u62ec\u4ee3\u7801\u3001\u73af\u5883\u3001\u914d\u7f6e\u7684\u53d8\u66f4\uff0c\u90fd\u9700\u8981\u91cd\u65b0\u5236\u4f5c\u955c\u50cf\uff0c\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u7248\u672c\u3002\u8fd9\u4e0e\u7248\u672c\u5f80\u5f80\u53ea\u548c\u4ee3\u7801\u53d8\u66f4\u6709\u5173\u7684\u4f20\u7edf\u65b9\u5f0f\u6709\u6240\u4e0d\u540c\u3002</p>"},{"location":"chap16/3Env_mgt/#5-3","title":"5-3 \u5bb9\u5668\u4e0d\u662f\u94f6\u5f39","text":""},{"location":"chap16/4const_mgt/","title":"L4 \u6784\u5efa\u96c6\u6210","text":""},{"location":"chap16/4const_mgt/#1","title":"1 \u6784\u5efa\u7684\u63d0\u901f","text":""},{"location":"chap16/4const_mgt/#1-1","title":"1-1 \u5347\u7ea7\u786c\u4ef6\u8d44\u6e90","text":"<p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u7684\u786c\u4ef6\u8d44\u6e90\u5305\u62ec CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u3001\u7f51\u7edc\u7b49\u7b49\uff0c\u5177\u4f53\u5347\u7ea7\u54ea\u4e00\u90e8\u5206\uff0c\u9700\u8981\u5177\u4f53\u60c5\u51b5\u5177\u4f53\u5206\u6790\u3002</p> <p>\u6bd4\u5982\uff0c\u4f60\u8981\u6784\u5efa\u4e00\u4e2a C \u8bed\u8a00\u7a0b\u5e8f\uff0c\u90a3\u4e48 CPU \u5c31\u662f\u5173\u952e\u70b9\u3002\u4f60\u53ef\u4ee5\u589e\u52a0 CPU \u7684\u4e2a\u6570\u6216\u8005\u63d0\u5347 CPU \u4e3b\u9891\u4ee5\u5b9e\u73b0\u66f4\u5feb\u7684\u7f16\u8bd1\u901f\u5ea6\u3002</p> <p>\u518d\u6bd4\u5982\uff0c\u4f60\u8981\u7528 Maven \u6784\u5efa\u4e00\u4e2a Java \u5e94\u7528\uff0c\u9664\u4e86 CPU \u4e4b\u5916\uff0cMaven \u8fd8\u4f1a\u4ece\u4e2d\u592e\u4ed3\u5e93\u4e0b\u8f7d\u4f9d\u8d56\u5199\u5728\u672c\u5730\u78c1\u76d8\u3002</p> <p>\u8fd9\u65f6\uff0c\u7f51\u7edc\u548c\u78c1\u76d8\u7684 I/O \u5c31\u53ef\u80fd\u6210\u4e3a\u74f6\u9888\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u7f51\u7edc\u5e26\u5bbd\u63d0\u5347\u7f51\u7edc\u541e\u5410\uff0c\u4f7f\u7528 SSD \u4ee3\u66ff\u673a\u68b0\u786c\u76d8\u589e\u52a0\u78c1\u76d8 I/O \uff0c\u4ece\u800c\u5230\u8fbe\u63d0\u5347\u6574\u4e2a\u6784\u5efa\u8fc7\u7a0b\u901f\u5ea6\u7684\u76ee\u7684\u3002</p> <p>\u603b\u4e4b\uff0c\u5f53\u4f60\u4f7f\u7528\u6210\u719f\u7684\u6784\u5efa\u5de5\u5177\u8fdb\u884c\u6784\u5efa\u65f6\uff0c\u5982\u679c\u65e0\u6cd5\u901a\u8fc7\u4e00\u4e9b\u8f6f\u4ef6\u6280\u672f\u624b\u6bb5\u63d0\u5347\u8f6f\u4ef6\u672c\u8eab\u7684\u6784\u5efa\u901f\u5ea6\uff0c\u90a3\u4e48\u6839\u636e\u6784\u5efa\u7279\u70b9\uff0c\u6709\u9488\u5bf9\u6027\u5730\u5347\u7ea7\u786c\u4ef6\u8d44\u6e90\uff0c\u662f\u6700\u7b80\u5355\u7c97\u66b4\u7684\u65b9\u6cd5\u3002</p>"},{"location":"chap16/4const_mgt/#1-2","title":"1-2 \u642d\u5efa\u79c1\u6709\u4ed3\u5e93","text":"<p>\u6784\u5efa\u5f88\u591a\u65f6\u5019\u662f\u9700\u8981\u4e0b\u8f7d\u5916\u90e8\u4f9d\u8d56\u7684\uff0c\u800c\u7f51\u7edc I/O \u901a\u5e38\u4f1a\u6210\u4e3a\u6574\u4e2a\u6784\u5efa\u7684\u74f6\u9888\u3002\u5c24\u5176\u5728\u5f53\u524d\u7f51\u7edc\u73af\u5883\u4e0b\uff0c\u4ece\u5916\u7f51\u4e0b\u8f7d\u4e00\u4e9b\u4ee3\u7801\u6216\u8005\u4f9d\u8d56\u7684\u901f\u5ea6\u5f80\u5f80\u662f\u74f6\u9888\uff0c\u6240\u4ee5\u5728\u5185\u7f51\u642d\u5efa\u5404\u79cd\u5404\u6837\u7684\u79c1\u6709\u4ed3\u5e93\u5c31\u975e\u5e38\u91cd\u8981\u4e86\u3002</p> <p>\u76ee\u524d\uff0c\u6211\u4eec\u9700\u8981\u7684\u4f9d\u8d56\u57fa\u672c\u4e0a\u90fd\u53ef\u4ee5\u642d\u5efa\u4e00\u5957\u79c1\u6709\u4ed3\u5e93\uff0c\u6bd4\u5982\uff1a</p> <ul> <li>\u4f7f\u7528 createrepo \u642d\u5efa CentOS \u7684 yum \u4ed3\u5e93\uff1b</li> <li>\u4f7f\u7528 Nexus \u642d\u5efa Java \u7684 Maven \u4ed3\u5e93\uff1b</li> <li>\u4f7f\u7528 cnpm \u642d\u5efa NodeJS \u7684 npm \u4ed3\u5e93\uff1b</li> <li>\u4f7f\u7528 pypiserver \u642d\u5efa Python \u7684 pip \u4ed3\u5e93\uff1b</li> <li>\u4f7f\u7528 GitLab \u642d\u5efa\u4ee3\u7801\u4ed3\u5e93\uff1b</li> <li>\u4f7f\u7528 Harbor \u642d\u5efa Docker \u955c\u50cf\u4ed3\u5e93</li> </ul> <p>\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u7684\u56e2\u961f\u6682\u65f6\u6ca1\u6709\u6761\u4ef6\u81ea\u5df1\u642d\u5efa\u79c1\u6709\u4ed3\u5e93\u7684\u8bdd\uff0c\u53ef\u4ee5\u4f7f\u7528\u56fd\u5185\u5df2\u6709\u7684\u4e00\u4e9b\u79c1\u6709\u4ed3\u5e93\uff0c\u6765\u63d0\u5347\u4e0b\u8f7d\u901f\u5ea6\u3002\u5f53\u7136\uff0c\u5728\u9009\u62e9\u79c1\u6709\u4ed3\u5e93\u65f6\uff0c\u4f60\u8981\u5c3d\u91cf\u6311\u9009\u90a3\u4e9b\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u4ed3\u5e93\uff0c\u907f\u514d\u5b89\u5168\u9690\u60a3\u3002</p>"},{"location":"chap16/4const_mgt/#1-3","title":"1-3 \u4f7f\u7528\u672c\u5730\u7f13\u5b58","text":"<p>\u867d\u7136\u642d\u5efa\u79c1\u6709\u4ed3\u5e93\u53ef\u4ee5\u89e3\u51b3\u4ee3\u7801\u6216\u8005\u4f9d\u8d56\u4e0b\u8f7d\u7684\u95ee\u9898\uff0c\u4f46\u662f\u79c1\u6709\u4ed3\u5e93\u4e0d\u80fd\u6ee5\u7528\uff0c\u8fd8\u662f\u8981\u7ed3\u5408\u6784\u5efa\u673a\u5668\u672c\u5730\u7684\u78c1\u76d8\u7f13\u5b58\u624d\u80fd\u8fbe\u5230\u5229\u76ca\u6700\u5927\u5316\u3002</p> <p>\u6240\u4ee5\uff0c\u59a5\u5584\u5730\u7528\u597d\u672c\u5730\u7f13\u5b58\u5341\u5206\u91cd\u8981\u3002\u8fd9\u91cc\u8bf4\u7684\u201c\u59a5\u5584\u201d\uff0c\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u4e24\u4e2a\u65b9\u9762\uff1a</p> <ul> <li>\u5bf9\u4e8e\u53d8\u5316\u7684\u5185\u5bb9\uff0c\u589e\u91cf\u4e0b\u8f7d\uff1b</li> <li>\u5bf9\u4e8e\u4e0d\u53d8\u7684\u5185\u5bb9\uff0c\u4e0d\u91cd\u590d\u4e0b\u8f7d\u3002</li> </ul> <p>\u5bf9\u4e8e\u7b2c\u4e00\u70b9\uff0c\u9879\u76ee\u7684\u6e90\u7801\u662f\u7ecf\u5e38\u53d8\u5316\u7684\u5185\u5bb9\uff0c\u4e0b\u8f7d\u6e90\u7801\u65f6\uff0c\u5982\u679c\u4f60\u4f7f\u7528 Git \u8fdb\u884c\u589e\u91cf\u4e0b\u8f7d\uff0c\u90a3\u4e48\u5c31\u4e0d\u9700\u8981\u5728\u6bcf\u6b21\u6784\u5efa\u65f6\u90fd\u91cd\u590d\u62c9\u53d6\u6240\u6709\u7684\u4ee3\u7801\u3002Jenkins \u7684 Git \u63d2\u4ef6\uff0c\u4e5f\u9ed8\u8ba4\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u3002</p> <p>\u5bf9\u4e8e\u7b2c\u4e8c\u70b9\uff0cMaven \u6bcf\u6b21\u4e0b\u8f7d\u4f9d\u8d56\u540e\u90fd\u4f1a\u5728\u672c\u5730\u78c1\u76d8\u521b\u5efa\u4e00\u4efd\u4f9d\u8d56\u7684\u62f7\u8d1d\uff0c\u5728\u6784\u5efa\u4e0b\u8f7d\u4e4b\u524d\u4f1a\u5148\u68c0\u67e5\u672c\u5730\u662f\u5426\u5df2\u7ecf\u6709\u4f9d\u8d56\u7684\u62f7\u8d1d\uff0c\u4ece\u800c\u8fbe\u5230\u590d\u7528\u6548\u679c\u3002\u5e76\u4e14\uff0c\u8fd9\u4e2a\u4f9d\u8d56\u7684\u62f7\u8d1d\u662f\u516c\u5171\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a\u9879\u76ee\u90fd\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u7f13\u5b58\uff0c\u6781\u5927\u5730\u63d0\u5347\u4e86\u6784\u5efa\u6548\u7387\u3002</p> <p>\u5982\u679c\u4f60\u4f7f\u7528 Docker\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u5728\u5bbf\u4e3b\u673a\u4e0a mount \u540c\u4e00\u4e2a\u4f9d\u8d56\u62f7\u8d1d\u76ee\u5f55\u5230\u591a\u4e2a Slave \u5bb9\u5668\u4e0a\uff0c\u8fd9\u6837\u591a\u4e2a\u5bb9\u5668\u5c31\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u4f9d\u8d56\u62f7\u8d1d\u76ee\u5f55\u3002\u4f60\u53ef\u4ee5\u6700\u5927\u7a0b\u5ea6\u5730\u5229\u7528\u8fd9\u4e00\u4f18\u52bf\uff0c\u4f46\u8981\u6ce8\u610f\u4e0d\u8981\u8ba9\u5bbf\u4e3b\u673a\u7684\u78c1\u76d8 I/O \u8fbe\u5230\u74f6\u9888\u3002</p>"},{"location":"chap16/4const_mgt/#1-4","title":"1-4 \u89c4\u8303\u6784\u5efa\u6d41\u7a0b","text":"<p>Less is More\uff0cSimple is Better</p> <p>\u7a0b\u5e8f\u7684\u8ffd\u6c42\u662f\u7b80\u7ea6\u800c\u4e0d\u7b80\u5355\uff0c\u4f46\u968f\u7740\u4e1a\u52a1\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u6784\u5efa\u8fc7\u7a0b\u4e2d\u5404\u79cd\u5404\u6837\u7684\u9700\u6c42\u4e5f\u968f\u4e4b\u51fa\u73b0\uff0c\u867d\u7136\u5de5\u5177\u5df2\u7ecf\u5c01\u88c5\u4e86\u5f88\u591a\u5b9e\u7528\u7684\u529f\u80fd\uff0c\u4f46\u662f\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u4f60\u90fd\u9700\u8981\u52a0\u5165\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7684\u4e2a\u6027\u5316\u529f\u80fd\uff0c\u624d\u80fd\u6ee1\u8db3\u4e1a\u52a1\u9700\u6c42\u3002</p> <p>Java \u6784\u5efa\u8fc7\u7a0b\u4e2d\u5c31\u6709\u5927\u91cf\u7684\u989d\u5916\u903b\u8f91\uff0c\u6bd4\u5982 Enforcer \u68c0\u67e5\u3001\u6846\u67b6\u4f9d\u8d56\u68c0\u67e5\u3001Sonar \u68c0\u67e5\u3001\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u7b49\u7b49\uff0c\u53ef\u4ee5\u8bf4\u662f\u65e0\u6240\u4e0d\u7528\u5176\u6781\u5730\u53bb\u4fdd\u8bc1\u6784\u5efa\u4ea7\u7269\u7684\u8d28\u91cf</p> <p>\u4ee5 Java \u6784\u5efa\u4e3a\u4f8b\uff0cEnforcer \u68c0\u67e5\u3001\u6846\u67b6\u4f9d\u8d56\u68c0\u67e5\u3001Sonar \u68c0\u67e5\u3001\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u8fd9\u4e9b\u6b65\u9aa4\uff0c\u5e76\u6ca1\u6709\u653e\u5728\u540c\u4e00\u4e2a\u6784\u5efa\u8fc7\u7a0b\u4e2d\u540c\u6b65\u6267\u884c\uff0c\u800c\u662f\u901a\u8fc7\u5f02\u6b65\u7684\u65b9\u5f0f\u7a7f\u63d2\u5728 CI/CD \u5f53\u4e2d\uff0c\u751a\u81f3\u53ef\u4ee5\u5728\u6784\u5efa\u8fc7\u7a0b\u4e4b\u5916\u6267\u884c\u3002</p> <p>\u6bd4\u5982\uff0c Sonar \u626b\u63cf\u5728\u4ee3\u7801\u96c6\u6210\u9636\u6bb5\u6267\u884c\uff0c\u7528\u6237\u5728 GitLab \u4e0a\u53d1\u8d77\u4e00\u4e2a\u5408\u5e76\u8bf7\u6c42\uff08Merge Request\uff09\uff0c\u8fd9\u65f6\u53ea\u5bf9\u53d8\u66f4\u7684\u4ee3\u7801\u8fdb\u884c\u5bf9\u6bd4 Sonar \u626b\u63cf\uff0c\u53ea\u8981\u53d8\u66f4\u4ee3\u7801\u68c0\u67e5\u6ca1\u6709\u95ee\u9898\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5408\u5e76\u4e4b\u540e\u4e3b\u5e72\u5206\u652f\u7684\u4ee3\u7801\u4e5f\u662f\u6ca1\u95ee\u9898\u7684\u3002</p> <p>\u6240\u4ee5\uff0c\u7528\u6237\u53d1\u5e03\u65f6\u5c31\u65e0\u9700\u518d\u91cd\u590d\u68c0\u67e5\u4e86\uff0c\u53ea\u8981\u53d1\u5e03\u540e\u66f4\u65b0\u8fdc\u7aef Sonar Qube \u7684\u6570\u636e\u5373\u53ef\uff0c\u540c\u65f6\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5b8c\u5168\u4e0d\u4f1a\u5f71\u54cd\u7528\u6237\u7684\u6784\u5efa\u4f53\u9a8c\u3002</p>"},{"location":"chap16/4const_mgt/#1-5","title":"1-5 \u5584\u7528\u6784\u5efa\u5de5\u5177","text":"<p>\u4ee5 Maven \u4e3a\u4f8b\uff0c\u6211\u6765\u5e26\u4f60\u770b\u770b\u6709\u54ea\u4e9b\u63d0\u901f\u65b9\u5f0f\uff0c\u5f53\u7136\u5176\u4ed6\u7684\u6784\u5efa\u5de5\u5177\uff0c\u5982 Gradle \u7b49\u4e5f\u90fd\u53ef\u4ee5\u91c7\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff1a</p> <ol> <li>\u8bbe\u7f6e\u5408\u9002\u7684\u5806\u5185\u5b58\u53c2\u6570\u3002 \u8fc7\u5c0f\u7684\u5806\u5185\u5b58\u53c2\u6570\uff0c\u4f1a\u4f7f Maven \u589e\u52a0 GC \u6b21\u6570\uff0c\u5f71\u54cd\u6784\u5efa\u6027\u80fd\uff1b\u8fc7\u5927\u7684\u5806\u5185\u5b58\u53c2\u6570\uff0c\u4e0d\u4f46\u6d6a\u8d39\u8d44\u6e90\uff0c\u800c\u4e14\u540c\u6837\u4f1a\u5f71\u54cd\u6027\u80fd\u3002\u56e0\u6b64\uff0c\u6784\u5efa\u65f6\uff0c\u4f60\u9700\u8981\u53cd\u590d\u8bd5\u9a8c\uff0c\u5f97\u5230\u6700\u4f18\u7684\u53c2\u6570\u3002</li> <li>\u4f7f\u7528 <code>-Dmaven.test.skip = true</code> \u8df3\u8fc7\u5355\u5143\u6d4b\u8bd5\u3002 Maven \u9ed8\u8ba4\u7684\u7f16\u8bd1\u547d\u4ee4\u662f <code>mvn package</code>\uff0c\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u81ea\u52a8\u6267\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u4f46\u662f\u901a\u5e38\u6211\u4eec\u7684\u6784\u5efa\u673a\u5668\u65e0\u6cd5\u4e3a\u7528\u6237\u63d0\u4f9b\u4e00\u5957\u5b8c\u6574\u7684\u5355\u5143\u6d4b\u8bd5\u73af\u5883\uff0c\u7279\u522b\u662f\u5728\u5206\u5e03\u5f0f\u67b6\u6784\u4e0b\u3002\u56e0\u6b64\u5982\u679c\u5355\u5143\u6d4b\u8bd5\u9700\u8981\u670d\u52a1\u4f9d\u8d56\uff0c\u5219\u53ef\u4ee5\u53bb\u6389\u5b83</li> <li>\u5728\u53d1\u5e03\u9636\u6bb5\uff0c\u4e0d\u4f7f\u7528 Snapshot \u7248\u672c\u7684\u4f9d\u8d56\u3002 \u8fd9\u5c31\u53ef\u4ee5\u5728 Maven \u6784\u5efa\u65f6\u4e0d\u586b\u5199 <code>-U</code> \u53c2\u6570\u6765\u5f3a\u5236\u66f4\u65b0\u4f9d\u8d56\u7684\u68c0\u67e5\uff0c\u7701\u4e0b\u56e0\u4e3a\u6bcf\u6b21\u68c0\u67e5\u7248\u672c\u662f\u5426\u66f4\u65b0\u800c\u6d6a\u8d39\u7684\u65f6\u95f4\u3002</li> <li>\u4f7f\u7528 <code>-T 2C</code> \u547d\u4ee4\u8fdb\u884c\u5e76\u884c\u6784\u5efa\u3002 \u5728\u8be5\u6a21\u5f0f\u4e0b \uff0cMaven \u80fd\u591f\u667a\u80fd\u5206\u6790\u9879\u76ee\u6a21\u5757\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u7136\u540e\u5e76\u884c\u5730\u6784\u5efa\u90a3\u4e9b\u76f8\u4e92\u95f4\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\u7684\u6a21\u5757\uff0c\u4ece\u800c\u5145\u5206\u5229\u7528\u8ba1\u7b97\u673a\u7684\u591a\u6838 CPU \u8d44\u6e90\u3002</li> <li>\u5c40\u90e8\u6784\u5efa\u3002 \u5982\u679c\u4f60\u7684\u9879\u76ee\u91cc\u9762\u6709\u591a\u4e2a\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\u7684\u6a21\u5757\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u4f7f\u7528 <code>-pl</code> \u547d\u4ee4\u6307\u5b9a\u67d0\u4e00\u4e2a\u6216\u51e0\u4e2a\u6a21\u5757\u53bb\u7f16\u8bd1\uff0c\u800c\u65e0\u9700\u6784\u5efa\u6574\u4e2a\u9879\u76ee\uff0c\u52a0\u5feb\u6784\u5efa\u901f\u5ea6\u3002</li> <li>\u6b63\u786e\u4f7f\u7528 clean \u53c2\u6570\u3002 \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5efa\u8bae\u7528\u6237\u5728\u6784\u5efa\u65f6\u4f7f\u7528 clean \u53c2\u6570\u4fdd\u8bc1\u6784\u5efa\u7684\u6b63\u786e\u6027\u3002clean \u53ef\u4ee5\u5220\u9664\u65e7\u7684\u6784\u5efa\u4ea7\u7269\uff0c\u4f46\u5176\u5b9e\u6211\u4eec\u5927\u591a\u6570\u65f6\u95f4\u53ef\u80fd\u4e0d\u9700\u8981\u8fd9\u4e2a\u53c2\u6570\uff0c\u53ea\u6709\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff08\u6bd4\u5982\uff0c\u66f4\u6539\u4e86\u7c7b\u540d\uff0c\u6216\u8005\u5220\u9664\u4e86\u4e00\u4e9b\u7c7b\uff09\u624d\u5fc5\u987b\u4f7f\u7528\u8fd9\u4e2a\u53c2\u6570\uff0c\u6240\u4ee5\uff0c\u5982\u679c\u67d0\u6b21\u53d8\u66f4\u53ea\u662f\u4fee\u6539\u4e86\u4e00\u4e9b\u65b9\u6cd5\uff0c\u6216\u8005\u589e\u52a0\u4e86\u4e00\u4e9b\u7c7b\uff0c\u90a3\u4e48\u5c31\u4e0d\u9700\u8981\u5f3a\u5236\u6267\u884c clean \u4e86\u3002</li> </ol> <p>\u4e94\u79cd\u5e38\u89c1\u7684\u6784\u5efa\u63d0\u901f\u7684\u65b9\u5f0f\uff0c\u5206\u522b\u662f</p> <ol> <li>\u5347\u7ea7\u786c\u4ef6\u8d44\u6e90\uff0c\u6700\u76f4\u63a5\u548c\u7c97\u66b4\u7684\u63d0\u901f\u65b9\u5f0f\uff1b</li> <li>\u642d\u5efa\u79c1\u6709\u4ed3\u5e93\uff0c\u907f\u514d\u4ece\u5916\u7f51\u4e0b\u8f7d\u4f9d\u8d56\uff1b</li> <li>\u4f7f\u7528\u672c\u5730\u7f13\u5b58\uff0c\u51cf\u5c11\u6bcf\u6b21\u6784\u5efa\u65f6\u4f9d\u8d56\u4e0b\u8f7d\u7684\u6d88\u8017\uff1b</li> <li>\u89c4\u8303\u6784\u5efa\u6d41\u7a0b\uff0c\u901a\u8fc7\u5f02\u6b65\u65b9\u5f0f\u89e3\u51b3\u65c1\u652f\u6d41\u7a0b\u7684\u6267\u884c\uff1b</li> <li>\u5584\u7528\u6784\u5efa\u5de5\u5177\uff0c\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u5408\u7406\u53d1\u6325\u7684\u5de5\u5177\u7279\u6027\u3002</li> </ol>"},{"location":"chap16/4const_mgt/#2","title":"2 \u6784\u5efa\u68c0\u6d4b","text":""},{"location":"chap16/4const_mgt/#2-1-maven-enforcer","title":"2-1 \u4ec0\u4e48\u662f Maven Enforcer \u63d2\u4ef6\uff1f","text":"<p>Maven Enforcer \u63d2\u4ef6\u63d0\u4f9b\u4e86\u975e\u5e38\u591a\u7684\u901a\u7528\u68c0\u67e5\u89c4\u5219\uff0c\u6bd4\u5982\u68c0\u67e5 JDK \u7248\u672c\u3001\u68c0\u67e5 Maven \u7248\u672c\u3001\u68c0\u67e5\u4f9d\u8d56\u7248\u672c\uff0c\u7b49\u7b49\u3002\u4e0b\u56fe\u6240\u793a\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f7f\u7528\u793a\u4f8b\u3002</p> <p></p> <p>\u4e0a\u8ff0\u7684\u914d\u7f6e\u4f1a\u5728\u6784\u5efa\u65f6\uff08\u51c6\u786e\u7684\u8bf4\u662f\u5728 validate \u65f6\uff09\u5b8c\u6210\u4e09\u9879\u68c0\u67e5\uff1a</p> <ul> <li>requireMavenVersion \u68c0\u67e5 Maven \u7248\u672c\u5fc5\u987b\u5927\u4e8e 3.3.9\uff1b</li> <li>requireJavaVersion \u68c0\u67e5 JDK \u7248\u672c\u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e 1.9\uff1b</li> <li>requireOS \u68c0\u67e5 OS \u5fc5\u987b\u662f Windows \u7cfb\u7edf\u3002</li> </ul> <p>\u5982\u679c\u4f60\u4f7f\u7528 Java 1.8\uff0c Maven 3.3.3\uff0c \u5728 Linux \u4e0a\u6784\u5efa\uff0c \u4fbf\u4f1a\u51fa\u73b0\u5982\u4e0b\u7684\u9519\u8bef\uff1a</p> <ul> <li>Rule 0: org.apache.maven.plugins.enforcer.RequireMavenVersion failed with message: Detected Maven Version: 3.3.3 is not in the allowed range 3.3.9.</li> <li>Rule 1: org.apache.maven.plugins.enforcer.RequireJavaVersion failed with message: Detected JDK Version: 1.8.0-77 is not in the allowed range 1.9.</li> <li>Rule 2: org.apache.maven.plugins.enforcer.RequireOS failed with message: OS Arch: amd64 Family: unix Name: linux Version: 3.16.0-43-generic is not allowed by Family=windows</li> </ul> <p>\u4ece\u800c\u5bfc\u81f4\u6784\u5efa\u5931\u8d25\u3002</p> <p>\u6784\u5efa\u7cfb\u7edf\u5728\u6784\u5efa\u4e4b\u524d\u4f1a\u5148\u68c0\u67e5\u9879\u76ee\u7684\u7ee7\u627f\u6811\uff0c\u7ee7\u627f\u6811\u4e2d\u5fc5\u987b\u5305\u542b super-pom\uff0c \u5426\u5219\u6784\u5efa\u5931\u8d25\u3002\u5e76\u4e14\uff0c\u6784\u5efa\u7cfb\u7edf\u867d\u7136\u5141\u8bb8\u7528\u6237\u81ea\u5b9a\u4e49 Maven \u7684\u6784\u5efa\u547d\u4ee4\uff0c\u4f46\u662f\u4f1a\u5c06 Enforcer \u76f8\u5173\u7684\u53c2\u6570\u8fc7\u6ee4\u6389\uff0c\u7528\u6237\u586b\u5199\u7684\u4efb\u4f55\u5173\u4e8e Enforcer \u7684\u53c2\u6570\u90fd\u88ab\u89c6\u4e3a\u65e0\u6548\u3002</p> <p>Enforcer \u4f1a\u88ab\u5f3a\u5236\u6309\u7167\u7edf\u4e00\u6807\u51c6\u6267\u884c\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u6240\u6709\u5e94\u7528\u7f16\u8bd1\u65f6\u90fd\u8981\u7ecf\u8fc7\u68c0\u67e5\u3002</p>"},{"location":"chap16/4const_mgt/#2-2-enforcer","title":"2-2 \u4e30\u5bcc\u7684\u5185\u7f6e\u7684 Enforcer \u89c4\u5219","text":"<p>Maven Enforcer \u63d0\u4f9b\u4e86\u975e\u5e38\u4e30\u5bcc\u7684\u5185\u7f6e\u68c0\u67e5\u89c4\u5219\uff0c\u5728\u8fd9\u91cc\uff0c\u6211\u7ed9\u4f60\u91cd\u70b9\u4ecb\u7ecd\u4e00\u4e0b bannedDependencies \u89c4\u5219\u3001dependencyConvergence \u89c4\u5219\uff0c\u548c banDuplicateClasses \u89c4\u5219\u3002</p> <p>\u7b2c\u4e00\uff0cbannedDependencies \u89c4\u5219</p> <p>\u8be5\u89c4\u5219\u8868\u793a\u7981\u6b62\u4f7f\u7528\u67d0\u4e9b\u4f9d\u8d56\uff0c\u6216\u8005\u67d0\u4e9b\u4f9d\u8d56\u7684\u7248\u672c\uff0c\u4f7f\u7528\u793a\u4f8b\uff1a</p> <p></p> <p>\u8be5\u4ee3\u7801\u68c0\u67e5\u7684\u903b\u8f91\u662f\uff0c\u53ea\u5141\u8bb8\u4f7f\u7528\u7248\u672c\u5927\u4e8e\u7b49\u4e8e 1.8.0 \u7684 <code>org.slf4j:slf4j-api</code> \u4f9d\u8d56\uff0c\u5426\u5219\u5c06\u4f1a\u51fa\u73b0\u5982\u4e0b\u9519\u8bef\uff1a</p> <p></p> <p>bannedDependencies \u89c4\u5219\u7684\u5e38\u89c1\u5e94\u7528\u573a\u666f\u5305\u62ec\uff1a</p> <ul> <li>\u5f53\u6211\u4eec\u77e5\u9053\u67d0\u4e2a jar \u5305\u7684\u67d0\u4e2a\u7248\u672c\u6709\u4e25\u91cd\u6f0f\u6d1e\u65f6\uff0c\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\u7981\u6b62\u7528\u6237\u4f7f\u7528\uff0c\u4ece\u800c\u907f\u514d\u88ab\u653b\u51fb\uff1b</li> <li>\u67d0\u4e2a\u516c\u5171\u7ec4\u4ef6\u7684\u4f9d\u8d56\u5fc5\u987b\u8981\u5927\u4e8e\u67d0\u4e2a\u7248\u672c\u65f6\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\u7981\u6b62\u7528\u6237\u76f4\u63a5\u5f15\u7528\u4e0d\u517c\u5bb9\u7684\u4f9d\u8d56\u7248\u672c\uff0c\u907f\u514d\u516c\u5171\u7ec4\u4ef6\u8fd0\u884c\u9519\u8bef\u3002</li> </ul> <p>\u7b2c\u4e8c\uff0cdependencyConvergence \u89c4\u5219</p> <p>\u4f46\u662f\uff0cMaven \u57fa\u4e8e\u8fd9\u4e24\u4e2a\u539f\u5219\u5904\u7406\u4f9d\u8d56\u7684\u65b9\u5f0f\u8fc7\u4e8e\u7b80\u5355\u7c97\u66b4\u3002\u6bd5\u7adf\u5728\u4e00\u4e2a\u6210\u719f\u7684\u7cfb\u7edf\u4e2d\uff0c\u4f9d\u8d56\u7684\u5173\u7cfb\u9519\u7efc\u590d\u6742\uff0c\u7528\u6237\u5f88\u96be\u4e00\u4e2a\u4e00\u4e2a\u5730\u6392\u67e5\u6240\u6709\u4f9d\u8d56\u7684\u5173\u7cfb\u548c\u51b2\u7a81\uff0c\u7a0d\u4e0d\u7559\u795e\u4fbf\u4f1a\u6389\u8fdb\u4f9d\u8d56\u7684\u9677\u9631\u91cc\uff0c\u8fd9\u65f6 dependencyConvergence \u5c31\u53ef\u4ee5\u7c89\u58a8\u767b\u573a\u4e86\u3002</p> <p>dependencyConvergence \u89c4\u5219\u7684\u4f5c\u7528\u662f\uff1a \u5f53\u9879\u76ee\u4e2d\u7684 A \u548c B \u5206\u522b\u5f15\u7528\u4e86\u4e0d\u540c\u7248\u672c\u7684 C \u65f6\uff0c Enforce \u68c0\u67e5\u5931\u8d25\u3002 \u4e0b\u9762\u8fd9\u4e2a\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u5e2e\u4f60\u7406\u89e3\u8fd9\u4e2a\u89c4\u5219\u7684\u4f5c\u7528\u3002</p> <p></p> <p><code>org.slf4j:slf4j-jdk14:1.6.1</code> \u4f9d\u8d56\u4e86 <code>org.slf4j:slf4j-api:1.6.1</code>\uff0c \u800c <code>org.slf4j:slf4j-nop:1.6.0</code> \u4f9d\u8d56\u4e86 <code>org.slf4j:slf4j-api:1.6.0</code>\uff0c\u5f53\u6211\u4eec\u5728\u6784\u5efa\u9879\u76ee\u65f6\uff0c \u4fbf\u4f1a\u6709\u5982\u4e0b\u9519\u8bef\uff1a</p> <p></p> <p>\u8fd9\u65f6\u5c31\u9700\u8981\u5f00\u53d1\u4eba\u5458\u4ecb\u5165\u4e86\uff0c\u4f7f\u7528 dependecy \u7684 exclusions \u5143\u7d20\u6392\u9664\u6389\u4e00\u4e2a\u4e0d\u5408\u9002\u7684\u7248\u672c\u3002 \u867d\u7136\u8fd9\u4f1a\u7ed9\u7f16\u7a0b\u5e26\u6765\u4e00\u4e9b\u9ebb\u70e6\uff0c \u4f46\u662f\u975e\u5e38\u5fc5\u8981\u3002\u56e0\u4e3a\uff0c\u6211\u59cb\u7ec8\u8ba4\u4e3a\u4f60\u5e94\u8be5\u6e05\u695a\u5730\u77e5\u9053\u7cfb\u7edf\u4f9d\u8d56\u4e86\u54ea\u4e9b\u7ec4\u4ef6\uff0c \u5c24\u5176\u662f\u5728\u67d0\u4e9b\u7ec4\u4ef7\u53d1\u751f\u51b2\u7a81\u65f6\uff0c\u8fd9\u5c31\u66f4\u52a0\u91cd\u8981\u4e86\u3002</p> <p>\u7b2c\u4e09\uff0cbanDuplicateClasses \u89c4\u5219</p> <p>\u8be5\u89c4\u5219\u662f Extra Enforcer Rules \u63d0\u4f9b\u7684\uff0c\u4e3b\u8981\u76ee\u7684\u662f\u68c0\u67e5\u591a\u4e2a jar \u5305\u4e2d\u662f\u5426\u5b58\u5728\u540c\u6837\u547d\u540d\u7684 class\uff0c\u5982\u679c\u5b58\u5728\u7f16\u8bd1\u4fbf\u4f1a\u62a5\u9519\u3002 </p> <p>\u540c\u540d class \u82e5\u5185\u5bb9\u4e0d\u4e00\u81f4\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4 <code>java.lang.NoSuchFieldError</code>\uff0c<code>java.lang.NoSuchMethodException</code> \u7b49\u5f02\u5e38\uff0c\u800c\u4e14\u6392\u67e5\u8d77\u6765\u975e\u5e38\u56f0\u96be\uff0c\u56e0\u4e3a\u4eba\u7684\u76f4\u89c9\u601d\u7ef4\u5f88\u96be\u5b9a\u4f4d\u5230\u91cd\u590d\u7c7b\u8fd9\u4e2a\u975e\u663e\u6027\u9519\u8bef\u4e0a\uff0c\u4f8b\u5982\u4e0b\u9762\u8fd9\u79cd\u60c5\u51b5\uff1a</p> <p><code>org.jboss.netty</code> \u5305\u4e0e <code>io.netty</code> \u5305\u4e2d\u90fd\u5305\u542b\u4e00\u4e2a\u540d\u4e3a <code>NettyBundleActivator</code> \u7684\u7c7b\uff0c\u53e6\u5916\u8fd8\u6709 2 \u4e2a\u91cd\u590d\u7c7b\uff1a<code>spring/NettyLoggerConfigurator \u548c microcontainer/NettyLoggerConfigurator</code>\u3002</p> <p></p> <p>\u5f53\u6fc0\u6d3b\u4e86 banDuplicateClasses \u89c4\u5219\u4e4b\u540e\uff0cEnforcer \u68c0\u67e5\uff0c\u4fbf\u4f1a\u6709\u5982\u4e0b\u7684\u62a5\u9519\uff1a</p> <p></p> <p>\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u9700\u8981\u6392\u9664\u4e00\u4e2a\u591a\u4f59\u7684 jar \u5305\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u6709\u4e9b\u60c5\u51b5\u4e0b\u4e24\u4e2a jar \u5305\u90fd\u4e0d\u80fd\u88ab\u6392\u9664\uff0c\u5982\u679c\u53ea\u662f\u4e2a\u522b\u7c7b\u540d\u51b2\u7a81\u4e86\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7 <code>ignoreClasses</code> \u53bb\u5ffd\u7565\u51b2\u7a81\u7684\u7c7b\uff0c\u7c7b\u540d\u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26<code>\uff08\uff09</code>\uff0c\u5982: <code>org.jboss.netty.container.</code>\u3002</p> <p>\u4f46\u662f\uff0c\u7528\u6237\u4e0d\u80fd\u968f\u610f\u66f4\u6539\u8fd9\u4e2a\u914d\u7f6e\uff0c\u56e0\u4e3a\u5b83\u5fc5\u987b\u5f97\u5230\u4e00\u5b9a\u7684\u6388\u6743\uff0c\u5426\u5219\u968f\u610f\u5ffd\u7565\u4f1a\u4ea7\u751f\u5176\u4ed6\u4e0d\u786e\u5b9a\u7684\u95ee\u9898\u3002\u56e0\u6b64\u6211\u4eec\u5c06\u8fd9\u4e2a\u63d2\u4ef6\u505a\u4e86\u4e00\u4e9b\u6539\u52a8\uff0c\u901a\u8fc7 API \u6765\u83b7\u53d6 <code>ignoreClasses</code> \u7684\u5185\u5bb9\u3002\u5f53\u7528\u6237\u6709\u7c7b\u4f3c\u7684\u9700\u6c42\u65f6\uff0c\u53ef\u4ee5\u63d0\u4ea4 <code>ignoreClasses</code> \uff0c\u4f46\u5fc5\u987b\u7533\u8bf7\uff0c\u7ecf\u8fc7 Java \u4e13\u5bb6\u5ba1\u6279\u4e4b\u540e\u624d\u53ef\u5ffd\u7565\u6389\u3002</p>"},{"location":"chap16/4const_mgt/#2-3-enforcer","title":"2-3 \u81ea\u5b9a\u4e49\u7684 Enforcer \u68c0\u67e5\u89c4\u5219","text":"<p>\u9664\u4e86\u4e0a\u8ff0\u7684\u5b98\u65b9\u89c4\u5219\uff0c\u5b9e\u9645\u4e0a\u8fd8\u505a\u4e86\u82e5\u5e72\u4e2a\u6269\u5c55\u7684\u89c4\u5219\uff0c\u5982\uff1a</p> <ul> <li>CheckVersion\uff0c\u7528\u4e8e\u68c0\u67e5\u6a21\u5757\u7684\u7248\u672c\u53f7\u5fc5\u987b\u662f\u6570\u5b57\u4e09\u6bb5\u5f0f\uff0c\u6216\u8005\u5e26\u6709 <code>SNAPSHOT</code> \u7684\u6570\u5b57\u4e09\u6bb5\u5f0f\uff1b</li> <li>CheckGroupId\uff0c\u7528\u4e8e\u68c0\u67e5 GroupId \u662f\u5426\u7b26\u5408\u89c4\u8303\uff0c\u6211\u4eec\u4e3a\u6bcf\u4e2a\u90e8\u95e8\u90fd\u5206\u522b\u6307\u5b9a\u4e86 <code>GroupId</code>\uff1b</li> <li><code>CheckDistributionManagementRepository</code>\uff0c\u7528\u4e8e\u68c0\u67e5\u9879\u76ee\u7684 <code>distributionManagement</code> \u4e2d\u7684 repository \u8282\u70b9\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u90e8\u95e8\u90fd\u6307\u5b9a\u4e86\u4ed6\u4eec\u5728 Nexus \u4e0a\u9762\u7684 repositroy\uff1b</li> <li><code>CheckSubModuleSaveVersion</code>\uff0c\u7528\u4e8e\u68c0\u67e5\u5b50\u6a21\u5757\u7248\u672c\u53f7\u662f\u5426\u4e0e\u7236\u6a21\u5757\u7248\u672c\u53f7\u4e00\u81f4\u3002</li> </ul>"},{"location":"chap16/4const_mgt/#3","title":"3 \u6784\u5efa\u8d44\u6e90\u7684\u5f39\u6027\u4f38\u7f29","text":""},{"location":"chap16/4const_mgt/#3-1","title":"3-1 \u6301\u7eed\u96c6\u6210\u5de5\u5177","text":"<p>\u8fd9\u4e9b\u6301\u7eed\u96c6\u6210\u5de5\u5177\uff0c\u6700\u6d41\u884c\u7684\u5e94\u5c5e Travis CI\u3001Circle CI\u3001Jenkins CI \u8fd9\u4e09\u79cd\u3002</p> <p>\u7b2c\u4e00\uff0cTravis CI</p> <p>Travis CI \u662f\u57fa\u4e8e GitHub \u7684 CI \u6258\u7ba1\u89e3\u51b3\u65b9\u6848\u4e4b\u4e00\uff0c\u7531\u4e8e\u548c GitHub \u7684\u7d27\u5bc6\u96c6\u6210\uff0c\u5728\u5f00\u6e90\u9879\u76ee\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002</p> <p>Travis CI \u7684\u6784\u5efa\uff0c\u4e3b\u8981\u901a\u8fc7 <code>.travis.yml</code> \u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u3002\u8fd9\u4e2a <code>.travis.yml</code> \u6587\u4ef6\u63cf\u8ff0\u4e86\u6784\u5efa\u65f6\u6240\u8981\u6267\u884c\u7684\u6240\u6709\u6b65\u9aa4\u3002</p> <p>\u53e6\u5916\uff0cTravis CI \u53ef\u4ee5\u652f\u6301\u5e02\u9762\u4e0a\u7edd\u5927\u591a\u6570\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\u4f46\u662f\uff0c\u56e0\u4e3a Travis \u53ea\u652f\u6301 GitHub\uff0c\u800c\u4e0d\u652f\u6301\u5176\u4ed6\u4ee3\u7801\u6258\u7ba1\u670d\u52a1\uff0c\u6240\u4ee5\u5b98\u65b9\u5efa\u8bae\u5728\u4f7f\u7528\u524d\u9700\u8981\u5148\u5177\u5907\u4ee5\u4e0b\u51e0\u4e2a\u6761\u4ef6\uff1a</p> <ul> <li>\u80fd\u767b\u5f55\u5230 GitHub\uff1b</li> <li>\u5bf9\u6258\u7ba1\u5728 GitHub \u4e0a\u7684\u9879\u76ee\u6709\u7ba1\u7406\u5458\u6743\u9650\uff1b</li> <li>\u9879\u76ee\u4e2d\u6709\u53ef\u8fd0\u884c\u7684\u4ee3\u7801\uff1b</li> <li>\u6709\u53ef\u4ee5\u5de5\u4f5c\u7684\u7f16\u8bd1\u548c\u6d4b\u8bd5\u811a\u672c\u3002</li> </ul> <p>Travis CI \u7684\u6536\u8d39\u7b56\u7565\u662f\uff0c\u5bf9\u516c\u5171\u4ed3\u5e93\u514d\u8d39\uff0c\u5bf9\u79c1\u6709\u4ed3\u5e93\u6536\u8d39\u3002</p> <p>\u7b2c\u4e8c\uff0cCircleCI</p> <p>CircleCI \u662f\u4e00\u6b3e\u5f88\u6709\u7279\u8272\uff0c\u4e5f\u662f\u6bd4\u8f83\u6d41\u884c\u7684\uff0c\u4e91\u7aef\u6301\u7eed\u96c6\u6210\u7ba1\u7406\u5de5\u5177\u3002CircleCI \u76ee\u524d\u4e5f\u4ec5\u652f\u6301 GitHub \u548c Bitbucket \u7ba1\u7406\u3002</p> <p>CircleCI \u4e0e\u5176\u4ed6\u6301\u7eed\u96c6\u6210\u5de5\u5177\u7684\u533a\u522b\u5728\u4e8e\uff0c\u5b83\u4eec\u63d0\u4f9b\u670d\u52a1\u7684\u65b9\u5f0f\u4e0d\u540c\u3002CircleCI \u9700\u8981\u4ed8\u8d39\u7684\u8d44\u6e90\u4e3b\u8981\u662f\u5b83\u7684\u5bb9\u5668\u3002</p> <p>\u4f60\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528\u4e00\u4e2a\u5bb9\u5668\uff0c\u4f46\u662f\u5f53\u4f60\u53d1\u73b0\u8d44\u6e90\u4e0d\u591f\u9700\u8981\u4f7f\u7528\u66f4\u591a\u7684\u5bb9\u5668\u65f6\uff0c\u4f60\u5fc5\u987b\u4e3a\u6b64\u4ed8\u8d39\u3002\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u4f60\u6240\u9700\u8981\u7684\u5e76\u884c\u5316\u7ea7\u522b\u6765\u52a0\u901f\u4f60\u7684\u6301\u7eed\u96c6\u6210\uff0c\u5b83\u6709 5 \u4e2a\u5e76\u884c\u5316\u7ea7\u522b\uff081x\u30014x\u30018x,\u300112x\uff0c\u548c 16x\uff09\u53ef\u4f9b\u9009\u62e9\uff0c\u5206\u522b\u4ee3\u8868\u5229\u7528\u51e0\u4e2a\u5bb9\u5668\u540c\u65f6\u8fdb\u884c\u4e00\u4e2a\u9879\u76ee\u7684\u6784\u5efa\uff0c\u5982\u4f55\u9009\u62e9\u5c31\u53d6\u51b3\u4e8e\u4f60\u4e86\u3002</p> <p>\u7b2c\u4e09\uff0cJenkins CI</p> <p>Jenkins \u662f\u4e00\u6b3e\u81ea\u5305\u542b\u3001\u5f00\u6e90\u7684\u7528\u4e8e\u81ea\u52a8\u5316\u9a71\u52a8\u7f16\u8bd1\u3001\u6d4b\u8bd5\u3001\u4ea4\u4ed8\u6216\u90e8\u7f72\u7b49\u4e00\u7cfb\u5217\u4efb\u52a1\u7684\u81ea\u52a8\u5316\u670d\u52a1\uff0c\u5b83\u7684\u6838\u5fc3\u662f Jenkins Pipline \u3002Jenkins Pipline \u53ef\u4ee5\u5b9e\u73b0\u5bf9\u6301\u7eed\u4ea4\u4ed8\u63d2\u4ef6\u7684\u7075\u6d3b\u7ec4\u5408\uff0c\u4ee5\u6d41\u6c34\u7ebf\u7684\u65b9\u5f0f\u63a5\u5165\u5230 Jenkins \u670d\u52a1\u3002</p> <p>Jenkins \u8fd8\u63d0\u4f9b\u4e86\u4e00\u6574\u5957\u53ef\u6269\u5c55\u7684\u5de5\u5177\u96c6\uff0c\u7a0b\u5e8f\u5458\u53ef\u4ee5\u901a\u8fc7\u4ee3\u7801\u7684\u65b9\u5f0f\uff0c\u5b9a\u4e49\u4efb\u4f55\u6d41\u6c34\u7ebf\u7684\u884c\u4e3a\u3002\u53e6\u5916\uff0c\u7ecf\u8fc7\u591a\u5e74\u7684\u53d1\u5c55\uff0cJenkins \u5df2\u7ecf\u5305\u542b\u4e86\u5f88\u591a\u5b9e\u7528\u7684\u7b2c\u4e09\u65b9\u63d2\u4ef6\uff0c\u8986\u76d6\u4e86\u6301\u7eed\u4ea4\u4ed8\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u3002</p> <p>\u76ee\u524d\uff0c\u7edd\u5927\u591a\u6570\u7ec4\u7ec7\u90fd\u9009\u62e9\u4e86 Jenkins \u4f5c\u4e3a\u5185\u90e8\u7684\u6301\u7eed\u96c6\u6210\u5de5\u5177\uff0c\u4e3b\u8981\u539f\u56e0\u662f\uff1a</p> <ul> <li>\u4ee3\u7801\u5f00\u6e90\uff0c \u63d2\u4ef6\u5b8c\u5584\uff0c\u7cfb\u7edf\u7a33\u5b9a\uff1b</li> <li>\u793e\u533a\u6d3b\u8dc3\uff0c\u6210\u529f\u5b9e\u8df5\u4e0e\u7f51\u4e0a\u8d44\u6e90\u6bd4\u8f83\u4e30\u5bcc\uff1b</li> <li>Jenkins Pipeline \u975e\u5e38\u7075\u6d3b\u597d\u7528\u3002</li> </ul>"},{"location":"chap16/4const_mgt/#3-2-jenkins-master","title":"3-2 Jenkins Master \u9ad8\u53ef\u7528\u67b6\u6784\u7684","text":"<p>\u76ee\u524d\u666e\u904d\u7684 Jenkins \u642d\u5efa\u65b9\u6848\u662f\uff1a\u4e00\u4e2a Jenkins Master \u642d\u914d\u591a\u4e2a Jenkins Slave\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fd9\u79cd\u65b9\u6848\u53ef\u4ee5\u5f88\u597d\u5730\u5de5\u4f5c\uff0c\u5e76\u4e14\u968f\u7740\u6784\u5efa\u4efb\u52a1\u7684\u589e\u52a0\uff0c\u65e0\u8111\u6269\u5bb9 Jenkins Slave \u4e5f\u4e0d\u662f\u4e00\u4ef6\u96be\u4e8b\u3002\u53e6\u5916\uff0c\u4e0d\u7ba1\u662f Linux Slave \u8fd8\u662f Windows Slave \uff0cJenkins \u90fd\u53ef\u4ee5\u5f88\u597d\u5730\u652f\u6301\uff0c\u5e76\u4e14\u975e\u5e38\u7a33\u5b9a\u3002</p> <p>\u4f46\u662f\uff0c\u968f\u7740\u4e1a\u52a1\u7684\u589e\u957f\uff0c\u5fae\u670d\u52a1\u67b6\u6784\u7684\u6d41\u884c\uff0c\u6301\u7eed\u4ea4\u4ed8\u7406\u5ff5\u7684\u6df1\u5165\u4eba\u5fc3\uff0c\u6784\u5efa\u4f1a\u53d8\u5f97\u8d8a\u6765\u8d8a\u591a\uff0c\u8d8a\u6765\u8d8a\u9891\u7e41\uff0c\u5355\u4e2a Jenkins Master \u7ec8\u7a76\u4f1a\u6210\u4e3a\u7cfb\u7edf\u4e2d\u7684\u74f6\u9888\u3002</p> <p>\u9057\u61be\u7684\u662f\uff0c\u5f00\u6e90\u7684 Jenkins \u5e76\u6ca1\u6709\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u5f88\u597d\u7684 Master \u9ad8\u53ef\u7528\u65b9\u6848\uff0cCloudBees \u516c\u53f8\u5012\u662f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9ad8\u53ef\u7528\u7684\u63d2\u4ef6\uff0c\u4f46\u662f\u4ef7\u683c\u4e0d\u83f2\u3002</p> <p></p> <p>\u601d\u8def\u662f\u5728 Jenkins \u4e0a\u9762\u518d\u5c01\u88c5\u4e24\u5c42\uff1a Build Service \u66b4\u9732\u6784\u5efa\u7684 HTTP \u63a5\u53e3\uff0c\u63a5\u6536\u8bf7\u6c42\u540e\u5c06\u4efb\u52a1\u4e22\u7ed9\u5f02\u6b65\u961f\u5217 Build Worker\uff0cBuild Worker \u6839\u636e\u4e0d\u540c\u7684\u7b56\u7565\u5c06\u4efb\u52a1\u5206\u53d1\u7ed9\u7b26\u5408\u6761\u4ef6\u7684 Jenkins Master\u3002</p> <p>\u8fd9\u91cc\u7684\u5206\u53d1\u6761\u4ef6\uff0c\u53ef\u4ee5\u662f\u7f16\u8bd1\u4efb\u52a1\u7684\u5e73\u53f0\u6216\u8bed\u8a00\uff0c\u6bd4\u5982\u53ef\u4ee5\u5c06\u57fa\u4e8e Windows \u548c Linux \u7684\u4efb\u52a1\u5206\u522b\u653e\u5728\u4e0d\u540c\u7684 Jenkins Master \u4e0a\uff0c\u4e5f\u53ef\u4ee5\u5c06 Java \u6784\u5efa\u548c NodeJS \u6784\u5efa\u4efb\u52a1\u653e\u5728\u4e0d\u540c\u7684 Jenkins Master \u4e0a\u3002</p> <p>\u603b\u800c\u8a00\u4e4b\uff0c\u6784\u5efa\u4efb\u52a1\u5206\u53d1\u7684\u7b56\u7565\u53ef\u4ee5\u662f\u975e\u5e38\u7075\u6d3b\u7684\uff1a\u6784\u5efa Worker \u548c Jenkins Master \u4e4b\u95f4\u6709\u201c\u5fc3\u8df3\u76d1\u6d4b\u201d\uff0c\u53ef\u4ee5\u65f6\u523b\u68c0\u67e5 Jenkins Master \u662f\u5426\u8fd8\u5065\u5eb7\uff0c\u5982\u679c\u6709\u95ee\u9898\u5c31\u5c06\u4efb\u52a1\u5206\u53d1\u5230\u5176\u4ed6\u7b49\u4ef7\u7684 Jenkins Master \u4e0a\uff0c\u5e76\u7ed9\u76f8\u5173\u4eba\u5458\u53d1\u9001\u544a\u8b66\u901a\u77e5\u3002</p> <p>\u8fd9\u79cd\u62c6\u89e3 Jenkins Master \u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u597d\u5904\uff1a</p> <ul> <li>\u6bcf\u4e2a Job \u90fd\u53ef\u8fd0\u884c\u5728\u81f3\u5c11\u4e24\u4e2a Jenkins Master \u4e4b\u4e0a\uff0c \u4fdd\u8bc1\u9ad8\u53ef\u7528\uff1b</li> <li>\u6839\u636e\u4e0d\u540c\u7684\u7b56\u7565\u5c06 Job \u505a Sharding\uff0c \u907f\u514d\u79ef\u538b\u5728\u540c\u4e00\u4e2a Master \u4e0a\uff1b</li> <li>Jenkins Master \u6309\u9700\u914d\u7f6e\uff0c\u6309\u9700\u5b89\u88c5\u4e0d\u540c\u7684\u63d2\u4ef6\uff0c\u4fbf\u4e8e\u7ba1\u7406\u3002</li> </ul>"},{"location":"chap16/4const_mgt/#3-3-jenkins-slave","title":"3-3 Jenkins Slave \u5f39\u6027\u4f38\u7f29\u65b9\u6848","text":"<p>\u89e3\u51b3\u4e86 Jenkins Master \u7684\u9ad8\u53ef\u7528\u95ee\u9898\uff0c\u63a5\u7740\u5c31\u8981\u53bb\u601d\u8003\u5982\u4f55\u624d\u80fd\u89e3\u51b3 Slave \u8d44\u6e90\u7ba1\u7406\u548c\u5229\u7528\u7387\u7684\u95ee\u9898\u4e86\u3002</p> <p>\u56e0\u4e3a\uff0c\u4f60\u4f1a\u53d1\u73b0\u4e00\u4e2a\u7ec4\u7ec7\u7684\u96c6\u6210\u548c\u6784\u5efa\u5f80\u5f80\u662f\u5468\u671f\u6027\u7684\uff0c\u9ad8\u5cf0\u548c\u4f4e\u8c37\u90fd\u6bd4\u8f83\u660e\u663e\uff0c\u800c\u4e14\u968f\u7740\u7ec4\u7ec7\u6269\u5927\uff0c\u5e45\u5ea6\u4e5f\u6709\u6240\u6269\u5927\u3002\u6240\u4ee5\uff0c\u5982\u679c\u6309\u7167\u9ad8\u5cf0\u7684\u8981\u6c42\u6765\u914d\u5907 Slave \u5b9e\u4f8b\u6570\uff0c\u90a3\u4e48\u5728\u4f4e\u8c37\u65f6\uff0c\u5c31\u5f88\u6d6a\u8d39\u8d44\u6e90\u4e86\u3002\u53cd\u4e4b\uff0c\u53c8\u4f1a\u5f71\u54cd\u901f\u5ea6\uff0c\u9020\u6210\u6392\u961f\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u6574\u4e2a Slave \u96c6\u7fa4\u5177\u6709\u66f4\u4f18\u7684\u5f39\u6027\uff1a\u65e2\u8981\u597d\u7ba1\u7406\uff0c\u53c8\u8981\u597d\u6269\u5c55\u3002</p> <p>\u5bb9\u5668\u5316\u7684\u751c\u5934</p> <ul> <li>\u4f7f\u7528 Dockerfile \u63cf\u8ff0\u73af\u5883\u4fe1\u606f\u76f8\u5bf9\u4e8e\u4e4b\u524d\u7684\u6587\u6863\u66f4\u52a0\u76f4\u89c2\uff0c\u5e76\u4e14\u53ef\u4ee5\u5f88\u81ea\u7136\u5730\u8ddf Git \u7ed3\u5408\u505a\u5230\u7248\u672c\u5316\u63a7\u5236\uff0c\u5148\u66f4\u65b0 Dockerfile \u518d\u66f4\u65b0\u955c\u50cf\u662f\u5f88\u81ea\u7136\u7684\u4e8b\u3002</li> <li>\u955c\u50cf\u66f4\u5bb9\u6613\u7ee7\u627f\uff0c\u4f60\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e2a Base \u955c\u50cf\uff0c\u7136\u540e\u6839\u636e\u4e0d\u540c\u7684\u9700\u6c42\u53e0\u52a0\u8f6f\u4ef6\u3002\u6bd4\u5982\uff0c\u4f60\u7684\u6240\u6709\u6784\u5efa\u90fd\u9700\u8981\u5b89\u88c5 Git \u7b49\u8f6f\u4ef6\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u628a\u5b83\u5199\u5230 Base \u955c\u50cf\u91cc\u9762\u3002</li> <li>Docker \u955c\u50cf\u53ef\u4ee5\u81ea\u7531\u63a7\u5236\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u81ea\u5df1\u63a8\u9001\u955c\u50cf\uff0c\u5feb\u901f\u8fed\u4ee3\u3002\u91cd\u5efa\u5bb9\u5668\u7684\u4ee3\u4ef7\u6bd4\u91cd\u5efa\u865a\u62df\u673a\u5c0f\u5f97\u591a\uff0c\u5bb9\u5668\u66f4\u52a0\u8f7b\u91cf\uff0c\u66f4\u5bb9\u6613\u5728\u672c\u5730\u505a\u6d4b\u8bd5\u3002</li> </ul>"},{"location":"chap16/4const_mgt/#4","title":"4  \u5bb9\u5668\u955c\u50cf\u6784\u5efa","text":""},{"location":"chap16/4const_mgt/#4-1","title":"4-1 \u4ec0\u4e48\u662f\u5bb9\u5668\u955c\u50cf\uff1f","text":"<p>\u5bb9\u5668\u955c\u50cf\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b8c\u6574\u7684 Ubuntu \u7cfb\u7edf\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u4ec5\u4ec5\u80fd\u8fd0\u884c\u4e00\u4e2a sleep \u8fdb\u7a0b\u7684\u72ec\u7acb\u73af\u5883\uff0c\u5927\u5230\u51e0 G \u5c0f\u5230\u51e0 M\u3002\u800c\u4e14 Docker \u7684\u955c\u50cf\u662f\u5206\u5c42\u7684\uff0c\u5b83\u7531\u4e00\u5c42\u4e00\u5c42\u7684\u6587\u4ef6\u7cfb\u7edf\u7ec4\u6210\uff0c\u8fd9\u79cd\u5c42\u7ea7\u7684\u6587\u4ef6\u7cfb\u7edf\u88ab\u79f0\u4e3a UnionFS\u3002\u4e0b\u56fe\u5c31\u662f\u4e00\u4e2a Ubuntu 15.04 \u7684\u955c\u50cf\u7ed3\u6784\u3002</p> <p></p> <p>\u56fe\u4e2d\u7684\u955c\u50cf\u90e8\u5206\u753b\u4e86\u4e00\u4e2a\u9501\u7684\u6807\u8bb0\uff0c\u5b83\u8868\u793a\u955c\u50cf\u4e2d\u7684\u6bcf\u4e00\u5c42\u90fd\u662f\u53ea\u8bfb\u7684\uff0c\u53ea\u6709\u521b\u5efa\u5bb9\u5668\u65f6\u624d\u4f1a\u5728\u6700\u4e0a\u5c42\u6dfb\u52a0\u4e00\u4e2a\u53eb\u4f5c Container layer \u7684\u53ef\u5199\u5c42\u3002\u5bb9\u5668\u8fd0\u884c\u540e\u7684\u6240\u6709\u4fee\u6539\u90fd\u662f\u5728\u8fd9\u4e2a\u53ef\u5199\u5c42\u8fdb\u884c\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u5bb9\u5668\u955c\u50cf\u672c\u8eab\u3002</p> <p>\u56e0\u4e3a\u8fd9\u4e00\u7279\u6027\uff0c\u521b\u5efa\u5bb9\u5668\u975e\u5e38\u8282\u7701\u7a7a\u95f4\uff0c\u56e0\u4e3a\u4e00\u53f0\u5bbf\u4e3b\u673a\u4e0a\u57fa\u4e8e\u540c\u4e00\u955c\u50cf\u521b\u5efa\u7684\u5bb9\u5668\u53ea\u6709\u8fd9\u4e00\u4efd\u955c\u50cf\u6587\u4ef6\u7cfb\u7edf\uff0c\u6bcf\u6b21\u521b\u5efa\u591a\u51fa\u6765\u7684\u53ea\u662f\u6bcf\u4e2a\u5bb9\u5668\u4e0e\u955c\u50cf diff \u7684\u78c1\u76d8\u7a7a\u95f4\u3002\u800c\u865a\u62df\u673a\u6bcf\u589e\u52a0\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u90fd\u4f1a\u5728\u5bbf\u4e3b\u673a\u4e0a\u5360\u7528\u4e00\u4e2a\u5b8c\u6574\u7684\u955c\u50cf\u78c1\u76d8\u7a7a\u95f4\u3002</p>"},{"location":"chap16/4const_mgt/#4-2-dockerfile","title":"4-2 \u4ec0\u4e48\u662f Dockerfile","text":"<p>\u7b80\u5355\u6765\u8bf4\uff0cDockerfile \u7b2c\u4e00\u4e2a\u597d\u5904\u5c31\u662f\uff0c\u53ef\u4ee5\u901a\u8fc7\u6587\u672c\u683c\u5f0f\u7684\u914d\u7f6e\u6587\u4ef6\u63cf\u8ff0\u955c\u50cf\uff0c\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u91cc\u9762\u53ef\u4ee5\u8fd0\u884c\u529f\u80fd\u4e30\u5bcc\u7684\u6307\u4ee4\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c docker build \u5c06\u8fd9\u4e9b\u6307\u4ee4\u8f6c\u5316\u4e3a\u955c\u50cf\u3002</p> <pre><code>FROM ubuntu \nRUN apt-get install vim -y\n</code></pre> <p>\u5176\u4e2d\uff0cFROM \u6307\u4ee4\u8bf4\u660e\u6211\u4eec\u8fd9\u4e2a\u955c\u50cf\u9700\u8981\u7ee7\u627f Ubuntu \u955c\u50cf\uff0cRUN \u6307\u4ee4\u662f\u9700\u8981\u5728\u955c\u50cf\u5185\u8fd0\u884c\u7684\u547d\u4ee4\u3002</p> <p>\u56e0\u4e3a Ubuntu \u955c\u50cf\u5185\u5305\u542b\u4e86 apt-get \u5305\u7ba1\u7406\u5668\uff0c\u6240\u4ee5\u76f8\u5f53\u4e8e\u542f\u52a8\u4e86\u4e00\u4e2a Ubuntu \u955c\u50cf\u7684\u5bb9\u5668\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u5bb9\u5668\u5185\u90e8\u5b89\u88c5 Vim\u3002\u8fd9\u671f\u95f4\u4f1a\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684 layer\uff0c\u8fd9\u4e2a\u65b0\u7684 layer \u5305\u542b\u5b89\u88c5 Vim \u6240\u9700\u7684\u6240\u6709\u6587\u4ef6\u3002</p> <p>Dockerfile \u7684\u53e6\u5916\u4e00\u4e2a\u597d\u5904\u5c31\u662f\u53ef\u4ee5\u63cf\u8ff0\u955c\u50cf\u7684\u53d8\u5316\uff0c\u901a\u8fc7\u4e00\u884c\u547d\u4ee4\u5c31\u53ef\u4ee5\u76f4\u89c2\u63cf\u8ff0\u51fa\u73af\u5883\u53d8\u66f4\u7684\u8fc7\u7a0b\uff0c\u5982\u679c\u518d\u901a\u8fc7 git \u8fdb\u884c\u7248\u672c\u63a7\u5236\uff0c\u5c31\u53ef\u4ee5\u8ba9\u73af\u5883\u7684\u7ba1\u7406\u66f4\u52a0\u53ef\u9760\u4e0e\u7b80\u5355\u3002</p> <p>\u4e86\u89e3\u4e86 Dockerfile \u4e4b\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u5229\u7528\u5b83\u8fdb\u884c\u4ee3\u7801\u66f4\u65b0\u4e86\uff0c\u6700\u4e3b\u8981\u7684\u6b65\u9aa4\u5c31\u4ee5\u4e0b\u4e09\u6b65\uff1a</p> <ul> <li>\u5c06\u4ee3\u7801\u5305\u4e0b\u8f7d\u5230\u6784\u5efa\u670d\u52a1\u5668\uff1b</li> <li>\u901a\u8fc7 Dockerfile \u7684 ADD \u547d\u4ee4\u5c06\u4ee3\u7801\u5305\u52a0\u8f7d\u5230\u5bb9\u5668\u91cc\uff1b</li> <li>Docker build \u5b8c\u6210\u65b0\u7684\u955c\u50cf\u3002</li> </ul>"},{"location":"chap16/4const_mgt/#4-3","title":"4-3 \u955c\u50cf\u6784\u5efa\u4f18\u5316","text":"<p>\u539f\u5219\u4e0a\uff0c\u6211\u4eec\u603b\u662f\u5e0c\u671b\u80fd\u591f\u8ba9\u955c\u50cf\u4fdd\u6301\u5c0f\u5de7\u3001\u7cbe\u81f4\uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u955c\u50cf\u73af\u5883\u66f4\u52a0\u6e05\u6670\uff0c\u4e0d\u7528\u5360\u7528\u8fc7\u591a\u7a7a\u95f4\uff0c\u4e0b\u8f7d\u4e5f\u4f1a\u66f4\u5feb\u3002</p> <p>\u90a3\u4e48\uff0c\u5982\u4f55\u505a\u597d\u955c\u50cf\u7684\u4f18\u5316\u5462\uff1f\u4f60\u53ef\u4ee5\u4ece 3 \u4e2a\u65b9\u9762\u5165\u624b\uff1a</p> <ul> <li>\u9009\u62e9\u5408\u9002\u7684 Base \u955c\u50cf\uff1b</li> <li>\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u955c\u50cf\u5c42\u7684\u4ea7\u751f\uff1b</li> <li>\u5145\u5206\u5229\u7528\u6307\u4ee4\u7684\u7f13\u5b58\u3002</li> </ul> <p>\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u955c\u50cf\u5c42\uff0c\u662f\u56e0\u4e3a\u4f7f\u7528 Dockerfile \u65f6\uff0c\u6bcf\u4e00\u6761\u6307\u4ee4\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u955c\u50cf\u5c42\uff0c\u7ee7\u800c\u4f1a\u589e\u52a0\u6574\u4f53\u955c\u50cf\u7684\u5927\u5c0f\u3002</p> <p>\u6bd4\u5982\uff0c\u4e0b\u9762\u8fd9\u4e2a Dockerfile\uff1a</p> <pre><code>FROM ubuntu \nRUN apt-get install vim -y \nRUN apt-get remove vim -y\n</code></pre> <p>\u867d\u7136\u8fd9\u4e2a\u64cd\u4f5c\u521b\u5efa\u7684\u955c\u50cf\u4e2d\u6ca1\u6709\u5b89\u88c5 Vim\uff0c\u4f46\u662f\u955c\u50cf\u7684\u5927\u5c0f\u548c\u6709 Vim \u662f\u4e00\u6837\u7684\u3002\u539f\u56e0\u5c31\u662f\uff0c\u6bcf\u6761\u6307\u4ee4\u90fd\u4f1a\u65b0\u52a0\u4e00\u4e2a\u955c\u50cf\u5c42\uff0c\u6267\u884c install vim \u540e\u6dfb\u52a0\u4e86\u4e00\u5c42\uff0c\u6267\u884c remove vim \u540e\u4e5f\u4f1a\u6dfb\u52a0\u4e00\u5c42\uff0c\u800c\u8fd9\u4e00\u5220\u9664\u547d\u4ee4\u5e76\u4e0d\u4f1a\u51cf\u5c11\u6574\u4e2a\u955c\u50cf\u7684\u5927\u5c0f\u3002</p> <p>Dockerfile \u6784\u5efa\u7684\u53e6\u5916\u4e00\u4e2a\u91cd\u8981\u7279\u6027\u662f\u6307\u4ee4\u53ef\u4ee5\u7f13\u5b58\uff0c\u53ef\u4ee5\u6781\u5927\u5730\u7f29\u77ed\u6784\u5efa\u65f6\u95f4\u3002 \u56e0\u4e3a\u4e4b\u524d\u4e5f\u8bf4\u4e86\uff0c\u6bcf\u4e00\u4e2a RUN \u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u955c\u50cf\uff0c\u800c Docker \u5728\u9ed8\u8ba4\u6784\u5efa\u65f6\uff0c\u4f1a\u4f18\u5148\u9009\u62e9\u8fd9\u4e9b\u7f13\u5b58\u7684\u955c\u50cf\uff0c\u800c\u975e\u91cd\u65b0\u6784\u5efa\u4e00\u5c42\u955c\u50cf\u3002</p>"},{"location":"chap16/4const_mgt/#4-4","title":"4-4 \u955c\u50cf\u6784\u5efa\u73af\u5883","text":"<p>\u5f53\u6211\u4eec\u5b66\u4f1a\u4e86\u4f7f\u7528 Dockerfile \u6784\u5efa\u955c\u50cf\u4e4b\u540e\uff0c\u4e0b\u4e00\u6b65\u5c31\u662f\u5982\u4f55\u642d\u5efa\u6784\u5efa\u73af\u5883\u4e86\u3002\u642d\u5efa\u6784\u5efa\u73af\u5883\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u5c31\u662f\u5728\u865a\u62df\u673a\u4e0a\u5b89\u88c5 Docker Daemon\uff0c\u7136\u540e\u6839\u636e\u4f60\u6240\u4f7f\u7528\u7684\u8bed\u8a00\u63d0\u4f9b\u7684 Docker \u5ba2\u6237\u7aef\u4e0e Docker Daemon \u8fdb\u884c\u4ea4\u4e92\uff0c\u5b8c\u6210\u6784\u5efa\u3002</p> <p>\u4f46\u662f\uff0c\u6211\u4eec\u63a8\u5d07\u6784\u5efa\u73af\u5883\u5bb9\u5668\u5316\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u6784\u5efa\u73af\u5883\u53ef\u80fd\u9664\u4e86 Docker \u5916\uff0c\u8fd8\u4f1a\u6709\u4e00\u4e9b\u5176\u4ed6\u7684\u4f9d\u8d56\uff0c\u6bd4\u5982\u7f16\u7a0b\u8bed\u8a00\u3001Git \u7b49\u7b49\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c31\u770b\u770b\u6784\u5efa\u73af\u5883\u5982\u4f55\u5b9e\u73b0\u5bb9\u5668\u5316\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7528\u5bb9\u5668\u6765\u6784\u5efa\u5bb9\u5668\u955c\u50cf\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a</p> <ul> <li>Docker Out Of Docker\uff08DooD\uff09</li> <li>Docker In Docker\uff08DinD)</li> </ul> <p>\u7b2c\u4e00\uff0cDocker Out Of Docker\uff08DooD\uff09</p> <p>\u8fd9\u79cd\u65b9\u5f0f\u6bd4\u8f83\u7b80\u5355\uff0c\u9996\u5148\u5728\u865a\u62df\u673a\u4e0a\u5b89\u88c5 Docker Daemon\uff0c\u7136\u540e\u5c06\u4f60\u7684\u6784\u5efa\u73af\u5883\u955c\u50cf\u4e0b\u8f7d\u4e0b\u6765\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668\u3002</p> <p>\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cDocker \u5ba2\u6237\u7aef\u90fd\u662f\u901a\u8fc7 <code>/var/run/docker.sock</code> \u4e0e <code>Docker Daemon</code> \u8fdb\u884c\u901a\u4fe1\u3002\u6211\u4eec\u5728\u521b\u5efa Docker \u5b9e\u4f8b\u65f6\uff0c\u628a\u5916\u90e8\u7684 <code>/var/run/docker.sock mount</code> \u5230\u5bb9\u5668\u5185\u90e8\uff0c\u8fd9\u6837\u5bb9\u5668\u5185\u7684 Docker \u5ba2\u6237\u7aef\u5c31\u53ef\u4ee5\u4e0e\u5916\u90e8\u7684 Docker Daemon \u8fdb\u884c\u901a\u4fe1\u4e86\u3002</p> <p>\u53e6\u5916\uff0c\u4f60\u8fd8\u9700\u8981\u6ce8\u610f\u6743\u9650\u95ee\u9898\uff0c\u5bb9\u5668\u5185\u90e8\u7684\u6784\u5efa\u8fdb\u7a0b\u5fc5\u987b\u62e5\u6709\u8bfb\u53d6 <code>/var/run/docker.sock</code> \u7684\u6743\u9650\uff0c\u624d\u53ef\u4ee5\u5b8c\u6210\u901a\u4fe1\u8fc7\u7a0b\u3002</p> <p>\u7b2c\u4e8c\uff0cDocker In Docker\uff08DinD\uff09</p> <p>Docker In Docker \uff0c\u5c31\u662f\u5728\u5bb9\u5668\u5185\u90e8\u542f\u52a8\u4e00\u4e2a\u5b8c\u6574\u7684 Docker Daemon \u8fdb\u7a0b\uff0c\u7136\u540e\u6784\u5efa\u5de5\u5177\u53ea\u9700\u8981\u548c\u8be5\u8fdb\u7a0b\u4ea4\u4e92\uff0c\u800c\u4e0d\u5f71\u54cd\u5916\u90e8\u7684 Docker \u8fdb\u7a0b\u3002</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5bb9\u5668\u5185\u90e8\u4e0d\u5141\u8bb8\u5f00\u542f Docker Daemon \u8fdb\u7a0b\uff0c\u5fc5\u987b\u5728\u8fd0\u884c\u5bb9\u5668\u7684\u65f6\u5019\u52a0\u4e0a --privileged \u53c2\u6570\uff0c\u8fd9\u4e2a\u53c2\u6570\u7684\u4f5c\u7528\u662f\u771f\u6b63\u53d6\u5f97 root \u7684\u6743\u9650\u3002\u53e6\u5916\uff0cDocker \u793e\u533a\u5b98\u65b9\u63d0\u4f9b\u4e86\u4e00\u4e2a docker:dind \u955c\u50cf\u53ef\u4ee5\u76f4\u63a5\u62ff\u6765\u4f7f\u7528\u3002</p> <p>\u8fd9\u6837\u4e00\u6765\uff0c\u5bb9\u5668\u5185\u90e8 Docker Daemon \u5c31\u548c\u5bb9\u5668\u5916\u90e8\u7684 Docker Daemon \u5f7b\u5e95\u5206\u5f00\u4e86\uff0c\u5bb9\u5668\u5185\u90e8\u5c31\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u955c\u50cf\u6784\u5efa\u73af\u5883\uff0c\u662f\u4e0d\u662f\u5f88\u795e\u5947\u3002</p> <p>\u7136\u800c DinD \u4e5f\u4e0d\u662f\u767e\u5206\u4e4b\u767e\u7684\u5b8c\u7f8e\u548c\u5065\u58ee\uff0c\u5b83\u4e5f\u6709\u4e00\u4e9b\u5173\u4e8e\u5b89\u5168\u548c\u6587\u4ef6\u7cfb\u7edf\u7684\u95ee\u9898\u3002\u6b64\u5916\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5bb9\u5668\u90fd\u6709\u72ec\u7acb\u7684 <code>/var/lib/docker</code> \u7528\u6765\u4fdd\u5b58\u955c\u50cf\u6587\u4ef6\uff0c\u4e00\u65e6\u5bb9\u5668\u88ab\u91cd\u542f\u4e86\uff0c\u8fd9\u4e9b\u955c\u50cf\u7f13\u5b58\u5c31\u6d88\u5931\u4e86\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5f71\u54cd\u6211\u4eec\u6784\u5efa\u955c\u50cf\u7684\u6027\u80fd\u3002</p>"},{"location":"chap16/4const_mgt/#4-5","title":"4-5 \u603b\u7ed3","text":"<p>\u9996\u5148\uff0c\u5bb9\u5668\u955c\u50cf\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u5b83\u5305\u542b\u4e86\u5bb9\u5668\u8fd0\u884c\u521d\u59cb\u5316\u65f6\u6240\u9700\u8981\u7684\u6570\u636e\u6216\u8f6f\u4ef6\u3002Docker \u5bb9\u5668\u7684\u6587\u4ef6\u7cfb\u7edf\u662f\u5206\u5c42\u7684\u3001\u53ea\u8bfb\u7684\uff0c\u6bcf\u6b21\u521b\u5efa\u5bb9\u5668\u65f6\u53ea\u8981\u5728\u6700\u4e0a\u5c42\u6dfb\u52a0\u4e00\u4e2a\u53eb\u4f5c Container layer \u7684\u53ef\u5199\u5c42\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u79cd\u521b\u5efa\u65b9\u5f0f\u4e0d\u540c\u4e8e\u865a\u62df\u673a\uff0c\u53ef\u4ee5\u6781\u5927\u7684\u51cf\u5c11\u5bf9\u78c1\u76d8\u7a7a\u95f4\u7684\u5360\u7528\u3002</p> <p>\u5176\u6b21\uff0cDocker \u63d0\u4f9b\u4e86 Dockerfile \u8fd9\u4e2a\u53ef\u4ee5\u63cf\u8ff0\u955c\u50cf\u7684\u6587\u672c\u683c\u5f0f\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u4f60\u53ef\u4ee5\u5728 Dockerfile \u4e2d\u8fd0\u884c\u529f\u80fd\u4e30\u5bcc\u7684\u6307\u4ee4\uff0c\u5e76\u53ef\u4ee5\u901a\u8fc7 docker build \u5c06\u8fd9\u4e9b\u6307\u4ee4\u8f6c\u5316\u4e3a\u955c\u50cf\u3002</p> <p>\u518d\u6b21\uff0c\u57fa\u4e8e Dockerfile \u7684\u7279\u6027\uff0c\u6211\u5206\u4eab\u4e86 Dockerfile \u955c\u50cf\u6784\u5efa\u4f18\u5316\u7684\u4e09\u4e2a\u5efa\u8bae\uff0c\u5305\u62ec\uff1a\u9009\u62e9\u5408\u9002\u7684 Base \u955c\u50cf\u3001\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u955c\u50cf\u5c42\u4ea7\u751f\uff0c\u4ee5\u53ca\u5584\u7528\u6784\u5efa\u7f13\u5b58\u3002</p>"},{"location":"chap16/4const_mgt/#5","title":"5  \u5982\u4f55\u505a\u597d\u5bb9\u5668\u955c\u50cf\u7684\u4e2a\u6027\u5316\u53ca\u5408\u89c4\u68c0\u67e5","text":""},{"location":"chap16/4const_mgt/#5-1","title":"5-1 \u81ea\u5b9a\u4e49\u955c\u50cf\u53d1\u5e03","text":"<p>Docker Clair \u662f\u4e00\u79cd\u9759\u6001\u68c0\u67e5\uff0c\u4f46\u5bf9\u4e8e\u52a8\u6001\u7684\u60c5\u51b5\u5c31\u663e\u5f97\u65e0\u80fd\u4e3a\u529b\u4e86\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e\u955c\u50cf\u7684\u5b89\u5168\u89c4\u5219\u6211\u8fd8\u603b\u7ed3\u4e86\u5982\u4e0b\u7684\u4e00\u4e9b\u57fa\u672c\u5efa\u8bae\uff1a</p> <ul> <li>\u57fa\u7840\u955c\u50cf\u6765\u81ea\u4e8e Docker \u5b98\u65b9\u8ba4\u8bc1\u7684\uff0c\u5e76\u505a\u597d\u7b7e\u540d\u68c0\u67e5\uff1b</li> <li>\u4e0d\u4f7f\u7528 root \u542f\u52a8\u5e94\u7528\u8fdb\u7a0b\uff1b</li> <li>\u4e0d\u5728\u955c\u50cf\u4fdd\u5b58\u5bc6\u7801\uff0cToken \u4e4b\u7c7b\u7684\u654f\u611f\u4fe1\u606f\uff1b</li> <li>\u4e0d\u4f7f\u7528 <code>--privileged</code> \u53c2\u6570\u6807\u8bb0\u4f7f\u7528\u7279\u6743\u5bb9\u5668\uff1b</li> <li> <p>\u5b89\u5168\u7684 Linux \u5185\u6838\u3001\u5185\u6838\u8865\u4e01\u3002\u5982 SELinux\uff0cAppArmor\uff0cGRSEC \u7b49\u3002</p> </li> <li> <p>\u7528\u6237\u81ea\u5b9a\u4e49\u73af\u5883\u811a\u672c\uff0c\u901a\u8fc7 build-env.sh \u548c image-env.sh \u4e24\u4e2a\u6587\u4ef6\u53ef\u4ee5\u5728\u6784\u5efa\u7684\u4e24\u4e2a\u9636\u6bb5\u6539\u53d8\u955c\u50cf\u7684\u5185\u5bb9\uff1b</p> </li> <li>\u5e73\u53f0\u73af\u5883\u9009\u9879\u4e0e\u670d\u52a1\u96c6\u5e02\uff0c\u5229\u7528\u8fd9\u4e24\u4e2a\u81ea\u5efa\u7cfb\u7edf\uff0c\u53ef\u4ee5\u5c06\u4e2a\u6027\u5316\u7684\u5185\u5bb9\u8fdb\u884c\u62bd\u8c61\uff0c\u4ee5\u8fbe\u5230\u5feb\u901f\u590d\u7528\uff0c\u548c\u9ad8\u5ea6\u5c01\u88c5\u7684\u4f5c\u7528\uff1b</li> <li>\u81ea\u5b9a\u4e49\u955c\u50cf\uff0c\u662f\u5f7b\u5e95\u89e3\u51b3\u955c\u50cf\u4e2a\u6027\u5316\u7684\u65b9\u6cd5\uff0c\u4f46\u4e5f\u8981\u6ce8\u610f\u7b26\u5408\u5b89\u5168\u548c\u5408\u89c4\u7684\u57fa\u672c\u539f\u5219\u3002</li> </ul> <p>\u9664\u4e86 Clair \u8fdb\u884c CVE \u626b\u63cf\u4e4b\u5916\uff0c\u8fd8\u6709\u5176\u4ed6\u4e00\u4e9b\u5173\u4e8e\u955c\u50cf\u5b89\u5168\u7684\u5de5\u5177\u4e5f\u53ef\u4ee5\u4ece\u5176\u4ed6\u65b9\u9762\u8fdb\u884c\u68c0\u67e5\uff0c</p>"},{"location":"chap16/5Mon_mgt/","title":"L5 \u53d1\u5e03\u53ca\u76d1\u63a7","text":""},{"location":"chap16/5Mon_mgt/#1","title":"1 \u53d1\u5e03","text":"<p>\u90e8\u7f72\u548c\u53d1\u5e03\u662f\u4e0d\u662f\u4e00\u56de\u4e8b\u513f\uff1f</p> <p>\u6709\u4e00\u4e9b\u89c2\u70b9\u8ba4\u4e3a\uff0c\u90e8\u7f72\u548c\u53d1\u5e03\u662f\u6709\u533a\u522b\u7684\uff0c\u524d\u8005\u662f\u4e00\u4e2a\u6280\u672f\u8303\u7574\uff0c\u800c\u540e\u8005\u5219\u662f\u4e00\u79cd\u4e1a\u52a1\u51b3\u7b56\u3002\u8fd9\u6837\u7684\u7406\u89e3\u5e94\u8be5\u8bf4\u662f\u6b63\u786e\u7684\u3002\u5e94\u7528\u88ab\u90e8\u7f72\uff0c\u5e76\u4e0d\u4ee3\u8868\u5c31\u662f\u53d1\u5e03\u4e86\uff0c\u6bd4\u5982\u65c1\u8def\u8fd0\u884c\uff08dark launch\uff09\u65b9\u5f0f\uff0c\u5bf9\u4e8e\u5ba2\u6237\u7aef\u4ea7\u54c1\u66f4\u662f\u5982\u6b64\u7684\u3002</p> <p>\u4f46\u5bf9\u4e92\u8054\u7f51\u7aef\u7684\u4ea7\u54c1\u6765\u8bf4\uff0c\u8fd9\u4e2a\u6982\u5ff5\u5c31\u6bd4\u8f83\u6a21\u7cca\u4e86\uff0c\u6240\u4ee5\u4ece\u82f1\u6587\u4e0a\u6765\u770b\uff0c\u6211\u4eec\u901a\u5e38\u65e2\u4e0d\u7528 deploy \u8fd9\u4e2a\u8bcd\uff0c\u4e5f\u4e0d\u7528 release \u8fd9\u4e2a\u8bcd\uff0c\u800c\u662f\u4f7f\u7528 rollout \u8fd9\u4e2a\u8bcd\u3002\u6240\u4ee5\uff0c\u4ece\u7528\u8bcd\u7684\u9009\u62e9\u4e0a\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\uff0c\u53d1\u5e03\u662f\u4e00\u4e2a\u6162\u6162\u6eda\u52a8\u5411\u524d\u3001\u9010\u6b65\u751f\u6548\u7684\u8fc7\u7a0b\u3002</p>"},{"location":"chap16/5Mon_mgt/#1-1","title":"1-1 \u53d1\u5e03\u7684\u9700\u6c42","text":"<p>\u56e0\u6b64\uff0c\u6211\u4eec\u60f3\u8981\u7684\u5e94\u8be5\u662f\uff1a\u4e00\u4e2a\u6613\u7528\u3001\u5feb\u901f\u3001\u7a33\u5b9a\u3001\u5bb9\u9519\u529b\u5f3a\uff0c\u5fc5\u8981\u65f6\u6709\u80fd\u529b\u8fc5\u901f\u56de\u6eda\u7684\u53d1\u5e03\u7cfb\u7edf\u3002</p>"},{"location":"chap16/5Mon_mgt/#1-2","title":"1-2 \u4ec0\u4e48\u662f\u597d\u7684\u53d1\u5e03\u6d41\u7a0b\uff1f","text":"<p>\u8fd9\u5957\u7a0b\u5e8f\u662f\u5426\u80fd\u6ee1\u8db3\u53d1\u5e03\u7684\u9700\u6c42\uff1a\u5feb\u901f\u3001\u6613\u7528\u3001\u7a33\u5b9a\u3001\u5bb9\u9519\u3001\u56de\u6eda\u987a\u6ed1\u3002</p> <ul> <li>\u6613\u7528\uff1a\u6267\u884c\u811a\u672c\u5c31\u597d\uff0c\u586b\u5165\u53c2\u6570\uff0c\u4e00\u952e\u6267\u884c\u3002</li> <li>\u5feb\u901f\uff1a\u81ea\u52a8\u5316\u80af\u5b9a\u6bd4\u624b\u5de5\u5feb\uff0c\u5e76\u4e14\u6709\u63d0\u5347\u7a7a\u95f4\u3002\u6bd4\u5982\uff0c\u56e0\u4e3a\u6709\u7248\u672c\u7684\u6982\u5ff5\uff0c\u6211\u4eec\u53ef\u4ee5\u8df3\u8fc7\u76f8\u540c\u7248\u672c\u7684\u90e8\u7f72\uff0c\u6216\u662f\u67d0\u4e9b\u6b65\u9aa4\u3002</li> <li>\u7a33\u5b9a\uff1a\u56e0\u4e3a\u8fd9\u4e2a\u7a0b\u5e8f\u903b\u8f91\u6bd4\u8f83\u7b80\u5355\uff0c\u800c\u4e14\u6267\u884c\u6b65\u9aa4\u5e76\u4e0d\u591a\uff0c\u6ca1\u6709\u4ea4\u53c9\u548c\u5e76\u884c\uff0c\u6240\u4ee5\u7a33\u5b9a\u6027\u4e5f\u6ca1\u4ec0\u4e48\u5927\u7684\u6311\u6218\u3002</li> <li>\u5bb9\u9519\u6027\u5f3a\uff1a\u8868\u73b0\u4e00\u822c\uff0c\u811a\u672c\u78b0\u5230\u5f02\u5e38\u72b6\u51b5\u53ea\u80fd\u505c\u4e0b\u6765\uff0c\u4f46\u56e0\u4e3a\u7248\u672c\u95f4\u662f\u9694\u79bb\u7684\uff0c\u4e0d\u81f3\u4e8e\u5f04\u574f\u8001\u7684\u670d\u52a1\uff0c\u901a\u8fc7\u4eba\u5de5\u4ecb\u5165\u4ecd\u80fd\u6062\u590d\u3002</li> <li>\u56de\u6eda\u987a\u6ed1\uff1a\u56e0\u4e3a\u6bcf\u4e2a\u7248\u672c\u90fd\u662f\u5b8c\u6574\u7684\u53ef\u6267\u884c\u4ea7\u7269\uff0c\u6240\u4ee5\u56de\u6eda\u53ef\u4ee5\u89c6\u4f5c\u4f7f\u7528\u65e7\u7248\u672c\u91cd\u65b0\u505a\u4e00\u6b21\u53d1\u5e03\u3002\u751a\u81f3\u6211\u4eec\u53ef\u4ee5\u5728\u76ee\u6807\u673a\u5668\u4e0a\u7f13\u5b58\u65e7\u7248\u672c\u4ea7\u7269\uff0c\u5b9e\u73b0\u8d85\u5feb\u901f\u56de\u6eda\u3002</li> </ul>"},{"location":"chap16/5Mon_mgt/#1-3","title":"1-3 \u6269\u5c55\u5230\u96c6\u7fa4","text":"<p>\u5f53\u53d1\u5e03\u7684\u76ee\u6807\u662f\u4e00\u7ec4\u673a\u5668\u800c\u4e0d\u662f\u4e00\u53f0\u673a\u5668\u65f6\uff0c\u4e3b\u8981\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u5982\u4f55\u534f\u8c03\u6574\u4e2a\u8fc7\u7a0b\u3002</p> <p>\u6bd4\u5982\uff0c\u8ffd\u8e2a\u3001\u540c\u6b65\u4e00\u7ec4\u673a\u5668\u76ee\u524d\u53d1\u5e03\u8fdb\u884c\u5230\u4e86\u54ea\u4e00\u6b65\uff0c\u7f16\u6392\u96c6\u7fa4\u7684\u53d1\u5e03\u547d\u4ee4\u5c31\u6210\u4e3a\u4e86\u66f4\u6838\u5fc3\u529f\u80fd\u3002\u597d\u6d88\u606f\u662f\uff0c\u96c6\u7fa4\u63d0\u4f9b\u4e86\u65b0\u7684\u3001\u66f4\u6613\u884c\u7684\u65b9\u6cd5\u63d0\u9ad8\u7cfb\u7edf\u7684\u53d1\u5e03\u65f6\u7a33\u5b9a\u6027\uff0c\u5176\u4e2d\u6700\u6709\u7528\u7684\u4e00\u9879\u88ab\u79f0\u4e3a\u7070\u5ea6\u53d1\u5e03\u3002</p> <p>\u7070\u5ea6\u53d1\u5e03\u662f\u6307\uff0c\u6e10\u8fdb\u5f0f\u5730\u66f4\u65b0\u6bcf\u53f0\u673a\u5668\u8fd0\u884c\u7684\u7248\u672c\uff0c\u4e00\u6bb5\u65f6\u671f\u5185\u96c6\u7fa4\u5185\u8fd0\u884c\u7740\u591a\u4e2a\u4e0d\u540c\u7684\u7248\u672c\uff0c\u540c\u4e00\u4e2a API \u5728\u4e0d\u540c\u673a\u5668\u4e0a\u8fd4\u56de\u7684\u7ed3\u679c\u5f88\u53ef\u80fd\u4e0d\u540c\u3002 \u867d\u7136\u7070\u5ea6\u53d1\u5e03\u6d89\u53ca\u5230\u590d\u6742\u7684\u5f02\u6b65\u63a7\u5236\u6d41\uff0c\u4f46\u8fd9\u79cd\u6a21\u5f0f\u76f8\u6bd4\u7b80\u5355\u7c97\u66b4\u7684\u201c\u4e00\u6ce2\u6d41\u201d\u663e\u7136\u8981\u5b89\u5168\u5f97\u591a\u3002</p>"},{"location":"chap16/5Mon_mgt/#1-4","title":"1-4 \u51e0\u79cd\u5e38\u89c1\u7684\u7070\u5ea6\u65b9\u5f0f","text":"<p>\u7070\u5ea6\u53d1\u5e03\u4e2d\u6700\u5934\u75bc\u7684\u662f\u5982\u4f55\u4fdd\u6301\u670d\u52a1\u7684\u5411\u540e\u517c\u5bb9\u6027\uff0c\u53d1\u73b0\u82d7\u5934\u4e0d\u5bf9\u540e\u5982\u4f55\u5feb\u901f\u5207\u56de\u8001\u7684\u670d\u52a1\u3002\u8fd9\u5728\u5fae\u670d\u52a1\u573a\u666f\u4e2d\uff0c\u5927\u91cf\u670d\u52a1\u76f8\u4e92\u4f9d\u8d56\uff0cA \u56de\u6eda\u9700\u8981 B \u4e5f\u56de\u6eda\uff0c\u6216\u662f A \u7684\u65b0 API \u6d4b\u8bd5\u9700\u8981 B \u7684\u65b0 API \u65f6\u5341\u5206\u5934\u75bc\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u4e1a\u754c\u57fa\u4e8e\u4e0d\u540c\u7684\u670d\u52a1\u6cbb\u7406\u72b6\u51b5\uff0c\u63d0\u51fa\u4e86\u4e0d\u540c\u7684\u7070\u5ea6\u7406\u5ff5\u3002</p> <p>\u84dd\u7eff\u53d1\u5e03</p> <p>\u662f\u5148\u589e\u52a0\u4e00\u5957\u65b0\u7684\u96c6\u7fa4\uff0c\u53d1\u5e03\u65b0\u7248\u672c\u5230\u8fd9\u6279\u65b0\u673a\u5668\uff0c\u5e76\u8fdb\u884c\u9a8c\u8bc1\uff0c\u65b0\u7248\u672c\u670d\u52a1\u5668\u5e76\u4e0d\u63a5\u5165\u5916\u90e8\u6d41\u91cf\u3002\u6b64\u65f6\u65e7\u7248\u672c\u96c6\u7fa4\u4fdd\u6301\u539f\u6709\u72b6\u6001\uff0c\u53d1\u5e03\u548c\u9a8c\u8bc1\u8fc7\u7a0b\u4e2d\u8001\u7248\u672c\u6240\u5728\u7684\u670d\u52a1\u5668\u4ecd\u7167\u5e38\u670d\u52a1\u3002</p> <p>\u9a8c\u8bc1\u901a\u8fc7\u540e\uff0c\u6d41\u63a7\u5904\u7406\u628a\u6d41\u91cf\u5f15\u5165\u65b0\u670d\u52a1\u5668\uff0c\u5f85\u5168\u90e8\u6d41\u91cf\u5207\u6362\u5b8c\u6210\uff0c\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\u6ca1\u6709\u5f02\u5e38\u7684\u8bdd\uff0c\u8001\u7248\u672c\u670d\u52a1\u5668\u4e0b\u7ebf\u3002</p> <ul> <li>\u8fd9\u79cd\u53d1\u5e03\u65b9\u6cd5\u9700\u8981\u989d\u5916\u7684\u670d\u52a1\u5668\u96c6\u7fa4\u652f\u6301\uff0c\u5bf9\u4e8e\u8d1f\u8f7d\u9ad8\u7684\u6838\u5fc3\u5e94\u7528\u673a\u5668\u9700\u6c42\u53ef\u89c2\uff0c\u5b9e\u73b0\u96be\u5ea6\u5de8\u5927\u4e14\u6210\u672c\u8f83\u9ad8\u3002</li> <li>\u84dd\u7eff\u53d1\u5e03\u7684\u597d\u5904\u662f\u6240\u6709\u670d\u52a1\u90fd\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u65f6\uff0c\u5b9e\u9645\u4e0a\u521b\u9020\u4e86\u84dd\u7eff\u4e24\u5957\u73af\u5883\uff0c\u9694\u79bb\u6027\u6700\u597d\u3001\u6700\u53ef\u63a7\uff0c\u56de\u6eda\u5207\u6362\u51e0\u4e4e\u6ca1\u6709\u6210\u672c\u3002</li> </ul> <p>\u6eda\u52a8\u53d1\u5e03\uff0c</p> <ul> <li>\u662f\u4e0d\u6dfb\u52a0\u65b0\u673a\u5668\uff0c\u4ece\u540c\u6837\u7684\u96c6\u7fa4\u670d\u52a1\u5668\u4e2d\u6311\u9009\u4e00\u6279\uff0c\u505c\u6b62\u4e0a\u9762\u7684\u670d\u52a1\uff0c\u5e76\u66f4\u65b0\u4e3a\u65b0\u7248\u672c\uff0c\u8fdb\u884c\u9a8c\u8bc1\uff0c\u9a8c\u8bc1\u5b8c\u6bd5\u540e\u63a5\u5165\u6d41\u91cf\u3002</li> <li>\u91cd\u590d\u6b64\u6b65\u9aa4\uff0c\u4e00\u6279\u4e00\u6279\u5730\u66f4\u65b0\u96c6\u7fa4\u5185\u7684\u6240\u6709\u673a\u5668\uff0c\u76f4\u5230\u904d\u5386\u5b8c\u6240\u6709\u673a\u5668\u3002 \u8fd9\u79cd\u6eda\u52a8\u66f4\u65b0\u7684\u65b9\u6cd5\u6bd4\u84dd\u7eff\u53d1\u5e03\u8282\u7701\u8d44\u6e90\uff0c\u4f46\u53d1\u5e03\u8fc7\u7a0b\u4e2d\u540c\u65f6\u4f1a\u6709\u4e24\u4e2a\u7248\u672c\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\uff0c\u65e0\u8bba\u662f\u5bf9\u81ea\u8eab\u6216\u662f\u8c03\u7528\u8005\u90fd\u6709\u8f83\u9ad8\u7684\u517c\u5bb9\u6027\u8981\u6c42\uff0c\u9700\u8981\u56e2\u961f\u95f4\u7684\u5408\u4f5c\u59a5\u534f\u3002\u4f46\u8fd9\u7c7b\u95ee\u9898\u76f8\u5bf9\u5bb9\u6613\u89e3\u51b3\uff0c\u5b9e\u9645\u4e2d\u5f80\u5f80\u4f1a\u901a\u8fc7\u529f\u80fd\u5f00\u5173\u7b49\u65b9\u5f0f\u6765\u89e3\u51b3\u3002</li> </ul> <p>\u91d1\u4e1d\u96c0\u53d1\u5e03\uff0c</p> <p>\u4ece\u96c6\u7fa4\u4e2d\u6311\u9009\u7279\u5b9a\u670d\u52a1\u5668\u6216\u4e00\u5c0f\u6279\u7b26\u5408\u8981\u6c42\u7684\u7279\u5f81\u7528\u6237\uff0c\u5bf9\u5176\u8fdb\u884c\u7248\u672c\u66f4\u65b0\u53ca\u9a8c\u8bc1\uff0c\u968f\u540e\u9010\u6b65\u66f4\u65b0\u5269\u4f59\u670d\u52a1\u5668\u3002\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6bd4\u8f83\u7b26\u5408\u643a\u7a0b\u5bf9\u7070\u5ea6\u53d1\u5e03\u7684\u9884\u671f\uff0c\u4f46\u53ef\u80fd\u9700\u8981\u7cbe\u7ec6\u7684\u6d41\u63a7\u548c\u6570\u636e\u7684\u652f\u6301\uff0c\u540c\u6837\u6709\u7248\u672c\u517c\u5bb9\u7684\u9700\u6c42\u3002</p>"},{"location":"chap16/5Mon_mgt/#2","title":"2 \u53d1\u5e03\u7cfb\u7edf\u7684\u7528\u6237\u4f53\u9a8c","text":""},{"location":"chap16/5Mon_mgt/#1_1","title":"1 \u5f20\u9875\u9762\u5c55\u793a\u53d1\u5e03\u4fe1\u606f","text":"<p>\u9996\u5148\u5e94\u8be5\u6709 1 \u5f20\u9875\u9762\uff0c\u4e14\u4ec5\u6709 1 \u5f20\u9875\u9762\uff0c\u80fd\u591f\u5c55\u793a\u53d1\u5e03\u5f53\u65f6\u7684\u7edd\u5927\u591a\u6570\u4fe1\u606f\u3001\u6570\u636e\u548c\u5185\u5bb9\uff0c\u8fd9\u4e2a\u9875\u9762\u65e2\u8981\u5168\u9762\uff0c\u53c8\u8981\u7cbe\u51c6\u3002 \u5168\u9762\u6307\u7684\u662f\u5185\u5bb9\u6e05\u6670\u5b8c\u6574\uff0c\u7cbe\u51c6\u6307\u7684\u662f\u6570\u636e\u8981\u5b9e\u65f6\u3001\u53ef\u9760\u3002</p> <p>\u9664\u4e86\u4ee5\u4e0a\u7684\u8981\u6c42\u5916\uff0c\u5bf9\u4e8e\u5b9e\u9645\u7684\u9700\u6c42\uff0c\u8fd8\u8981\u8003\u8651 2 \u4e2a\u65f6\u6001\uff0c\u5373\u53d1\u5e03\u4e2d\u548c\u672a\u53d1\u5e03\u65f6\uff0c\u5c55\u793a\u7684\u5185\u5bb9\u5e94\u8be5\u6709\u6240\u533a\u522b\u3002</p> <ul> <li>\u53d1\u5e03\u4e2d\uff1a\u81ea\u7136\u5e94\u8be5\u5c55\u793a\u53d1\u5e03\u4e2d\u7684\u5185\u5bb9\uff0c\u5305\u62ec\u5904\u7406\u7684\u8fc7\u7a0b\u3001\u7ed3\u679c\u3001\u8017\u65f6\u3001\u5f53\u524d\u60c5\u51b5\u7b49\u7b49\u3002</li> <li>\u672a\u53d1\u5e03\u65f6\uff1a\u5e94\u8be5\u663e\u793a\u8fd9\u4e2a\u5e94\u7528\u5386\u53f2\u53d1\u5e03\u7684\u4e00\u4e2a\u8fc7\u7a0b\uff0c\u4e5f\u5c31\u662f\u6574\u4e2a\u7248\u672c\u6f14\u8fdb\u7684\u8def\u7ebf\u56fe\uff0c\u4ee5\u53ca\u5f53\u524d\u5404\u96c6\u7fa4\u3001\u5404\u670d\u52a1\u5668\u4e0a\u5177\u4f53\u7248\u672c\u7684\u60c5\u51b5\u3002</li> </ul>"},{"location":"chap16/5Mon_mgt/#2_1","title":"2 \u4e2a\u64cd\u4f5c\u6309\u94ae\u7b80\u5316\u4f7f\u7528","text":"<p>\u6700\u7ec8\uff0c\u7528\u6237\u5728\u9875\u9762\u4e0a\u53ef\u80fd\u4f1a\u770b\u5230\u7684\u540c\u65f6\u51fa\u73b0\u7684\u6309\u94ae\u7ec4\u5408\u6709\u4ee5\u4e0b\u56db\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u5f00\u59cb\u53d1\u5e03\uff0c1 \u4e2a\u6309\u94ae\uff1b</li> <li>\u4e2d\u65ad\u53d1\u5e03\uff0c1 \u4e2a\u6309\u94ae\uff1b</li> <li>\u4e2d\u65ad\u6216\u91cd\u8bd5\u53d1\u5e03\uff0c2 \u4e2a\u6309\u94ae\uff0c\u53d1\u751f\u5728\u6709\u5c40\u90e8\u9519\u8bef\u7684\u60c5\u51b5\u4e0b\uff1b</li> <li>\u4e2d\u65ad\u6216\u7ee7\u7eed\u53d1\u5e03\uff0c2 \u4e2a\u6309\u94ae\uff0c\u53d1\u751f\u5728\u53d1\u5e03\u88ab\u5239\u8f66\u65f6\u3002</li> </ul>"},{"location":"chap16/5Mon_mgt/#3","title":"3 \u79cd\u53d1\u5e03\u7ed3\u679c","text":"<p>\u7cfb\u7edf\u4e0d\u590d\u6742\u4e86\uff0c\u7528\u6237\u4f53\u9a8c\u81ea\u7136\u4e5f\u5c31\u7b80\u5355\u4e86\u3002\u8fd9\u662f\u4e00\u4e2a\u76f8\u8f85\u76f8\u6210\u7684\u8fc7\u7a0b\u3002</p> <p>\u4ece\u6700\u62bd\u8c61\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u53d1\u5e03\u7cfb\u7edf\u53ea\u9700\u8981 3 \u79cd\u7ed3\u679c\uff0c\u5373\uff1a\u6210\u529f\u3001\u5931\u8d25\u548c\u4e2d\u65ad\u3002</p> <ul> <li>\u6210\u529f\u72b6\u6001\uff1a\u5f88\u597d\u7406\u89e3\uff0c\u5373\u6574\u4e2a\u53d1\u5e03\u8fc7\u7a0b\uff0c\u6240\u6709\u7684\u5b9e\u4f8b\u53d1\u5e03\u90fd\u6210\u529f\uff1b</li> <li>\u5931\u8d25\u72b6\u6001\uff1a\u53ea\u8981\u53d1\u5e03\u8fc7\u7a0b\u4e2d\u6709\u4e00\u4e2a\u6b65\u9aa4\u3001\u4e00\u4e2a\u5b9e\u4f8b\u5931\u8d25\uff0c\u5219\u8ba4\u4e3a\u6574\u4e2a\u53d1\u5e03\u4e8b\u52a1\u5931\u8d25\uff1b</li> <li>\u4e2d\u65ad\u72b6\u6001\uff1a\u53d1\u5e03\u8fc7\u7a0b\u4e2d\u4efb\u4f55\u65f6\u95f4\u70b9\u90fd\u53ef\u4ee5\u5141\u8bb8\u4e2d\u65ad\u6b64\u6b21\u53d1\u5e03\uff0c\u4e2d\u65ad\u540e\u4e8b\u52a1\u7ed3\u675f\u3002</li> </ul>"},{"location":"chap16/5Mon_mgt/#4","title":"4 \u7c7b\u64cd\u4f5c\u9009\u62e9","text":"<p>\u5c06\u53d1\u5e03\u7ed3\u679c\u9ad8\u5ea6\u6982\u62ec\u4e3a\u6210\u529f\u3001\u5931\u8d25\u548c\u4e2d\u65ad\u540e\uff0c\u914d\u5408\u8fd9\u4e09\u79cd\u72b6\u6001\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5730\u5b9a\u4e49\u51fa\u6700\u7cbe\u7b80\u7684 4 \u79cd\u7528\u6237\u64cd\u4f5c\u884c\u4e3a\uff0c\u5373\u5f00\u59cb\u53d1\u5e03\u3001\u505c\u6b62\u53d1\u5e03\u3001\u53d1\u5e03\u56de\u9000\u548c\u53d1\u5e03\u91cd\u8bd5\u3002</p> <ul> <li>\u5f00\u59cb\u53d1\u5e03\uff0c\u6307\u7684\u662f\u7528\u6237\u64cd\u4f5c\u5f00\u59cb\u53d1\u5e03\u65f6\uff0c\u9700\u8981\u9009\u62e9\u7248\u672c\u3001\u53d1\u5e03\u96c6\u7fa4\u3001\u53d1\u5e03\u53c2\u6570\uff0c\u914d\u7f6e\u63d0\u4ea4\u540e\uff0c\u5373\u53ef\u7acb\u5373\u5f00\u59cb\u53d1\u5e03\u3002</li> <li>\u505c\u6b62\u53d1\u5e03\uff0c\u6307\u7684\u662f\u53d1\u5e03\u8fc7\u7a0b\u4e2d\u5982\u679c\u9047\u5230\u4e86\u5f02\u5e38\u60c5\u51b5\uff0c\u7528\u6237\u53ef\u4ee5\u968f\u65f6\u505c\u6b62\u53d1\u5e03\uff0c\u53d1\u5e03\u72b6\u6001\u4e5f\u5c06\u505c\u7559\u5728\u64cd\u4f5c\u201c\u505c\u6b62\u53d1\u5e03\u201d\u7684\u90a3\u4e00\u523b\u3002</li> <li>\u53d1\u5e03\u56de\u9000\uff0c\u6307\u7684\u662f\u5982\u679c\u9700\u8981\u56de\u9000\u7248\u672c\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u4efb\u610f\u65f6\u523b\u64cd\u4f5c\u201c\u53d1\u5e03\u56de\u9000\u201d\uff0c\u56de\u9000\u5230\u5386\u53f2\u4e0a\u6700\u8fd1\u4e00\u6b21\u53d1\u5e03\u6210\u529f\u7684\u7248\u672c\u3002</li> <li>\u53d1\u5e03\u91cd\u8bd5\uff0c\u6307\u7684\u662f\u5728\u53d1\u5e03\u7684\u8fc7\u7a0b\u4e2d\uff0c\u56e0\u4e3a\u79cd\u79cd\u539f\u56e0\u5bfc\u81f4\u4e00\u4e9b\u673a\u5668\u53d1\u5e03\u5931\u8d25\u540e\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u6574\u4e2a\u4e8b\u52a1\u53d1\u5e03\u7ed3\u675f\u540e\uff0c\u5c1d\u8bd5\u91cd\u65b0\u53d1\u5e03\u5931\u8d25\u7684\u673a\u5668\uff0c\u76f4\u5230\u53d1\u5e03\u5b8c\u6210\u3002</li> </ul>"},{"location":"chap16/5Mon_mgt/#5","title":"5 \u4e2a\u53d1\u5e03\u6b65\u9aa4","text":"<ul> <li>markdown\uff1a\u4e3a\u4e86\u51cf\u5c11\u5e94\u7528\u53d1\u5e03\u65f6\u5bf9\u7528\u6237\u7684\u5f71\u54cd\uff0c\u6240\u4ee5\u5728\u4e00\u4e2a\u5b9e\u4f8b\u53d1\u5e03\u524d\uff0c\u90fd\u4f1a\u505a\u62c9\u51fa\u96c6\u7fa4\u7684\u64cd\u4f5c\uff0c\u8fd9\u6837\u65b0\u7684\u6d41\u91cf\u5c31\u4e0d\u4f1a\u518d\u7ee7\u7eed\u8fdb\u5165\u4e86\u3002</li> <li>download\uff1a\u8fd9\u5c31\u662f\u6839\u636e\u7248\u672c\u53f7\u4e0b\u8f7d\u4ee3\u7801\u5305\u7684\u8fc7\u7a0b\uff1b</li> <li>install\uff1a\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5b8c\u6210\u505c\u6b62\u670d\u52a1\u3001\u66ff\u6362\u4ee3\u7801\u3001\u91cd\u542f\u670d\u52a1\u8fd9\u4e9b\u64cd\u4f5c\uff1b</li> <li>verify\uff1a\u9664\u4e86\u5fc5\u8981\u7684\u542f\u52a8\u9884\u68c0\u5916\uff0c\u8fd9\u4e00\u6b65\u8fd8\u5305\u62ec\u4e86\u9884\u70ed\u8fc7\u7a0b\uff1b</li> <li>markup\uff1a\u628a\u5b9e\u4f8b\u62c9\u56de\u96c6\u7fa4\uff0c\u91cd\u65b0\u63a5\u6536\u6d41\u91cf\u548c\u8bf7\u6c42\u3002</li> </ul>"},{"location":"chap16/5Mon_mgt/#6","title":"6 \u5927\u9875\u9762\u4e3b\u8981\u5185\u5bb9","text":"<ul> <li>\u7b2c\u4e00\uff0c\u96c6\u7fa4\u3002\u96c6\u7fa4\u662f\u53d1\u5e03\u7684\u6807\u51c6\u5355\u5143</li> <li>\u7b2c\u4e8c\uff0c\u5b9e\u4f8b\u3002\u5b9e\u4f8b\u662f\u96c6\u7fa4\u7684\u6210\u5458\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u96c6\u7fa4\u4f1a\u6709\u591a\u4e2a\u5b9e\u4f8b\u627f\u8f7d\u6d41\u91cf\u3002\u5728\u754c\u9762\u4e0a\uff0c\u7528\u6237\u53ef\u4ee5\u67e5\u770b\u5b9e\u4f8b\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u4e86\u89e3\u5b9e\u4f8b\u7684 IP\u3001\u90e8\u7f72\u72b6\u6001\u3001\u8fd0\u884c\u72b6\u6001\u7b49\u3002\u7528\u6237\u80fd\u591f\u770b\u5230\u53d1\u5e03\u65f6\u7684\u72b6\u6001\u4e0e\u8fdb\u5ea6\uff0c\u8fd9\u4e9b\u4fe1\u606f\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u66f4\u597d\u5730\u63a7\u5236\u53d1\u5e03\u3002 * \u7b2c\u4e09\uff0c\u53d1\u5e03\u65e5\u5fd7\u3002\u5728\u53d1\u5e03\u4e2d\u548c\u53d1\u5e03\u5b8c\u6210\u540e\uff0c\u7528\u6237\u90fd\u53ef\u4ee5\u901a\u8fc7\u67e5\u8be2\u53d1\u5e03\u65e5\u5fd7\u4e86\u89e3\u53d1\u5e03\u65f6\u7cfb\u7edf\u8fd0\u884c\u7684\u65e5\u5fd7\uff0c\u5305\u62ec\u5e26\u6709\u65f6\u95f4\u6233\u7684\u6267\u884c\u65e5\u5fd7\u548c\u5404\u79cd\u63d0\u793a\u4e0e\u62a5\u9519\u4fe1\u606f\uff0c\u65b9\u4fbf\u540e\u7eed\u6392\u67e5\u95ee\u9898\u3002</li> <li>\u7b2c\u56db\uff0c\u53d1\u5e03\u5386\u53f2\u3002\u53d1\u5e03\u5386\u53f2\u5bf9\u53d1\u5e03\u7cfb\u7edf\u6765\u8bf4\u5c24\u4e3a\u91cd\u8981\u3002\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u53d1\u5e03\u5386\u53f2\u4e86\u89e3\u96c6\u7fa4\u8fc7\u53bb\u6240\u505a\u7684\u53d8\u66f4\uff0c\u5e76\u4e14\u53ef\u4ee5\u6e05\u6670\u5730\u4e86\u89e3\u96c6\u7fa4\u56de\u9000\u65f6\u5c06\u4f1a\u56de\u9000\u5230\u54ea\u4e00\u5929\u53d1\u5e03\u7684\u54ea\u4e2a\u7248\u672c\u3002</li> <li>\u7b2c\u4e94\uff0c\u53d1\u5e03\u6279\u6b21\u3002\u7531\u4e8e\u96c6\u7fa4\u4e2d\u6709\u5f88\u591a\u5b9e\u4f8b\uff0c\u5982\u4f55\u6709\u5e8f\u5730\u6267\u884c\u53d1\u5e03\uff0c\u5c31\u662f\u6bd4\u8f83\u91cd\u8981\u7684\u4e8b\u60c5\u3002\u8bbe\u5b9a\u53d1\u5e03\u6279\u6b21\uff0c\u53ef\u4ee5\u8ba9\u96c6\u7fa4\u7684\u53d1\u5e03\u5206\u6279\u6b21\u8fdb\u884c\uff0c\u907f\u514d\u95ee\u9898\u7248\u672c\u4e0a\u7ebf\u540e\u4e00\u4e0b\u5b50\u5f71\u54cd\u6240\u6709\u7684\u6d41\u91cf\u3002\u6bcf\u4e2a\u6279\u6b21\u4e2d\u7684\u5b9e\u4f8b\u91c7\u7528\u5e76\u884c\u5904\u7406\u7684\u65b9\u5f0f\uff0c\u800c\u591a\u4e2a\u6279\u6b21\u95f4\u5219\u91c7\u7528\u4e32\u884c\u5904\u7406\u7684\u65b9\u5f0f\u3002</li> <li>\u7b2c\u516d\uff0c\u53d1\u5e03\u64cd\u4f5c\u3002\u6240\u6709\u7684\u53d1\u5e03\u64cd\u4f5c\u6309\u94ae\u90fd\u4f1a\u96c6\u4e2d\u5728\u8fd9\u4e2a\u533a\u57df\uff0c\u4ee5\u4fbf\u7528\u6237\u5feb\u901f\u5b9a\u4f4d\u3002</li> </ul> <p>\u6240\u4ee5\uff0c\u5728\u8003\u8651\u7070\u5ea6\u53d1\u5e03\u7cfb\u7edf\u7684\u7528\u6237\u4f53\u9a8c\u65f6\uff0c\u6211\u5efa\u8bae\u4f60\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u4e09\u4e2a\u539f\u5219\uff1a</p> <ul> <li>\u4fe1\u606f\u8981\u5168\u9762\u76f4\u89c2\uff0c\u5e76\u4e14\u805a\u5408\uff0c\u800c\u4e0d\u8981\u5206\u6563\uff1b</li> <li>\u64cd\u4f5c\u8981\u7b80\u5355\u76f4\u63a5\uff0c\u4e0d\u8981\u8ba9\u7528\u6237\u505a\u8fc7\u591a\u601d\u8003\uff1b</li> <li>\u6b65\u9aa4\u4e0e\u72b6\u6001\u8981\u6e05\u6670\uff0c\u51cf\u5c11\u6a21\u7cca\u7684\u63cf\u8ff0\u3002</li> </ul>"},{"location":"chap16/5Mon_mgt/#3_1","title":"3 \u53d1\u5e03\u7cfb\u7edf\u7684\u6838\u5fc3\u67b6\u6784\u548c\u529f\u80fd\u8bbe\u8ba1","text":""},{"location":"chap16/5Mon_mgt/#3-1","title":"3-1 \u53d1\u5e03\u7cfb\u7edf\u67b6\u6784","text":""},{"location":"chap16/5Mon_mgt/#3-2","title":"3-2 \u53d1\u5e03\u7cfb\u7edf\u6838\u5fc3\u6a21\u578b","text":"<p>\u53d1\u5e03\u7cfb\u7edf\u7684\u6838\u5fc3\u6a21\u578b\u4e3b\u8981\u5305\u62ec Group\u3001DeploymentConfig\u3001Deployment\u3001DeploymentBatch\uff0c\u548c DeploymentTarget \u8fd9 5 \u9879\u3002</p> <p></p> <p>\u540c\u65f6\uff0cGroup \u7684\u5c5e\u6027\u975e\u5e38\u91cd\u8981\uff0c\u5305\u62ec Site \u7ad9\u70b9\u3001Path \u865a\u62df\u8def\u5f84\u3001docBase \u7269\u7406\u8def\u5f84\u3001Port \u5e94\u7528\u7aef\u53e3\u3001HealthCheckUrl \u5065\u5eb7\u68c0\u6d4b\u5730\u5740\u7b49\uff0c\u8fd9\u4e9b\u5c5e\u6027\u90fd\u4e0e\u90e8\u7f72\u903b\u8f91\u606f\u606f\u76f8\u5173\u3002</p> <p>\u6240\u4ee5\u8fd9\u6837\u8bbe\u8ba1\uff0c\u662f\u56e0\u4e3a group \u8fd9\u4e2a\u5bf9\u8c61\u76f4\u63a5\u8868\u793a\u4e00\u4e2a\u5e94\u7528\u7684\u4e00\u7ec4\u5b9e\u4f8b\uff0c\u8fd9\u6837\u65e2\u53ef\u4ee5\u652f\u6301\u5355\u673a\u5355\u5e94\u7528\u7684\u90e8\u7f72\u67b6\u6784\uff0c\u4e5f\u53ef\u4ee5\u652f\u6301\u5355\u673a\u591a\u5e94\u7528\u7684\u60c5\u51b5\u3002</p> <p>DeploymentConfig\uff0c\u5373\u53d1\u5e03\u914d\u7f6e\uff0c\u63d0\u4f9b\u7ed9\u7528\u6237\u7684\u53ef\u4fee\u6539\u914d\u7f6e\u9879\u8981\u901a\u4fd7\u6613\u61c2\uff0c\u5305\u62ec\uff1a\u5355\u4e2a\u6279\u6b21\u53ef\u62c9\u51fa\u4e0a\u9650\u6bd4\u3001\u6279\u6b21\u95f4\u7b49\u5f85\u65f6\u95f4\u3001\u5e94\u7528\u542f\u52a8\u8d85\u65f6\u65f6\u95f4\u3001\u662f\u5426\u5ffd\u7565\u70b9\u706b\u3002</p> <p>Deployment\uff0c\u5373\u4e00\u4e2a\u53d1\u5e03\u5b9e\u4f53\uff0c\u4e3b\u8981\u5305\u62ec Group \u96c6\u7fa4\u3001DeploymentConfig \u53d1\u5e03\u914d\u7f6e\u3001Package \u53d1\u5e03\u5305\u3001\u53d1\u5e03\u65f6\u95f4\u3001\u6279\u6b21\u3001\u72b6\u6001\u7b49\u7b49\u4fe1\u606f\u3002</p> <p>DeploymentBatch\uff0c\u5373\u53d1\u5e03\u6279\u6b21\uff0c\u901a\u5e38\u53d1\u5e03\u7cfb\u7edf\u9009\u53d6\u4e00\u53f0\u670d\u52a1\u5668\u4f5c\u4e3a\u5821\u5792\u6279\u6b21\uff0c\u96c6\u7fa4\u91cc\u7684\u5176\u4ed6\u670d\u52a1\u5668\u4f1a\u6309\u7167\u7528\u6237\u8bbe\u7f6e\u7684\u5355\u4e2a\u6279\u6b21\u53ef\u62c9\u51fa\u4e0a\u9650\u6bd4\u5212\u5206\u6210\u591a\u4e2a\u6279\u6b21\uff0c\u5fc5\u987b\u5148\u5b8c\u6210\u5821\u5792\u6279\u6b21\u7684\u53d1\u5e03\u548c\u9a8c\u8bc1\uff0c\u624d\u80fd\u7ee7\u7eed\u5176\u4ed6\u6279\u6b21\u7684\u53d1\u5e03\u3002</p> <p>DeploymentBatch\uff0c\u5373\u53d1\u5e03\u6279\u6b21\uff0c\u901a\u5e38\u53d1\u5e03\u7cfb\u7edf\u9009\u53d6\u4e00\u53f0\u670d\u52a1\u5668\u4f5c\u4e3a\u5821\u5792\u6279\u6b21\uff0c\u96c6\u7fa4\u91cc\u7684\u5176\u4ed6\u670d\u52a1\u5668\u4f1a\u6309\u7167\u7528\u6237\u8bbe\u7f6e\u7684\u5355\u4e2a\u6279\u6b21\u53ef\u62c9\u51fa\u4e0a\u9650\u6bd4\u5212\u5206\u6210\u591a\u4e2a\u6279\u6b21\uff0c\u5fc5\u987b\u5148\u5b8c\u6210\u5821\u5792\u6279\u6b21\u7684\u53d1\u5e03\u548c\u9a8c\u8bc1\uff0c\u624d\u80fd\u7ee7\u7eed\u5176\u4ed6\u6279\u6b21\u7684\u53d1\u5e03\u3002</p> <p>\u8fd9\u91cc\u4e00\u5b9a\u8981\u6ce8\u610f\uff0c\u53d1\u5e03\u7cfb\u7edf\u7684\u5bf9\u8c61\u6a21\u578b\u548c\u4f60\u6240\u91c7\u7528\u7684\u90e8\u7f72\u67b6\u6784\u6709\u5f88\u5927\u5173\u7cfb</p>"},{"location":"chap16/5Mon_mgt/#3-3","title":"3-3 \u53d1\u5e03\u6d41\u7a0b\u53ca\u72b6\u6001\u6d41\u8f6c","text":"<p>\u53d1\u5e03\u7cfb\u7edf\u7684\u4e3b\u6d41\u7a0b\u5927\u81f4\u662f\uff1a</p> <p>\u540c\u4e00\u53d1\u5e03\u6279\u6b21\u4e2d\uff0c\u76ee\u6807\u670d\u52a1\u5668\u5e76\u884c\u53d1\u5e03\uff1b\u4e0d\u540c\u53d1\u5e03\u6279\u6b21\u95f4\u5219\u4e32\u884c\u5904\u7406\u3002\u6bcf\u53f0\u76ee\u6807\u670d\u52a1\u5668\u5728\u53d1\u5e03\u6d41\u7a0b\u4e2d\u7684\u4e94\u4e2a\u9636\u6bb5\u5305\u62ec Markdown\u3001Download\u3001Install\u3001Verify\u3001Markup\u3002</p> <p></p> <p>\u9996\u5148\uff0c\u501f\u52a9\u4e8e Celery \u5206\u5e03\u5f0f\u4efb\u52a1\u961f\u5217\u7684 Chain \u51fd\u6570\uff0c\u53d1\u5e03\u7cfb\u7edf\u5c06\u4e0a\u8ff0\u7684 Markdown\u3001Download\u3001Install\u3001Verify\u3001Markup \u4e94\u4e2a\u9636\u6bb5\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684\u94fe\u5f0f\u4efb\u52a1\u5de5\u4f5c\u6d41\uff0c\u4fdd\u8bc1\u4e00\u4e2a Chain \u51fd\u6570\u91cc\u7684\u5b50\u4efb\u52a1\u4f1a\u4f9d\u6b21\u6267\u884c\u3002</p> <p>\u5176\u6b21\uff0c\u6bcf\u4e2a\u5b50\u4efb\u52a1\u6267\u884c\u6210\u529f\u6216\u5931\u8d25\uff0c\u90fd\u4f1a\u5c06 DeploymentTarget \u8bbe\u7f6e\u4e3a\u5bf9\u5e94\u7684\u53d1\u5e03\u72b6\u6001\u3002\u4f8b\u5982\uff0c\u5821\u5792\u6279\u6b21\u4e2d\u7684 DeploymentTarget \u6267\u884c\u5230 Verify \u70b9\u706b\u8fd9\u4e2a\u4efb\u52a1\u65f6\uff0c\u5982\u679c\u70b9\u706b\u9a8c\u8bc1\u6210\u529f\uff0c\u90a3\u4e48 DeploymentTarget \u4f1a\u88ab\u7f6e\u4e3a <code>VERIFY_SUCCESS</code>\uff08\u70b9\u706b\u6210\u529f\uff09\u7684\u72b6\u6001\uff0c\u5426\u5219\u7f6e\u4e3a <code>VERIFY_FAILURE</code>\uff08\u70b9\u706b\u5931\u8d25\uff09\u7684\u72b6\u6001\u3002</p> <p>\u53d1\u5e03\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u6709\u4efb\u610f\u4e00\u53f0 DeploymentTarget \u53d1\u5e03\u5931\u8d25\uff0c\u90fd\u4f1a\u88ab\u8ba4\u4e3a\u662f\u53d1\u5e03\u5c40\u90e8\u5931\u8d25\uff0c\u5141\u8bb8\u7528\u6237\u91cd\u8bd5\u53d1\u5e03\u3002\u56e0\u6b64\uff0c\u91cd\u8bd5\u53d1\u5e03\u53ea\u9488\u5bf9\u4e8e\u6709\u5931\u8d25\u7684\u670d\u52a1\u5668\u6279\u6b21\u8fdb\u884c\u91cd\u8bd5\uff0c\u5bf9\u4e8e\u8be5\u6279\u6b21\u4e2d\u5df2\u7ecf\u53d1\u5e03\u6210\u529f\u7684\u670d\u52a1\u5668\uff0c\u53d1\u5e03\u7cfb\u7edf\u4f1a\u5bf9\u6bd4\u5f53\u524d\u8fd0\u884c\u7248\u672c\u4e0e\u53d1\u5e03\u76ee\u6807\u7248\u672c\u662f\u5426\u4e00\u81f4\uff0c\u5982\u679c\u4e00\u81f4\u4e14\u70b9\u706b\u9a8c\u8bc1\u901a\u8fc7\u7684\u8bdd\uff0c\u5219\u76f4\u63a5\u8df3\u8fc7\u3002</p> <p>\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c \u5821\u5792\u6279\u6b21\u4e0d\u540c\u4e8e\u5176\u4ed6\u6279\u6b21\uff1a\u5821\u5792\u6279\u6b21\u4e2d DeploymentTarget \u7684 Chain \u7684\u6700\u540e\u4e00\u4e2a\u5b50\u4efb\u52a1\u662f Verify \u70b9\u706b\uff0c\u800c\u4e0d\u662f Markup\u3002</p> <p>\u518d\u6b21\uff0c\u70b9\u706b\u9a8c\u8bc1\u6210\u529f\uff0cDeploymentTarget \u7684\u72b6\u6001\u6d41\u8f6c\u5230 <code>VERIFY_SUCCESS</code> \u540e\uff0c\u9700\u8981\u7528\u6237\u5728\u53d1\u5e03\u7cfb\u7edf\u9875\u9762\u4e0a\u89e6\u53d1 Baking \u64cd\u4f5c\uff0c\u5373\u5821\u5792\u6279\u6b21\u4e2d DeploymentTarget \u7684 Markup\uff0c\u6b64\u65f6\u6267\u884c\u7684\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u4efb\u52a1\u4e8b\u52a1\uff0c\u4f1a\u5c06\u5821\u5792\u6279\u6b21\u4e2d\u7684\u670d\u52a1\u5668\u62c9\u5165\u96c6\u7fa4\uff0c\u63a5\u5165\u751f\u4ea7\u6d41\u91cf\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u90e8\u5206\u662f\u7531\u7528\u6237\u89e6\u53d1\u800c\u975e\u81ea\u52a8\u62c9\u5165\u3002<code>BAKE_SUCCESS</code> \u5821\u5792\u62c9\u5165\u6210\u529f\u4e4b\u540e\uff0c\u5c31\u662f\u5176\u4ed6\u6279\u6b21\u7684 RollingOut \u4e8b\u52a1\u4e86\uff0c\u8fd9\u4e5f\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u4efb\u52a1\uff0c\u9700\u8981\u7531\u7528\u6237\u89e6\u53d1\u5176\u4ed6\u6279\u6b21\u5f00\u59cb\u53d1\u5e03\u7684\u64cd\u4f5c\u3002</p>"},{"location":"chap16/5Mon_mgt/#4_1","title":"4 \u5982\u4f55\u5229\u7528\u76d1\u63a7\u4fdd\u969c\u53d1\u5e03\u8d28\u91cf","text":""},{"location":"chap16/5Mon_mgt/#4-1","title":"4-1 \u76d1\u63a7\u7684\u5206\u7c7b","text":"<p>\u4ece\u4e00\u822c\u610f\u4e49\u4e0a\u6765\u8bb2\uff0c\u6211\u4eec\u4f1a\u628a\u76d1\u63a7\u5206\u4e3a\u4ee5\u4e0b\u51e0\u7c7b\uff1a</p> <ol> <li>\u7528\u6237\u4fa7\u76d1\u63a7\uff0c\u5173\u6ce8\u7684\u662f\u7528\u6237\u771f\u6b63\u611f\u53d7\u5230\u7684\u8bbf\u95ee\u901f\u5ea6\u548c\u7ed3\u679c\uff1b</li> <li>\u7f51\u7edc\u76d1\u63a7\uff0c\u5373 CDN \u4e0e\u6838\u5fc3\u7f51\u7edc\u7684\u76d1\u63a7\uff1b</li> <li>\u4e1a\u52a1\u76d1\u63a7\uff0c\u5173\u6ce8\u7684\u662f\u6838\u5fc3\u4e1a\u52a1\u6307\u6807\u7684\u6ce2\u52a8\uff1b</li> <li>\u5e94\u7528\u76d1\u63a7\uff0c\u5373\u670d\u52a1\u8c03\u7528\u94fe\u7684\u76d1\u63a7\uff1b</li> <li>\u7cfb\u7edf\u76d1\u63a7\uff0c\u5373\u57fa\u7840\u8bbe\u65bd\u3001\u865a\u62df\u673a\u53ca\u64cd\u4f5c\u7cfb\u7edf\u7684\u76d1\u63a7\u3002</li> </ol> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u505a\u597d\u4e00\u4e2a\u76d1\u63a7\u7cfb\u7edf\uff0c\u53ef\u4ee5\u4ece\u8fd9\u4e94\u4e2a\u5c42\u9762\u53bb\u8003\u8651\uff0c\u5c06\u8fd9\u4e94\u4e2a\u5c42\u9762\u6574\u5408\u5c31\u53ef\u4ee5\u505a\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u3001\u7aef\u5230\u7aef\u7684\u5168\u94fe\u8def\u76d1\u63a7\u7cfb\u7edf\u3002\u5f53\u7136\uff0c\u76d1\u63a7\u7cfb\u7edf\u7684\u8fd9 5 \u4e2a\u5c42\u6b21\u7684\u76ee\u6807\u548c\u5b9e\u73b0\u65b9\u6cd5\u6709\u6240\u4e0d\u540c\uff0c\u63a5\u4e0b\u6765\u6211\u5c06\u5206\u522b\u8fdb\u884c\u4ecb\u7ecd\u3002</p>"},{"location":"chap16/5Mon_mgt/#4-2","title":"4-2 \u7528\u6237\u4fa7\u76d1\u63a7","text":"<p>\u7528\u6237\u4fa7\u7684\u76d1\u63a7\u901a\u5e38\u4ece\u4ee5\u4e0b\u51e0\u4e2a\u7ef4\u5ea6\u8fdb\u884c\uff0c\u8fd9\u4e9b\u76d1\u63a7\u6570\u636e\u65e2\u53ef\u4ee5\u901a\u8fc7\u6253\u70b9\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5b9a\u671f\u56de\u6536\u65e5\u5fd7\u7684\u65b9\u5f0f\u6536\u96c6\u3002</p> <ul> <li>\u7aef\u5230\u7aef\u7684\u76d1\u63a7\uff0c\u4e3b\u8981\u5305\u62ec\u5305\u62ec\u4e00\u4e9b\u8bbf\u95ee\u91cf\u3001\u8bbf\u95ee\u6210\u529f\u7387\u3001\u54cd\u5e94\u65f6\u95f4\u3001\u53d1\u5305\u56de\u5305\u65f6\u95f4\u7b49\u7b49\u76d1\u63a7\u6307\u6807\u3002\u540c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e0d\u540c\u7ef4\u5ea6\u5b9a\u4e49\u8fd9\u4e9b\u6307\u6807\uff0c\u6bd4\u5982\uff1a\u5730\u533a\u3001\u8fd0\u8425\u5546\u3001App \u7248\u672c\u3001\u8fd4\u56de\u7801\u3001\u7f51\u7edc\u7c7b\u578b\u7b49\u7b49\u3002\u56e0\u6b64\uff0c\u901a\u8fc7\u8fd9\u4e9b\u6307\u6807\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u83b7\u5f97\u7528\u6237\u5168\u65b9\u4f4d\u7684\u611f\u53d7\u3002</li> <li>\u79fb\u52a8\u7aef\u7684\u65e5\u5fd7\u3002\u6211\u4eec\u9664\u4e86\u5173\u6ce8\u7cfb\u7edf\u8fd0\u884c\u7684\u65e5\u5fd7\u5916\uff0c\u8fd8\u4f1a\u5173\u6ce8\u7cfb\u7edf\u5d29\u6e83\u6216\u7cfb\u7edf\u5f02\u5e38\u7c7b\u7684\u65e5\u5fd7\uff0c\u4ee5\u6c42\u7b2c\u4e00\u65f6\u95f4\u76d1\u63a7\u5230\u7cfb\u7edf\u6545\u969c\u3002</li> <li>\u8bbe\u5907\u8868\u73b0\u76d1\u63a7\uff0c\u4e3b\u8981\u6307\u5bf9 CPU\u3001\u5185\u5b58\u3001\u6e29\u5ea6\u7b49\u7684\u76d1\u63a7\uff0c\u4ee5\u53ca\u4e00\u4e9b\u9875\u9762\u7ea7\u7684\u5361\u987f\u6216\u767d\u5c4f\u73b0\u8c61\uff1b\u6216\u8005\u662f\u76f4\u63a5\u7684\u5806\u6808\u5206\u6790\u7b49\u3002</li> <li>\u552f\u4e00\u7528\u6237 ID \u7684\u76d1\u63a7\u3002\u9664\u4e86\u4ee5\u4e0a\u4e09\u79cd\u5168\u5c40\u7684\u76d1\u63a7\u7ef4\u5ea6\u5916\uff0c\u7528\u6237\u4fa7\u7684\u76d1\u63a7\u4e00\u5b9a\u8981\u5177\u5907\u9488\u5bf9\u552f\u4e00\u7528\u6237 ID \u7684\u76d1\u63a7\u80fd\u529b\uff0c\u80fd\u591f\u83b7\u53d6\u67d0\u4e00\u4e2a\u72ec\u7acb\u7528\u6237\u7684\u5177\u4f53\u60c5\u51b5\u3002</li> </ul>"},{"location":"chap16/5Mon_mgt/#4-3","title":"4-3 \u7f51\u7edc\u76d1\u63a7","text":"<p>\u7f51\u7edc\u662f\u6574\u4e2a\u7cfb\u7edf\u901a\u8def\u7684\u4fdd\u969c\u3002\u56e0\u4e3a\u5927\u578b\u751f\u4ea7\u7f51\u7edc\u914d\u7f6e\u7684\u590d\u6742\u5ea6\u901a\u5e38\u6bd4\u8f83\u9ad8\uff0c\u4ee5\u53ca\u7cfb\u7edf\u7f51\u7edc\u67b6\u6784\u7684\u7ea6\u675f\uff0c\u6240\u4ee5\u7f51\u7edc\u76d1\u63a7\u4e00\u822c\u6bd4\u8f83\u96be\u505a\u3002</p> <p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4ece\u6301\u7eed\u4ea4\u4ed8\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u7f51\u7edc\u76d1\u63a7\u5e76\u4e0d\u9700\u8981\u505a\u5230\u592a\u7ec6\u81f4\u548c\u592a\u6df1\u5165\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u7f51\u7edc\u95ee\u9898\u6700\u7ec8\u4e5f\u4f1a\u8868\u73b0\u4e3a\u5176\u4ed6\u5e94\u7528\u5c42\u9762\u7684\u6545\u969c\u95ee\u9898\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u7684\u8bc9\u6c42\u662f\u8981\u5feb\u901f\u5b9a\u4f4d root cause\uff0c\u90a3\u5c31\u9700\u8981\u82b1\u8d39\u6bd4\u8f83\u5927\u7684\u7cbe\u529b\u53bb\u505a\u597d\u7f51\u7edc\u76d1\u63a7\u4e86\u3002</p> <p>\u7f51\u7edc\u76d1\u63a7\uff0c\u5927\u81f4\u53ef\u4ee5\u5206\u4e3a\u4e24\u5927\u90e8\u5206\uff1a</p> <ul> <li>\u516c\u7f51\u76d1\u63a7\u3002\u8fd9\u90e8\u5206\u76d1\u63a7\uff0c\u53ef\u4ee5\u5229\u7528\u6a21\u62df\u8bf7\u6c42\u7684\u624b\u6bb5\uff08\u6bd4\u5982\uff0cCDN \u8282\u70b9\u6a21\u62df\u3001\u7528\u6237\u7aef\u6a21\u62df\uff09\uff0c\u83b7\u53d6\u5bf9 CDN\u3001DNS \u7b49\u516c\u7f51\u8d44\u6e90\uff0c\u4ee5\u53ca\u7f51\u7edc\u5ef6\u65f6\u7b49\u76d1\u63a7\u7684\u6570\u636e\u3002\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u91c7\u6837\u7684\u65b9\u5f0f\u83b7\u53d6\u8fd9\u90e8\u5206\u6570\u636e\u3002</li> <li>\u5185\u7f51\u76d1\u63a7\u3002\u8fd9\u90e8\u5206\u76d1\u63a7\uff0c\u4e3b\u8981\u662f\u5bf9\u673a\u623f\u5185\u90e8\u6838\u5fc3\u4ea4\u6362\u673a\u6570\u636e\u548c\u8def\u7531\u6570\u636e\u7684\u76d1\u63a7\u3002\u5982\u679c\u4f60\u80fd\u6253\u9020\u5168\u5c40\u7684\u89c6\u56fe\uff0c\u5f62\u6210\u76f4\u89c2\u7684\u8def\u7531\u62d3\u6251\uff0c\u53ef\u4ee5\u5927\u5e45\u63d0\u5347\u76d1\u63a7\u6548\u7387\u3002</li> </ul>"},{"location":"chap16/5Mon_mgt/#4-4","title":"4-4 \u4e1a\u52a1\u76d1\u63a7","text":"<p>\u5982\u679c\u4f60\u7684\u4e1a\u52a1\u5177\u6709\u8fde\u7eed\u6027\uff0c\u4e1a\u52a1\u91cf\u8fbe\u5230\u4e00\u5b9a\u6570\u91cf\u540e\u5448\u73b0\u6bd4\u8f83\u7a33\u5b9a\u7684\u53d8\u5316\u8d8b\u52bf\uff0c\u90a3\u4e48\u4f60\u5c31\u53ef\u4ee5\u5229\u7528\u4e1a\u52a1\u6307\u6807\u6765\u8fdb\u884c\u76d1\u63a7\u4e86\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5355\u4f4d\u65f6\u95f4\u5185\u7684\u8ba2\u5355\u9884\u6d4b\u7ebf\uff0c\u662f\u6700\u597d\u7684\u4e1a\u52a1\u76d1\u63a7\u6307\u6807\u3002</p> <p>\u4efb\u4f55\u7684\u7cfb\u7edf\u6545\u969c\u6216\u95ee\u9898\uff0c\u5f71\u54cd\u6700\u5927\u7684\u5c31\u662f\u4e1a\u52a1\u6307\u6807\uff0c\u800c\u4e00\u822c\u4f01\u4e1a\u6700\u91cd\u8981\u7684\u4e1a\u52a1\u6307\u6807\u5c31\u662f\u8ba2\u5355\u548c\u652f\u4ed8\u3002\u56e0\u6b64\uff0c\u76d1\u63a7\u4f01\u4e1a\u7684\u6838\u5fc3\u4e1a\u52a1\u6307\u6807\uff0c\u80fd\u591f\u4ee5\u6700\u5feb\u7684\u901f\u5ea6\u53cd\u5e94\u7cfb\u7edf\u662f\u5426\u7a33\u5b9a\u3002 \u53cd\u4e4b\uff0c\u5982\u679c\u7cfb\u7edf\u6545\u969c\u6216\u95ee\u9898\u5e76\u4e0d\u5f71\u54cd\u6838\u5fc3\u4e1a\u52a1\u6307\u6807\uff0c\u90a3\u4e48\u4e5f\u5c31\u4e0d\u592a\u4f1a\u9020\u6210\u7279\u522b\u4e25\u91cd\u7684\u540e\u679c\uff0c\u76d1\u63a7\u7684\u4f18\u5148\u7ea7\u548c\u529b\u5ea6\u4e5f\u5c31\u6ca1\u6709\u90a3\u4e48\u91cd\u8981\u3002</p>"},{"location":"chap16/5Mon_mgt/#4-5","title":"4-5 \u5e94\u7528\u76d1\u63a7","text":"<p>\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e0b\uff0c\u5e94\u7528\u76d1\u63a7\u9664\u4e86\u8981\u89e3\u51b3\u5e38\u89c4\u7684\u5355\u4e2a\u5e94\u7528\u672c\u8eab\u7684\u76d1\u63a7\u95ee\u9898\u5916\uff0c\u8fd8\u9700\u8981\u89e3\u51b3\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u7279\u522b\u662f\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\uff0c\u670d\u52a1\u4e0e\u670d\u52a1\u4e4b\u95f4\u7684\u8c03\u7528\u5173\u7cfb\u3001\u901f\u5ea6\u548c\u7ed3\u679c\u7b49\u76d1\u63a7\u95ee\u9898\u3002\u56e0\u6b64\uff0c\u5e94\u7528\u76d1\u63a7\u4e00\u822c\u4e5f\u88ab\u53eb\u4f5c\u8c03\u7528\u94fe\u76d1\u63a7\u3002</p> <p>\u8c03\u7528\u94fe\u76d1\u63a7\u4e00\u822c\u9700\u8981\u6536\u96c6\u5e94\u7528\u5c42\u5168\u91cf\u7684\u6570\u636e\u8fdb\u884c\u5206\u6790\uff0c\u8981\u5206\u6790\u7684\u5185\u5bb9\u5305\u62ec\uff1a\u8c03\u7528\u91cf\u3001\u54cd\u5e94\u65f6\u957f\u3001\u9519\u8bef\u91cf\u7b49\uff1b\u9762\u5411\u7684\u7cfb\u7edf\u5305\u62ec\uff1a\u5e94\u7528\u3001\u4e2d\u95f4\u4ef6\u3001\u7f13\u5b58\u3001\u6570\u636e\u5e93\u3001\u5b58\u50a8\u7b49\uff1b\u540c\u65f6\u4e5f\u652f\u6301\u5bf9 JVM \u7b49\u7684\u76d1\u63a7\u3002</p> <p>\u8c03\u7528\u94fe\u76d1\u63a7\u7cfb\u7edf\uff0c\u4e00\u822c\u91c7\u7528\u5728\u6846\u67b6\u5c42\u9762\u7edf\u4e00\u5b9a\u4e49\u7684\u65b9\u5f0f\uff0c\u4ee5\u505a\u5230\u6570\u636e\u91c7\u96c6\u5bf9\u4e1a\u52a1\u5f00\u53d1\u900f\u660e\uff0c\u4f46\u540c\u65f6\u4e5f\u9700\u8981\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u81ea\u5b9a\u4e49\u57cb\u70b9\u76d1\u63a7\u67d0\u4e9b\u4ee3\u7801\u7247\u6bb5\u3002</p> <p>\u53e6\u5916\uff0c\u9664\u4e86\u8c03\u7528\u94fe\u76d1\u63a7\uff0c\u4e0d\u8981\u5fd8\u4e86\u6700\u4f20\u7edf\u7684\u5e94\u7528\u65e5\u5fd7\u76d1\u63a7\u3002\u5c06\u5e94\u7528\u65e5\u5fd7\u6709\u6548\u5730\u8054\u5408\uff0c\u5e76\u8fdb\u884c\u5206\u6790\uff0c\u4e5f\u53ef\u4ee5\u8d77\u5230\u540c\u6837\u7684\u5e94\u7528\u76d1\u63a7\u4f5c\u7528\uff0c\u4f46\u5176\u7c92\u5ea6\u548c\u7cbe\u51c6\u5ea6\u6bd4\u4e2d\u95f4\u4ef6\u91c7\u96c6\u65b9\u5f0f\u8981\u5f31\u5f97\u591a\u3002</p>"},{"location":"chap16/5Mon_mgt/#4-6","title":"4-6 \u7cfb\u7edf\u76d1\u63a7","text":"<p>\u7cfb\u7edf\u76d1\u63a7\uff0c\u6307\u7684\u662f\u5bf9\u57fa\u7840\u8bbe\u65bd\u7684\u76d1\u63a7\u3002\u6211\u4eec\u901a\u5e38\u4f1a\u6536\u96c6 CPU\u3001\u5185\u5b58\u3001I/O\u3001\u78c1\u76d8\u3001\u7f51\u7edc\u8fde\u63a5\u7b49\u4f5c\u4e3a\u76d1\u63a7\u6307\u6807\u3002</p> <p>\u5bf9\u4e8e\u7cfb\u7edf\u76d1\u63a7\u7684\u6307\u6807\uff0c\u6211\u4eec\u901a\u5e38\u91c7\u7528\u5b9a\u671f\u91c7\u6837\u7684\u65b9\u5f0f\u8fdb\u884c\u91c7\u96c6\uff0c\u4e00\u822c\u9009\u53d6 1 \u5206\u949f\u30013 \u5206\u949f\u6216 5 \u5206\u949f\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u4f46\u4e00\u822c\u4e0d\u4f1a\u8d85\u8fc7 5 \u5206\u949f\uff0c\u5426\u5219\u76d1\u63a7\u6548\u679c\u4f1a\u56e0\u4e3a\u95f4\u9694\u65f6\u95f4\u8fc7\u957f\u800c\u5927\u6253\u6298\u6263</p>"},{"location":"chap16/5Mon_mgt/#4-7","title":"4-7 \u53d1\u5e03\u76d1\u63a7\u7684\u5e38\u89c1\u95ee\u9898","text":"<p>\u5feb\u901f\u53d1\u73b0\u53d1\u5e03\u5e26\u6765\u7684\u7cfb\u7edf\u5f02\u5e38\u3002</p> <p>\u5bf9\u4e8e\u8fd9\u6837\u7684\u8bc9\u6c42\uff0c\u4f18\u5148\u89c2\u5bdf\u4e1a\u52a1\u76d1\u63a7\u663e\u7136\u662f\u6700\u76f4\u63a5\u3001\u6709\u6548\u7684\u65b9\u5f0f\u3002\u4f46\u662f\u53ea\u89c2\u5bdf\u4e1a\u52a1\u76d1\u63a7\u5e76\u4e0d\u80fd\u5b8c\u5168\u6ee1\u8db3\u8fd9\u6837\u7684\u9700\u6c42\uff0c\u56e0\u4e3a\u6709\u4e24\u79cd\u60c5\u51b5\u662f\u4e1a\u52a1\u76d1\u63a7\u65e0\u80fd\u4e3a\u529b\u7684\uff1a</p> <ul> <li>\u7b2c\u4e00\u79cd\u60c5\u51b5\u662f\u6211\u4eec\u6240\u8c13\u7684\u7d2f\u79ef\u6548\u5e94\uff0c\u5373\u7cfb\u7edf\u5f02\u5e38\u9700\u8981\u7d2f\u79ef\u5230\u4e00\u5b9a\u91cf\u540e\u624d\u4f1a\u8868\u73b0\u4e3a\u4e1a\u52a1\u5f02\u5e38\uff1b</li> <li>\u53e6\u5916\u4e00\u79cd\u60c5\u51b5\u5c31\u662f\u4e1a\u52a1\u7684\u9634\u8dcc\uff0c\u8fd9\u79cd\u5c0f\u5e45\u5ea6\u7684\u53d8\u5316\u4e5f\u65e0\u6cd5\u5728\u4e1a\u52a1\u76d1\u63a7\u4e0a\u5f97\u5230\u4f53\u73b0\u3002</li> </ul> <p>\u7b2c\u4e00\uff0c\u6d4b\u8bd5\u73af\u5883\u4e5f\u8981\u76d1\u63a7\u5417\uff1f</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u8ba4\u8bc6\u5230\u4e00\u4e2a\u95ee\u9898\uff0c\u5373\uff1a\u90e8\u7f72\u4e00\u5957\u5b8c\u6574\u7684\u76d1\u63a7\u7cfb\u7edf\u7684\u4ee3\u4ef7\u975e\u5e38\u6602\u8d35\u3002\u800c\u4e14\uff0c\u76d1\u63a7\u4f5c\u4e3a\u5e95\u5c42\u670d\u52a1\uff0c\u4f60\u8fd8\u8981\u4fdd\u8bc1\u5b83\u7684\u7a33\u5b9a\u6027\u548c\u6269\u5c55\u6027\u3002</p> <p>\u6211\u6765\u8bf4\u8bf4\u6211\u5efa\u8bae\u7684\u505a\u6cd5\uff1a</p> <ul> <li>\u5982\u679c\u4f60\u7684\u76d1\u63a7\u7cfb\u7edf\u53ea\u80fd\u505a\u5230\u7cfb\u7edf\u76d1\u63a7\u6216\u65e5\u5fd7\u7ea7\u522b\u7684\u7cfb\u7edf\u76d1\u63a7\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e9b\u5bf9\u7cfb\u7edf\u6027\u80fd\u538b\u69a8\u6bd4\u8f83\u5389\u5bb3\u3001\u5bf9\u7a33\u5b9a\u6027\u4e5f\u6ca1\u592a\u591a\u8981\u6c42\u7684\u6d4b\u8bd5\u73af\u5883\u6765\u8bf4\uff0c\u65e0\u9700\u914d\u5907\u5b8c\u6574\u7684\u76d1\u63a7\u7cfb\u7edf\u3002</li> <li>\u5982\u679c\u4f60\u7684\u76d1\u63a7\u7cfb\u7edf\u5df2\u7ecf\u505a\u5230\u4e86\u8c03\u7528\u94fe\u751a\u81f3\u5168\u94fe\u8def\u7684\u76d1\u63a7\uff0c\u90a3\u4e48\u76d1\u63a7\u7cfb\u7edf\u65e0\u7591\u5c31\u662f\u4f60\u7684\u201c\u9e70\u773c \"\uff0c\u9664\u4e86\u53d1\u73b0\u5f02\u5e38\uff0c\u5b83\u8fd8\u53ef\u4ee5\u5728\u5b9a\u4f4d\u5f02\u5e38\u7b49\u65b9\u9762\u7ed9\u4f60\u5e2e\u52a9\uff08\u6bd4\u5982\uff0c\u5bf9\u6d4b\u8bd5\u73af\u5883\u7684 Bug \u5b9a\u4f4d\u3001\u6027\u80fd\u6d4b\u8bd5\u7b49\u90fd\u6709\u6781\u5927\u5e2e\u52a9\uff09\u3002\u5728\u8fd9\u6837\u7684\u60c5\u51b5\u4e0b\uff0c\u4f60\u5c31\u4e00\u5b9a\u8981\u4e3a\u6d4b\u8bd5\u73af\u5883\u914d\u5907\u76d1\u63a7\u7cfb\u7edf</li> </ul> <p>\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u53d1\u5e03\u540e\u9700\u8981\u76d1\u63a7\u591a\u4e45\uff1f</p> <p>\u6211\u5efa\u8bae\u7684\u53d1\u5e03\u540e\u76d1\u63a7\u65f6\u95f4\u4e3a 30 \u5206\u949f\u3002</p> <p>\u7b2c\u4e09\u4e2a\u95ee\u9898\uff0c\u5982\u4f55\u786e\u5b9a\u5f02\u5e38\u662f\u7531\u6211\u7684\u53d1\u5e03\u5f15\u8d77\u7684\uff1f</p> <p>\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f60\u9700\u8981\u5efa\u7acb\u4e00\u5957\u5b8c\u6574\u7684\u8fd0\u7ef4\u4e8b\u4ef6\u8bb0\u5f55\u4f53\u7cfb\uff0c\u5e76\u5c06\u53d1\u5e03\u7eb3\u5165\u5176\u4e2d\uff0c\u8bb0\u5f55\u6240\u6709\u7684\u8fd0\u7ef4\u4e8b\u4ef6\u3002\u5f53\u6709\u5f02\u5e38\u60c5\u51b5\u65f6\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u65f6\u95f4\u7ebf\u8fdb\u884c\u76f8\u5173\u6027\u5206\u6790\u3002</p>"},{"location":"chap16/5Mon_mgt/#4-8","title":"4-8 \u603b\u7ed3","text":"<p>\u9996\u5148\uff0c\u6211\u4ecb\u7ecd\u4e86\u76d1\u63a7\u7684\u51e0\u79cd\u5206\u7c7b\uff0c\u4ee5\u53ca\u5206\u522b\u53ef\u4ee5\u91c7\u7528\u4ec0\u4e48\u65b9\u5f0f\u53bb\u91c7\u96c6\u6570\u636e\uff1a</p> <ul> <li>\u7528\u6237\u4fa7\u76d1\u63a7\uff0c\u53ef\u4ee5\u901a\u8fc7\u6253\u70b9\u6536\u96c6\uff0c\u6216\u8005\u5b9a\u671f\u91c7\u96c6\u65e5\u5fd7\u7684\u65b9\u5f0f\u8fdb\u884c\u6570\u636e\u6536\u96c6\uff1b</li> <li>\u7f51\u7edc\u76d1\u63a7\uff0c\u901a\u8fc7\u6a21\u62df\u624b\u6bb5\u6216\u5b9a\u671f\u91c7\u6837\u8fdb\u884c\u6536\u96c6\uff1b</li> <li>\u4e1a\u52a1\u76d1\u63a7\uff0c\u9700\u8981\u5b9a\u4e49\u6b63\u786e\u7684\u6307\u6807\u4ee5\u53ca\u76f8\u5339\u914d\u7684\u91c7\u96c6\u6280\u672f\uff0c\u52a1\u5fc5\u6ce8\u610f\u5b9e\u65f6\u6027\uff1b</li> <li>\u5e94\u7528\u76d1\u63a7\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e2d\u95f4\u4ef6\u6253\u70b9\u91c7\u96c6\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u65e5\u5fd7\u8054\u5408\u5206\u6790\u8fdb\u884c\u6570\u636e\u91c7\u96c6\uff1b</li> <li>\u7cfb\u7edf\u76d1\u63a7\uff0c\u901a\u5e38\u91c7\u7528\u5b9a\u671f\u91c7\u6837\u7684\u65b9\u5f0f\u6536\u96c6\u6570\u636e\u3002</li> </ul> <p>\u5176\u6b21\uff0c\u6211\u548c\u4f60\u5206\u4eab\u4e86\u4e09\u4e2a\u5bf9\u53d1\u5e03\u6765\u8bf4\u7279\u522b\u91cd\u8981\u7684\u76d1\u63a7\u95ee\u9898\uff1a</p> <ul> <li>\u6d4b\u8bd5\u73af\u5883\u7684\u76d1\u63a7\u9700\u8981\u89c6\u4f5c\u7528\u800c\u5b9a\uff0c\u5982\u679c\u4e0d\u80fd\u5e2e\u52a9\u5206\u6790\u548c\u5b9a\u4f4d\u95ee\u9898\uff0c\u5219\u4e0d\u9700\u8981\u5f88\u5168\u9762\u7684\u76d1\u63a7\uff1b</li> <li>\u4e00\u822c\u53d1\u5e03\u540e\uff0c\u6211\u5efa\u8bae\u7ee7\u7eed\u575a\u6301\u76d1\u63a7 30 \u5206\u949f\uff0c\u628a\u8fd9\u4e2a\u6d41\u7a0b\u7eb3\u5165\u53d1\u5e03\u6d41\u7a0b\u4e2d\uff1b</li> <li>\u5b8c\u6574\u7684\u8fd0\u7ef4\u4e8b\u4ef6\u8bb0\u5f55\u4f53\u7cfb\uff0c\u53ef\u4ee5\u5e2e\u4f60\u5b9a\u4f4d\u67d0\u6b21\u6545\u969c\u662f\u5426\u662f\u7531\u53d1\u5e03\u5f15\u8d77\u7684\u3002</li> </ul>"},{"location":"chap16/6Test_mgt/","title":"L6 \u6d4b\u8bd5\u7ba1\u7406","text":""},{"location":"chap16/6Test_mgt/#1","title":"1 \u4ee3\u7801\u9759\u6001\u68c0\u67e5\u5b9e\u8df5","text":"<p>\u56e0\u4e3a\u8fd9\u4e2a\u4e13\u680f\u6211\u4eec\u8981\u89e3\u51b3\u7684\u6700\u4e3b\u8981\u7684\u95ee\u9898\u662f\u6301\u7eed\u4ea4\u4ed8\uff0c\u6240\u4ee5\u6211\u5728\u8fd9\u4e2a\u6d4b\u8bd5\u7ba1\u7406\u8fd9\u4e2a\u7cfb\u5217\u91cc\u9762\uff0c\u4e0d\u4f1a\u53bb\u8fc7\u591a\u7684\u5c55\u5f00\u6d4b\u8bd5\u672c\u8eab\u7684\u5185\u5bb9\uff0c\u800c\u662f\u8981\u628a\u91cd\u70b9\u653e\u5728\u4e0e\u6301\u7eed\u4ea4\u4ed8\u76f8\u5173\u7684\u4e09\u4e2a\u91cd\u70b9\u4e0a\uff1a</p> <ul> <li>\u4ee3\u7801\u9759\u6001\u68c0\u67e5\uff1b</li> <li>\u7834\u574f\u6027\u6d4b\u8bd5\uff1b</li> <li>Mock \u4e0e\u56de\u653e\u3002</li> </ul>"},{"location":"chap16/6Test_mgt/#1-1","title":"1-1 \u4e3a\u4ec0\u4e48\u9700\u8981\u4ee3\u7801\u9759\u6001\u68c0\u67e5\uff1f","text":"<p>\u4ee3\u7801\u9759\u6001\u68c0\u67e5\uff0c\u5373\u9759\u6001\u4ee3\u7801\u5206\u6790\uff0c\u662f\u6307\u4e0d\u8fd0\u884c\u88ab\u6d4b\u4ee3\u7801\uff0c\u4ec5\u901a\u8fc7\u5206\u6790\u6216\u68c0\u67e5\u6e90\u7a0b\u5e8f\u7684\u8bed\u6cd5\u3001\u7ed3\u6784\u3001\u8fc7\u7a0b\u3001\u63a5\u53e3\u7b49\u68c0\u67e5\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\uff0c\u5e76\u627e\u51fa\u4ee3\u7801\u4e2d\u9690\u85cf\u7684\u9519\u8bef\u548c\u7f3a\u9677\uff08\u6bd4\u5982\u53c2\u6570\u4e0d\u5339\u914d\u3001\u6709\u6b67\u4e49\u7684\u5d4c\u5957\u8bed\u53e5\u3001\u9519\u8bef\u7684\u9012\u5f52\u3001\u975e\u6cd5\u8ba1\u7b97\u3001\u53ef\u80fd\u51fa\u73b0\u7684\u7a7a\u6307\u9488\u5f15\u7528\u7b49\u7b49\uff09\u3002</p> <p>\u5728\u8f6f\u4ef6\u5f00\u53d1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9759\u6001\u4ee3\u7801\u5206\u6790\u5f80\u5f80\u5728\u52a8\u6001\u6d4b\u8bd5\u4e4b\u524d\u8fdb\u884c\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u8bbe\u8ba1\u52a8\u6001\u6d4b\u8bd5\u7528\u4f8b\u7684\u53c2\u8003\u3002\u6709\u7edf\u8ba1\u6570\u636e\u8bc1\u660e\uff0c\u5728\u6574\u4e2a\u8f6f\u4ef6\u5f00\u53d1\u751f\u547d\u5468\u671f\u4e2d\uff0c\u6709 70% \u5de6\u53f3\u7684\u4ee3\u7801\u903b\u8f91\u8bbe\u8ba1\u548c\u7f16\u7801\u7f3a\u9677\u5c5e\u4e8e\u91cd\u590d\u6027\u9519\u8bef\uff0c\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7\u9759\u6001\u4ee3\u7801\u5206\u6790\u53d1\u73b0\u548c\u4fee\u590d\u3002</p> <p>\u4f46\u662f\uff0c\u4ee3\u7801\u9759\u6001\u68c0\u67e5\u89c4\u5219\u7684\u5efa\u7acb\u5f80\u5f80\u9700\u8981\u5927\u91cf\u7684\u65f6\u95f4\u6c89\u6dc0\u548c\u6280\u672f\u79ef\u7d2f\uff0c\u56e0\u6b64\u5bf9\u521d\u5b66\u8005\u6765\u8bf4\uff0c\u6311\u9009\u5408\u9002\u7684\u9759\u6001\u4ee3\u7801\u5206\u6790\u5de5\u5177\uff0c\u81ea\u52a8\u5316\u6267\u884c\u4ee3\u7801\u68c0\u67e5\u548c\u5206\u6790\uff0c\u53ef\u4ee5\u6781\u5927\u5730\u63d0\u9ad8\u4ee3\u7801\u9759\u6001\u68c0\u67e5\u7684\u53ef\u9760\u6027\uff0c\u8282\u7701\u6d4b\u8bd5\u6210\u672c\u3002</p>"},{"location":"chap16/6Test_mgt/#1-2","title":"1-2 \u9759\u6001\u68c0\u67e5\u5de5\u5177\u7684\u4f18\u52bf","text":"<p>\u603b\u4f53\u6765\u8bf4\uff0c\u9759\u6001\u68c0\u67e5\u5de5\u5177\u7684\u4f18\u52bf\uff0c\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u4e09\u4e2a\u65b9\u9762\uff1a</p> <ul> <li>\u5e2e\u52a9\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u81ea\u52a8\u6267\u884c\u9759\u6001\u4ee3\u7801\u5206\u6790\uff0c\u5feb\u901f\u5b9a\u4f4d\u4ee3\u7801\u7684\u9690\u85cf\u9519\u8bef\u548c\u7f3a\u9677\uff1b</li> <li>\u5e2e\u52a9\u8f6f\u4ef6\u8bbe\u8ba1\u4eba\u5458\u66f4\u4e13\u6ce8\u4e8e\u5206\u6790\u548c\u89e3\u51b3\u4ee3\u7801\u8bbe\u8ba1\u7f3a\u9677\uff1b</li> <li>\u663e\u8457\u51cf\u5c11\u5728\u4ee3\u7801\u9010\u884c\u68c0\u67e5\u4e0a\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u63d0\u9ad8\u8f6f\u4ef6\u53ef\u9760\u6027\u7684\u540c\u65f6\u53ef\u4ee5\u964d\u4f4e\u8f6f\u4ef6\u6d4b\u8bd5\u6210\u672c\u3002</li> </ul> <p>\u76ee\u524d\uff0c\u5df2\u7ecf\u6709\u975e\u5e38\u591a\u7684\u3001\u6210\u719f\u7684\u4ee3\u7801\u9759\u6001\u68c0\u67e5\u5de5\u5177\u4e86\u3002\u5176\u4e2d\uff0cSonarQube \u662f\u4e00\u6b3e\u76ee\u524d\u6bd4\u8f83\u6d41\u884c\u7684\u5de5\u5177\uff0c\u56fd\u5185\u5f88\u591a\u4e92\u8054\u7f51\u516c\u53f8\u90fd\u9009\u62e9\u7528\u5b83\u6765\u642d\u5efa\u9759\u6001\u68c0\u67e5\u7684\u5e73\u53f0\u3002</p> <p>SonarQube \u91c7\u7528\u7684\u662f B/S \u67b6\u6784\uff0c\u901a\u8fc7\u63d2\u4ef6\u5f62\u5f0f\uff0c\u53ef\u4ee5\u652f\u6301\u5bf9 Java\u3001C\u3001C++\u3001JavaScript \u7b49\u4e8c\u5341\u51e0\u79cd\u7f16\u7a0b\u8bed\u8a00\u7684\u4ee3\u7801\u8d28\u91cf\u7ba1\u7406\u4e0e\u68c0\u6d4b\u3002</p> <p>Sonar \u901a\u8fc7\u5ba2\u6237\u7aef\u63d2\u4ef6\u7684\u65b9\u5f0f\u5206\u6790\u6e90\u4ee3\u7801\uff0c\u53ef\u4ee5\u91c7\u7528 IDE \u63d2\u4ef6\u3001Sonar-Scanner \u63d2\u4ef6\u3001Ant \u63d2\u4ef6\u548c Maven \u63d2\u4ef6\u7b49\uff0c\u5e76\u901a\u8fc7\u4e0d\u540c\u7684\u5206\u6790\u673a\u5236\u5b8c\u6210\u5bf9\u9879\u76ee\u6e90\u4ee3\u7801\u7684\u5206\u6790\u548c\u626b\u63cf\uff0c\u7136\u540e\u628a\u5206\u6790\u626b\u63cf\u7684\u7ed3\u679c\u4e0a\u4f20\u5230 Sonar \u7684\u6570\u636e\u5e93\uff0c\u4e4b\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7 Sonar Web \u754c\u9762\u7ba1\u7406\u5206\u6790\u7ed3\u679c\u3002</p> <p>https://chao-xi.github.io/jxjenkinsbook/chap8/2chap8_code_quality_sonarqube/</p>"},{"location":"chap16/6Test_mgt/#1-3","title":"1-3 \u8df3\u8fc7\u68c0\u67e5\u7684\u51e0\u7c7b\u65b9\u5f0f","text":"<p>\u4e3a\u6301\u7eed\u4ea4\u4ed8\u4f53\u7cfb\u642d\u5efa\u597d\u9759\u6001\u68c0\u67e5\u670d\u52a1\u5e76\u8bbe\u7f6e\u597d Rules \u540e\uff0c\u4f60\u5343\u4e07\u4e0d\u8981\u8ba4\u4e3a\u4e8b\u60c5\u7ed3\u675f\u4e86\uff0c\u76f4\u63a5\u7b49\u7740\u770b\u68c0\u67e5\u7ed3\u679c\u5c31\u884c\u4e86\u3002\u56e0\u4e3a\uff0c\u901a\u5e38\u8fd8\u4f1a\u6709\u4ee5\u4e0b\u95ee\u9898\u53d1\u751f\uff1a</p> <ul> <li>\u4ee3\u7801\u89c4\u5219\u53ef\u80fd\u4e0d\u9002\u5408\u7a0b\u5e8f\u8bed\u8a00\u7684\u591a\u4e2a\u7248\u672c\uff1b</li> <li>\u7b2c\u4e09\u65b9\u4ee3\u7801\u751f\u6210\u5668\u81ea\u52a8\u4ea7\u751f\u7684\u4ee3\u7801\u5b58\u5728\u95ee\u9898\uff0c\u8be5\u600e\u4e48\u7565\u8fc7\u9759\u6001\u68c0\u67e5\uff1b</li> <li>\u9759\u6001\u68c0\u67e5\u53d7\u5ba2\u89c2\u60c5\u51b5\u7684\u9650\u5236\uff0c\u5b58\u5728\u8bef\u62a5\u7684\u60c5\u51b5\uff1b</li> <li>\u67d0\u4e9b\u89c4\u5219\u5bf9\u90e8\u5206\u60c5\u51b5\u68c0\u67e5\u5f97\u8fc7\u4e8e\u82db\u523b\uff1b</li> <li>\u5176\u4ed6\u5c1a\u672a\u5f52\u7c7b\u7684\u4e0d\u9002\u5408\u505a\u9759\u6001\u68c0\u67e5\u7684\u95ee\u9898\u3002</li> </ul> <p>\u5176\u5b9e\uff0c\u8fd9\u4e9b\u95ee\u9898\u90fd\u6709\u4e00\u4e2a\u5171\u540c\u7279\u70b9\uff1a\u9759\u6001\u68c0\u67e5\u65f6\u4e0d\u8be5\u62a5\u9519\u7684\u5730\u65b9\u5374\u62a5\u9519\u4e86\uff0c\u4e0d\u8be5\u62a5\u4e25\u91cd\u95ee\u9898\u7684\u5730\u65b9\u5374\u62a5\u4e86\u4e25\u91cd\u95ee\u9898\u3002</p> <p>\u4e8e\u662f\uff0c\u6211\u4eec\u9488\u5bf9\u8fd9\u4e2a\u5171\u6027\u95ee\u9898\u7684\u5904\u7406\u7b56\u7565\uff0c\u53ef\u4ee5\u5206\u4e3a\u4e09\u7c7b\uff1a</p> <ul> <li>\u628a\u67d0\u4e9b\u6587\u4ef6\u8bbe\u7f6e\u4e3a\u5b8c\u5168\u4e0d\u505a\u9759\u6001\u68c0\u67e5\uff1b</li> <li>\u628a\u67d0\u4e9b\u6587\u4ef6\u5185\u90e8\u7684\u67d0\u4e9b\u7c7b\u6216\u65b9\u6cd5\u8bbe\u7f6e\u4e3a\u4e0d\u505a\u67d0\u4e9b\u89c4\u5219\u7684\u68c0\u67e5\uff1b</li> <li>\u8c03\u6574\u89c4\u5219\u7684\u4e25\u91cd\u7ea7\u522b\uff0c\u8ba9\u89c4\u5219\u9002\u5e94\u8bed\u8a00\u7684\u591a\u4e2a\u7248\u672c\u3002</li> </ul>"},{"location":"chap16/6Test_mgt/#1-4","title":"1-4 \u5982\u4f55\u63d0\u9ad8\u9759\u6001\u68c0\u67e5\u7684\u6548\u7387\uff1f","text":"<p>\u63d0\u9ad8\u9759\u6001\u68c0\u67e5\u7684\u6548\u7387\u7684\u91cd\u8981\u6027\uff0c\u53ef\u4ee5\u6982\u62ec\u4e3a\u4ee5\u4e0b\u4e24\u4e2a\u65b9\u9762\uff1a</p> <ul> <li>\u5176\u4e00\uff0c\u80fd\u591f\u7f29\u77ed\u4ee3\u7801\u626b\u63cf\u6240\u6d88\u8017\u7684\u65f6\u95f4\uff0c\u4ece\u800c\u63d0\u5347\u6574\u4e2a\u6301\u7eed\u4ea4\u4ed8\u8fc7\u7a0b\u7684\u6548\u7387\uff1b</li> <li>\u5176\u4e8c\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u91c7\u7528\u5f02\u6b65\u7684\u65b9\u5f0f\u8fdb\u884c\u9759\u6001\u68c0\u67e5\uff0c\u5982\u679c\u8fd9\u4e2a\u8fc7\u7a0b\u8017\u65f6\u7279\u522b\u957f\u7684\u8bdd\uff0c\u4f1a\u8ba9\u7528\u6237\u4ea7\u751f\u56f0\u60d1\uff0c\u4ece\u800c\u8d28\u7591\u6267\u884c\u9759\u6001\u68c0\u67e5\u7684\u5fc5\u8981\u6027\u3002</li> </ul> <p>\u600e\u4e48\u624d\u80fd\u63d0\u5347\u9759\u6001\u68c0\u67e5\u7684\u6548\u7387\u5462</p> <p>\u9664\u4e86\u63d0\u5347\u9759\u6001\u68c0\u67e5\u5e73\u53f0\u7684\u5904\u7406\u80fd\u529b\u5916\uff0c\u5728\u4ee3\u7801\u5408\u5165\u4e3b\u5e72\u524d\u91c7\u7528\u589e\u91cf\u5f62\u5f0f\u7684\u9759\u6001\u68c0\u67e5\uff0c\u4e5f\u53ef\u4ee5\u63d0\u5347\u6574\u4e2a\u9759\u6001\u68c0\u67e5\u7684\u6548\u7387\u3002\u589e\u91cf\u9759\u6001\u68c0\u67e5\uff0c\u662f\u6307\u53ea\u5bf9\u672c\u6b21\u5408\u5165\u6d89\u53ca\u7684\u6587\u4ef6\u505a\u68c0\u67e5\uff0c\u800c\u4e0d\u7528\u5bf9\u6574\u4e2a\u5de5\u7a0b\u505a\u5168\u91cf\u68c0\u67e5\u3002</p>"},{"location":"chap16/6Test_mgt/#1-5-sonar","title":"1-5 Sonar \u4ee3\u7801\u9759\u6001\u68c0\u67e5\u5b9e\u4f8b","text":"<ul> <li>\u7b2c\u4e00\u6b65\uff1a\u642d\u5efa Sonar \u670d\u52a1\uff0c\u5b89\u88c5 CheckStyle \u7b49\u63d2\u4ef6\u3002</li> <li>\u7b2c\u4e8c\u6b65\uff1a\u8bbe\u7f6e\u7edf\u4e00\u7684 Java \u68c0\u67e5\u89c4\u5219\u3002</li> <li>\u7b2c\u4e09\u6b65\uff1a\u5728 IDE \u4e2d\u5b89\u88c5 SonarLint \u63d2\u4ef6\u540e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 SonarSource \u7684\u81ea\u5e26\u89c4\u5219\u4e86\u3002</li> <li>\u7b2c\u56db\u6b65\uff1a\u5982\u679c SonarLint \u7684\u68c0\u67e5\u89c4\u5219\u4e0d\u80fd\u6ee1\u8db3\u5f00\u53d1\u73af\u5883\u7684\u8981\u6c42\uff0c\u4f60\u53ef\u4ee5\u6267\u884c\u76f8\u5173\u7684 mvn \u547d\u4ee4\uff0c\u628a\u68c0\u67e5\u7ed3\u679c\u5410\u5230 Sonar \u670d\u52a1\u5668\u4e0a\u518d\u770b\u68c0\u67e5\u7ed3\u679c\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a</li> </ul> <pre><code>mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.2:sonar -f ./pom.xml -Dsonar.host.url=sonar \u670d\u52a1\u5668\u5730\u5740 -Dsonar.login= \u8d26\u53f7\u540d\u79f0 -Dsonar.password= \u8d26\u53f7\u5bc6\u7801 -Dsonar.profile= \u68c0\u67e5\u89c4\u5219\u7684\u96c6\u5408 -Dsonar.global.exclusions= \u6392\u9664\u54ea\u4e9b\u6587\u4ef6 -Dsonar.branch= \u68c0\u67e5\u7684\u5206\u652f\n</code></pre> <ul> <li>\u7b2c\u4e94\u6b65\uff1a\u5728 GitLab \u7684 Merge Request \u4e2d\u589e\u52a0 Sonar \u9759\u6001\u68c0\u67e5\u7684\u73af\u8282\uff0c\u5305\u62ec\u68c0\u67e5\u72b6\u6001\u548c\u7ed3\u679c\u7b49\u3002</li> </ul> <ul> <li>\u7b2c\u516d\u6b65\uff1a\u53d1\u5e03\u5230\u7528\u6237\u9a8c\u8bc1\u73af\u5883\uff08UAT\uff09\u524d\uff0c\u5148\u67e5\u770b\u9759\u6001\u68c0\u67e5\u7ed3\u679c\u3002\u5982\u679c\u6ca1\u6709\u901a\u8fc7\u68c0\u67e5\uff0c\u5219\u4e0d\u5141\u8bb8\u53d1\u5e03\u3002</li> </ul>"},{"location":"chap16/6Test_mgt/#2","title":"2 \u7834\u574f\u6027\u6d4b\u8bd5","text":""},{"location":"chap16/6Test_mgt/#2-1","title":"2-1 \u4ec0\u4e48\u662f\u7834\u574f\u6027\u6d4b\u8bd5\uff1f","text":"<p>\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u7684\u6d4b\u8bd5\u624b\u6bb5\u5fc5\u987b\u662f\u6709\u6548\u7684\u3002\u4e3a\u4ec0\u4e48\u8fd9\u6837\u8bf4\u5462\uff0c\u6709\u4e24\u70b9\u539f\u56e0\u3002</p> <p>\u7b2c\u4e00\uff0c\u7834\u574f\u6027\u6d4b\u8bd5\u7684\u624b\u6bb5\u548c\u8fc7\u7a0b\uff0c\u5e76\u4e0d\u662f\u65e0\u7684\u653e\u77e2\uff0c\u5b83\u4eec\u662f\u88ab\u4e25\u683c\u8bbe\u8ba1\u548c\u6267\u884c\u7684\u3002\u4e0d\u8981\u628a\u7834\u574f\u6027\u6d4b\u8bd5\u548c\u63a2\u7d22\u6027\u6d4b\u8bd5\u6df7\u4e3a\u4e00\u8c08\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u7834\u574f\u6027\u6d4b\u8bd5\u4e0d\u5e94\u8be5\u51fa\u73b0\uff0c\u201c\u8bd5\u8bd5\u8fd9\u6837\u4f1a\u4e0d\u4f1a\u51fa\u95ee\u9898\u201d\u7684\u5047\u8bbe\uff0c\u800c\u4e14\u68c0\u9a8c\u7834\u574f\u6027\u6d4b\u8bd5\u7684\u7ed3\u679c\u4e5f\u90fd\u5e94\u8be5\u662f\u6709\u9884\u671f\u7684\u3002</p> <p>\u7b2c\u4e8c\uff0c\u7834\u574f\u6027\u6d4b\u8bd5\uff0c\u4f1a\u4ea7\u751f\u5207\u5b9e\u7684\u7834\u574f\u4f5c\u7528\uff0c\u4f60\u9700\u8981\u6743\u8861\u7834\u574f\u7684\u91cf\u548c\u5ea6\u3002\u56e0\u4e3a\u7834\u574f\u4e0d\u4ec5\u4ec5\u4f1a\u7834\u574f\u8f6f\u4ef6\uff0c\u8fd8\u53ef\u80fd\u4f1a\u7834\u574f\u786c\u4ef6\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u8f6f\u4ef6\u88ab\u7834\u574f\u540e\u7684\u4fee\u590d\u6210\u672c\u4e0d\u4f1a\u592a\u5927\uff0c\u800c\u786c\u4ef6\u90e8\u5206\u88ab\u7834\u574f\u540e\uff0c\u4fee\u590d\u6210\u672c\u5c31\u4e0d\u597d\u8bf4\u4e86\u3002\u6240\u4ee5\uff0c\u4f60\u5fc5\u987b\u8981\u4e8b\u5148\u8003\u8651\u597d\u7834\u574f\u7684\u91cf\u548c\u5ea6\u3002</p>"},{"location":"chap16/6Test_mgt/#2-2","title":"2-2 \u7834\u574f\u6027\u6d4b\u8bd5\u7684\u6267\u884c\u7b56\u7565","text":"<p>\u56e0\u6b64\uff0c\u7edd\u5927\u90e8\u5206\u7834\u574f\u6027\u6d4b\u8bd5\u90fd\u4f1a\u5728\u5355\u5143\u6d4b\u8bd5\u3001\u529f\u80fd\u6d4b\u8bd5\u9636\u6bb5\u6267\u884c\u3002\u800c\u6267\u884c\u6d4b\u8bd5\u7684\u73af\u5883\u4e5f\u5f80\u5f80\u662f\u5c40\u90e8\u7684\u6d4b\u8bd5\u5b50\u73af\u5883\u3002</p>"},{"location":"chap16/6Test_mgt/#2-3","title":"2-3 \u6df7\u6c8c\u5de5\u7a0b","text":"<p>\u6df7\u6c8c\u5de5\u7a0b\u662f\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e0a\u5efa\u7acb\u7684\u5b9e\u9a8c\uff0c\u5176\u76ee\u7684\u662f\u5efa\u7acb\u5bf9\u7cfb\u7edf\u627f\u53d7\u6df7\u4e71\u51b2\u51fb\u80fd\u529b\u7684\u4fe1\u5fc3\u3002\u9274\u4e8e\u5206\u5e03\u5f0f\u7cfb\u7edf\u56fa\u6709\u7684\u6df7\u4e71\u5c5e\u6027\uff0c\u4e5f\u5c31\u662f\u8bf4\u5373\u4f7f\u6240\u6709\u7684\u90e8\u4ef6\u90fd\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u628a\u5b83\u4eec\u7ed3\u5408\u540e\uff0c\u4f60\u8fd8\u662f\u5f88\u96be\u9884\u77e5\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002</p> <p>\u8bf4\u5230\u5177\u4f53\u7684\u5b9e\u9a8c\u65b9\u6cd5\uff0c\u9700\u8981\u9075\u5faa\u4ee5\u4e0b 4 \u4e2a\u6b65\u9aa4\uff0c\u5373\u79d1\u5b66\u5b9e\u9a8c\u90fd\u5fc5\u987b\u9075\u5faa\u7684 4 \u4e2a\u6b65\u9aa4\uff1a</p> <ul> <li>\u5c06\u6b63\u5e38\u7cfb\u7edf\u7684\u4e00\u4e9b\u6b63\u5e38\u884c\u4e3a\u7684\u53ef\u6d4b\u91cf\u6570\u636e\u5b9a\u4e49\u4e3a\u201c\u7a33\u5b9a\u6001\u201d\uff1b</li> <li>\u5efa\u7acb\u4e00\u4e2a\u5bf9\u7167\u7ec4\uff0c\u5e76\u5047\u8bbe\u5bf9\u7167\u7ec4\u548c\u5b9e\u9a8c\u7ec4\u90fd\u4fdd\u6301\u201c\u7a33\u5b9a\u6001\u201d\uff1b</li> <li>\u5f15\u5165\u771f\u5b9e\u4e16\u754c\u7684\u53d8\u91cf\uff0c\u5982\u670d\u52a1\u5668\u5d29\u6e83\u3001\u65ad\u7f51\u3001\u78c1\u76d8\u635f\u574f\u7b49\u7b49\uff1b</li> <li>\u5c1d\u8bd5\u5bfb\u627e\u5bf9\u7167\u7ec4\u548c\u5b9e\u9a8c\u7ec4\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u627e\u51fa\u7cfb\u7edf\u5f31\u70b9\u3002</li> </ul> <p>\u6df7\u6c8c\u5de5\u7a0b\u4e5f\u6709\u51e0\u4e2a\u9ad8\u7ea7\u539f\u5219\uff1a</p> <ul> <li>\u4f7f\u7528\u6539\u53d8\u73b0\u5b9e\u4e16\u754c\u7684\u4e8b\u4ef6\uff0c\u5c31\u662f\u8981\u5728\u771f\u5b9e\u7684\u573a\u666f\u4e2d\u8fdb\u884c\u5b9e\u9a8c\uff0c\u800c\u4e0d\u8981\u60f3\u8c61\u548c\u6784\u9020\u4e00\u4e9b\u5047\u60f3\u548c\u5047\u8bbe\u7684\u573a\u666f\uff1b</li> <li>\u5728\u751f\u4ea7\u73af\u5883\u8fd0\u884c\uff0c\u4e3a\u4e86\u53d1\u73b0\u771f\u5b9e\u573a\u666f\u7684\u5f31\u70b9\uff0c\u6240\u4ee5\u66f4\u5efa\u8bae\u5728\u751f\u4ea7\u73af\u5883\u8fd0\u884c\u8fd9\u4e9b\u5b9e\u9a8c\uff1b</li> <li>\u81ea\u52a8\u5316\u8fde\u7eed\u5b9e\u73b0\uff0c\u4eba\u5de5\u7684\u624b\u5de5\u64cd\u4f5c\u662f\u52b3\u52a8\u5bc6\u96c6\u578b\u7684\u3001\u4e0d\u53ef\u6301\u7eed\u7684\uff0c\u56e0\u6b64\u8981\u628a\u6df7\u6c8c\u5de5\u7a0b\u81ea\u52a8\u5316\u6784\u5efa\u5230\u7cfb\u7edf\u4e2d\uff1b</li> <li>\u6700\u5c0f\u7206\u7834\u534a\u5f84\uff0c\u4e0e\u7b2c\u4e8c\u6761\u914d\u5408\uff0c\u8981\u5c3d\u91cf\u51cf\u5c11\u5bf9\u7528\u6237\u7684\u8d1f\u9762\u5f71\u54cd\uff0c\u5373\u4f7f\u4e0d\u53ef\u907f\u514d\uff0c\u4e5f\u8981\u5c3d\u529b\u51cf\u5c11\u8303\u56f4\u548c\u7a0b\u5ea6\u3002</li> </ul>"},{"location":"chap16/6Test_mgt/#2-4-netflix","title":"2-4 Netflix \u516c\u53f8\u7684\u5148\u9a71\u5b9e\u8df5","text":"<p>Netflix \u4e3a\u4e86\u4fdd\u8bc1\u5176\u7cfb\u7edf\u5728 AWS \u4e0a\u7684\u5065\u58ee\u6027\uff0c\u521b\u9020\u4e86 Chaos Monkey\uff0c\u53ef\u4ee5\u8bf4\u662f\u6df7\u6c8c\u5de5\u7a0b\u771f\u6b63\u7684\u5148\u9a71\u8005\u3002</p> <p>Chaos Monkey \u4f1a\u5728\u5de5\u4f5c\u65e5\u671f\u95f4\uff0c\u968f\u673a\u5730\u6740\u6b7b\u4e00\u4e9b\u670d\u52a1\u4ee5\u5236\u9020\u6df7\u4e71\uff0c\u4ece\u800c\u68c0\u9a8c\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u3002\u800c\u5de5\u7a0b\u5e08\u4eec\u4e0d\u5f97\u4e0d\u505c\u4e0b\u624b\u5934\u5de5\u4f5c\u53bb\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u5e76\u4e14\u4fdd\u8bc1\u5b83\u4eec\u4e0d\u4f1a\u518d\u73b0\u3002\u4e45\u800c\u4e45\u4e4b\uff0c\u7cfb\u7edf\u7684\u5065\u58ee\u6027\u5c31\u53ef\u4ee5\u4e0d\u65ad\u5730\u88ab\u63d0\u9ad8\u3002</p>"},{"location":"chap16/6Test_mgt/#3-mock","title":"3 Mock\u4e0e\u56de\u653e\u6280\u672f\u52a9\u529b\u81ea\u52a8\u5316\u56de\u5f52","text":""},{"location":"chap16/6Test_mgt/#3-1","title":"3-1 \u6301\u7eed\u4ea4\u4ed8\u4e2d\u7684\u6d4b\u8bd5\u96be\u70b9","text":"<ul> <li>\u6d4b\u8bd5\u6570\u636e\u7684\u51c6\u5907\u548c\u6e05\u7406\u3002</li> <li>\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u4f9d\u8d56\u3002</li> <li>\u6d4b\u8bd5\u7528\u4f8b\u7684\u9ad8\u5ea6\u4eff\u771f\u3002</li> </ul>"},{"location":"chap16/6Test_mgt/#3-2-mock","title":"3-2 \u4e24\u5927\u5229\u5668\u4e4b\u4e00 Mock","text":"<p>\u5982\u679c\u67d0\u4e2a\u5bf9\u8c61\u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\u4f9d\u8d56\u4e8e\u53e6\u4e00\u4e2a\u590d\u6742\u5bf9\u8c61\uff0c\u800c\u8fd9\u4e2a\u590d\u6742\u5bf9\u8c61\u53c8\u5f88\u96be\u88ab\u4ece\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\u5265\u79bb\u51fa\u6765\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5229\u7528 Mock \u53bb\u6a21\u62df\u5e76\u4ee3\u66ff\u8fd9\u4e2a\u590d\u6742\u5bf9\u8c61\u3002</p> <p>\u4e0b\u9762\u8fd9\u5f20\u56fe\u5c31\u662f Mock \u5b9a\u4e49\u7684\u4e00\u4e2a\u5177\u8c61\u5316\u5c55\u793a</p> <p></p> <p>\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u88ab\u6d4b\u5bf9\u8c61\u7684\u5916\u90e8\u4f9d\u8d56\u60c5\u51b5\u5c55\u793a</p> <p>\u5728\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u53ef\u80fd\u4f1a\u9047\u5230\u8fd9\u6837\u7684\u60c5\u51b5\u3002\u4f60\u8981\u6d4b\u8bd5\u67d0\u4e2a\u65b9\u6cd5\u548c\u5bf9\u8c61\uff0c\u800c\u8fd9\u4e2a\u88ab\u6d4b\u65b9\u6cd5\u548c\u5bf9\u8c61\u4f9d\u8d56\u4e86\u5916\u90e8\u7684\u4e00\u4e9b\u5bf9\u8c61\u6216\u8005\u64cd\u4f5c\uff0c\u6bd4\u5982\uff1a\u8bfb\u5199\u6570\u636e\u5e93\u3001\u4f9d\u8d56\u53e6\u5916\u4e00\u4e2a\u5bf9\u8c61\u7684\u5b9e\u4f53\uff1b\u4f9d\u8d56\u53e6\u4e00\u4e2a\u5916\u90e8\u670d\u52a1\u7684\u6570\u636e\u8fd4\u56de\u3002</p> <p>\u800c\u5b9e\u9645\u7684\u6d4b\u8bd5\u8fc7\u7a0b\u5f88\u96be\u5b9e\u73b0\u8fd9\u4e09\u79cd\u60c5\u51b5\uff0c\u6bd4\u5982\uff1a\u5355\u5143\u6d4b\u8bd5\u73af\u5883\u4e0e\u6570\u636e\u5e93\u7684\u7f51\u7edc\u4e0d\u901a\uff1b\u4f9d\u8d56\u7684\u5bf9\u8c61\u63a5\u53e3\u8fd8\u6ca1\u6709\u5347\u7ea7\u5230\u517c\u5bb9\u7248\u672c\uff1b\u4f9d\u8d56\u7684\u5916\u90e8\u670d\u52a1\u5c5e\u4e8e\u5176\u4ed6\u56e2\u961f\uff0c\u4f60\u6ca1\u6709\u529e\u6cd5\u90e8\u7f72\u7b49\u7b49\u3002</p> <p>\u90a3\u4e48\uff0c\u8fd9\u65f6\uff0c\u4f60\u5c31\u53ef\u4ee5\u5229\u7528 Mock \u6280\u672f\u53bb\u6a21\u62df\u8fd9\u4e9b\u5916\u90e8\u4f9d\u8d56\uff0c\u5b8c\u6210\u81ea\u5df1\u7684\u6d4b\u8bd5\u5de5\u4f5c\u3002</p> <p>Mock \u56e0\u4e3a\u8fd9\u6837\u7684\u6a21\u62df\u80fd\u529b\uff0c\u4e3a\u6d4b\u8bd5\u548c\u6301\u7eed\u4ea4\u4ed8\u5e26\u6765\u7684\u4ef7\u503c\uff0c\u53ef\u4ee5\u603b\u7ed3\u4e3a\u4ee5\u4e0b\u4e09\u70b9\uff1a</p> <ul> <li>\u4f7f\u6d4b\u8bd5\u7528\u4f8b\u66f4\u72ec\u7acb\u3001\u66f4\u89e3\u8026\u3002\u5229\u7528 Mock \u6280\u672f\uff0c\u65e0\u8bba\u662f\u5355\u4f53\u5e94\u7528\uff0c\u8fd8\u662f\u5206\u5e03\u5f0f\u67b6\u6784\uff0c\u90fd\u53ef\u4ee5\u4fdd\u8bc1\u6d4b\u8bd5\u7528\u4f8b\u5b8c\u5168\u72ec\u7acb\u8fd0\u884c\uff0c\u800c\u4e14\u8fd8\u80fd\u4fdd\u8bc1\u6d4b\u8bd5\u7528\u4f8b\u7684\u53ef\u8fc1\u79fb\u6027\u548c\u9ad8\u7a33\u5b9a\u6027\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f \u56e0\u4e3a\u8db3\u591f\u72ec\u7acb\uff0c\u6d4b\u8bd5\u7528\u4f8b\u65e0\u8bba\u5728\u54ea\u91cc\u8fd0\u884c\uff0c\u90fd\u53ef\u4ee5\u4fdd\u8bc1\u9884\u671f\u7ed3\u679c\uff1b\u800c\u7531\u4e8e\u4e0d\u518d\u4f9d\u8d56\u4e8e\u5916\u90e8\u7684\u4efb\u4f55\u6761\u4ef6\uff0c\u4f7f\u5f97\u6d4b\u8bd5\u7528\u4f8b\u4e5f\u4e0d\u518d\u53d7\u5230\u5916\u90e8\u7684\u5e72\u6270\uff0c\u7a33\u5b9a\u6027\u4e5f\u5fc5\u7136\u5f97\u5230\u63d0\u5347\u3002</li> <li>\u63d0\u5347\u6d4b\u8bd5\u7528\u4f8b\u7684\u6267\u884c\u901f\u5ea6\u3002\u7531\u4e8e Mock \u6280\u672f\u53ea\u662f\u5bf9\u5b9e\u9645\u64cd\u4f5c\u6216\u5bf9\u8c61\u7684\u6a21\u62df\uff0c\u6240\u4ee5\u8fd0\u884c\u8fd4\u56de\u975e\u5e38\u5feb\u3002\u7279\u522b\u662f\u5bf9\u4e8e\u4e00\u4e9b\u6570\u636e\u5e93\u64cd\u4f5c\uff0c\u6216\u8005\u590d\u6742\u4e8b\u52a1\u7684\u5904\u7406\uff0c\u53ef\u4ee5\u660e\u663e\u7f29\u77ed\u6574\u4e2a\u6d4b\u8bd5\u7528\u6765\u7684\u6267\u884c\u65f6\u95f4\u3002 \u8fd9\u6837\u505a\u6700\u76f4\u63a5\u7684\u597d\u5904\u5c31\u662f\uff0c\u53ef\u4ee5\u52a0\u5feb\u6d4b\u8bd5\u7528\u4f8b\u7684\u6267\u884c\uff0c\u4ece\u800c\u5feb\u901f\u5f97\u5230\u6d4b\u8bd5\u7ed3\u679c\uff0c\u63d0\u5347\u6574\u4e2a\u6301\u7eed\u4ea4\u4ed8\u6d41\u7a0b\u7684\u6548\u7387\u3002</li> <li>\u63d0\u9ad8\u6d4b\u8bd5\u7528\u4f8b\u51c6\u5907\u7684\u6548\u7387\u3002\u56e0\u4e3a Mock \u6280\u672f\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u5916\u90e8\u4f9d\u8d56\u7684\u5b8c\u5168\u53ef\u63a7\uff0c\u6240\u4ee5\u6d4b\u8bd5\u4eba\u5458\u5728\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b\u65f6\uff0c\u65e0\u9700\u518d\u53bb\u7279\u522b\u8003\u8651\u4f9d\u8d56\u7aef\u7684\u60c5\u51b5\u4e86\uff0c\u53ea\u8981\u6309\u7167\u65e2\u5b9a\u65b9\u5f0f\u8bbe\u8ba1\u7528\u4f8b\u5c31\u53ef\u4ee5\u4e86\u3002</li> </ul> <p>\u57fa\u4e8e\u5bf9\u8c61\u548c\u7c7b\u7684 Mock</p> <p>Mockito \u6216\u8005 EasyMock \u8fd9\u4e24\u4e2a\u6846\u67b6\u7684\u5b9e\u73b0\u539f\u7406\uff0c\u90fd\u662f\u5728\u8fd0\u884c\u65f6\uff0c\u4e3a\u6bcf\u4e00\u4e2a\u88ab Mock \u7684\u5bf9\u8c61\u6216\u7c7b\u52a8\u6001\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u7531\u8fd9\u4e2a\u4ee3\u7406\u5bf9\u8c61\u8fd4\u56de\u9884\u5148\u8bbe\u8ba1\u7684\u7ed3\u679c\u3002</p> <p>\u8fd9\u7c7b\u6846\u67b6\u975e\u5e38\u9002\u5408\u6a21\u62df DAO \u5c42\u7684\u6570\u636e\u64cd\u4f5c\u548c\u590d\u6742\u903b\u8f91\uff0c\u6240\u4ee5\u5b83\u4eec\u5f80\u5f80\u53ea\u80fd\u7528\u4e8e\u5355\u5143\u6d4b\u8bd5\u9636\u6bb5\u3002\u800c\u5230\u4e86\u96c6\u6210\u6d4b\u8bd5\u9636\u6bb5\uff0c\u4f60\u9700\u8981\u6a21\u62df\u4e00\u4e2a\u5916\u90e8\u4f9d\u8d56\u670d\u52a1\u65f6\uff0c\u5c31\u9700\u8981\u57fa\u4e8e\u5fae\u670d\u52a1\u7684 Mock \u7c89\u58a8\u767b\u573a\u4e86\u3002</p> <p>\u57fa\u4e8e\u5fae\u670d\u52a1\u7684 Mock</p> <p>\u57fa\u4e8e\u5fae\u670d\u52a1\u7684 Mock\uff0c\u6211\u4e2a\u4eba\u6bd4\u8f83\u63a8\u8350\u7684\u6846\u67b6\u662f Weir Mock \u548c Mock Server\u3002\u8fd9\u4e24\u4e2a\u6846\u67b6\uff0c\u90fd\u53ef\u4ee5\u5f88\u597d\u5730\u6a21\u62df API\u3001http \u5f62\u5f0f\u7684\u5bf9\u8c61\u3002</p> <p>\u4ece\u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801\u7684\u89d2\u5ea6\u770b\uff0cWeir Mock \u548c Mock Server \u8fd9\u4e24\u79cd\u6d4b\u8bd5\u6846\u67b6\u5b9e\u73b0 Mock \u7684\u65b9\u5f0f\u57fa\u672c\u4e00\u81f4\uff1a</p> <ul> <li>\u6807\u8bb0\u88ab\u4ee3\u7406\u7684\u7c7b\u6216\u5bf9\u8c61\uff0c\u6216\u58f0\u660e\u88ab\u4ee3\u7406\u7684\u670d\u52a1\uff1b</li> <li>\u901a\u8fc7 Mock \u6846\u67b6\u5b9a\u5236\u4ee3\u7406\u7684\u884c\u4e3a\uff1b</li> <li>\u8c03\u7528\u4ee3\u7406\uff0c\u4ece\u800c\u83b7\u5f97\u9884\u671f\u7684\u7ed3\u679c\u3002</li> </ul>"},{"location":"chap16/6Test_mgt/#3-3","title":"3-3 \u201c\u56de\u653e\u201d\u6280\u672f","text":"<p>\u5982\u4f55\u628a\u7528\u6237\u7684\u8bf7\u6c42\u8bb0\u5f55\u4e0b\u6765</p> <ul> <li>\u7b2c\u4e00\u79cd\u65b9\u6848\u662f\uff0c\u5728\u7edf\u4e00\u7684 SLB \u4e0a\u505a\u7edf\u4e00\u7684\u62e6\u622a\u548c\u590d\u5236\u8f6c\u53d1\u5904\u7406\u3002\u8fd9\u4e2a\u65b9\u6848\u7684\u597d\u5904\u662f\uff0c\u7ba1\u7406\u7edf\u4e00\uff0c\u5b9e\u73b0\u96be\u5ea6\u4e5f\u4e0d\u7b97\u592a\u5927\u3002\u4f46\u95ee\u9898\u662f\uff0cSLB \u6bd5\u7adf\u662f\u751f\u4ea7\u4e3b\u8def\u5f84\u4e0a\u7684\u5904\u7406\u670d\u52a1\uff0c\u4e00\u4e0d\u5c0f\u5fc3\uff0c\u5c31\u53ef\u80fd\u5f71\u54cd\u672c\u8eab\u7684\u8def\u7531\u670d\u52a1\uff0c\u5f62\u6210\u6545\u969c\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u6709\u4e86\u7b2c\u4e8c\u79cd\u66ff\u6362\u65b9\u6848\u3002</li> <li>\u7b2c\u4e8c\u79cd\u65b9\u6848\u662f\uff0c\u5728\u96c6\u7fa4\u4e2d\u6269\u5bb9\u4e00\u53f0\u670d\u52a1\u5668\uff0c\u5728\u8be5\u670d\u52a1\u5668\u4e0a\u542f\u52a8\u4e00\u4e2a\u8f6f\u4ea4\u6362\uff0c\u7531\u8be5\u8f6f\u4ea4\u6362\u8d1f\u8d23\u590d\u5236\u548c\u8f6c\u53d1\u7528\u6237\u8bf7\u6c42\uff0c\u800c\u771f\u6b63\u7684\u7528\u6237\u8bf7\u6c42\uff0c\u4ecd\u65e7\u7531\u8be5\u670d\u52a1\u5668\u8fdb\u884c\u5904\u7406\u3002 \u8fd9\u4e2a\u65b9\u6848\u6bd4\u7b2c\u4e00\u79cd\u65b9\u6848\u7a0d\u5fae\u590d\u6742\u4e86\u4e00\u4e9b\uff0c\u4f46\u5728\u4e91\u8ba1\u7b97\u7684\u652f\u6301\u4e0b\uff0c\u5374\u663e\u5f97\u66f4\u7ecf\u6d4e\u3002\u4f60\u53ef\u4ee5\u6309\u9700\u6269\u5bb9\u670d\u52a1\u5668\u6765\u83b7\u53d6\u62bd\u6837\u7ed3\u679c\uff0c\u8bb0\u5f55\u7ed3\u675f\u540e\u91ca\u653e\u8be5\u670d\u52a1\u5668\u8d44\u6e90\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u4e5f\u4e0d\u9700\u8981\u8fdb\u884c\u8fc7\u591a\u7684\u914d\u7f6e\u64cd\u4f5c\uff0c\u5c31\u548c\u6b63\u5e38\u7684\u6269\u5bb9\u914d\u7f6e\u4e00\u6837\uff0c\u51cf\u5c11\u4e86\u98ce\u9669\u3002</li> </ul>"},{"location":"chap16/7CD_pla/","title":"L7 \u6301\u7eed\u4ea4\u4ed8\u5e73\u53f0\u5316","text":""},{"location":"chap16/7CD_pla/#1","title":"1 \u6301\u7eed\u4ea4\u4ed8\u5e73\u53f0\u7684\u8bbe\u8ba1","text":"<p>\u6301\u7eed\u4ea4\u4ed8\u5e73\u53f0\u6700\u7ec8\u5c06\u5b8c\u6210\u8fd9\u4e2a\u7aef\u5230\u7aef\u7684\u8fc7\u7a0b\uff0c\u90a3\u4e48\u6d41\u6c34\u7ebf\u7684\u6bcf\u4e00\u6b65\u90fd\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u6a21\u5757\u3002\u7531\u6b64\uff0c\u6574\u4e2a\u5e73\u53f0\u7684\u6838\u5fc3\u6a21\u5757\u5c31\u662f\uff1a\u4ee3\u7801\u7ba1\u7406\u3001\u96c6\u6210\u7f16\u8bd1\u3001\u73af\u5883\u7ba1\u7406\u3001\u53d1\u5e03\u90e8\u7f72\u3002</p> <p>\u8fd9\u56db\u4e2a\u6a21\u5757\u662f\u6301\u7eed\u4ea4\u4ed8\u5e73\u53f0\u4e2d\u6700\u6838\u5fc3\uff0c\u6700\u5bb9\u6613\u505a\u5230\u5185\u805a\u548c\u89e3\u8026\u7684\u6a21\u5757\u3002\u6bcf\u4e2a\u6838\u5fc3\u6a21\u5757\u7684\u5468\u56f4\uff0c\u53c8\u56f4\u7ed5\u7740\u5404\u79cd\u5b50\u6a21\u5757\uff0c\u6bd4\u5982\uff1a</p> <ul> <li>\u4ee3\u7801\u7ba1\u7406\u6a21\u5757\uff0c\u5f80\u5f80\u4f1a\u548c\u4ee3\u7801\u5ba1\u6838\u3001\u9759\u6001\u626b\u63cf\u548c\u5206\u652f\u7ba1\u7406\u7b49\u6a21\u5757\u76f8\u8054\u7cfb\uff1b</li> <li>\u96c6\u6210\u7f16\u8bd1\u6a21\u5757\uff0c\u4e5f\u4f1a\u4e0e\u4f9d\u8d56\u7ba1\u7406\u3001\u5355\u5143\u6d4b\u8bd5\u3001\u52a0\u5bc6\u6253\u5305\u7b49\u6a21\u5757\u76f8\u751f\u76f8\u968f\u7684\uff1b</li> <li>\u73af\u5883\u7ba1\u7406\u6a21\u5757\uff0c\u79bb\u4e0d\u5f00\u914d\u7f6e\u7ba1\u7406\u3001\u8def\u7531\u7ba1\u7406\u7b49\u6a21\u5757\uff1b</li> <li>\u53d1\u5e03\u90e8\u7f72\u6a21\u5757\uff0c\u8fd8\u9700\u8981\u76d1\u63a7\u6a21\u5757\u548c\u6d41\u63a7\u6a21\u5757\u7684\u652f\u6301\u3002</li> </ul> <p></p> <p></p>"},{"location":"chap16/7CD_pla/#2","title":"2 \u6301\u7eed\u4ea4\u4ed8\u4e2d\u6709\u54ea\u4e9b\u5b9d\u8d35\u6570\u636e","text":""},{"location":"chap16/7CD_pla/#2-1","title":"2-1 \u5e38\u89c4\u7cfb\u7edf\u6307\u6807\u6570\u636e\u5217\u4e3e","text":"<ul> <li>\u7b2c\u4e00\u7c7b\u6307\u6807\uff0c\u7a33\u5b9a\u6027\u76f8\u5173\u6307\u6807</li> </ul> <p>\u4f5c\u4e3a\u57fa\u7840\u670d\u52a1\uff0c\u7a33\u5b9a\u6027\u662f\u6211\u4eec\u7684\u751f\u547d\u7ebf\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e\u6240\u6709\u7684\u5b50\u7cfb\u7edf\uff0c\u5305\u62ec\uff1a\u4ee3\u7801\u7ba1\u7406\u5e73\u53f0\u3001\u96c6\u6210\u7f16\u8bd1\u7cfb\u7edf\u3001\u73af\u5883\u7ba1\u7406\u7cfb\u7edf\u3001\u6d4b\u8bd5\u7ba1\u7406\u7cfb\u7edf\u548c\u53d1\u5e03\u7cfb\u7edf\uff0c\u6211\u4eec\u90fd\u4f1a\u8bbe\u7acb\u5fc5\u8981\u7684\u7a33\u5b9a\u6027\u6307\u6807\uff0c\u5e76\u8fdb\u884c\u6570\u636e\u76d1\u63a7\u3002\u8fd9\u4e9b\u7a33\u5b9a\u6027\u76f8\u5173\u7684\u6570\u636e\u6307\u6807\uff0c\u4ee3\u8868\u6574\u4e2a\u7cfb\u7edf\u7684\u53ef\u7528\u5ea6\u3002</p> <ul> <li>\u7b2c\u4e8c\u7c7b\u6307\u6807\uff0c\u6027\u80fd\u76f8\u5173\u6307\u6807</li> </ul> <p>\u4e0e\u7cfb\u7edf\u6027\u80fd\u76f8\u5173\u7684\u6307\u6807\uff0c\u901a\u5e38\u53ef\u4ee5\u76f4\u63a5\u53cd\u5e94\u7cfb\u7edf\u7684\u5904\u7406\u80fd\u529b\uff0c\u4ee5\u53ca\u8ba1\u7b97\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u901f\u5ea6\u662f\u6211\u4eec\u5bf9\u7528\u6237\u670d\u52a1\u80fd\u529b\u7684\u76f4\u89c2\u4f53\u73b0\u3002\u5f88\u591a\u65f6\u5019\uff0c\u7cfb\u7edf\u7684\u5904\u7406\u901f\u5ea6\u4e0a\u53bb\u4e86\uff0c\u4e00\u4e9b\u95ee\u9898\u4e5f\u5c31\u4e0d\u518d\u662f\u95ee\u9898\u4e86\u3002</p> <ul> <li>push \u548c fetch \u4ee3\u7801\u7684\u901f\u5ea6\uff1b</li> <li>\u73af\u5883\u521b\u5efa\u548c\u9500\u6bc1\u7684\u901f\u5ea6\uff1b</li> <li>\u4ea7\u751f\u4eff\u771f\u6570\u636e\u7684\u901f\u5ea6\uff1b</li> <li>\u5e73\u5747\u7f16\u8bd1\u901f\u5ea6\u53ca\u6392\u961f\u65f6\u957f\uff1b</li> <li>\u9759\u6001\u68c0\u67e5\u7684\u901f\u5ea6\uff1b</li> <li>\u81ea\u52a8\u5316\u6d4b\u8bd5\u7684\u8017\u65f6\uff1b</li> <li> <p>\u53d1\u5e03\u548c\u56de\u6eda\u7684\u901f\u5ea6\u3002</p> </li> <li> <p>\u7b2c\u4e09\u7c7b\u6307\u6807\uff0c\u6301\u7eed\u4ea4\u4ed8\u80fd\u529b\u6210\u719f\u5ea6\u6307\u6807</p> </li> </ul> <p>\u4e0d\u540c\u7684\u5b50\u7cfb\u7edf\uff0c\u6211\u5173\u6ce8\u7684\u6307\u6807\u4e5f\u4e0d\u540c\u3002</p> <ul> <li>\u4e0e\u4ee3\u7801\u7ba1\u7406\u5b50\u7cfb\u7edf\u76f8\u5173\u7684\u6307\u6807\u5305\u62ec\uff1acommit \u7684\u6570\u91cf\uff0ccode review \u7684\u62d2\u7edd\u7387\uff0c\u5e76\u884c\u5f00\u53d1\u7684\u5206\u652f\u6570\u91cf\u3002 \u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5e76\u884c\u5f00\u53d1\u7684\u5206\u652f\u6570\u91cf\u5e76\u4e0d\u662f\u8d8a\u591a\u8d8a\u597d\uff0c\u800c\u662f\u8981\u4ee5\u6bcf\u4e2a\u56e2\u961f\u90fd\u4fdd\u6301\u4e00\u4e2a\u7a33\u5b9a\u72b6\u6001\u4e3a\u4f18\u3002</li> <li>\u4e0e\u73af\u5883\u7ba1\u7406\u5b50\u7cfb\u7edf\u76f8\u5173\u7684\u6307\u6807\u5305\u62ec\uff1a\u8ba1\u7b97\u8d44\u6e90\u7684\u4f7f\u7528\u7387\uff0c\u73af\u5883\u7684\u5e73\u5747\u5927\u5c0f\u3002 \u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4e00\u76f4\u90fd\u5f88\u5173\u6ce8\u73af\u5883\u7684\u5e73\u5747\u5927\u5c0f\u8fd9\u4e2a\u6570\u636e\u3002\u56e0\u4e3a\u6211\u4eec\u9f13\u52b1\u56e2\u961f\u4f7f\u7528\u6280\u672f\u624b\u6bb5\u6765\u907f\u514d\u4ea7\u751f\u5de8\u578b\u6d4b\u8bd5\u73af\u5883\uff0c\u4ece\u800c\u8fbe\u5230\u63d0\u9ad8\u5229\u7528\u7387\u3001\u964d\u4f4e\u6210\u672c\u7684\u76ee\u7684\u3002\u800c\u4e14\uff0c\u8fd9\u4e2a\u6307\u6807\u4e5f\u53ef\u4ee5\u4ece\u4fa7\u9762\u53cd\u6620\u4e00\u4e2a\u56e2\u961f\u5229\u7528\u6280\u672f\u89e3\u51b3\u95ee\u9898\u7684\u80fd\u529b\u3002</li> <li>\u4e0e\u96c6\u6210\u7f16\u8bd1\u5b50\u7cfb\u7edf\u76f8\u5173\u7684\u6307\u6807\u5305\u62ec\uff1a\u6bcf\u65e5\u7f16\u8bd1\u6570\u91cf\uff0c\u7f16\u8bd1\u68c0\u67e5\u7684\u6570\u636e\u3002 \u6211\u4eec\u5e76\u4e0d\u4f1a\u5f3a\u5236\u8981\u6c42\u7f16\u8bd1\u68c0\u67e5\u51fa\u7684\u4e0d\u826f\u6570\u636e\u8981\u4e0b\u964d\uff0c\u56e0\u4e3a\u5b83\u4f1a\u53d7\u5404\u7c7b\u5916\u90e8\u56e0\u7d20\u7684\u5f71\u54cd\uff0c\u6bd4\u5982\u5386\u53f2\u4ee3\u7801\u95ee\u9898\u7b49\u7b49\u3002\u4f46\uff0c\u6211\u4eec\u5fc5\u987b\u4fdd\u8bc1\u5b83\u4e0d\u4f1a\u589e\u957f\u3002\u8fd9\u4e5f\u662f\u6211\u4eec\u7684\u56e2\u961f\u5728\u575a\u5b88\u8d28\u91cf\u5173\u7684\u4f53\u73b0\u3002</li> <li>\u4e0e\u6d4b\u8bd5\u7ba1\u7406\u5b50\u7cfb\u7edf\u76f8\u5173\u7684\u6307\u6807\u5305\u62ec\uff1a\u5355\u5143\u6d4b\u8bd5\u7684\u8986\u76d6\u7387\uff0c\u81ea\u52a8\u5316\u6d4b\u8bd5\u7684\u8986\u76d6\u7387\u3002 \u8fd9\u4e24\u4e2a\u8986\u76d6\u7387\u4ee3\u8868\u4e86\u7ec4\u7ec7\u901a\u8fc7\u6280\u672f\u624b\u6bb5\u4fdd\u8bc1\u8d28\u91cf\u7684\u80fd\u529b\uff0c\u4e5f\u662f\u6d4b\u8bd5\u56e2\u961f\u6700\u5e38\u91c7\u7528\u7684\u6570\u636e\u6307\u6807\u3002</li> <li>\u4e0e\u53d1\u5e03\u7ba1\u7406\u5b50\u7cfb\u7edf\u76f8\u5173\u7684\u6307\u6807\u5305\u62ec\uff1a\u5468\u53d1\u5e03\u6570\u91cf\uff0c\u56de\u6eda\u6bd4\u7387\u3002</li> </ul> <p>\u53d1\u5e03\u6570\u91cf\u7684\u589e\u52a0\uff0c\u53ef\u4ee5\u6700\u76f4\u89c2\u5730\u8868\u73b0\u4ea4\u4ed8\u80fd\u529b\u7684\u63d0\u5347\uff1b\u56de\u6eda\u6bd4\u7387\uff0c\u5219\u4ee3\u8868\u4e86\u53d1\u5e03\u7684\u8d28\u91cf\u3002\u7efc\u5408\u4f7f\u7528\u5468\u53d1\u5e03\u6570\u91cf\u548c\u56de\u6eda\u6bd4\u4f8b\u8fd9\u4e24\u4e2a\u6307\u6807\uff0c\u5c31\u53ef\u4ee5\u8861\u91cf\u6574\u4e2a\u56e2\u961f\u7684\u7814\u53d1\u80fd\u529b\u662f\u5426\u5f97\u5230\u4e86\u63d0\u5347\u3002</p>"},{"location":"chap16/8Real_exp/","title":"L8 \u5b9e\u8df5\u6848\u4f8b","text":""},{"location":"chap16/8Real_exp/#1","title":"1 \u5feb\u901f\u6784\u5efa\u6301\u7eed\u4ea4\u4ed8\u7cfb\u7edf\uff08\u4e00\uff09\uff1a\u9700\u6c42\u5206\u6790","text":"<p>\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u8981\u6a21\u62df\u7684\u8fd9\u4e2a\u7cfb\u7edf\uff0c\u6700\u7ec8\u8868\u73b0\u4e3a\u79fb\u52a8 App \u6301\u7eed\u4ea4\u4ed8\u4f53\u7cfb\u7684\u5f62\u5f0f\uff0c\u9700\u8981\u4e2d\u95f4\u4ef6\u3001\u4e1a\u52a1\u540e\u53f0\uff0c\u4ee5\u53ca\u4e1a\u52a1\u5ba2\u6237\u7aef\u8fd9 3 \u4e2a\u56e2\u961f\u4ea4\u4ed8\u4ea7\u7269\u7684\u534f\u4f5c\uff0c\u624d\u7b97\u662f\u5b8c\u6574\uff1a</p> <ul> <li>\u9996\u5148\uff0c\u7528\u6237\u901a\u8fc7\u56e2\u961f 3 \u4ea4\u4ed8\u7684\u79fb\u52a8 App \u8fdb\u884c\u7cfb\u7edf\u64cd\u4f5c\uff1b</li> <li>\u5176\u6b21\uff0c\u79fb\u52a8 App \u9700\u8981\u8c03\u7528\u56e2\u961f 2 \u63d0\u4f9b\u7684\u4e1a\u52a1\u540e\u53f0\u670d\u52a1 War\uff0c\u83b7\u53d6\u6570\u636e\u548c\u5904\u7406\u4e1a\u52a1\u903b\u8f91\uff1b</li> <li>\u6700\u540e\uff0c\u540e\u53f0\u670d\u52a1 War \u9700\u8981\u4f9d\u8d56\u56e2\u961f 1 \u63d0\u4f9b\u7684\u4e1a\u52a1\u4e2d\u95f4\u4ef6 Jar\uff0c\u5b8c\u6210\u5e95\u5c42\u64cd\u4f5c\uff0c\u5982\u914d\u7f6e\u8bfb\u53d6\u3001\u7f13\u5b58\u5904\u7406\u7b49\u3002</li> </ul> <p>\u8fd9\u4e09\u4e2a\u56e2\u961f\u7684\u4f9d\u8d56\u5173\u7cfb\u548c\u4ea4\u4ed8\u4ea7\u7269\uff0c\u4e5f\u51b3\u5b9a\u4e86\u4ed6\u4eec\u8981\u91c7\u7528\u4e0d\u540c\u7684\u4ea4\u4ed8\u65b9\u5f0f\uff1a</p> <ul> <li>\u56e2\u961f 1\uff0c\u6709\u4e24\u7c7b\u4ea4\u4ed8\u65b9\u5f0f\uff1a<ul> <li>\u7b2c\u4e00\u7c7b\u662f\uff0c\u4e2d\u95f4\u4ef6\u670d\u52a1\u7684\u4ea4\u4ed8\uff0c\u4f7f\u7528\u4f20\u7edf\u7684\u865a\u673a\u90e8\u7f72\uff0c\u63d0\u4f9b\u53ef\u90e8\u7f72\u7684\u4ee3\u7801\u5305\uff1b</li> <li>\u7b2c\u4e8c\u7c7b\u662f\uff0c\u4e2d\u95f4\u4ef6\u7ec4\u4ef6\u7684\u4ea4\u4ed8\uff0c\u4f7f\u7528 Jar \u5305\u53d1\u5e03\uff0c\u53d1\u5e03\u5230\u7ec4\u4ef6\u4ed3\u5e93\u3002</li> </ul> </li> <li>\u56e2\u961f 2 \u7684\u4ea4\u4ed8\u65b9\u5f0f\u662f\uff0c\u540e\u53f0\u670d\u52a1\u4f7f\u7528 Docker \u4ea4\u4ed8\uff0c\u90e8\u7f72\u5728 k8s \u96c6\u7fa4\u4e0a\u3002</li> <li>\u56e2\u961f 3 \u7684\u4ea4\u4ed8\u65b9\u5f0f\u662f\uff0c\u6807\u51c6\u7684 iOS App \u4ea4\u4ed8\u3002</li> </ul>"},{"location":"chap16/8Real_exp/#1-1","title":"1-1 \u4e3b\u4f53\u6d41\u6c34\u7ebf\u7684\u9700\u6c42","text":"<p>\u6574\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u5927\u81f4\u63cf\u8ff0\u4e3a\uff1a\u4ee3\u7801\u5408\u5e76\u5230 master \u540e\u80fd\u591f\u81ea\u52a8\u89e6\u53d1\u5bf9\u5e94\u7684\u96c6\u6210\u7f16\u8bd1\uff0c\u5982\u7f16\u8bd1\u901a\u8fc7\u5219\u90e8\u7f72\u5230\u5bf9\u5e94\u7684\u6d4b\u8bd5\u73af\u5883\u4e0b\uff0c\u90e8\u7f72\u6210\u529f\u540e\u9a71\u52a8\u81ea\u52a8\u5316\u6d4b\u8bd5\uff0c\u6d4b\u8bd5\u901a\u8fc7\u5219\u5206\u6279\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\u3002</p> <p>\u4e3b\u4f53\u6d41\u6c34\u7ebf\u53d1\u751f\u7684\u72b6\u6001\u53d8\u66f4\uff0c\u90fd\u9700\u8981\u901a\u8fc7 E-mail \u901a\u77e5\u53d1\u8d77\u4eba\u3002\u8fd9\u91cc\u7684\u53d1\u8d77\u4eba\u5c31\u662f\u4ee3\u7801\u63d0\u4ea4\u8005\u548c\u5408\u5e76\u5ba1\u6838\u4eba\u3002</p>"},{"location":"chap16/8Real_exp/#1-2","title":"1-2 \u4ee3\u7801\u4e0e\u914d\u7f6e\u7ba1\u7406\u76f8\u5173\u7684\u9700\u6c42","text":"<p>3 \u4e2a\u6a21\u62df\u56e2\u961f\u7684\u4ee3\u7801\u5206\u652f\u7b56\u7565\u5747\u91c7\u7528\u6807\u51c6\u7684 GitLab Flow \u6a21\u578b\uff0c\u8981\u6c42\u662f\u4ee3\u7801\u901a\u8fc7 code review \u540e\u624d\u80fd\u5408\u5e76\u5165 master \u5206\u652f\uff1b\u5408\u5e76\u5165 master \u5206\u652f\u540e\uff0c\u80fd\u591f\u89e6\u53d1\u5bf9\u5e94\u7684\u96c6\u6210\u7f16\u8bd1\u3002</p> <p>\u540c\u65f6\uff0c\u6211\u4eec\u9700\u8981\u4ee3\u7801\u9759\u6001\u626b\u63cf\u670d\u52a1\uff0c\u5e2e\u52a9\u6211\u4eec\u66f4\u597d\u5730\u628a\u63a7\u4ee3\u7801\u8d28\u91cf\u3002\u8fd9\u4e2a\u670d\u52a1\u7684\u5177\u4f53\u5de5\u4f5c\u5f62\u5f0f\u662f\uff1a</p> <p>\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6574\u4e2a\u4ee3\u7801\u626b\u63cf\u8fc7\u7a0b\u662f\u5f02\u6b65\u8fdb\u884c\u7684\uff0c\u6240\u4ee5\u5728\u6ca1\u6709\u5f97\u5230\u626b\u63cf\u7ed3\u679c\u524d\uff0c\u4e3b\u4f53\u6d41\u6c34\u7ebf\u5c06\u7ee7\u7eed\u8fdb\u884c\u3002</p> <ul> <li>\u5982\u679c\u4e3b\u4f53\u6d41\u6c34\u7ebf\u5df2\u7ecf\u6267\u884c\u5b8c\uff0c\u800c\u4ee3\u7801\u626b\u63cf\u8fd8\u6ca1\u7ed3\u675f\uff0c\u4e5f\u5c31\u662f\u8fd8\u6ca1\u6709\u5f97\u5230\u626b\u63cf\u7ed3\u679c\u7684\u8bdd\uff0c\u6574\u6761\u6d41\u6c34\u7ebf\u9700\u8981\u505c\u4e0b\u6765\u7b49\u5f85\uff1b</li> <li>\u800c\u5982\u679c\u5728\u6267\u884c\u4e3b\u4f53\u6d41\u6c34\u7ebf\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4ee3\u7801\u9759\u6001\u626b\u63cf\u7684\u7ed3\u679c\u662f\u4e0d\u901a\u8fc7\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u76f4\u63a5\u4e2d\u65ad\u4e3b\u4f53\u6d41\u6c34\u7ebf\u7684\u6267\u884c\uff0c\u6b64\u6b21\u4ea4\u4ed8\u5ba3\u544a\u5931\u8d25\u3002</li> </ul>"},{"location":"chap16/8Real_exp/#1-3","title":"1-3 \u6784\u5efa\u4e0e\u96c6\u6210\u76f8\u5173\u7684\u9700\u6c42","text":"<ul> <li>\u9996\u5148\uff0c\u80fd\u591f\u540c\u65f6\u652f\u6301\u4f20\u7edf\u7684\u90e8\u7f72\u5305\u3001Docker \u955c\u50cf\uff0c\u4ee5\u53ca\u79fb\u52a8 App \u7684\u7f16\u8bd1\u548c\u96c6\u6210\u3002</li> <li>\u5176\u6b21\uff0c\u6240\u6709\u6784\u5efa\u4ea7\u7269\u53ca\u6784\u5efa\u5386\u53f2\uff0c\u90fd\u80fd\u88ab\u6709\u6548\u3001\u6c38\u4e45\u5730\u8bb0\u5f55\u548c\u5b58\u50a8\u3002</li> <li>\u518d\u6b21\uff0c\u5404\u6784\u5efa\u4ea7\u7269\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u7248\u672c\u4f53\u7cfb\uff0c\u5e76\u4e0e\u4ee3\u7801 commit ID \u76f8\u5173\u8054\u3002</li> <li>\u6700\u540e\uff0c\u6784\u5efa\u901a\u9053\u5fc5\u987b\u80fd\u591f\u652f\u6301\u8db3\u591f\u7684\u5e76\u53d1\u91cf\u3002</li> </ul>"},{"location":"chap16/8Real_exp/#1-4","title":"1-4 \u6253\u5305\u4e0e\u53d1\u5e03\u76f8\u5173\u7684\u9700\u6c42","text":"<p>\u6574\u4e2a\u53d1\u5e03\u4f53\u7cfb\uff0c\u9664\u4e86\u8981\u8003\u8651\u6807\u51c6\u7684 War \u5305\u548c Docke \u955c\u50cf\u53d1\u5e03\u5916\uff0c\u6211\u4eec\u8fd8\u8981\u8003\u8651 Jar \u5305\u7ec4\u4ef6\u7684\u53d1\u5e03\u3002\u56e0\u4e3a\u56e2\u961f 1 \u7684 Jar \u5305\u5bf9\u5e94\u6709\u4e24\u7c7b\u4ea4\u4ed8\u65b9\u5f0f\uff0c\u6240\u4ee5\u5bf9 Jar \u5305\u7684\u53d1\u5e03\uff0c\u6211\u4eec\u9700\u8981\u505a\u4e00\u4e9b\u7279\u6b8a\u8003\u8651\uff1a</p> <ul> <li>\u6d4b\u8bd5\u73af\u5883\u53ef\u4ee5\u4f7f\u7528 Snapshot \u7248\u672c\uff0c\u4f46\u662f\u751f\u4ea7\u73af\u5883\u5219\u4e0d\u5141\u8bb8\uff1b</li> <li>\u5373\u4f7f\u6d4b\u8bd5\u901a\u8fc7\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u9700\u8981\u53d1\u5e03 Jar \u5305\u7684\u6bcf\u4e2a\u7248\u672c\u5230\u751f\u4ea7\u73af\u5883\uff1b</li> <li>Jar \u5305\u662f\u53d1\u5e03\u5230\u5bf9\u5e94\u7684\u7ec4\u4ef6\u4ed3\u5e93\uff0c\u53d1\u5e03\u5f62\u5f0f\u4e0e\u5176\u4ed6\u51e0\u7c7b\u5dee\u522b\uff08\u6bd4\u5982\uff0cWar \u5305\u3001Docker \u955c\u50cf\u7b49\uff09\u8f83\u5927\u3002</li> </ul>"},{"location":"chap16/8Real_exp/#1-5","title":"1-5 \u81ea\u52a8\u5316\u6d4b\u8bd5\u7684\u9700\u6c42","text":"<p>\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u5e73\u53f0\uff0c\u9009\u62e9\u7684\u662f TestNG\uff0c\u8fd9\u4e5f\u662f\u4e1a\u754c\u6700\u4e3a\u6d41\u884c\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u5e73\u53f0\u4e4b\u4e00\u3002</p> <p>\u5bf9\u4e8e\u6d4b\u8bd5\uff0c\u7cfb\u7edf\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e0d\u8981\u6709\u4e00\u4e2a\u6d4b\u8bd5\u4efb\u52a1\u5931\u8d25\u5c31\u4e2d\u65ad\u4ea4\u4ed8\uff0c\u6700\u597d\u662f\u8dd1\u5b8c\u6240\u6709\u6d4b\u8bd5\u4efb\u52a1\uff0c\u5e76\u6536\u96c6\u7ed3\u679c\u3002\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 TestNG \u5e73\u53f0\uff0c\u5f88\u5bb9\u6613\u505a\u5230\u8fd9\u4e00\u70b9\u3002</p> <p>\u800c\u6a21\u62df\u56e2\u961f\u5728\u6301\u7eed\u4ea4\u4ed8\u4e3b\u4f53\u6d41\u6c34\u7ebf\u7684\u9700\u6c42\u4e0b\uff0c\u5bf9\u5404\u4e2a\u4e3b\u8981\u6a21\u5757\u8fd8\u6709\u4e00\u4e9b\u5177\u4f53\u7684\u9700\u6c42\uff1a</p> <ul> <li>\u4ee3\u7801\u4e0e\u914d\u7f6e\uff1a\u9700\u8981 code review\uff0c\u4ee5\u53ca\u9759\u6001\u4ee3\u7801\u626b\u63cf\uff1b</li> <li>\u6784\u5efa\u4e0e\u96c6\u6210\uff1a\u80fd\u540c\u65f6\u652f\u6301 Jar\u3001War\u3001Docker\uff0c\u4ee5\u53ca App\uff0c\u7248\u672c\u7ba1\u7406\u53ef\u8ffd\u6eaf\uff0c\u652f\u6301\u9ad8\u5e76\u53d1\uff1b</li> <li>\u6253\u5305\u4e0e\u53d1\u5e03\uff1a\u540c\u65f6\u652f\u6301 Jar\u3001War\u3001Docker\u3001App \u7684\u53d1\u5e03\uff0c\u4ee5\u53ca\u7edf\u4e00\u7684\u90e8\u7f72\u6807\u51c6\uff1b</li> <li>\u81ea\u52a8\u5316\u6d4b\u8bd5\uff1a\u901a\u8fc7 TestNG \u9a71\u52a8\uff0c\u5b9e\u73b0\u5168\u81ea\u52a8\u6d4b\u8bd5\u3002</li> </ul>"},{"location":"chap16/8Real_exp/#2-gitlab","title":"2 \u5feb\u901f\u6784\u5efa\u6301\u7eed\u4ea4\u4ed8\u7cfb\u7edf\uff08\u4e8c\uff09\uff1aGitLab \u89e3\u51b3\u4ee3\u7801\u7ba1\u7406\u95ee\u9898\u3001","text":""},{"location":"chap16/8Real_exp/#2-1-gitlab","title":"2-1 \u5229\u7528 GitLab \u642d\u5efa\u4ee3\u7801\u7ba1\u7406\u5e73\u53f0","text":"<p>\u4f7f\u7528\u5b98\u65b9\u7684 Docker \u955c\u50cf\u6216\u4e00\u952e\u5b89\u88c5\u5305 Omnibus \u5b89\u88c5 GitLab\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u5c31\u4ee5 Centos 7 \u865a\u62df\u673a\u4e3a\u4f8b\uff0c\u63cf\u8ff0\u4e00\u4e0b\u6574\u4e2a Omnibus GitLab \u7684\u5b89\u88c5\u8fc7\u7a0b\uff0c\u4ee5\u53ca\u6ce8\u610f\u4e8b\u9879\u3002</p> <p>\u5728\u5b89\u88c5\u524d\uff0c\u4f60\u9700\u8981\u6ce8\u610f\u7684\u662f\u5982\u679c\u4f7f\u7528\u865a\u62df\u673a\u8fdb\u884c\u5b89\u88c5\u6d4b\u8bd5\uff0c\u5efa\u8bae\u865a\u62df\u673a\u7684\u201c\u6700\u5927\u5185\u5b58\u201d\u914d\u7f6e\u5728 4 G \u53ca\u4ee5\u4e0a\uff0c\u5982\u679c\u5c0f\u4e8e 2 G\uff0cGitLab \u53ef\u80fd\u4f1a\u65e0\u6cd5\u6b63\u5e38\u542f\u52a8\u3002</p>"},{"location":"chap16/8Real_exp/#2-2-gitlab","title":"2-2 \u5b89\u88c5 GitLab","text":"<p>\u5b89\u88c5 SSH \u7b49\u4f9d\u8d56\uff0c\u914d\u7f6e\u9632\u706b\u5899\u3002</p> <pre><code>sudo yum install -y curl policycoreutils-python openssh-server\nsudo systemctl enable sshd\nsudo systemctl start sshd\nsudo firewall-cmd --permanent --add-service=http\nsudo systemctl reload firewalld\n</code></pre> <p>\u5b89\u88c5 Postfix \u652f\u6301\u7535\u5b50\u90ae\u4ef6\u7684\u53d1\u9001\u3002</p> <pre><code>sudo yum install postfix\nsudo systemctl enable postfix\nsudo systemctl start postfix\n</code></pre> <p>\u4ece rpm \u6e90\u5b89\u88c5\uff0c\u5e76\u914d\u7f6e GitLab \u7684\u8bbf\u95ee\u57df\u540d\uff0c\u6d4b\u8bd5\u65f6\u53ef\u4ee5\u5c06\u5176\u914d\u7f6e\u4e3a\u865a\u62df\u673a\u7684 IP\uff08\u6bd4\u5982 192.168.0.101\uff09\u3002</p> <pre><code>curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.rpm.sh | sudo bash \nsudo EXTERNAL_URL=\"http://192.168.0.101\" yum install -y gitlab-ee\n</code></pre>"},{"location":"chap16/8Real_exp/#2-3-gitlab","title":"2-3 \u914d\u7f6e GitLab","text":"<p>\u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\uff0c\u8fd8\u8981\u8fdb\u884c\u4e00\u4e9b\u7cfb\u7edf\u914d\u7f6e\u3002\u5bf9\u4e8e Omnibus GitLab \u7684\u914d\u7f6e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u91cd\u70b9\u5173\u6ce8\u4e24\u65b9\u9762\u7684\u5185\u5bb9\uff1a</p> <ul> <li>\u4f7f\u7528\u547d\u4ee4\u884c\u5de5\u5177 gitlab-ctl\uff0c\u7ba1\u7406 Omnibus GitLab \u7684\u4e00\u4e9b\u5e38\u7528\u547d\u4ee4\u3002 \u6bd4\u5982\uff0c\u4f60\u60f3\u6392\u67e5 GitLab \u7684\u8fd0\u884c\u5f02\u5e38\uff0c\u53ef\u4ee5\u6267\u884c gitlab-ctl tail \u67e5\u770b\u65e5\u5fd7\u3002</li> <li>\u914d\u7f6e\u6587\u4ef6 <code>/etc/gitlab/gitlab.rb</code>\uff0c\u5305\u542b\u6240\u6709 GitLab \u7684\u76f8\u5173\u914d\u7f6e\u3002\u90ae\u4ef6\u670d\u52a1\u5668\u3001LDAP \u8d26\u53f7\u9a8c\u8bc1\uff0c\u4ee5\u53ca\u6570\u636e\u5e93\u7f13\u5b58\u7b49\u914d\u7f6e\uff0c\u7edf\u4e00\u5728\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u4e2d\u8fdb\u884c\u4fee\u6539\u3002 \u6bd4\u5982\uff0c\u4f60\u60f3\u8981\u4fee\u6539 GitLab \u7684\u5916\u90e8\u57df\u540d\u65f6, \u53ef\u4ee5\u901a\u8fc7\u4e00\u6761\u6307\u4ee4\u4fee\u6539 <code>gitlab.rb</code> \u6587\u4ef6\uff1a</li> </ul> <pre><code>external_url 'http://newhost.com'\n</code></pre> <p>\u7136\u540e\uff0c\u6267\u884c gitlab-ctl reconfigure \u91cd\u542f\u914d\u7f6e GitLab \u5373\u53ef\u3002</p> <p>\u5173\u4e8e GitLab \u66f4\u8be6\u7ec6\u7684\u914d\u7f6e\uff0c\u4f60\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863\u3002</p>"},{"location":"chap16/8Real_exp/#2-4-gitlab","title":"2-4 GitLab \u7684\u4e8c\u6b21\u5f00\u53d1","text":"<p>\u5bf9 GitLab \u8fdb\u884c\u4e8c\u6b21\u5f00\u53d1\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5176\u5b98\u65b9\u5f00\u53d1\u73af\u5883 gdk\uff08 https://gitlab.com/gitlab-org/gitlab-development-kit\uff09\u3002</p> <p>\u4f46\uff0c\u5982\u679c\u4f60\u662f\u7b2c\u4e00\u6b21\u8fdb\u884c GitLab \u4e8c\u6b21\u5f00\u53d1\u7684\u8bdd\uff0c\u6211\u8fd8\u662f\u5efa\u8bae\u4f60\u6309\u7167 https://docs.gitlab.com/ee/install/installation.html \u8fdb\u884c\u4e00\u6b21\u57fa\u4e8e\u6e90\u7801\u7684\u5b89\u88c5\uff0c\u8fd9\u5c06\u6709\u52a9\u4e8e\u4f60\u66f4\u597d\u5730\u7406\u89e3 GitLab \u7684\u6574\u4e2a\u67b6\u6784\u3002</p> <p>\u4e3a\u4e86\u540e\u9762\u66f4\u9ad8\u6548\u5730\u89e3\u51b3\u4e8c\u6b21\u5f00\u53d1\u7684\u95ee\u9898\uff0c\u6211\u5148\u548c\u4f60\u4ecb\u7ecd\u4e00\u4e0b GitLab \u7684\u51e0\u4e2a\u4e3b\u8981\u6a21\u5757\uff1a</p> <ul> <li>Unicorn\uff0c\u662f\u4e00\u4e2a Web Server\uff0c\u7528\u4e8e\u652f\u6301 GitLab \u7684\u4e3b\u4f53 Web \u5e94\u7528\uff1b</li> <li>Sidekiq\uff0c\u961f\u5217\u670d\u52a1\uff0c\u9700\u8981 Redis \u652f\u6301\uff0c\u7528\u4ee5\u652f\u6301 GitLab \u7684\u5f02\u6b65\u4efb\u52a1\uff1b</li> <li>GitLab Shell\uff0cGit SSH \u7684\u6743\u9650\u7ba1\u7406\u6a21\u5757\uff1b</li> <li>Gitaly\uff0cGit RPC \u670d\u52a1\uff0c\u7528\u4e8e\u5904\u7406 GitLab \u53d1\u51fa\u7684 git \u64cd\u4f5c\uff1b</li> <li>GitLab Workhorse\uff0c\u57fa\u4e8e Go \u8bed\u8a00\uff0c\u7528\u4e8e\u63a5\u66ff Unicorn \u5904\u7406\u6bd4\u8f83\u5927\u7684 http \u8bf7\u6c42\u3002</li> </ul> <p></p> <p>\u5bf9 GitLab \u5e94\u7528\u5c42\u7684\u4fee\u6539\uff0c\u6211\u4eec\u4e3b\u8981\u5173\u6ce8\u7684\u662f GitLab Rails \u548c GitLab Shell \u8fd9\u4e24\u4e2a\u5b50\u7cfb\u7edf\u3002</p>"},{"location":"chap16/8Real_exp/#2-5","title":"2-5 \u4e8c\u6b21\u5f00\u53d1\u7684\u4f8b\u5b50","text":"<p>\u4e8c\u6b21\u5f00\u53d1\uff0c\u6700\u5e38\u89c1\u7684\u662f\u5bf9 GitLab \u6dfb\u52a0\u4e00\u4e2a\u5916\u90e8\u670d\u52a1\u8c03\u7528\uff0c\u8fd9\u90e8\u5206\u9700\u8981\u5728 <code>app/models/project_services</code> \u4e0b\u9762\u6dfb\u52a0\u76f8\u5173\u7684\u4ee3\u7801\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u53c2\u8003 GitLab \u5bf9 Microsoft Teams \u7684\u652f\u6301\u65b9\u5f0f\uff1a</p> <p>\u5728 <code>app/models/project_services/microsoft_teams_service.rb</code> \u4e0b\uff0c\u6dfb\u52a0\u4e00\u4e9b\u53ef\u914d\u7f6e\u5185\u5bb9\u53ca\u5176\u5c5e\u6027\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 GitLab \u7684 service \u6a21\u5757\u9875\u9762\u4e0b\u770b\u5230\u76f8\u5e94\u7684\u914d\u7f6e\u9879\u4e86\u3002</p> <pre><code># frozen_string_literal: true \nclass MicrosoftTeamsService &lt; ChatNotificationService\n  def title\n    'Microsoft Teams Notification'\n  end \n  def description\n    'Receive event notifications in Microsoft Teams'\n  end \n  def self.to_param\n    'microsoft_teams'\n  end \n  def help\n    'This service sends notifications about projects events to Microsoft Teams channels.&lt;br /&gt;\n    To set up this service:\n    &lt;ol&gt;\n      &lt;li&gt;&lt;a href=\"https://msdn.microsoft.com/en-us/microsoft-teams/connectors\"&gt;Getting started with 365 Office Connectors For Microsoft Teams&lt;/a&gt;.&lt;/li&gt;\n      &lt;li&gt;Paste the &lt;strong&gt;Webhook URL&lt;/strong&gt; into the field below.&lt;/li&gt;\n      &lt;li&gt;Select events below to enable notifications.&lt;/li&gt;\n    &lt;/ol&gt;'\n  end \n  def webhook_placeholder\n    'https://outlook.office.com/webhook/\u2026'\n  end \n  def event_field(event)\n  end \n  def default_channel_placeholder\n  end \n  def default_fields\n    [\n      { type: 'text', name: 'webhook', placeholder: \"e.g. #{webhook_placeholder}\" },\n      { type: 'checkbox', name: 'notify_only_broken_pipelines' },\n      { type: 'checkbox', name: 'notify_only_default_branch' }\n    ]\n  end \n  private \n  def notify(message, opts)\n    MicrosoftTeams::Notifier.new(webhook).ping(\n      title: message.project_name,\n      summary: message.summary,\n      activity: message.activity,\n      attachments: message.attachments\n    )\n  end \n  def custom_data(data)\n    super(data).merge(markdown: true)\n  end\nend\n</code></pre> <p>\u5728 <code>lib/microsoft_teams/notifier.rb</code> \u5185\u5b9e\u73b0\u670d\u52a1\u7684\u5177\u4f53\u8c03\u7528\u903b\u8f91\u3002</p> <pre><code>module MicrosoftTeams\n  class Notifier\n    def initialize(webhook)\n      @webhook = webhook\n      @header = { 'Content-type' =&gt; 'application/json' }\n    end \n    def ping(options = {})\n      result = false \n      begin\n        response = Gitlab::HTTP.post(\n          @webhook.to_str,\n          headers: @header,\n          allow_local_requests: true,\n          body: body(options)\n        ) \n        result = true if response\n      rescue Gitlab::HTTP::Error, StandardError =&gt; error\n        Rails.logger.info(\"#{self.class.name}: Error while connecting to #{@webhook}: #{error.message}\")\n      end \n      result\n    end \n    private \n    def body(options = {})\n      result = { 'sections' =&gt; [] }\n      result['title'] = options[:title]\n      result['summary'] = options[:summary]\n      result['sections'] &lt;&lt; MicrosoftTeams::Activity.new(options[:activity]).prepare \n      attachments = options[:attachments]\n      unless attachments.blank?\n        result['sections'] &lt;&lt; {\n          'title' =&gt; 'Details',\n          'facts' =&gt; [{ 'name' =&gt; 'Attachments', 'value' =&gt; attachments }]\n        }\n      end \n      result.to_json\n    end\n  end\nend\n</code></pre> <p>\u4ee5\u4e0a\u5c31\u662f\u4e00\u4e2a\u6700\u7b80\u5355\u7684 Service \u4e8c\u6b21\u5f00\u53d1\u7684\u4f8b\u5b50\u3002\u719f\u6089\u4e86 Rails \u548c GitLab \u6e90\u7801\u540e\uff0c\u4f60\u5b8c\u5168\u53ef\u4ee5\u4ee5\u6b64\u7c7b\u63a8\u5199\u51fa\u66f4\u590d\u6742\u7684 Service\u3002</p>"},{"location":"chap16/8Real_exp/#2-6-gitlab-ha","title":"2-6 GitLab \u7684 HA \u65b9\u6848","text":"<p>\u5bf9\u4e8e\u7814\u53d1\u4eba\u5458\u6570\u91cf\u5c0f\u4e8e 1000 \u7684\u56e2\u961f\uff0c\u6211\u4e0d\u5efa\u8bae\u4f60\u8003\u8651 GitLab \u670d\u52a1\u591a\u673a\u6c34\u5e73\u6269\u5c55\u7684\u65b9\u6848\u3002GitLab \u5b98\u65b9\u7ed9\u51fa\u4e86\u4e00\u4e2a\u5185\u5b58\u5bf9\u5e94\u7528\u6237\u6570\u91cf\u7684\u53c2\u7167\uff0c\u5982\u4e0b\uff1a</p> <p>16 GB RAM supports up to 2000 users 128 GB RAM supports up to 16000 users</p> <p>\u4ece\u8fd9\u4e2a\u914d\u7f6e\u53c2\u7167\u6570\u636e\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e00\u53f0\u9ad8\u914d\u7684\u865a\u62df\u673a\u6216\u8005\u5bb9\u5668\u53ef\u4ee5\u652f\u6301 2000 \u540d\u7814\u53d1\u4eba\u5458\u7684\u64cd\u4f5c\uff0c\u800c\u5355\u53f0\u7269\u7406\u673a\uff08128 GB \u914d\u7f6e\uff09\u8db3\u4ee5\u4f9b\u4e0a\u4e07\u7814\u53d1\u4eba\u5458\u4f7f\u7528\u3002</p> <p>\u540c\u65f6\uff0c\u5b9e\u73b0 GitLab \u7684\u5b8c\u6574\u6c34\u5e73\u6269\u5c55\u65b9\u6848\uff0c\u4e5f\u5e76\u4e0d\u662f\u4e00\u4ef6\u6613\u4e8b\u3002</p> <p>GitLab \u63d0\u4f9b\u7684\u529f\u80fd</p> <p></p> <p>\u4ece\u6574\u4f53\u67b6\u6784\u4e0a\u770b\uff0cPostgreSQL\u3001Redis \u8fd9\u4e24\u4e2a\u6a21\u5757\u7684\u9ad8\u53ef\u7528\uff0c\u90fd\u6709\u901a\u7528\u7684\u89e3\u51b3\u65b9\u6848\u3002\u800c GitLab \u5728\u67b6\u6784\u4e0a\u6700\u5927\u7684\u95ee\u9898\u662f\uff0c\u9700\u8981\u901a\u8fc7\u6587\u4ef6\u7cfb\u7edf\u5728\u672c\u5730\u8bbf\u95ee\u4ed3\u5e93\u6587\u4ef6\u3002\u4e8e\u662f\uff0c\u6c34\u5e73\u6269\u5c55\u65f6\uff0c\u5982\u4f55\u628a\u672c\u5730\u7684\u4ed3\u5e93\u6587\u4ef6\u5f53\u505a\u6570\u636e\u8d44\u6e90\u5728\u670d\u52a1\u5668\u4e4b\u95f4\u8fdb\u884c\u8bfb\u5199\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u96be\u9898\u3002</p> <p>\u5b98\u65b9\u63a8\u8350\u7684\u65b9\u6848\u662f\u901a\u8fc7 NFS \u8fdb\u884c\u591a\u673a Git \u4ed3\u5e93\u5171\u4eab\u3002\u4f46\u8fd9\u4e2a\u65b9\u6848\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\u5e76\u4e0d\u53ef\u884c\uff0cgit \u672c\u8eab\u662f IO \u5bc6\u96c6\u578b\u5e94\u7528\uff0c\u5bf9\u4e8e\u771f\u6b63\u5728\u6027\u80fd\u4e0a\u6709\u6c34\u5e73\u6269\u5c55\u8bc9\u6c42\u7684\u7528\u6237\u6765\u8bf4\uff0cNFS \u7684\u6027\u80fd\u5f88\u5feb\u5c31\u4f1a\u6210\u4e3a\u6574\u4e2a\u7cfb\u7edf\u7684\u74f6\u9888\u3002\u6211\u65e9\u671f\u5728\u7f8e\u56e2\u70b9\u8bc4\u642d\u5efa\u6301\u7eed\u4ea4\u4ed8\u4f53\u7cfb\u65f6\uff0c\u66fe\u5c1d\u8bd5\u8fc7\u8fd9\u4e2a\u65b9\u6848\uff0c\u5f53\u8fbe\u5230\u51e0\u767e\u4e2a\u4ed3\u5e93\u7684\u89c4\u6a21\u65f6\uff0cNFS \u5c31\u6491\u4e0d\u4f4f\u4e86\u3002</p>"},{"location":"chap16/8Real_exp/#2-7","title":"2-7 \u5982\u4f55\u5e94\u5bf9\u4ee3\u7801\u7ba1\u7406\u7684\u9700\u6c42","text":"<p>Integrations \u5305\u62ec\u4e24\u90e8\u5206</p> <ul> <li>ab service\uff0c\u662f\u5728 GitLab \u5185\u90e8\u5b9e\u73b0\u7684\uff0c\u4e0e\u4e00\u4e9b\u7f3a\u9677\u7ba1\u7406\u3001\u56e2\u961f\u534f\u4f5c\u7b49\u5de5\u5177\u7684\u96c6\u6210\u670d\u52a1\u3002</li> <li> <p>Webhook\uff0c\u652f\u6301\u5728 GitLab \u89e6\u53d1\u4ee3\u7801 push\u3001Merge Request \u7b49\u4e8b\u4ef6\u65f6\u8fdb\u884c http \u6d88\u606f\u63a8\u9001\u3002</p> </li> <li> <p>\u7b2c\u4e00\u6b65\uff0c\u521b\u5efa\u5bf9\u5e94\u7684\u4ee3\u7801\u4ed3\u5e93</p> </li> <li>\u7b2c\u4e8c\u6b65\uff0c\u914d\u7f6e Sonar \u9759\u6001\u68c0\u67e5</li> <li>\u7b2c\u4e09\u6b65\uff0c\u89e3\u51b3\u5176\u4ed6\u8bbe\u7f6e<ul> <li>\u7ecf\u8fc7\u521b\u5efa\u5bf9\u5e94\u7684\u4ee3\u7801\u4ed3\u5e93\u3001\u914d\u7f6e Sonar \u9759\u6001\u68c0\u67e5\u8fd9\u4e24\u6b65\uff0c\u518d\u914d\u5408\u4f7f\u7528 GitLab \u63d0\u4f9b\u7684 Merge Request\u3001Issues\u3001CI/CD \u548c Integration \u529f\u80fd\uff0c\u4ee3\u7801\u7ba1\u7406\u5e73\u53f0\u57fa\u672c\u4e0a\u5c31\u7b97\u987a\u5229\u642d\u5efa\u5b8c\u6bd5\u4e86\u3002</li> </ul> </li> </ul>"},{"location":"chap16/8Real_exp/#3-jenkins","title":"3 \u5feb\u901f\u6784\u5efa\u6301\u7eed\u4ea4\u4ed8\u7cfb\u7edf\uff08\u4e09\uff09\uff1aJenkins \u89e3\u51b3\u96c6\u6210\u6253\u5305\u95ee\u9898","text":""},{"location":"chap16/8Real_exp/#3-1-jenkins","title":"3-1 Jenkins \u7684\u5b89\u88c5\u4e0e\u914d\u7f6e","text":"<p>\u7b2c\u4e00\u6b65\uff0c\u5b89\u88c5 Jenkins</p> <p>\u4e3a\u4e86\u6574\u4e2a\u6301\u7eed\u4ea4\u4ed8\u4f53\u7cfb\u7684\u5404\u4e2a\u5b50\u7cfb\u7edf\u4e4b\u95f4\u7684\u73af\u5883\u7684\u4e00\u81f4\u6027\uff0c\u6211\u5728\u8fd9\u91cc\u4f9d\u7136\u4ee5 Centos 7 \u865a\u62df\u673a\u4e3a\u4f8b\uff0c\u548c\u4f60\u5206\u4eab Jenkins 2.138\uff08\u6700\u65b0\u7248\uff09\u7684\u5b89\u88c5\u8fc7\u7a0b\u3002\u5047\u8bbe\uff0cJenkins \u4e3b\u673a\u7684 IP \u5730\u5740\u662f 10.1.77.79\u3002</p> <ul> <li>\u5b89\u88c5 Java \u73af\u5883</li> </ul> <pre><code> yum install java-1.8.0-openjdk-devel\n</code></pre> <ul> <li>\u66f4\u65b0 rpm \u6e90\uff0c\u5e76\u5b89\u88c5 Jenkins 2.138</li> </ul> <pre><code>rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key\nwget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo\nyum install jenkins\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u914d\u7f6e Jenkins \u5bf9 GitLab \u7684\u8bbf\u95ee\u6743\u9650</p> <p>Jenkins \u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u521d\u59cb\u5316\u5b89\u88c5 Jenkins \u7684\u4e00\u4e9b\u57fa\u7840\u914d\u7f6e\uff0c\u540c\u65f6\u914d\u7f6e Jenkins \u5bf9 GitLab \u7684\u8bbf\u95ee\u6743\u9650\u3002</p> <p>\u5728\u65b0\u7248\u7684 Jenkins \u4e2d\uff0c\u7b2c\u4e00\u6b21\u542f\u52a8\u65f6\u4f1a\u6709\u4e00\u4e2a\u521d\u59cb\u5316\u5411\u5bfc\uff0c\u5f15\u5bfc\u4f60\u8bbe\u7f6e\u7528\u6237\u540d\u3001\u5bc6\u7801\uff0c\u5e76\u5b89\u88c5\u4e00\u4e9b\u63d2\u4ef6\u3002</p> <p>\u5728\u8fd9\u91cc\uff0c\u6211\u63a8\u8350\u4f60\u52fe\u9009\u201c\u5b89\u88c5\u9ed8\u8ba4\u63d2\u4ef6\u201d\uff0c\u7528\u8fd9\u79cd\u65b9\u5f0f\u5b89\u88c5 Pipline\u3001 LDAP \u7b49\u63d2\u4ef6\u3002\u5982\u679c\u8fd9\u4e2a\u65f6\u5019\u6ca1\u80fd\u9009\u62e9\u5b89\u88c5\u5bf9\u5e94\u7684\u63d2\u4ef6\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u5728\u7cfb\u7edf\u7ba1\u7406 -&gt; \u63d2\u4ef6\u7ba1\u7406\u9875\u9762\u4e2d\u5b89\u88c5\u9700\u8981\u7684\u63d2\u4ef6\u3002</p> <p>\u90a3\u4e48\u5982\u4f55\u624d\u80fd\u4f7f\u7f16\u8bd1\u548c GitLab\u3001SonarQube \u6574\u5408\u5728\u4e00\u8d77\u5462\uff1f\u8fd9\u91cc\uff0c\u6211\u4ee5\u4e00\u4e2a\u540e\u53f0 Java \u9879\u76ee\u4e3a\u4f8b\uff0c\u5bf9 Jenkins \u505a\u8fdb\u4e00\u6b65\u7684\u914d\u7f6e\uff0c\u4ee5\u5b8c\u6210 Jenkins \u548c GitLab\u3001SonarQube \u7684\u6574\u5408\u3002\u8fd9\u4e9b\u914d\u7f6e\u5185\u5bb9\uff0c\u4e3b\u8981\u5305\u62ec\uff1a</p> <ul> <li>\u914d\u7f6e Maven\uff1b</li> <li>\u914d\u7f6e Jenkins \u94a5\u5319\uff1b</li> <li>\u914d\u7f6e GitLab \u516c\u94a5\uff1b</li> <li>\u914d\u7f6e Jenkins GitLab \u63d2\u4ef6\u3002</li> </ul> <p>\u914d\u7f6e Maven</p> <p>\u8fdb\u5165\u7cfb\u7edf\u7ba1\u7406 -&gt; \u5168\u5c40\u5de5\u5177\u914d\u7f6e\u9875\u9762\uff0c\u5b89\u88c5 Maven\uff0c\u5e76\u628a\u540d\u5b57\u8bbe\u7f6e\u4e3a M3\u3002</p> <p>\u8fd9\u6837\u914d\u7f6e\u597d Maven \u540e\uff0cJenkins \u5c31\u4f1a\u5728\u7b2c\u4e00\u6b21\u4f7f\u7528 GitLab \u65f6\uff0c\u81ea\u52a8\u5b89\u88c5 Maven \u4e86\u3002</p> <p></p> <p>\u914d\u7f6e Jenkins \u94a5\u5319</p> <p>\u914d\u7f6e Jenkins \u94a5\u5319\u7684\u8def\u5f84\u662f\uff1a\u51ed\u636e -&gt; \u7cfb\u7edf -&gt; \u5168\u5c40\u51ed\u636e -&gt; \u6dfb\u52a0\u51ed\u636e\u3002</p> <p></p> <p>\u7136\u540e\uff0c\u5c06\u4f60\u7684\u79c1\u94a5\u8d34\u5165\u5e76\u4fdd\u5b58</p> <p>\u914d\u7f6e GitLab \u516c\u94a5</p> <p>\u5728 GitLab \u7aef, \u8fdb\u5165 <code>http://{Gitlab Domain}/profile/keys</code>\uff0c\u8d34\u5165\u4f60\u7684\u516c\u94a5\u5e76\u4fdd\u5b58</p> <p></p> <p>\u901a\u8fc7\u914d\u7f6e Jenkins \u94a5\u5319\uff0c\u4ee5\u53ca\u914d\u7f6e GitLab \u516c\u94a5\u4e24\u6b65\uff0c\u4f60\u5c31\u5df2\u7ecf\u5b8c\u6210\u4e86 Jenkins \u5bf9 GitLab \u4ed3\u5e93\u7684\u8bbf\u95ee\u6743\u9650\u914d\u7f6e\u3002</p> <p>\u914d\u7f6e Jenkins GitLab \u63d2\u4ef6</p> <p>Jenkins \u7684 GitLab-plugin \u63d2\u4ef6\u7684\u4f5c\u7528\u662f\uff0c\u5728\u4ee3\u7801\u63d0\u4ea4\u548c Merge Request \u65f6\u89e6\u53d1\u7f16\u8bd1\u3002\u5b89\u88c5\u8fd9\u4e2a\u63d2\u4ef6\u7684\u65b9\u6cd5\u662f\uff1a\u8fdb\u5165 Jenkins \u7684\u7cfb\u7edf\u7ba1\u7406 -&gt; \u63d2\u4ef6\u7ba1\u7406\u9875\u9762\uff0c\u9009\u62e9 GitLab Plugin \u5b89\u88c5\u3002</p> <p>Jenkins \u91cd\u542f\u540e\uff0c\u9009\u62e9\u51ed\u636e -&gt; \u7cfb\u7edf -&gt; \u5168\u5c40\u51ed\u636e -&gt; \u6dfb\u52a0\u51ed\u636e\uff0c\u518d\u9009\u62e9 GitLab API Token\u3002\u7136\u540e\uff0c\u5c06 <code>http://10.1.77.79/profile/personal_access_tokens</code> \u4e2d\u65b0\u751f\u6210\u7684 <code>access token</code> \u8d34\u5165 <code>GitLab API Token</code>\uff0c\u5e76\u4fdd\u5b58\u3002</p>"},{"location":"chap16/8Real_exp/#3-2-jenkins-pipeline","title":"3-2 \u4f7f\u7528 Jenkins Pipeline \u6784\u5efa\u5de5\u4f5c\u6d41","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u5c31\u548c\u4f60\u5206\u4eab\u4e00\u4e0b\u5982\u4f55\u7f16\u5199 Jenkins Pipeline\uff0c\u4ee5\u53ca\u4ece\u4ee3\u7801\u7f16\u8bd1\u5230\u9759\u6001\u68c0\u67e5\u7684\u5b8c\u6574\u8fc7\u7a0b\u3002\u8fd9\u4e2a\u4ece\u4ee3\u7801\u7f16\u8bd1\u5230\u9759\u6001\u68c0\u67e5\u7684\u6574\u4e2a\u8fc7\u7a0b\uff0c\u4e3b\u8981\u5305\u62ec\u4e09\u5927\u6b65\u9aa4\uff1a</p> <ul> <li>\u7b2c\u4e00\u6b65\uff0c\u521b\u5efa Jenkins Pipeline \u4efb\u52a1\uff1b</li> <li>\u7b2c\u4e8c\u6b65\uff0c\u914d\u7f6e Merge Request \u7684 Pipeline \u9a8c\u8bc1\uff1b</li> <li>\u7b2c\u4e09\u90e8\uff0c\u7f16\u5199\u5177\u4f53\u7684 Jenkins Pipeline \u811a\u672c\u3002</li> </ul> <p>\u9996\u5148\uff0c\u5728 Jenkins \u4e2d\u521b\u5efa\u4e00\u4e2a\u6d41\u6c34\u7ebf\u4efb\u52a1\uff0c\u5e76\u914d\u7f6e\u4efb\u52a1\u89e6\u53d1\u5668</p> <p></p> <p>\u7136\u540e\uff0c\u5728 GitLab \u7aef\u914d\u7f6e Webhook\u3002\u914d\u7f6e\u65b9\u6cd5\u4e3a\uff1a\u5728 GitLab \u9879\u76ee\u4e0b\u7684 settings-&gt;Integrations \u4e0b\u914d\u7f6e\u5e76\u52fe\u9009 \u201cMerge request events\u201d\u9009\u9879\u3002</p> <p>\u7ecf\u8fc7\u8fd9\u4e9b\u914d\u7f6e\u540e\uff0c \u6bcf\u6b21\u6709\u65b0\u7684 Merge Request \u88ab\u521b\u5efa\u6216\u66f4\u65b0\uff0c\u90fd\u4f1a\u89e6\u53d1 Jenkins \u7684 Pipeline\uff0c\u800c\u518d\u7531\u81ea\u5b9a\u4e49\u7684 Pipeline \u811a\u672c\u5b8c\u6210\u5177\u4f53\u4efb\u52a1\uff0c\u6bd4\u5982\u4ee3\u7801\u626b\u63cf\u4efb\u52a1\u3002</p> <ul> <li>\u914d\u7f6e Merge Request \u7684 Pipeline \u9a8c\u8bc1</li> </ul> <p>\u5728\u9a71\u52a8\u4ee3\u7801\u9759\u6001\u626b\u63cf\u4e4b\u540e\uff0c\u6211\u4eec\u8fd8\u8981\u505a\u4e00\u4e9b\u5de5\u4f5c\uff0c\u4ee5\u4fdd\u8bc1\u626b\u63cf\u7ed3\u679c\u53ef\u4ee5\u63a7\u5236 Merge Request \u7684\u884c\u4e3a\u3002</p> <p>\u8fdb\u5165 <code>settings-&gt;Merge Request</code> \u9875\u9762, \u52fe\u9009\u201cOnly allow Merge Requests to be merged if the pipeline succeeds\u201d\u3002\u8fd9\u4e2a\u914d\u7f6e\u53ef\u4ee5\u4fdd\u8bc1\uff0c\u5728\u9759\u6001\u68c0\u67e5\u4efb\u52a1\u4e2d\uff0c\u4e0d\u80fd\u5408\u5e76 Merge Request\u3002</p> <ul> <li>\u7f16\u5199\u5177\u4f53\u7684 Pipeline \u811a\u672c</li> </ul> <p>\u7136\u540e\u6211\u4eec\u518d\u4e00\u8d77\u770b\u4e00\u4e0b\u4e3a\u4e86\u5b9e\u73b0\u6211\u4eec\u4e4b\u524d\u7684\u9700\u6c42\uff0c\u5373\u83b7\u53d6\u4ee3\u7801 - \u7f16\u8bd1\u6253\u5305 - \u6267\u884c Sonar \u9759\u6001\u4ee3\u7801\u68c0\u67e5\u548c\u5355\u5143\u6d4b\u8bd5\u7b49\u8fc7\u7a0b\u3002</p> <p>Jenkins \u7aef\u7684 Pipeline \u811a\u672c\u5982\u4e0b\uff0c\u540c\u65f6\u6211\u4eec\u9700\u8981\u5c06\u8be5\u811a\u672c\u914d\u7f6e\u5728 Jenkins \u4e2d</p> <pre><code>node {\n   def mvnHome \n   # \u4fee\u6539 Merge Request \u7684\u72b6\u6001\uff0c\u5e76 checkout \u4ee3\u7801\n   stage('Preparation') { // for display purposes\n      mvnHome = tool 'M3'\n      updateGitlabCommitStatus name: 'build', state: 'running'\n      checkout scm\n  } \n   # \u6267\u884c Maven \u547d\u4ee4\u5bf9\u9879\u76ee\u7f16\u8bd1\u548c\u6253\u5305\n   stage('Build') {\n      echo 'Build Start'\n      // Run the maven build\n      sh \"'${mvnHome}/bin/mvn' -Dmaven.test.skip=true clean package\"\n   } \n   # \u542f\u52a8 sonar \u68c0\u67e5\uff0c\u5141\u8bb8 junit \u5355\u5143\u6d4b\u8bd5\uff0c\u83b7\u53d6\u7f16\u8bd1\u4ea7\u7269\uff0c\u5e76\u66f4\u65b0 Merge request \u7684\u72b6\u6001\n   stage('Results') {\n      // Run sonar \n      sh \u201c'${mvnHome}/bin/mvn' org.sonarsource.scanner.maven:sonar-maven-plugin:3.2:sonar\u201d\n      junit '**/target/surefire-reports/TEST-*.xml'\n      archive 'target/*.war'\n      updateGitlabCommitStatus name: 'build', state: 'success'\n   }\n}\n</code></pre> <ul> <li>\u7b2c\u4e00\u4e2a stage\uff1a</li> </ul> <p>\u4ece GitLab \u4e2d\u83b7\u53d6\u5f53\u524d Merge Request \u6e90\u5206\u652f\u7684\u4ee3\u7801\uff1b\u540c\u65f6\uff0c\u901a Jenkins GitLab \u63d2\u4ef6\u5c06 Merge Request \u6240\u5728\u7684\u5206\u652f\u7684\u5f53\u524d commit \u72b6\u6001\u7f6e\u4e3a running\u3002</p> <p>\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 GitLab \u7684\u9875\u9762\u4e0a\u770b\u5230 Merge Request \u7684\u5408\u5e76\u9009\u9879\u5df2\u7ecf\u88ab\u9650\u5236\u4e86\uff0c</p> <ul> <li>\u7b2c\u4e8c\u4e2a stage\uff1a</li> </ul> <p>\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u5c31\u662f\u6267\u884c Maven \u547d\u4ee4\u5bf9\u9879\u76ee\u7f16\u8bd1\u548c\u6253\u5305\u3002</p> <ul> <li>\u7b2c\u4e09\u4e2a stage\uff1a</li> </ul> <p>\u901a\u8fc7 Maven \u8c03\u7528 Sonar \u7684\u9759\u6001\u4ee3\u7801\u626b\u63cf\uff0c\u5e76\u5728\u7ed3\u675f\u540e\u66f4\u65b0 Merge Request \u7684 commit \u72b6\u6001\uff0c\u4f7f\u5f97 Merge Request \u5141\u8bb8\u88ab\u5408\u5e76\u3002\u540c\u65f6\u5c06\u5355\u5143\u6d4b\u8bd5\u7ed3\u679c\u5c55\u73b0\u5728 GitLab \u4e0a\u3002</p> <p>\u6bd4\u5982\uff0c\u6211\u4eec\u5728 Sonar \u68c0\u6d4b\u4e4b\u540e\uff0c\u53ef\u4ee5\u8c03\u7528 Sonar \u7684 API \u83b7\u53d6\u9759\u6001\u68c0\u67e5\u7684\u8be6\u7ec6\u4fe1\u606f\uff1b\u7136\u540e\uff0c\u8c03\u7528 GitLab \u7684 API\uff0c\u5c06\u9759\u6001\u68c0\u67e5\u7ed3\u679c\u901a\u8fc7 comment \u7684\u65b9\u5f0f\uff0c\u5c55\u73b0\u5728 GitLab \u7684 Merge Request \u9875\u9762\u4e0a\uff0c\u4ece\u800c\u4f7f\u6574\u4e2a\u6301\u7eed\u96c6\u6210\u7684\u6d41\u7a0b\u66f4\u52a0\u4e30\u6ee1\u548c\u5b8c\u6574\u3002</p>"},{"location":"chap16/8Real_exp/#4-ansible","title":"4.  \u5feb\u901f\u6784\u5efa\u6301\u7eed\u4ea4\u4ed8\u7cfb\u7edf\uff08\u56db\uff09\uff1aAnsible \u89e3\u51b3\u81ea\u52a8\u90e8\u7f72\u95ee\u9898","text":""},{"location":"chap16/8Real_exp/#4-1-ansible","title":"4-1 \u5229\u7528 Ansible \u5b8c\u6210\u90e8\u7f72","text":"<p>\u4e0e\u5176\u4ed6\u4e09\u5927\u4e3b\u6d41\u7684\u914d\u7f6e\u7ba1\u7406\u5de5\u5177 Chef\u3001Puppet\u3001Salt \u76f8\u6bd4\uff0cAnsible \u6700\u5927\u7684\u7279\u70b9\u5728\u4e8e\u201cagentless\u201d\uff0c\u5373\u65e0\u9700\u5728\u76ee\u6807\u673a\u5668\u88c5\u5b89\u88c5 agent \u8fdb\u7a0b\uff0c\u5373\u53ef\u901a\u8fc7 SSH \u6216\u8005 PowerShell \u5bf9\u4e00\u4e2a\u73af\u5883\u4e2d\u7684\u96c6\u7fa4\u8fdb\u884c\u4e2d\u5fc3\u5316\u7684\u7ba1\u7406\u3002</p> <p>Ansible \u5b89\u88c5</p> <pre><code>sudo pip install Ansible\n</code></pre> <p>\u63d0\u4ea4\u4e00\u4e2a Ansible \u7684 Inventory \u6587\u4ef6 hosts\uff0c\u8be5\u6587\u4ef6\u4ee3\u8868\u8981\u7ba1\u7406\u7684\u76ee\u6807\u5bf9\u8c61\uff1a</p> <pre><code>$ cat hosts\n[Jenkinsservers]\n10.1.77.79\n</code></pre> <p>\u6253\u901a\u672c\u673a\u548c\u6d4b\u8bd5\u673a\u7684 SSH \u8bbf\u95ee\uff1a</p> <pre><code>$ ssh-copy-id deployer@localhost\n</code></pre> <p>\u5c1d\u8bd5\u8fdc\u7a0b\u8bbf\u95ee\u4e3b\u673a 10.1.77.79</p> <pre><code>$ Ansible -i hosts  all -u deployer -a \"cat /etc/hosts\u201d \n10.1.77.79 | SUCCESS | rc=0 &gt;&gt;\n127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n</code></pre> <p>\u5982\u679c\u8fd4\u56de SUCCESS\uff0c\u5219\u8868\u793a\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7 Ansible \u7ba1\u7406\u8be5\u4e3b\u673a\u4e86\u3002</p>"},{"location":"chap16/8Real_exp/#4-2-ansible","title":"4-2 Ansible \u4f7f\u7528","text":"<p>1. Inventory</p> <p>\u5bf9\u4e8e\u88ab Ansible \u7ba1\u7406\u7684\u673a\u5668\u6e05\u5355\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 Inventory \u6587\u4ef6\uff0c\u5206\u7ec4\u7ba1\u7406\u5176\u4e2d\u4e00\u4e9b\u96c6\u7fa4\u7684\u673a\u5668\u5217\u8868\u5206\u7ec4\uff0c\u5e76\u4e3a\u5176\u8bbe\u7f6e\u4e0d\u540c\u53d8\u91cf\u3002</p> <p>\u6bd4\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 <code>Ansible_user</code> \uff0c\u6307\u5b9a\u4e0d\u540c\u673a\u5668\u7684 Ansible \u7528\u6237\u3002</p> <pre><code>[Jenkinsservers]\n10.1.77.79 Ansible_user=root\n10.1.77.80 Ansible_user=deployer\n[Gitlabservers]\n10.1.77.77\n</code></pre> <p>PlayBook</p> <p>PlayBook \u662f Ansible \u7684\u811a\u672c\u6587\u4ef6\uff0c\u4f7f\u7528 YAML \u8bed\u8a00\u7f16\u5199\uff0c\u5305\u542b\u9700\u8981\u8fdc\u7a0b\u6267\u884c\u7684\u6838\u5fc3\u547d\u4ee4\u3001\u5b9a\u4e49\u4efb\u52a1\u5177\u4f53\u5185\u5bb9\uff0c\u7b49\u7b49\u3002</p> <pre><code>---\n- hosts: webservers\n remote_user: root \n tasks:\n - name: ensure apache is at the latest version\n yum:\n name: httpd\n state: latest\n - name: write the apache config file\n template:\n src: /srv/httpd.j2\n dest: /etc/httpd.conf\n- hosts: databases\n remote_user: root \n tasks:\n - name: ensure postgresql is at the latest version\n yum:\n name: postgresql\n state: latest\n - name: ensure that postgresql is started\n service:\n name: postgresql\n state: started\n</code></pre> <p>\u8fd9\u6bb5\u4ee3\u7801\u7684\u6700\u4e3b\u8981\u529f\u80fd\u662f\uff0c\u4f7f\u7528 yum \u5b8c\u6210\u4e86 Apache \u670d\u52a1\u5668\u548c PostgreSQL \u7684\u5b89\u88c5\u3002</p> <p>\u5176\u4e2d\uff0c\u5305\u542b\u4e86\u7f16\u5199 Ansible PlayBook \u7684\u4e09\u4e2a\u5e38\u7528\u6a21\u5757\u3002</p> <ul> <li>yum \u8c03\u7528\u76ee\u6807\u673a\u5668\u4e0a\u7684\u5305\u7ba1\u7406\u5de5\u5177\u5b8c\u6210\u8f6f\u4ef6\u5b89\u88c5 \u3002Ansible \u5bf9\u4e8e\u4e0d\u540c\u7684 Linux \u64cd\u4f5c\u7cfb\u7edf\u5305\u7ba1\u7406\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u5728 CentOS \u4e0a\u76f8\u5f53\u4e8e yum\uff0c \u5728 Ubuntu \u4e0a\u76f8\u5f53\u4e8e APT\u3002</li> <li>Template \u8fdc\u7a0b\u6587\u4ef6\u6e32\u67d3\uff0c\u53ef\u4ee5\u628a\u672c\u5730\u673a\u5668\u7684\u6587\u4ef6\u6a21\u677f\u6e32\u67d3\u540e\u653e\u5230\u8fdc\u7a0b\u4e3b\u673a\u4e0a\u3002</li> <li>Service \u670d\u52a1\u7ba1\u7406\uff0c\u540c\u6837\u5c01\u88c5\u4e86\u4e0d\u540c Linux \u64cd\u4f5c\u7cfb\u7edf\u5b9e\u9645\u6267\u884c\u7684 Service \u547d\u4ee4\u3002</li> </ul> <p>\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7528\u811a\u672c\u7684\u65b9\u5f0f\u4f7f\u7528 Ansible\uff0c\u53ea\u8981\u4f7f\u7528\u597d Inventory \u548c PlayBook \u8fd9\u4e24\u4e2a\u7ec4\u4ef6\u5c31\u53ef\u4ee5\u4e86\uff0c\u5373\uff1a\u4f7f\u7528 PlayBook \u7f16\u5199 Ansible \u811a\u672c\uff0c\u7136\u540e\u7528 Inventory \u7ef4\u62a4\u597d\u9700\u8981\u7ba1\u7406\u7684\u673a\u5668\u5217\u8868\u3002\u8fd9\u6837\uff0c\u5c31\u80fd\u89e3\u51b3 90% \u4ee5\u4e0a\u4f7f\u7528 Ansible \u7684\u9700\u6c42\u3002</p> <p>\u4f7f\u7528 Ansible \u8fdb\u884c Java \u5e94\u7528\u90e8\u7f72</p> <pre><code>---\n- hosts: Tomcat_server\n roles:\n - { role: Ansible-Tomcat }\n</code></pre> <p>\u7136\u540e\uff0c\u90e8\u7f72\u5177\u4f53\u7684\u4e1a\u52a1\u4ee3\u7801\u3002</p> <p>\u5b8c\u6210\u8fd9\u4e2a\u9700\u6c42\uff0c\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7 Ansible \u7684 SCP \u6a21\u5757\u628a War \u5305\u4ece Jenkins \u63a8\u9001\u5230\u76ee\u6807\u673a\u5668\u4e0a\u5373\u53ef\u3002</p> <pre><code>- name: Copy a war file to the remote machine \n  copy:\n    src: /tmp/waimai-service.war\n    dest: /opt/Tomcat/webapps/waimai-service.war\n</code></pre> <p>\u6240\u4ee5\uff0c\u6b64\u65f6\u66f4\u597d\u7684\u505a\u6cd5\u662f\u76f4\u63a5\u5728\u90e8\u7f72\u672c\u5730\u4ece\u4ed3\u5e93\u4e0b\u8f7d War \u5305\u3002</p> <p>\u6700\u540e\uff0c\u91cd\u542f Tomcat \u670d\u52a1\uff0c\u6574\u4e2a\u5e94\u7528\u7684\u90e8\u7f72\u8fc7\u7a0b\u5c31\u5b8c\u6210\u4e86\u3002</p>"},{"location":"chap16/9cicd_rev/","title":"9 \u6301\u7eed\u4ea4\u4ed8\u7406\u8bba\u603b\u7ed3\u53ca\u9762\u8bd5","text":""},{"location":"chap16/9cicd_rev/#1","title":"1 \u91cf\u8eab\u5b9a\u5236\u4f60\u7684\u6301\u7eed\u4ea4\u4ed8\u4f53\u7cfb","text":"<p>\u867d\u7136\u6301\u7eed\u4ea4\u4ed8\u7740\u91cd\u6253\u9020\u7684\u662f\u53d1\u5e03\u6d41\u6c34\u7ebf\u7684\u90e8\u5206\uff0c\u4f46\u5b83\u6240\u8981\u8fbe\u5230\u7684\u76ee\u6807\u662f\u5728\u201c\u6700\u7ec8\u7528\u6237\u201d\u548c\u201c\u7814\u53d1\u56e2\u961f\u201d\u4e4b\u95f4\u5efa\u7acb\u7d27\u5bc6\u7684\u53cd\u9988\u73af\uff1a\u901a\u8fc7\u6301\u7eed\u4ea4\u4ed8\u65b0\u7684\u8f6f\u4ef6\u7248\u672c\uff0c\u4ee5\u9a8c\u8bc1\u65b0\u60f3\u6cd5\u548c\u8f6f\u4ef6\u6539\u52a8\u7684\u6b63\u786e\u6027\uff0c\u5e76\u8861\u91cf\u8fd9\u4e9b\u6539\u52a8\u5bf9\u8f6f\u4ef6\u4ef7\u503c\u7684\u5f71\u54cd\u3002</p>"},{"location":"chap16/9cicd_rev/#2","title":"2 \u914d\u7f6e\u7ba1\u7406","text":"<p>\u4ee3\u7801\u5206\u652f\u7b56\u7565\u7684\u9009\u62e9</p> <ul> <li>\u4e3b\u5e72\u5f00\u53d1\uff08TBD\uff09</li> <li>GitHub Flow \u662f GitHub \u6240\u4f7f\u7528\u7684\u4e00\u79cd\u7b80\u5355\u6d41\u7a0b\u3002\u8be5\u6d41\u7a0b\u53ea\u4f7f\u7528 master \u548c\u7279\u6027\u5206\u652f\uff0c\u5e76\u501f\u52a9 GitHub \u7684 pull request \u529f\u80fd\u3002</li> </ul>"},{"location":"chap16/9cicd_rev/#_1","title":"\u4f9d\u8d56\u7ba1\u7406","text":"<p>Maven \u4f7f\u7528 XML \u683c\u5f0f\u7684\u6587\u4ef6\u8fdb\u884c\u4f9d\u8d56\u914d\u7f6e\u63cf\u8ff0\u7684\u65b9\u5f0f\uff0c\u53eb\u4f5c POM\uff08Project Object Model \uff09\uff0c\u4ee5\u4e0b\u5c31\u662f\u4e00\u6bb5\u7b80\u5355\u7684 pom.xml \u6587\u4ef6\u7247\u6bb5</p> <p>\u5728 POM \u4e2d\uff0c\u6839\u5143\u7d20 project \u4e0b\u7684 dependencies \u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a dependency \u5143\u7d20\uff0c\u4ee5\u58f0\u660e\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u9879\u76ee\u4f9d\u8d56\u3002\u6bcf\u4e2a\u4f9d\u8d56\u53ef\u4ee5\u5305\u542b\u7684\u5143\u7d20\u6709\uff1a</p> <p>groupId\u3001artifactId\u3001version\uff1a \u4f9d\u8d56\u7684\u57fa\u672c\u5750\u6807\uff1b / type\uff1a \u4f9d\u8d56\u7684\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3a jar\uff1b/ scope\uff1a \u4f9d\u8d56\u7684\u8303\u56f4\uff1b/ optional\uff1a \u6807\u8bb0\u4f9d\u8d56\u662f\u5426\u53ef\u9009\uff1b / exclusions\uff1a \u7528\u6765\u6392\u9664\u4f20\u9012\u6027\u4f9d\u8d56\uff1b</p>"},{"location":"chap16/9cicd_rev/#_2","title":"\u4ee3\u7801\u56de\u6eda","text":"<ul> <li>\u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a\u5f00\u53d1\u4eba\u5458\u72ec\u7acb\u4f7f\u7528\u7684\u5206\u652f\u4e0a\uff0c\u5982\u679c\u6700\u8fd1\u4ea7\u751f\u7684 commit \u90fd\u6ca1\u6709\u4ef7\u503c\uff0c\u5e94\u8be5\u5e9f\u5f03\u6389\uff0c\u6b64\u65f6\u5c31\u9700\u8981\u628a\u4ee3\u7801\u56de\u6eda\u5230\u4ee5\u524d\u7684\u7248\u672c\u3002</li> <li>\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\u4ee3\u7801\u96c6\u6210\u5230\u56e2\u961f\u7684\u96c6\u6210\u5206\u652f\u4e14\u5c1a\u672a\u53d1\u5e03\uff0c\u4f46\u5728\u540e\u7eed\u6d4b\u8bd5\u4e2d\u53d1\u73b0\u8fd9\u90e8\u5206\u4ee3\u7801\u6709\u95ee\u9898\uff0c\u4e14\u4e00\u65f6\u534a\u4f1a\u513f\u89e3\u51b3\u4e0d\u6389\uff0c\u4e3a\u4e86\u4e0d\u628a\u95ee\u9898\u4f20\u9012\u7ed9\u4e0b\u6b21\u7684\u96c6\u6210\uff0c\u6b64\u65f6\u5c31\u9700\u8981\u628a\u6709\u95ee\u9898\u7684\u4ee3\u7801\u4ece\u96c6\u6210\u5206\u652f\u4e2d\u56de\u6eda\u6389</li> <li>\u7b2c\u4e09\u79cd\u60c5\u51b5\uff1a\u4ee3\u7801\u5df2\u7ecf\u53d1\u5e03\u5230\u7ebf\u4e0a\uff0c\u7ebf\u4e0a\u5305\u56de\u6eda\u540e\u53d1\u73b0\u662f\u65b0\u4e0a\u7ebf\u7684\u4ee3\u7801\u5f15\u8d77\u7684\u95ee\u9898\uff0c\u4e14\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u4fee\u590d\uff0c\u6b64\u65f6\u53c8\u6709\u5176\u4ed6\u529f\u80fd\u9700\u8981\u4e0a\u7ebf\uff0c\u90a3\u4e48\u4e3b\u5e72\u5206\u652f\u5fc5\u987b\u628a\u4ee3\u7801\u56de\u6eda\u5230\u4ea7\u54c1\u5305 V0529 \u5bf9\u5e94\u7684 commit\u3002 </li> </ul> <p>\u4ee3\u7801\u56de\u6eda\u5fc5\u987b\u9075\u5faa\u7684\u539f\u5219</p> <ul> <li>\u96c6\u6210\u5206\u652f\u4e0a\u7684\u4ee3\u7801\u56de\u6eda\u575a\u51b3\u4e0d\u7528 <code>reset --hard</code> \u7684\u65b9\u5f0f\uff0c</li> </ul> <p>\u4e09\u79cd\u5178\u578b\u56de\u6eda\u573a\u666f\u53ca\u56de\u6eda\u7b56\u7565</p> <ul> <li>\u4e2a\u4eba\u5206\u652f\u56de\u6eda</li> <li>\u96c6\u6210\u5206\u652f\u4e0a\u7ebf\u524d\u56de\u6eda revert before merge request</li> <li>\u96c6\u6210\u5206\u652f\u4e0a\u7ebf\u540e\u56de\u6eda</li> </ul> <pre><code>$ git fetch origin  \n$ git checkout master\n$ git reset --hard  V0529         # \u628a\u672c\u5730\u7684 master \u5206\u652f\u7684\u6307\u9488\u56de\u9000\u5230 V0529\uff0c\u6b64\u65f6\u6682\u5b58\u533a (index) \u91cc\u5c31\u6307\u5411 V0529 \u91cc\u7684\u5185\u5bb9\u4e86\u3002\n$ git reset --soft  origin/master  # --soft \u4f7f\u5f97\u672c\u5730\u7684 master \u5206\u652f\u7684\u6307\u9488\u91cd\u65b0\u56de\u5230 V05javascript:;30\uff0c\u800c\u6682\u5b58\u533a (index) \u53d8\u6210 V0529 \u7684\u5185\u5bb9\u3002\n$ git commit -m \"rollback to V0529\"  # \u628a\u6682\u5b58\u533a\u91cc\u7684\u5185\u5bb9\u63d0\u4ea4\uff0c\u8fd9\u6837\u4e00\u6765\u65b0\u751f\u6210\u7684 commit \u7684\u5185\u5bb9\u548c V0529 \u76f8\u540c\u3002 \n$ git push origin  master        # \u8fdc\u7aef\u7684 master \u4e5f\u88ab\u56de\u6eda\u3002\n</code></pre>"},{"location":"chap16/9cicd_rev/#3","title":"3 \u73af\u5883\u7ba1\u7406","text":"<p>\u53d1\u73af\u5883\uff0c\u529f\u80fd\u6d4b\u8bd5\u73af\u5883\uff0c\u9a8c\u6536\u6d4b\u8bd5\u73af\u5883\uff0c\u9884\u53d1\u5e03\u73af\u5883\uff0c\u751f\u4ea7\u73af\u5883\u8fd9\u4e94\u4e2a\u5927\u5957\u73af\u5883\u3002</p> <p>\u4e86\u89e3\u5404\u79cd\u914d\u7f6e\u65b9\u6cd5</p> <ul> <li>\u6784\u5efa\u65f6\u914d\u7f6e</li> </ul> <p>\u4ee5 Maven \u4e3a\u4f8b\uff0c\u5b9e\u73b0\u591a\u73af\u5883\u7684\u6784\u5efa\u53ef\u79fb\u690d\u6027\u9700\u8981\u4f7f\u7528 profile\u3002</p> <p>profile \u662f\u4e00\u7ec4\u53ef\u9009\u7684\u914d\u7f6e\uff0c\u53ef\u4ee5\u7528\u6765\u8bbe\u7f6e\u6216\u8005\u8986\u76d6\u914d\u7f6e\u9ed8\u8ba4\u503c\u3002\u901a\u8fc7\u4e0d\u540c\u7684\u73af\u5883\u6fc0\u6d3b\u4e0d\u540c\u7684 profile\uff0c\u53ef\u4ee5\u5b9e\u73b0\u6784\u5efa\u7684\u53ef\u79fb\u690d\u6027\u3002</p> <pre><code>maven initialize \u2013Pdev   &amp;  maven initialize \u2013Pprod\n</code></pre> <ul> <li>\u6253\u5305\u65f6\u914d\u7f6e</li> <li>\u8fd0\u884c\u65f6\u914d\u7f6e</li> </ul>"},{"location":"chap16/9cicd_rev/#4","title":"4 \u6784\u5efa\u96c6\u6210","text":""},{"location":"chap16/9cicd_rev/#_3","title":"\u6784\u5efa\u7684\u63d0\u901f","text":"<ul> <li>\u7ea7\u786c\u4ef6\u8d44\u6e90</li> <li>\u642d\u5efa\u79c1\u6709\u4ed3\u5e93</li> <li>\u4f7f\u7528\u672c\u5730\u7f13\u5b58</li> <li>\u89c4\u8303\u6784\u5efa\u6d41\u7a0b<ul> <li>\u4ee5 Java \u6784\u5efa\u4e3a\u4f8b\uff0cEnforcer \u68c0\u67e5\u3001\u6846\u67b6\u4f9d\u8d56\u68c0\u67e5\u3001Sonar \u68c0\u67e5\u3001\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u8fd9\u4e9b\u6b65\u9aa4\uff0c\u5e76\u6ca1\u6709\u653e\u5728\u540c\u4e00\u4e2a\u6784\u5efa\u8fc7\u7a0b\u4e2d\u540c\u6b65\u6267\u884c\uff0c\u800c\u662f\u901a\u8fc7\u5f02\u6b65\u7684\u65b9\u5f0f\u7a7f\u63d2\u5728 CI/CD \u5f53\u4e2d\uff0c\u751a\u81f3\u53ef\u4ee5\u5728\u6784\u5efa\u8fc7\u7a0b\u4e4b\u5916\u6267\u884c\u3002 </li> </ul> </li> <li>\u5584\u7528\u6784\u5efa\u5de5\u5177<ul> <li>\u4ee5 Maven \u4e3a\u4f8b<ul> <li>\u8bbe\u7f6e\u5408\u9002\u7684\u5806\u5185\u5b58\u53c2\u6570</li> <li>\u4f7f\u7528 <code>-Dmaven.test.skip = true</code> \u8df3\u8fc7\u5355\u5143\u6d4b\u8bd5\u3002 </li> <li>\u5728\u53d1\u5e03\u9636\u6bb5\uff0c\u4e0d\u4f7f\u7528 Snapshot \u7248\u672c\u7684\u4f9d\u8d56</li> <li>\u4f7f\u7528 <code>-T 2C</code> \u547d\u4ee4\u8fdb\u884c\u5e76\u884c\u6784\u5efa</li> <li>\u5c40\u90e8 / \u6b63\u786e\u4f7f\u7528 clean \u53c2\u6570</li> </ul> </li> </ul> </li> </ul>"},{"location":"chap16/9cicd_rev/#_4","title":"\u6784\u5efa\u68c0\u6d4b","text":"<ul> <li>Maven Enforcer \u63d2\u4ef6\u63d0\u4f9b\u4e86\u975e\u5e38\u591a\u7684\u901a\u7528\u68c0\u67e5\u89c4\u5219\uff0c\u6bd4\u5982\u68c0\u67e5 JDK \u7248\u672c\u3001\u68c0\u67e5 Maven \u7248\u672c\u3001\u68c0\u67e5\u4f9d\u8d56\u7248\u672c\uff0c\u7b49\u7b49</li> </ul>"},{"location":"chap16/9cicd_rev/#5","title":"5 \u53d1\u5e03\u53ca\u76d1\u63a7","text":""},{"location":"chap16/9cicd_rev/#_5","title":"\u53d1\u5e03","text":"<p>\u56e0\u6b64\uff0c\u6211\u4eec\u60f3\u8981\u7684\u5e94\u8be5\u662f\uff1a\u4e00\u4e2a\u6613\u7528\u3001\u5feb\u901f\u3001\u7a33\u5b9a\u3001\u5bb9\u9519\u529b\u5f3a\uff0c\u5fc5\u8981\u65f6\u6709\u80fd\u529b\u8fc5\u901f\u56de\u6eda\u7684\u53d1\u5e03\u7cfb\u7edf\u3002</p> <ul> <li>\u6269\u5c55\u5230\u96c6\u7fa4</li> </ul> <p>\u7070\u5ea6\u53d1\u5e03\u662f\u6307\uff0c\u6e10\u8fdb\u5f0f\u5730\u66f4\u65b0\u6bcf\u53f0\u673a\u5668\u8fd0\u884c\u7684\u7248\u672c\uff0c\u4e00\u6bb5\u65f6\u671f\u5185\u96c6\u7fa4\u5185\u8fd0\u884c\u7740\u591a\u4e2a\u4e0d\u540c\u7684\u7248\u672c\uff0c\u540c\u4e00\u4e2a API \u5728\u4e0d\u540c\u673a\u5668\u4e0a\u8fd4\u56de\u7684\u7ed3\u679c\u5f88\u53ef\u80fd\u4e0d\u540c</p> <ul> <li>\u84dd\u7eff\u53d1\u5e03\uff1a \u662f\u5148\u589e\u52a0\u4e00\u5957\u65b0\u7684\u96c6\u7fa4\uff0c\u53d1\u5e03\u65b0\u7248\u672c\u5230\u8fd9\u6279\u65b0\u673a\u5668\uff0c\u5e76\u8fdb\u884c\u9a8c\u8bc1\uff0c\u65b0\u7248\u672c\u670d\u52a1\u5668\u5e76\u4e0d\u63a5\u5165\u5916\u90e8\u6d41\u91cf</li> <li>\u6eda\u52a8\u53d1\u5e03\uff1a \u662f\u4e0d\u6dfb\u52a0\u65b0\u673a\u5668\uff0c\u4ece\u540c\u6837\u7684\u96c6\u7fa4\u670d\u52a1\u5668\u4e2d\u6311\u9009\u4e00\u6279\uff0c\u505c\u6b62\u4e0a\u9762\u7684\u670d\u52a1\uff0c\u5e76\u66f4\u65b0\u4e3a\u65b0\u7248\u672c\uff0c\u8fdb\u884c\u9a8c\u8bc1\uff0c\u9a8c\u8bc1\u5b8c\u6bd5\u540e\u63a5\u5165\u6d41\u91cf\u3002<ul> <li>\u91cd\u590d\u6b64\u6b65\u9aa4\uff0c\u4e00\u6279\u4e00\u6279\u5730\u66f4\u65b0\u96c6\u7fa4\u5185\u7684\u6240\u6709\u673a\u5668\uff0c\u76f4\u5230\u904d\u5386\u5b8c\u6240\u6709\u673a\u5668\\</li> </ul> </li> <li>\u91d1\u4e1d\u96c0\u53d1\u5e03:  \u4ece\u96c6\u7fa4\u4e2d\u6311\u9009\u7279\u5b9a\u670d\u52a1\u5668\u6216\u4e00\u5c0f\u6279\u7b26\u5408\u8981\u6c42\u7684\u7279\u5f81\u7528\u6237\uff0c\u5bf9\u5176\u8fdb\u884c\u7248\u672c\u66f4\u65b0\u53ca\u9a8c\u8bc1\uff0c\u968f\u540e\u9010\u6b65\u66f4\u65b0\u5269\u4f59\u670d\u52a1\u5668\u3002</li> </ul>"},{"location":"chap16/9cicd_rev/#_6","title":"\u53d1\u5e03\u7cfb\u7edf\u7684\u7528\u6237\u4f53\u9a8c","text":"<p>1 \u5f20\u9875\u9762\u5c55\u793a\u53d1\u5e03\u4fe1\u606f: \u53d1\u5e03\u4e2d / \u672a\u53d1\u5e03\u65f6</p> <p>6 \u5927\u9875\u9762\u4e3b\u8981\u5185\u5bb9</p> <p>\u96c6\u7fa4 /  \u5b9e\u4f8b / \u53d1\u5e03\u65e5\u5fd7 / \u53d1\u5e03\u5386\u53f2 / \u53d1\u5e03\u6279\u6b21 / \u53d1\u5e03\u64cd\u4f5c\u3002</p>"},{"location":"chap16/9cicd_rev/#_7","title":"\u53d1\u5e03\u7cfb\u7edf\u7684\u6838\u5fc3\u67b6\u6784\u548c\u529f\u80fd\u8bbe\u8ba1","text":"<p>\u53d1\u5e03\u7cfb\u7edf\u7684\u6838\u5fc3\u6a21\u578b\u4e3b\u8981\u5305\u62ec Group\u3001DeploymentConfig\u3001Deployment\u3001DeploymentBatch\uff0c\u548c DeploymentTarget \u8fd9 5 \u9879\u3002</p> <ul> <li>Group \u7684\u5c5e\u6027\u975e\u5e38\u91cd\u8981\uff0c\u5305\u62ec Site \u7ad9\u70b9\u3001Path \u865a\u62df\u8def\u5f84\u3001docBase \u7269\u7406\u8def\u5f84\u3001Port \u5e94\u7528\u7aef\u53e3\u3001HealthCheckUrl \u5065\u5eb7\u68c0\u6d4b\u5730\u5740\u7b49\uff0c\u8fd9\u4e9b\u5c5e\u6027\u90fd\u4e0e\u90e8\u7f72\u903b\u8f91\u606f\u606f\u76f8\u5173\u3002</li> <li>DeploymentConfig\uff0c\u5373\u53d1\u5e03\u914d\u7f6e\uff0c\u63d0\u4f9b\u7ed9\u7528\u6237\u7684\u53ef\u4fee\u6539\u914d\u7f6e\u9879\u8981\u901a\u4fd7\u6613\u61c2</li> <li>Deployment\uff0c\u5373\u4e00\u4e2a\u53d1\u5e03\u5b9e\u4f53\uff0c\u4e3b\u8981\u5305\u62ec Group \u96c6\u7fa4\u3001DeploymentConfig \u53d1\u5e03\u914d\u7f6e\u3001Package \u53d1\u5e03\u5305\u3001\u53d1\u5e03\u65f6\u95f4\u3001\u6279\u6b21\u3001\u72b6\u6001\u7b49\u7b49\u4fe1\u606f\u3002</li> <li>DeploymentBatch\uff0c\u5373\u53d1\u5e03\u6279\u6b21</li> </ul>"},{"location":"chap16/9cicd_rev/#_8","title":"\u5982\u4f55\u5229\u7528\u76d1\u63a7\u4fdd\u969c\u53d1\u5e03\u8d28\u91cf","text":"<ul> <li>\u7528\u6237\u4fa7\u76d1\u63a7\uff0c\u5173\u6ce8\u7684\u662f\u7528\u6237\u771f\u6b63\u611f\u53d7\u5230\u7684\u8bbf\u95ee\u901f\u5ea6\u548c\u7ed3\u679c\uff1b<ul> <li>\u7aef\u5230\u7aef\u7684\u76d1\u63a7 / \u552f\u4e00\u7528\u6237 ID \u7684\u76d1\u63a7</li> </ul> </li> <li>\u7f51\u7edc\u76d1\u63a7\uff0c\u5373 CDN \u4e0e\u6838\u5fc3\u7f51\u7edc\u7684\u76d1\u63a7\uff1b<ul> <li>\u516c\u7f51\u76d1\u63a7 / \u5185\u7f51\u76d1\u63a7</li> </ul> </li> <li>\u4e1a\u52a1\u76d1\u63a7\uff0c\u5173\u6ce8\u7684\u662f\u6838\u5fc3\u4e1a\u52a1\u6307\u6807\u7684\u6ce2\u52a8\uff1b</li> <li>\u5e94\u7528\u76d1\u63a7\uff0c\u5373\u670d\u52a1\u8c03\u7528\u94fe\u7684\u76d1\u63a7\uff1b<ul> <li>\u8c03\u7528\u94fe\u76d1\u63a7\u7cfb\u7edf\uff0c\u4e00\u822c\u91c7\u7528\u5728\u6846\u67b6\u5c42\u9762\u7edf\u4e00\u5b9a\u4e49\u7684\u65b9\u5f0f\uff0c\u4ee5\u505a\u5230\u6570\u636e\u91c7\u96c6\u5bf9\u4e1a\u52a1\u5f00\u53d1\u900f\u660e\uff0c\u4f46\u540c\u65f6\u4e5f\u9700\u8981\u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u81ea\u5b9a\u4e49\u57cb\u70b9\u76d1\u63a7\u67d0\u4e9b\u4ee3\u7801\u7247\u6bb5\u3002</li> </ul> </li> <li>\u7cfb\u7edf\u76d1\u63a7\uff0c\u5373\u57fa\u7840\u8bbe\u65bd\u3001\u865a\u62df\u673a\u53ca\u64cd\u4f5c\u7cfb\u7edf\u7684\u76d1\u63a7\u3002<ul> <li>\u7cfb\u7edf\u76d1\u63a7\uff0c\u6307\u7684\u662f\u5bf9\u57fa\u7840\u8bbe\u65bd\u7684\u76d1\u63a7\u3002\u6211\u4eec\u901a\u5e38\u4f1a\u6536\u96c6 CPU\u3001\u5185\u5b58\u3001I/O\u3001\u78c1\u76d8\u3001\u7f51\u7edc\u8fde\u63a5\u7b49\u4f5c\u4e3a\u76d1\u63a7\u6307\u6807</li> </ul> </li> </ul>"},{"location":"chap16/9cicd_rev/#6","title":"6 \u6d4b\u8bd5\u7ba1\u7406","text":""},{"location":"chap16/9cicd_rev/#_9","title":"\u4ee3\u7801\u9759\u6001\u68c0\u67e5\u5b9e\u8df5","text":"<p>\u4ee3\u7801\u9759\u6001\u68c0\u67e5\uff1b / \u7834\u574f\u6027\u6d4b\u8bd5\uff1b / Mock \u4e0e\u56de\u653e</p> <ul> <li>SonarQube \u91c7\u7528\u7684\u662f B/S \u67b6\u6784\uff0c\u901a\u8fc7\u63d2\u4ef6\u5f62\u5f0f\uff0c\u53ef\u4ee5\u652f\u6301\u5bf9 Java\u3001C\u3001C++\u3001JavaScript \u7b49\u4e8c\u5341\u51e0\u79cd\u7f16\u7a0b\u8bed\u8a00\u7684\u4ee3\u7801\u8d28\u91cf\u7ba1\u7406\u4e0e\u68c0\u6d4b\u3002</li> </ul> <p>\u5982\u4f55\u63d0\u9ad8\u9759\u6001\u68c0\u67e5\u7684\u6548\u7387\uff1f</p> <ul> <li>\u5176\u4e00\uff0c\u80fd\u591f\u7f29\u77ed\u4ee3\u7801\u626b\u63cf\u6240\u6d88\u8017\u7684\u65f6\u95f4\uff0c\u4ece\u800c\u63d0\u5347\u6574\u4e2a\u6301\u7eed\u4ea4\u4ed8\u8fc7\u7a0b\u7684\u6548\u7387\uff1b</li> <li>\u5176\u4e8c\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u91c7\u7528\u5f02\u6b65\u7684\u65b9\u5f0f\u8fdb\u884c\u9759\u6001\u68c0\u67e5\uff0c\u5982\u679c\u8fd9\u4e2a\u8fc7\u7a0b\u8017\u65f6\u7279\u522b\u957f\u7684\u8bdd\uff0c\u4f1a\u8ba9\u7528\u6237\u4ea7\u751f\u56f0\u60d1\uff0c\u4ece\u800c\u8d28\u7591\u6267\u884c\u9759\u6001\u68c0\u67e5\u7684\u5fc5\u8981\u6027\u3002</li> </ul>"},{"location":"chap16/9cicd_rev/#_10","title":"\u7834\u574f\u6027\u6d4b\u8bd5","text":"<ul> <li>\u7b2c\u4e00\uff0c\u7834\u574f\u6027\u6d4b\u8bd5\u7684\u624b\u6bb5\u548c\u8fc7\u7a0b\uff0c\u5e76\u4e0d\u662f\u65e0\u7684\u653e\u77e2\uff0c\u5b83\u4eec\u662f\u88ab\u4e25\u683c\u8bbe\u8ba1\u548c\u6267\u884c\u7684</li> <li>\u7b2c\u4e8c\uff0c\u7834\u574f\u6027\u6d4b\u8bd5\uff0c\u4f1a\u4ea7\u751f\u5207\u5b9e\u7684\u7834\u574f\u4f5c\u7528\uff0c\u4f60\u9700\u8981\u6743\u8861\u7834\u574f\u7684\u91cf\u548c\u5ea6</li> </ul> <p>\u56e0\u6b64\uff0c\u7edd\u5927\u90e8\u5206\u7834\u574f\u6027\u6d4b\u8bd5\u90fd\u4f1a\u5728\u5355\u5143\u6d4b\u8bd5\u3001\u529f\u80fd\u6d4b\u8bd5\u9636\u6bb5\u6267\u884c\u3002\u800c\u6267\u884c\u6d4b\u8bd5\u7684\u73af\u5883\u4e5f\u5f80\u5f80\u662f\u5c40\u90e8\u7684\u6d4b\u8bd5\u5b50\u73af\u5883\u3002</p> <p>\u6df7\u6c8c\u5de5\u7a0b\uff1a chaos monkey</p>"},{"location":"chap16/9cicd_rev/#mock","title":"Mock\u4e0e\u56de\u653e\u6280\u672f\u52a9\u529b\u81ea\u52a8\u5316\u56de\u5f52","text":"<p>Mock \u56e0\u4e3a\u8fd9\u6837\u7684\u6a21\u62df\u80fd\u529b\uff0c\u4e3a\u6d4b\u8bd5\u548c\u6301\u7eed\u4ea4\u4ed8\u5e26\u6765\u7684\u4ef7\u503c\uff0c\u53ef\u4ee5\u603b\u7ed3\u4e3a\u4ee5\u4e0b\u4e09\u70b9\uff1a</p> <p>\u4f7f\u6d4b\u8bd5\u7528\u4f8b\u66f4\u72ec\u7acb\u3001\u66f4\u89e3\u8026 / \u63d0\u5347\u6d4b\u8bd5\u7528\u4f8b\u7684\u6267\u884c\u901f\u5ea6 / \u63d0\u9ad8\u6d4b\u8bd5\u7528\u4f8b\u51c6\u5907\u7684\u6548\u7387</p> <ul> <li>\u57fa\u4e8e\u5bf9\u8c61\u548c\u7c7b\u7684 Mock\uff1a Mockito \u6216\u8005 EasyMock \u8fd9\u4e24\u4e2a\u6846\u67b6\u7684\u5b9e\u73b0\u539f\u7406</li> <li>\u57fa\u4e8e\u5fae\u670d\u52a1\u7684 Mock\uff1a Weir Mock \u548c Mock Server\u3002\u8fd9\u4e24\u4e2a\u6846\u67b6\uff0c\u90fd\u53ef\u4ee5\u5f88\u597d\u5730\u6a21\u62df API\u3001http \u5f62\u5f0f\u7684\u5bf9\u8c61\u3002</li> </ul>"},{"location":"chap16/9cicd_rev/#7","title":"7 \u6301\u7eed\u4ea4\u4ed8\u5e73\u53f0\u5316","text":"<ul> <li>\u4ee3\u7801\u7ba1\u7406\u6a21\u5757\uff0c\u5f80\u5f80\u4f1a\u548c\u4ee3\u7801\u5ba1\u6838\u3001\u9759\u6001\u626b\u63cf\u548c\u5206\u652f\u7ba1\u7406\u7b49\u6a21\u5757\u76f8\u8054\u7cfb\uff1b</li> <li>\u96c6\u6210\u7f16\u8bd1\u6a21\u5757\uff0c\u4e5f\u4f1a\u4e0e\u4f9d\u8d56\u7ba1\u7406\u3001\u5355\u5143\u6d4b\u8bd5\u3001\u52a0\u5bc6\u6253\u5305\u7b49\u6a21\u5757\u76f8\u751f\u76f8\u968f\u7684\uff1b</li> <li>\u73af\u5883\u7ba1\u7406\u6a21\u5757\uff0c\u79bb\u4e0d\u5f00\u914d\u7f6e\u7ba1\u7406\u3001\u8def\u7531\u7ba1\u7406\u7b49\u6a21\u5757\uff1b</li> <li>\u53d1\u5e03\u90e8\u7f72\u6a21\u5757\uff0c\u8fd8\u9700\u8981\u76d1\u63a7\u6a21\u5757\u548c\u6d41\u63a7\u6a21\u5757\u7684\u652f\u6301\u3002</li> </ul>"},{"location":"chap2/10mc_parallel/","title":"\u7b2c\u5341\u8282 \u5fae\u670d\u52a1\u6a21\u5f0f\u4e0b\u5982\u4f55\u5b9e\u73b0\u591a\u6a21\u5757\u5e76\u884c\u6784\u5efa\u53d1\u5e03","text":"<p>\u5728\u5fae\u670d\u52a1\u9879\u76ee\u4e2d\u5177\u6709\u5f88\u591a\u4e2a\u670d\u52a1\u6a21\u5757\uff0c\u4e3a\u4e86\u4fbf\u4e8e\u7ba1\u7406\u9700\u8981\u5c06\u9879\u76ee\u89c4\u8303\u5316\uff0c\u4f7f\u7528GitLabGroup\u7ba1\u7406\u6574\u4e2a\u9879\u76ee\uff0c\u6bcf\u4e2aproject\u5bf9\u5e94\u4e00\u4e2a\u5fae\u670d\u52a1\uff0c\u6bcf\u4e2a\u5fae\u670d\u52a1\u5bf9\u5e94\u4e00\u4e2aJenkins job\u3002\u5f00\u59cb\u53d1\u5e03\u7684\u65f6\u5019\u9700\u8981\u6211\u4eec\u5728\u624b\u52a8\u9009\u62e9\u5404\u4e2a\u670d\u52a1\u7136\u540e\u53d1\u5e03\u3002\u6a21\u5757\u5f88\u591a\u7684\u65f6\u5019\u5c31\u4e0d\u592a\u65b9\u4fbf\u4e86\u3002</p> <p>\u521b\u5efa\u4e00\u4e2aJenkins\u9879\u76ee\u7528\u6765\u7edf\u4e00\u7ba1\u7406\uff0c\u7ed1\u5b9aGitLab group\u4fe1\u606f\uff0c\u7136\u540e\u8c03\u7528Gitlab\u63a5\u53e3\u83b7\u53d6project\u4fe1\u606f\u3002\u7528\u6237\u9009\u62e9\u8981\u53d1\u5e03\u7684\u5fae\u670d\u52a1\uff0c\u7136\u540e\u6839\u636e\u670d\u52a1\u540d\u79f0\u5e76\u884c\u89e6\u53d1\u6bcf\u4e2a\u8981\u53d1\u5e03\u670d\u52a1\u7684\u6d41\u6c34\u7ebf\u8fdb\u884c\u6784\u5efa\u548c\u53d1\u5e03\u3002</p> <p>\u6211\u4eec\u5148\u6765\u770b\u770b\u5982\u4f55\u4f7f\u7528pipeline\u4e2d\u7684parallel\u8bed\u6cd5\uff0c\u8fd9\u91cc\u5217\u4e3e\u4e86\u4e24\u4e2a\u4f8b\u5b50\uff1a\u5e76\u884c\u4efb\u52a1\u3001\u5e76\u884c\u9636\u6bb5\u3002</p>"},{"location":"chap2/10mc_parallel/#_2","title":"\u5e76\u884c\u4efb\u52a1","text":"<p>\u9996\u5148\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u6bcf\u4e2a\u4efb\u52a1\u7684\u540d\u79f0\u548c\u5bf9\u5e94\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2aMap\u7c7b\u578b\u53c2\u6570\u5b9e\u73b0\u3002</p> <p>\u5728\u8fd9\u91cc\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7a7a\u7684map\uff0c\u7136\u540e\u4e3a\u8fd9\u4e2amap\u589e\u52a0\u4e86\u4e24\u4e2a\u4efb\u52a1\u5206\u522b\u4e3a<code>build01</code>\u548c<code>build02</code>\uff0c\u5b83\u4eec\u7684\u64cd\u4f5c\u662f\u6267\u884cshell\u547d\u4ee4\u3002</p> <p>\u6700\u540e\u901a\u8fc7parallel\u8fd0\u884c\u3002</p> <pre><code>def tasks = [:]\n\n//\u5b9a\u4e49\u8981\u5e76\u884c\u7684\u4efb\u52a1\u540d\u79f0\u548c\u4efb\u52a1\ntasks[\"build01\"] =  {sh \"ls\"} \ntasks[\"build02\"] =  {sh \"ls\"}\n\n//\u5e76\u884c\nparallel tasks\n</code></pre>"},{"location":"chap2/10mc_parallel/#_3","title":"\u5e76\u884c\u9636\u6bb5","text":"<p>\u5e76\u884cstage\u4e5f\u662f\u4e00\u79cd\u7ecf\u5e38\u7528\u5230\u7684\u8fd0\u884c\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u89e3\u51b3\u4e0d\u5fc5\u8981\u7684\u65f6\u95f4\u6d6a\u8d39\uff0c\u5c24\u5176\u5728\u5404\u4e2a\u5e73\u53f0\u8fd0\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e0d\u5fc5\u7b49\u5230windows\u5e73\u53f0\u9a8c\u8bc1\u5b8c\u6210\u518d\u8fdb\u884cLinux\u7cfb\u7edf\u4e2d\u7684\u9a8c\u8bc1\u3002\u800c\u662f\u76f4\u63a5\u5728\u5404\u4e2a\u5e73\u53f0\u4e2d\u540c\u65f6\u8fd0\u884c\uff0c\u52a0\u5feb\u4e86\u6d4b\u8bd5\u7684\u901f\u5ea6\u3002</p> <p>\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528failFast\u53c2\u6570\u914d\u7f6e\u5f53\u5176\u4e2d\u4e00\u4e2a\u4efb\u52a1\u5931\u8d25\u5176\u4ed6\u4efb\u52a1\u662f\u5426\u4e00\u6837\u5931\u8d25\uff0c\u53c2\u6570\u503c\u4e3a\u5e03\u5c14\u7c7b\u578b\uff08true false\uff09\u3002</p> <p>\u8fd9\u4e2a\u4f8b\u5b50\u662fjenkins\u5b98\u65b9\u63d0\u4f9b\u7684\uff0c\u5927\u6982\u7684\u5185\u5bb9\u662f\u5e76\u884c\u5728\u4e0d\u540c\u7cfb\u7edf\u73af\u5883\u4e0b\u8fdb\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u3002</p> <pre><code>pipeline {\n      agent none\n      stages {\n            stage('Run Tests') {\n              parallel {\n                  stage('Test On Windows') {\n                      agent {\n                          label \"windows\"\n                      }\n                      steps {\n                          bat \"run-tests.bat\"\n                      }\n                      post {\n                          always {\n                              junit \"**/TEST-*.xml\"\n                          }\n                      }\n                  }\n                  stage('Test On Linux') {\n                      agent {\n                          label \"linux\"\n                      }\n                      steps {\n                          sh \"run-tests.sh\"\n                      }\n                      post {\n                          always {\n                              junit \"**/TEST-*.xml\"\n                          }\n                      }\n                  }\n              }\n          }\n      }\n}\n</code></pre>"},{"location":"chap2/10mc_parallel/#job","title":"\u4e3b\u63a7Job\u5b9e\u73b0","text":"<p>\u9996\u5148\u6211\u4eec\u7528\u9759\u6001\u6570\u636e\u6765\u5b58\u50a8\u8981\u53d1\u5e03\u7684\u9879\u76ee\u540d\u79f0\u5b58\u50a8\u4e3a\u4e00\u4e2aList\uff0c\u5b9a\u4e49\u4e00\u4e2aMap\u7528\u6765\u5b58\u50a8\u5e76\u884c\u4efb\u52a1\u3002\u5b9a\u4e49buildStatus\u5c55\u793a\u9879\u76ee\u9519\u8bef\u4fe1\u606f\uff08\u8fd9\u91cc\u505a\u4e86\u4fe1\u606f\u683c\u5f0f\u5316\uff09\u3002</p> <p>\u4f7f\u7528build\u8fdb\u884c\u9879\u76ee\u89e6\u53d1\u3002\u8fd9\u91cc\u4f1a\u628a\u6bcf\u4e2a\u5931\u8d25\u7684\u4efb\u52a1\u5b58\u50a8\u5c55\u793a\u5230\u6d41\u6c34\u7ebf\u65e5\u5fd7\u4e2d\u3002</p> <pre><code>def jobs = [\"test2\",\"demo-test-service\"]\ndef parallelMap = [:]\ndef buildStatus = [:]\n\n\njobs.each{ \n    println(it)\n\n    parallelMap[it] = {\n        try {\n            build job: \"${it}\", \n            parameters: [string(name: 'branchName', value: 'Dev')]\n        } catch(e){\n            println(\"${it}  \" + e)\n            buildStatus[it] = e\n        }\n    }\n}\n\nparallel parallelMap\n\n//\u5224\u65ad\u72b6\u6001\n\nfor ( i in buildStatus.keySet()){\n     currentBuild.description = \"\u6784\u5efa\u4fe1\u606f\"\n     currentBuild.description += (\"\\n\u9879\u76ee\u540d\u79f0-&gt;\"  + i  + \"\u9519\u8bef\u4fe1\u606f\uff1a-&gt;\"+ buildStatus[i])\n}\n</code></pre> <p>\u8fd0\u884c\u6548\u679c</p> <p></p> <p>\u57fa\u672c\u4e0a\u6bcf\u4e2a\u6a21\u5757\u5bf9\u5e94\u4e00\u4e2apipeline\u9879\u76ee\u3002\u6709\u65f6\u5019\u6211\u4eec\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u96c6\u4e2d\u63a7\u5236\u9879\u76ee\u6765\u6839\u636e\u8bbe\u7f6e\u7684\u53c2\u6570\u6709\u5e8f\u89e6\u53d1\u5404\u4e2a\u6a21\u5757\u670d\u52a1\u5bf9\u5e94\u7684\u6d41\u6c34\u7ebf\u8fdb\u884c\u53d1\u5e03\u3002\u5728\u5404\u4e2a\u6a21\u5757\u4e4b\u95f4\u6ca1\u6709\u53d1\u5e03\u987a\u5e8f\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Pipeline\u7684Parallel\u8bed\u6cd5\u8fdb\u884c\u9879\u76ee\u7684\u5e76\u884c\u6784\u5efa\u3002\u52a0\u5feb\u53d1\u5e03\u901f\u5ea6\uff0c\u51cf\u5c11\u91cd\u590d\u624b\u5de5\u64cd\u4f5c\u6210\u672c\u3002</p>"},{"location":"chap2/1chap2_Jenkinsfile/","title":"\u7b2c\u4e00\u8282 \u7f16\u5199 Jenkinsfile \u8fd0\u884c\u6d41\u6c34\u7ebf","text":""},{"location":"chap2/1chap2_Jenkinsfile/#_1","title":"\u672c\u8282\u4ecb\u7ecd","text":"<p>\u4e00\u6761\u6d41\u6c34\u7ebf\u901a\u8fc7\u4e00\u4e2a <code>Jenkinsfile</code> \u6587\u4ef6\u8fdb\u884c\u63cf\u8ff0\uff0c\u5206\u6210\u811a\u672c\u5f0f\u548c\u58f0\u660e\u5f0f\u4e24\u79cd\u65b9\u5f0f\u3002</p> <p>\u4e00\u4e2a <code>Jenkinsfile</code> \u6587\u4ef6\u7684\u7ec4\u6210\uff1a</p> <ul> <li>\u6307\u5b9a node \u8282\u70b9/ workspace</li> <li>\u6307\u5b9a\u8fd0\u884c\u7684\u9009\u9879</li> <li>\u6307\u5b9a stages \u9636\u6bb5</li> <li>\u6307\u5b9a\u6784\u5efa\u540e\u7684\u64cd\u4f5c</li> </ul>"},{"location":"chap2/1chap2_Jenkinsfile/#1-pipeline","title":"1. \u8ba4\u8bc6Pipeline","text":""},{"location":"chap2/1chap2_Jenkinsfile/#1-1-pipeline","title":"1-1 Pipeline\u662f\u4ec0\u4e48\uff1f","text":"<ul> <li><code>Pipeline</code>\u662f<code>Jenkins</code>\u7684\u6838\u5fc3\u529f\u80fd\uff0c\u63d0\u4f9b\u4e00\u7ec4\u53ef\u6269\u5c55\u7684\u5de5\u5177\u3002</li> <li>\u901a\u8fc7<code>Pipeline</code> \u7684<code>DSL</code>\u8bed\u6cd5\u53ef\u4ee5\u5b8c\u6210\u4ece\u7b80\u5355\u5230\u590d\u6742\u7684\u4ea4\u4ed8\u6d41\u6c34\u7ebf\u5b9e\u73b0\u3002</li> <li><code>jenkins</code>\u7684<code>Pipeline</code>\u662f\u901a\u8fc7<code>Jenkinsfile</code>\uff08\u6587\u672c\u6587\u4ef6\uff09\u6765\u5b9e\u73b0\u7684\u3002</li> <li>\u8fd9\u4e2a\u6587\u4ef6\u53ef\u4ee5\u5b9a\u4e49Jenkins\u7684\u6267\u884c\u6b65\u9aa4\uff0c\u4f8b\u5982\u68c0\u51fa\u4ee3\u7801\u3002</li> </ul>"},{"location":"chap2/1chap2_Jenkinsfile/#1-2-jenkinsfile","title":"1-2 Jenkinsfile","text":"<ul> <li>Jenkinsfile\u4f7f\u7528\u4e24\u79cd\u8bed\u6cd5\u8fdb\u884c\u7f16\u5199\uff0c\u5206\u522b\u662f\u58f0\u660e\u5f0f\u548c\u811a\u672c\u5f0f\u3002</li> <li>\u58f0\u660e\u5f0f\u548c\u811a\u672c\u5f0f\u7684\u6d41\u6c34\u7ebf\u4ece\u6839\u672c\u4e0a\u662f\u4e0d\u540c\u7684\u3002</li> <li>\u58f0\u660e\u5f0f\u662f<code>jenkins</code>\u6d41\u6c34\u7ebf\u66f4\u53cb\u597d\u7684\u7279\u6027\u3002</li> <li>\u811a\u672c\u5f0f\u7684\u6d41\u6c34\u7ebf\u8bed\u6cd5\uff0c\u63d0\u4f9b\u66f4\u4e30\u5bcc\u7684\u8bed\u6cd5\u7279\u6027\u3002</li> <li>\u58f0\u660e\u5f0f\u6d41\u6c34\u7ebf\u4f7f\u7f16\u5199\u548c\u8bfb\u53d6\u6d41\u6c34\u7ebf\u4ee3\u7801\u66f4\u5bb9\u6613\u8bbe\u8ba1\u3002</li> </ul>"},{"location":"chap2/1chap2_Jenkinsfile/#1-3-pipeline","title":"1-3 \u4e3a\u4ec0\u4e48\u4f7f\u7528Pipeline\uff1f","text":"<p>\u672c\u8d28\u4e0a\uff0c<code>jenkins</code>\u662f\u4e00\u4e2a\u81ea\u52a8\u5316\u5f15\u64ce\uff0c\u5b83\u652f\u6301\u8bb8\u591a\u81ea\u52a8\u6a21\u5f0f\u3002</p> <p>\u6d41\u6c34\u7ebf\u5411<code>Jenkins</code>\u6dfb\u52a0\u4e86\u4e00\u7ec4\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u652f\u6301\u7528\u4f8b\u3001\u7b80\u5355\u7684\u6301\u7eed\u96c6\u6210\u5230\u5168\u9762\u7684\u6301\u7eed\u4ea4\u4ed8\u6d41\u6c34\u7ebf\u3002 \u901a\u8fc7\u5bf9\u4e00\u7cfb\u5217\u7684\u53d1\u5e03\u4efb\u52a1\u5efa\u7acb\u6807\u51c6\u7684\u6a21\u677f\uff0c\u7528\u6237\u53ef\u4ee5\u5229\u7528\u66f4\u591a\u6d41\u6c34\u7ebf\u7684\u7279\u6027\uff0c\u6bd4\u5982\uff1a </p> <ul> <li>\u4ee3\u7801\u5316: \u6d41\u6c34\u7ebf\u662f\u5728\u4ee3\u7801\u4e2d\u5b9e\u73b0\u7684\uff0c\u901a\u5e38\u4f1a\u5b58\u653e\u5230\u6e90\u4ee3\u7801\u63a7\u5236\uff0c\u4f7f\u56e2\u961f\u5177\u6709\u7f16\u8f91\u3001\u5ba1\u67e5\u548c\u66f4\u65b0\u4ed6\u4eec\u9879\u76ee\u7684\u4ea4\u4ed8\u6d41\u6c34\u7ebf\u7684\u80fd\u529b\u3002 </li> <li>\u8010\u7528\u6027\uff1a\u6d41\u6c34\u7ebf\u53ef\u4ee5\u4ece<code>Jenkins</code>\u7684<code>master</code>\u8282\u70b9\u91cd\u542f\u540e\u7ee7\u7eed\u8fd0\u884c\u3002 </li> <li>\u53ef\u6682\u505c\u7684\uff1a\u6d41\u6c34\u7ebf\u53ef\u4ee5\u7531\u4eba\u529f\u8f93\u5165\u6216\u6279\u51c6\u7ee7\u7eed\u6267\u884c\u6d41\u6c34\u7ebf\u3002 - \u89e3\u51b3\u590d\u6742\u53d1\u5e03\uff1a \u652f\u6301\u590d\u6742\u7684\u4ea4\u4ed8\u6d41\u7a0b\u3002\u4f8b\u5982\u5faa\u73af\u3001\u5e76\u884c\u6267\u884c\u3002 </li> <li>\u53ef\u6269\u5c55\u6027\uff1a \u652f\u6301\u6269\u5c55DSL\u548c\u5176\u4ed6\u63d2\u4ef6\u96c6\u6210\u3002</li> </ul>"},{"location":"chap2/1chap2_Jenkinsfile/#1-4-pipeline","title":"1-4 Pipeline \u5b9a\u4e49","text":"<ul> <li>\u4e00\u6761\u6d41\u6c34\u7ebf\u901a\u8fc7<code>Jenkinsfile</code>\u63cf\u8ff0 </li> <li>\u5b89\u88c5\u58f0\u660e\u5f0f\u63d2\u4ef6<code>Pipeline: Declarative</code> </li> <li><code>Jenkinsfile</code>\u7ec4\u6210 <ul> <li>\u6307\u5b9a<code>node\u8282\u70b9\uff0fworkspace</code> </li> <li>\u6307\u5b9a\u6307\u5b9a\u8fd0\u884c\u9009\u9879 </li> <li>\u6307\u5b9a<code>stages</code>\u9636\u6bb5 </li> <li>\u6307\u5b9a\u6784\u5efa\u540e\u64cd\u4f5c </li> </ul> </li> </ul> <p>Agent-Options</p> <ul> <li>\u6307\u5b9a<code>node</code>\u8282\u70b9<code>/workspace</code></li> <li> <p>\u6307\u5b9a\u8fd0\u884c\u9009\u9879</p> </li> <li> <p>\u58f0\u660e\u5f0f<code>Pipeline</code>: \u4f7f\u7528<code>agent</code>\u6307\u5b9a\u8fd0\u884c\u7684<code>slave</code>\u8282\u70b9\u53ef\u4ee5\u662f<code>label</code>\u3002</p> </li> </ul> <pre><code>pipeline{\n    agent any\n    stages{\n    //    \n    }\n}\n</code></pre> <p>\u811a\u672c\u5f0f<code>Pipleine</code>\uff1a \u4f7f\u7528<code>node</code>\u6307\u5b9a\u8fd0\u884c<code>slave</code>\u53ef\u4ee5\u662f<code>label</code>\u3002</p> <pre><code>node(\"slave\"){\n    stage(\"GetCode\"){\n    //\n    }\n}\n</code></pre> <p>Stages</p> <ul> <li> <p><code>stage</code>\u5b9a\u4e49\u4e86\u5728\u6574\u4e2a\u6d41\u6c34\u7ebf\u7684\u6267\u884c\u4efb\u52a1\u7684\u6982\u5ff5\u6027\u7684\u4e0d\u540c\u7684\u9636\u6bb5\u3002\u4f8b\u5982\uff1a <code>GetCode</code>\u3001<code>Build</code>\u3001<code>Test</code>\u3001<code>Deploy</code>\u3001<code>CodeScan</code>\u6bcf\u4e2a\u9636\u6bb5\u3002</p> </li> <li> <p>\u89e3\u91ca\uff1a\u5728\u8fd9\u91cc\u6211\u6dfb\u52a0\u4e86\u4e09\u4e2a\u9636\u6bb5 </p> <ul> <li>GetCode </li> <li>Build </li> <li>CodeScan </li> </ul> </li> <li> <p>\u58f0\u660e\u5f0f<code>pipeline</code>\uff1a \u5b9a\u4e49<code>stages-&gt;stage</code>\u3002</p> </li> </ul> <pre><code>pipeline{\n    agent any\n    stages{\n    stage(\"GetCode\"){\n        //steps  \n    }\n\n    stage(\"build\"){\n       //step\n    }\n  }\n}\n</code></pre> <ul> <li>\u811a\u672c\u5f0f<code>Pipeline</code>: \u76f4\u63a5\u4f7f\u7528<code>stage</code>\u3002</li> </ul> <pre><code>node(\"slave\"){\n    stage(\"GetCode\"){\n    //\n    }\n\n    stage(\"build\"){\n    //\n    }\n}\n</code></pre> <p>step(\u6b65\u9aa4)</p> <ul> <li><code>step</code>\u662f\u6bcf\u4e2a\u9636\u6bb5\u4e2d\u8981\u6267\u884c\u7684\u6bcf\u4e2a\u6b65\u9aa4\u3002\u4f8b\u5982\uff1a \u5728\u6267\u884c<code>GetCode</code>\u7684\u65f6\u5019\u9700\u8981\u5224\u65ad\u7528\u6237\u63d0\u4f9b\u7684\u53c2\u6570<code>srcType</code>\u7684\u503c\u662f<code>Git</code>\u8fd8\u662f<code>svn</code>\u3002</li> </ul> <pre><code>pipeline{\nagent any\nstages{\n    stage(\"GetCode\"){\n        steps{ \n            sh \"ls \"    //step\n            } \n        }    \n    }\n}\n</code></pre> <ul> <li>\u811a\u672c\u5f0f<code>Pipeline</code>\uff1a \u4e0d\u9700\u8981<code>step</code>\u5173\u952e\u5b57\u3002</li> </ul> <pre><code>node(\"slave\"){\nstage(\"GetCode\"){\n    //step\n    if(\"${srcType}\" == \"Git\"){\n        //\u7528git\u65b9\u5f0f\u4ee3\u7801\u68c0\u51fa\n    } else if (\"${srcType}\" == \"SVN\"){\n        //\u7528svn\u65b9\u5f0f\u4ee3\u7801\u68c0\u51fa\n    } else {\n        error \"srcType is not in [Git|SVN]\"\n    }\n}\n}\n</code></pre> <p>Post</p> <ul> <li>\u6307\u5b9a\u6784\u5efa\u540e\u64cd\u4f5c </li> <li> <p>\u89e3\u91ca\uff1a </p> <ul> <li><code>always{}</code>\uff1a\u603b\u662f\u6267\u884c\u811a\u672c\u7247\u6bb5 </li> <li><code>success{}</code>\uff1a\u6210\u529f\u540e\u6267\u884c</li> <li><code>failure{}</code>\uff1a\u5931\u8d25\u540e\u6267\u884c </li> <li><code>aborted{}</code>\uff1a\u53d6\u6d88\u540e\u6267\u884c </li> </ul> </li> <li> <p><code>currendBuild</code>\u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf </p> <ul> <li><code>description</code>\uff1a\u6784\u5efa\u63cf\u8ff0 </li> </ul> </li> </ul> <pre><code>String workspace = \"/home/vagrant/workspace\" \n\n//Pipeline \npipeline {\n    agent { node { label \"master\"   //\u6307\u5b9a\u8fd0\u884c\u8282\u70b9\u7684\u6807\u7b7e\u6216\u8005\u540d\u79f0\n                     customWorkspace \"${workspace}\" //\u6307\u5b9a\u8fd0\u884c\u5de5\u4f5c\u76ee\u5f55\uff08\u53ef\u9009\uff09\n            }\n    }\n\n    options { \n        timestamps()    //\u65e5\u5fd7\u4f1a\u6709\u65f6\u95f4\n        skipDefaultCheckout()  //\u5220\u9664\u9690\u5f0fcheckout scm \u8bed\u53e5\n        disableConcurrentBuilds()  //\u9759\u6b62\u5e76\u884c\n        timeout(time: 1, unit: 'HOURS')  //\u6d41\u6c34\u7ebf\u8d85\u65f6\u8bbe\u7f6e1h\n    }\n\n    stages { \n    //\u4e0b\u8f7d\u4ee3\u7801\n        stage(\"GetCode\"){   //\u9636\u6bb5\u540d\u79f0\n            steps{   //\u540d\u79f0\n                timeout(time:5, unit:\"MINUTES\"){   //\u6b65\u9aa4\u8d85\u65f6\u65f6\u95f4\n                    script{   //\u586b\u5199\u8fd0\u884c\u4ee3\u7801\n                        println('\u83b7\u53d6\u4ee3\u7801') \n                    } \n                } \n            } \n        }\n       //\u6784\u5efa\n        stage(\"Build\"){ \n            steps{\n                timeout(time:20, unit:\"MINUTES\"){ \n                    script{ \n                        println('\u5e94\u7528\u6253\u5305')\n                    }\n                } \n            }\n        }\n\n        //\u4ee3\u7801\u626b\u63cf\n        stage(\"CodeScan\"){\n            steps{ \n                timeout(time:30, unit:\"MINUTES\"){ \n                    script{ \n                        print('\u4ee3\u7801\u626b\u63cf')\n                    } \n                }\n            }\n        }\n    } \n\n    //\u6784\u5efa\u540e\u64cd\u4f5c\n    post {\n        always { \n            script{ \n                println(\"always\") \n            } \n        } \n\n        success {\n            script{\n                currentBuild.description += \"\\n \u6784\u5efa\u6210\u529f!\" \n            } \n        }\n\n        failure {\n            script{ \n                currentBuild.description += \"\\n \u6784\u5efa\u5931\u8d25!\" \n            } \n        }\n\n        aborted { \n            script{ \n                currentBuild.description += \"\\n \u6784\u5efa\u53d6\u6d88!\" \n            } \n        } \n    } \n}\n</code></pre> <p></p> <p></p>"},{"location":"chap2/1chap2_Jenkinsfile/#_2","title":"\u76f8\u5173\u6587\u6863","text":"<ul> <li>Building Continuous Delivery pipelines with Jenkins2(Scripted vs. declarative pipeline)</li> </ul>"},{"location":"chap2/2chap2_declarative_pipeline/","title":"\u7b2c\u4e8c\u8282 \u58f0\u660e\u5f0f\u6d41\u6c34\u7ebf\u8bed\u6cd5","text":""},{"location":"chap2/2chap2_declarative_pipeline/#_2","title":"\u672c\u8282\u4ecb\u7ecd","text":"<p>\u58f0\u660e\u5f0f <code>Pipeline</code> \u662f\u6700\u8fd1\u6dfb\u52a0\u5230 Jenkins \u6d41\u6c34\u7ebf\u7684\uff0c\u5b83\u5728\u6d41\u6c34\u7ebf\u5b50\u7cfb\u7edf\u4e4b\u4e0a\u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u7b80\u5355\uff0c\u66f4\u6709\u4e3b\u89c1\u7684\u8bed\u6cd5\u3002 \u6240\u6709\u7684\u58f0\u660e\u5f0f<code>Pipeline</code>\u90fd\u5fc5\u987b\u5305\u542b\u4e00\u4e2a <code>pipeline</code>\u5757\u4e2d\uff0c\u6bd4\u5982\uff1a</p> <pre><code>pipeline {\n    //run\n}\n</code></pre> <p>\u5728\u58f0\u660e\u5f0f <code>Pipeline</code> \u4e2d\u7684\u57fa\u672c\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f\u9075\u5faa <code>Groovy</code>\u7684\u8bed\u6cd5\u3002\u4f46\u662f\u6709\u4ee5\u4e0b\u4f8b\u5916\uff1a</p> <ul> <li>\u6d41\u6c34\u7ebf\u9876\u5c42\u5fc5\u987b\u662f\u4e00\u4e2a\u5757\uff0c\u7279\u522b\u662f<code>pipelin{}</code>\u3002</li> <li>\u4e0d\u9700\u8981\u5206\u53f7\u4f5c\u4e3a\u5206\u5272\u7b26\uff0c\u662f\u6309\u7167\u884c\u5206\u5272\u7684\u3002</li> <li>\u8bed\u53e5\u5757\u53ea\u80fd\u7531\u9636\u6bb5\u3001\u6307\u4ee4\u3001\u6b65\u9aa4\u3001\u8d4b\u503c\u8bed\u53e5\u7ec4\u6210\u3002\u4f8b\u5982: <code>input</code>\u88ab\u89c6\u4e3a<code>input()</code>\u3002</li> </ul>"},{"location":"chap2/2chap2_declarative_pipeline/#1-1-agent","title":"1-1 agent(\u4ee3\u7406)","text":"<p>agent \u6307\u5b9a\u4e86\u6d41\u6c34\u7ebf\u7684\u6267\u884c\u8282\u70b9\u3002</p> <p>\u53c2\u6570\uff1a</p> <ul> <li><code>any</code> \u5728\u4efb\u4f55\u53ef\u7528\u7684\u8282\u70b9\u4e0a\u6267\u884c<code>pipeline</code>\u3002</li> <li><code>none</code> \u6ca1\u6709\u6307\u5b9a<code>agent</code>\u7684\u65f6\u5019\u9ed8\u8ba4\u3002</li> <li><code>label</code> \u5728\u6307\u5b9a\u6807\u7b7e\u4e0a\u7684\u8282\u70b9\u4e0a\u8fd0\u884c<code>Pipeline</code>\u3002</li> </ul> <p><code>node</code> \u5141\u8bb8\u989d\u5916\u7684\u9009\u9879\u3002</p> <p>\u8fd9\u4e24\u79cd\u662f\u4e00\u6837\u7684</p> <pre><code>\u8fd9\u4e24\u79cd\u662f\u4e00\u6837\u7684\nagent { node { label 'labelname' }}\nagent { label ' labelname '}\n</code></pre>"},{"location":"chap2/2chap2_declarative_pipeline/#1-1-1-agent","title":"1-1-1 agent\u90e8\u5206\u8be6\u89e3","text":"<p><code>agent</code>\u90e8\u5206\u63cf\u8ff0\u7684\u662f\u6574\u4e2a<code>pipeline</code>\u6216\u5728\u7279\u5b9a\u9636\u6bb5\u6267\u884c\u4efb\u52a1\u65f6\u6240\u5728\u7684<code>agent</code>\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c<code>Jenkins master</code>\u6839\u636e\u6b64<code>agent</code>\u90e8\u5206\u51b3\u5b9a\u5c06\u4efb\u52a1\u5206\u914d\u5230\u54ea\u4e2a<code>agent</code>\u4e0a\u6267\u884c\u3002<code>agent</code>\u90e8\u5206\u5fc5\u987b\u5728<code>pipeline</code>\u5757\u5185\u7684\u9876\u5c42\u5b9a\u4e49\uff0c\u800c<code>stage</code>\u5757\u5185\u7684\u5b9a\u4e49\u662f\u53ef\u9009\u7684\u3002 </p> <p><code>agent any</code>\u544a\u8bc9<code>Jenkins master</code>\uff1a\u4efb\u4f55\u53ef\u7528\u7684<code>agent</code>\u90fd\u53ef\u4ee5\u6267\u884c\u3002 </p> <p><code>agent</code>\u90e8\u5206\u7684\u5b9a\u4e49\u53ef\u4ee5\u653e\u5728\u9636\u6bb5\u4e2d\uff0c\u7528\u4e8e\u6307\u5b9a\u8be5<code>stage\u6267</code>\u884c\u65f6\u7684<code>agent</code></p> <pre><code>pipeline { \n    agent any \n    stages { \n        stage('Build') { \n            agent any \n            steps { \n                echo \"build\" \n            } \n        } \n    } \n}\n</code></pre> <p>\u901a\u8fc7\u6807\u7b7e\u6307\u5b9aagent</p> <p>\u5f53<code>pipeline</code>\u9700\u8981\u5728<code>JDK8</code>\u73af\u5883\u4e0b\u8fdb\u884c\u6784\u5efa\u65f6\uff0c\u5c31\u9700\u8981\u901a\u8fc7\u6807\u7b7e\u6765\u6307\u5b9a<code>agent</code>\u3002\u4ee3\u7801\u5982\u4e0b\uff1a </p> <pre><code>pipeline \n{ \n    agent { \n        label 'jdk8' \n    } \n    stages { \n        stage('Build') { \n            steps { \n                echo \"build\" \n            } \n        } \n    } \n}\n</code></pre> <p>\u4e8b\u5b9e\u4e0a\uff0c<code>agent\uff5blabel 'jdk8'\uff5d</code>\u662f\u4ee5\u4e0b\u5b9a\u4e49\u65b9\u5f0f\u7684\u7b80\u7565\u5199\u6cd5\u3002 </p> <pre><code>agent\uff5b\n    node {\n        label 'jdk8'\n    }\n\uff5d\n</code></pre> <p>\u591a<code>label</code>\u73af\u5883\u4e0b\u540c\u65f6\u6267\u884c\uff0c\u6709<code>windows</code>\u548c<code>jdk8</code>\u6807\u7b7e\u7684<code>agent</code></p> <pre><code>agent{\n    label 'jdk8 &amp;&amp; windows' \n}\n</code></pre> <p>\u4e0a\u6587\u4e2d\uff0c\u5728\u589e\u52a0<code>agent</code>\u65f6\uff0c\u5df2\u914d\u7f6e\u597d\u4e86\u8be5<code>agent</code>\u7684\u9ed8\u8ba4\u5de5\u4f5c\u76ee\u5f55\u8def\u5f84\uff0c\u4f46\u662f<code>agent</code>\u90e8\u5206\u5141\u8bb8\u6211\u4eec\u5bf9\u5de5\u4f5c\u76ee\u5f55\u8fdb\u884c\u81ea\u5b9a\u4e49\u3002 <code>node</code>\u9664\u4e86<code>label</code>\u9009\u9879\uff0c\u8fd8\u63d0\u4f9b\u4e86\u53e6\u5916\u4e00\u4e2a\u9009\u9879<code>customWorkspace,</code>\u81ea\u5b9a\u4e49\u5de5\u4f5c\u76ee\u5f55\uff0c\u5199\u6cd5\u5982\u4e0b\uff1a </p> <pre><code>agent { \n    node { \n        label 'jdk8' \n        customWorkspace '/var/lib/custom' \n    } \n} \n</code></pre> <p><code>customWorkspace</code>\u9009\u9879\u9664\u4e86\u5199\u7edd\u5bf9\u4e00\u8def\u5f84\uff0c \u8fd8\u53ef\u4ee5\u5199\u76f8\u5bf9\u4e8e\u9ed8\u8ba4\u5de5\u4f5c\u76ee\u5f55\u8def\u5f84\u7684\u76f8\u5bf9\u8def\u5f84\u3002</p> <p><code>when</code>\u6307\u4ee4\u7684<code>beforeAgent</code>\u9009\u9879</p> <p>\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9636\u6bb5\u5185\u6240\u6709\u7684\u4ee3\u7801\u90fd\u5c06\u5728\u6307\u5b9a\u7684<code>Jenkins agent</code>\u4e0a\u6267\u884c\uff1a<code>when</code>\u6307\u4ee4\u63d0\u4f9b\u4e86\u4e00\u4e2a<code>beforeAgent</code>\u9009\u9879\uff0c\u5f53\u5b83\u7684\u503c\u4e3a<code>true</code>\u65f6\uff0c \u53ea\u6709\u7b26\u5408<code>when</code>\u6761\u4ef6\u65f6\u624d\u4f1a\u8fdb\u5165\u8be5<code>Jenkins agent</code>\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u907f\u514d\u6ca1\u6709\u5fc5\u8981\u7684\u5de5\u4f5c\u7a7a\u95f4\u7684\u5206\u914d\uff0c \u4e5f\u5c31\u4e0d\u9700\u8981\u7b49\u5f85\u53ef\u7528\u7684<code>Jenkins agent</code>\u4e86\u3002 </p> <p>\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\uff0c<code>beforeAgent</code>\u9009\u9879\u901a\u5e38\u7528\u4e8e\u52a0\u901f<code>pipeline</code>\u7684\u6267\u884c\u3002\u793a\u4f8b\u5982\u4e0b\uff1a </p> <pre><code>pipeline { \n    agent none \n    stages {\n         stage('Example Build') { \n            steps { \n            echo 'Hello World' \n        }\n    } \n    stage('Example Deploy') { \n        agent { \n            label \"some-label\" \n        } \n        when { \n            beforeAgent true \n            branch 'production' \n            } \n            steps { \n                echo 'Deploying' \n            } \n        } \n    }\n} \n</code></pre> <p>\u53ea\u6709\u5206\u652f\u4e3a<code>production</code>\u65f6\uff0c\u624d\u4f1a\u8fdb\u4eba<code>\u201cExample Deploy\u201d</code>\u9636\u6bb5\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u907f\u514d\u5728<code>some-label</code> \u7684<code>agent</code>\u4e2d\u62c9\u53d6\u4ee3\u7801\uff0c\u4ece\u800c\u8fbe\u5230\u52a0\u901f<code>pipeline</code>\u6267\u884c\u7684\u76ee\u7684\u3002 </p>"},{"location":"chap2/2chap2_declarative_pipeline/#1-1-2-docker","title":"1-1-2 \u5c06\u6784\u5efa\u4efb\u52a1\u4ea4\u7ed9Docker","text":"<p>\u76ee\u524d\u6211\u4eec\u6240\u6709\u7684\u6784\u5efa\u90fd\u6267\u884c\u5728\u673a\u5668\u4e0a\uff0c\u63a5\u4e0b\u6765\u4ecb\u7ecd\u5982\u4f55\u8ba9\u6784\u5efa\u6267\u884c\u5728<code>Docker</code> \u5bb9\u5668\u4e2d\u3002</p> <p><code>Jenkins master</code>\u8981\u5c06\u6784\u5efa\u4efb\u52a1\u5206\u914d\u7ed9<code>Docker</code>, \u5c31\u5fc5\u987b\u5728<code>Jenkins agent</code>\u4e0a\u5b89\u88c5<code>Docker</code>\u3002\u5efa\u8bae\u7ed9  \u8fd9\u4e9b<code>agent</code>\u6253\u4e0a<code>docker</code>\u7684\u6807\u7b7e\u3002 </p> <pre><code>pipeline {\n    agent {\n        docker { image 'node:7-alpine' }\n    }\n    stages {\n        stage('Test') {\n            steps {\n                sh 'node --version'\n            }\n        }\n    }\n}\n</code></pre> <pre><code>[Pipeline] {\n[Pipeline] stage\n[Pipeline] { (Test)\n[Pipeline] sh\n+ node --version\nv7.10.1\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] }\n$ docker stop --time=1 1a245bfd1f49c695d450bd776ff6353b39be57db4c37af9a457e3a27baf9f5d7\n</code></pre> <p>\u4e0e\u4e4b\u524d\u4e0d\u540c\u7684\uff0c\u5728<code>agent</code>\u90e8\u5206\u6211\u4eec\u5c06<code>node</code>\u6362\u6210\u4e86<code>docker</code>\u3002\u4e0b\u9762\u5206\u522b\u89e3\u91ca<code>docker</code>\u7684\u5e38\u7528\u9009\u9879\u3002</p> <ul> <li><code>label</code>\uff08\u53ef\u9009\uff09\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u4e0e<code>node</code>\u7684<code>label</code>\u7684\u4f5c\u7528\u4e00\u6837\u3002 </li> <li>image\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u6307\u5b9a\u6784\u5efa\u65f6\u4f7f\u7528\u7684<code>Docker</code>\u955c\u50cf\u3002 </li> <li><code>args</code>\uff08\u53ef\u9009\uff09\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c<code>Jenkins</code>\u6267\u884c<code>docker run</code>\u547d\u4ee4\u65f6\u6240\u5e26\u7684\u53c2\u6570\uff0c\u5982<code>args '-v /tmp:/tmp'</code>\u3002</li> <li><code>aiwaysPull</code>\uff08\u53ef\u9009\uff09\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u5f3a\u5236\u6bcf\u6b21\u6267\u884c<code>docker pull</code>\u547d\u4ee4\u65f6\u90fd\u91cd\u65b0\u62c9\u53d6\u955c\u50cf\u3002 </li> </ul>"},{"location":"chap2/2chap2_declarative_pipeline/#1-1-3-docker","title":"1-1-3 \u914d\u7f6e<code>Docker</code>\u79c1\u6709\u4ed3\u5e93","text":"<p><code>Docker</code> \u62c9\u53d6\u955c\u50cf\u65f6\uff0c\u9ed8\u8ba4\u662f\u4ece<code>Docker</code>\u5b98\u65b9\u4e2d\u5fc3\u4ed3\u5e93\u62c9\u53d6\u7684\u3002\u90a3\u4e48\u5982\u4f55\u5b9e\u73b0\u4ece\u79c1\u6709\u4ed3\u5e93\u62c9\u53d6\u5462\uff1f</p> <p><code>Docker</code>\u63d2\u4ef6\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u754c\u9762\u64cd\u4f5c\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a </p> <p>\u8fdb\u4eba<code>Manage Jenkins</code> -&gt; <code>Configure System</code>\u9875\u9762\uff0c\u627e\u5230<code>\u201cDeclarative Pipeline(Docker)\u201d</code>\u90e8\u5206</p> <p> </p> <ul> <li><code>Docker Label</code>\uff1a\u5f53<code>pipeline</code>\u4e2d\u7684<code>agent</code> \u90e8\u5206\u6ca1\u6709\u6307\u5b9a<code>label</code>\u9009\u9879\u65f6\uff0c\u5c31\u4f1a\u4f7f\u7528\u6b64\u914d\u7f6e</li> <li><code>Docker registry URL</code> : <code>Docker</code>\u79c1\u6709\u4ed3\u5e93\u5730\u5740\u3002 </li> <li><code>Registry credentials</code>\uff1a\u767b\u5f55<code>Docker</code>\u79c1\u6709\u4ed3\u5e93\u7684\u51ed\u8bc1\u3002 </li> </ul>"},{"location":"chap2/2chap2_declarative_pipeline/#1-2-post","title":"1-2 post","text":"<p>\u5b9a\u4e49\u4e00\u4e2a\u6216\u591a\u4e2a<code>steps</code> \uff0c\u8fd9\u4e9b\u9636\u6bb5\u6839\u636e\u6d41\u6c34\u7ebf\u6216\u9636\u6bb5\u7684\u5b8c\u6210\u60c5\u51b5\u800c\u8fd0\u884c(\u53d6\u51b3\u4e8e\u6d41\u6c34\u7ebf\u4e2d<code>post</code>\u90e8\u5206\u7684\u4f4d\u7f6e). <code>post</code> \u652f\u6301\u4ee5\u4e0b <code>post-condition</code> \u5757\u4e2d\u7684\u5176\u4e2d\u4e4b\u4e00: <code>always</code>, <code>changed</code>, <code>failure,</code> <code>success</code>, <code>unstable</code>, \u548c<code>aborted</code>\u3002\u8fd9\u4e9b\u6761\u4ef6\u5757\u5141\u8bb8\u5728 <code>post</code> \u90e8\u5206\u7684\u6b65\u9aa4\u7684\u6267\u884c\u53d6\u51b3\u4e8e\u6d41\u6c34\u7ebf\u6216\u9636\u6bb5\u7684\u5b8c\u6210\u72b6\u6001\u3002</p> <ul> <li><code>always</code> \u65e0\u8bba\u6d41\u6c34\u7ebf\u6216\u8005\u9636\u6bb5\u7684\u5b8c\u6210\u72b6\u6001\u3002</li> <li><code>changed</code> \u53ea\u6709\u5f53\u6d41\u6c34\u7ebf\u6216\u8005\u9636\u6bb5\u5b8c\u6210\u72b6\u6001\u4e0e\u4e4b\u524d\u4e0d\u540c\u65f6\u3002</li> <li><code>failure</code> \u53ea\u6709\u5f53\u6d41\u6c34\u7ebf\u6216\u8005\u9636\u6bb5\u72b6\u6001\u4e3a\u201dfailure\u201d\u8fd0\u884c\u3002</li> <li><code>success</code> \u53ea\u6709\u5f53\u6d41\u6c34\u7ebf\u6216\u8005\u9636\u6bb5\u72b6\u6001\u4e3a\u201dsuccess\u201d\u8fd0\u884c\u3002</li> <li><code>unstable</code> \u53ea\u6709\u5f53\u6d41\u6c34\u7ebf\u6216\u8005\u9636\u6bb5\u72b6\u6001\u4e3a\u201dunstable\u201d\u8fd0\u884c\u3002\u4f8b\u5982\uff1a\u6d4b\u8bd5\u5931\u8d25\u3002</li> <li><code>aborted</code> \u53ea\u6709\u5f53\u6d41\u6c34\u7ebf\u6216\u8005\u9636\u6bb5\u72b6\u6001\u4e3a\u201daborted \u201c\u8fd0\u884c\u3002\u4f8b\u5982\uff1a\u624b\u52a8\u53d6\u6d88\u3002</li> <li><code>cleanup</code> \u6e05\u7406\u6761\u4ef6\u5757\u3002\u4e0d\u8bba\u5f53\u524d\u5b8c\u6210\u72b6\u6001\u662f\u4ec0\u4e48\uff0c\u5728\u5176\u4ed6\u6240\u6709\u6761\u4ef6\u5757\u6267\u884c\u5b8c\u6210\u540e\u90fd\u6267\u884c\u3002 </li> </ul> <p><code>post</code>\u90e8\u5206\u53ef\u4ee5\u540c\u65f6\u5305\u542b\u591a\u79cd\u6761\u4ef6\u5757\u3002\u4ee5\u4e0b\u662f<code>post</code>\u90e8\u5206\u7684\u5b8c\u6574\u793a\u4f8b\u3002 </p> <pre><code>pipeline {\nagent any\nstages {\n    stage('Example') {\n        steps {\n            echo 'Hello World'\n        }\n        post {\n            always {\n                echo \"stage post always\"\n            }\n        }\n    }\n}\npost { \n    always { \n        echo 'I will always say Hello again!'o\n    }\n}\n}\n</code></pre>"},{"location":"chap2/2chap2_declarative_pipeline/#1-3-stages","title":"1-3 stages(\u9636\u6bb5)","text":"<p>\u5305\u542b\u4e00\u7cfb\u5217\u4e00\u4e2a\u6216\u591a\u4e2a<code>stage</code> \u6307\u4ee4, \u5efa\u8bae <code>stages</code> \u81f3\u5c11\u5305\u542b\u4e00\u4e2a<code>stage</code> \u6307\u4ee4\u7528\u4e8e\u8fde\u7eed\u4ea4\u4ed8\u8fc7\u7a0b\u7684\u6bcf\u4e2a\u79bb\u6563\u90e8\u5206,\u6bd4\u5982\u6784\u5efa, \u6d4b\u8bd5, \u548c\u90e8\u7f72\u3002</p> <pre><code>pipeline {\n    agent any\n    stages { \n        stage('Example') {\n            steps {\n                echo 'Hello World'\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"chap2/2chap2_declarative_pipeline/#1-4-steps","title":"1-4 steps(\u6b65\u9aa4)","text":"<p>step\u662f\u6bcf\u4e2a\u9636\u6bb5\u4e2d\u8981\u6267\u884c\u7684\u6bcf\u4e2a\u6b65\u9aa4\u3002</p> <pre><code>pipeline {\n    agent any\n    stages {\n        stage('Example') {\n            steps { \n                echo 'Hello World'\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"chap2/2chap2_declarative_pipeline/#1-5","title":"1-5 \u6307\u4ee4","text":""},{"location":"chap2/2chap2_declarative_pipeline/#1-5-1-environment","title":"1-5-1 environment","text":"<p><code>environment</code> \u6307\u4ee4\u6307\u5b9a\u4e00\u4e2a\u952e\u503c\u5bf9\u5e8f\u5217\uff0c\u8be5\u5e8f\u5217\u5c06\u88ab\u5b9a\u4e49\u4e3a\u6240\u6709\u6b65\u9aa4\u7684\u73af\u5883\u53d8\u91cf\uff0c\u6216\u8005\u662f\u7279\u5b9a\u4e8e\u9636\u6bb5\u7684\u6b65\u9aa4\uff0c\u8fd9\u53d6\u51b3\u4e8e <code>environment</code> \u6307\u4ee4\u5728\u6d41\u6c34\u7ebf\u5185\u7684\u4f4d\u7f6e\u3002</p> <p>\u8be5\u6307\u4ee4\u652f\u6301\u4e00\u4e2a\u7279\u6b8a\u7684\u65b9\u6cd5 <code>credentials()</code>\uff0c\u8be5\u65b9\u6cd5\u53ef\u7528\u4e8e\u5728<code>Jenkins</code>\u73af\u5883\u4e2d\u901a\u8fc7\u6807\u8bc6\u7b26\u8bbf\u95ee\u9884\u5b9a\u4e49\u7684\u51ed\u8bc1\u3002\u5bf9\u4e8e\u7c7b\u578b\u4e3a <code>\u201cSecret Text\u201d</code>\u7684\u51ed\u8bc1,<code>credentials()</code> \u5c06\u786e\u4fdd\u6307\u5b9a\u7684\u73af\u5883\u53d8\u91cf\u5305\u542b\u79d8\u5bc6\u6587\u672c\u5185\u5bb9\u3002\u5bf9\u4e8e\u7c7b\u578b\u4e3a <code>\u201cSStandard username and password\u201d</code>\u7684\u51ed\u8bc1, \u6307\u5b9a\u7684\u73af\u5883\u53d8\u91cf\u6307\u5b9a\u4e3a <code>username:password</code>\uff0c\u5e76\u4e14\u4e24\u4e2a\u989d\u5916\u7684\u73af\u5883\u53d8\u91cf\u5c06\u88ab\u81ea\u52a8\u5b9a\u4e49 :\u5206\u522b\u4e3a <code>MYVARNAME_USR</code>\u548c <code>MYVARNAME_PSW</code> \u3002</p> <pre><code>pipeline {\n    agent any\n    environment { \n        CC = 'jxi'\n    }\n    stages {\n        stage('Example') {\n            environment { \n                AN_ACCESS_KEY = credentials('my-prefined-secret-text') \n            }\n            steps {\n                sh 'printenv'\n            }\n        }\n    }\n}\n</code></pre> <p>\u73af\u5883\u53d8\u91cf\u53ef\u4ee5\u88ab\u6709\u4f5c\u662f<code>pipeline</code>\u4e0e<code>Jenkins</code>\u4ea4\u4e92\u7684\u5a92\u4ecb\u3002\u6bd4\u5982\uff0c\u521a\u4ee5\u4efb<code>pipeline</code>\u4e2d\u901a\u8fc7<code>BUILD NUMBER</code>\u53d8\u91cf\u77e5\u9053\u6784\u5efa\u4efb\u52a1\u7684\u5f53\u524d\u6784\u5efa\u6b21\u6570\u3002\u73af\u5883\u53d8\u91cf\u53ef\u4ee5\u5206\u4e3aJenkins\u5185\u7f6e\u53d8\u91cf\u548c\u81ea\u5b9a\u4e49\u53d8\u91cf\u3002</p> <p>Jenkins\u5185\u7f6e\u53d8\u91cf</p> <p>\u5728<code>pipeline</code>\u6267\u884c\u65f6\uff0c<code>Jenkins</code>\u901a\u8fc7\u4e00\u4e2a\u540d\u4e3a<code>env</code>\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u5c06<code>Jenkins</code>\u5185\u7f6e\u73af\u5883\u53d8\u91cf\u66b4\u9732\u51fa\u6765\u3002\u5176\u4f7f\u7528\u65b9\u6cd5\u6709\u591a\u79cd\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a </p> <pre><code>pipeline { \n    agent any \n    stages { \n        stage('Example') { \n            steps {\n                 echo \"Running ${env.BUILD_NUMBER1} on ${env.JENKINS_URL}\"  //\u65b9\u6cd5 \u4e00\n                 echo \"Running $env.BUILD_NUMBER on $env.JENKINS_URL\" //\u65b9\u6cd5 \u4e8c\n                 echo \"Running ${BUILD_NUMBER} on ${JENKINS_URL}\" //\u65b9\u6cd5 \u4e09\n            }\n        }\n    }\n}\n</code></pre> <p>\u9ed8\u8ba4<code>env</code>\u7684\u5c5e\u6027\u53ef\u4ee5\u76f4\u63a5\u5728<code>pipeline</code>\u4e2d\u5f15\u7528\u3002\u6240\u4ee5\u4ee5\u4e0a\u65b9\u6cd5\u90fd\u662f\u5408\u6cd5\u7684\u3002\u4f46\u662f\u4e0d\u63a8\u8350\u65b9\u6cd5\u4e09\u56e0\u4e3a\u51fa\u73b0\u53d8\u91cf\u51b2\u7a81\u65f6\u975e\u5e38\u96be\u67e5\u5728\u95ee\u9898 </p> <p>\u90a3\u4e48\u3002<code>env</code>\u53d8\u4ece\u90a3\u6709\u54ea\u6b64\u53ef\u7528\u5c5e\u6027\u5462\uff1f\u901a\u8fc7\u8bbf\u95ee\u7684<code>&lt;Jenkins master\u7684\u5730\u5740&gt;/pipeline-syntax/globalenv</code>\u6765\u83b7\u53d6\u5b8c\u6574\u5217\u8868\u5728\u5217\u8868\u4e2d\u3002\u5f53\u4e00\u4e2a\u53d8\u91cf\u58f0\u660e\u4e3a<code>\u201dFor a multibranch project\"</code>\u65f6, \u4ee3\u8868\u53ea\u6709\u591a\u5206\u652f\u9879\u76ee\u624d\u4f1a\u6709\u6b64\u53d8\u91cf </p> <p>\u4e0b\u9762\u6211\u4eec\u7b80\u5355\u4ecb\u7ecd\u51e0\u4e2a\u5728\u5b9e\u9648\u5de5\u4f5c\u4e2d\u7ecf\u5e38\u7528\u5230\u7684\u53d8\u91cf </p> <ul> <li><code>BUILD_NUMBER</code>:\u6784\u5efa\u53f7\uff0c\u7d2f\u52a0\u7684\u6570\u5b57\u3002\u5728\u6253\u5305\u65f6\u5b83\u53ef\u4f5c\u4e3a\u5236\u54c1\u540d\u79f0\u7684\u4e00\u90e8\u5206\u6bd4\u5982<code>server-2.jar</code> </li> <li><code>BRANCH_NAME</code>:\u591a\u5206\u652f<code>pipeline</code>\u9879\u76ee\u652f\u6301\u3002\u5f53\u9700\u8981\u6839\u636e\u4e0d\u540c\u7684\u5206\u652f\u505a\u4e0d\u540c\u7684\u4e8b\u60c5\u65f6\u5c31\u4f1a\u7528\u5230\uff0c \u6bd4\u5982\u901a\u8fc7\u4ee3\u7801\u5c06\u4ee3\u7801\u5c06<code>release</code>\u5206\u652f\u53d1\u5e03\u5230\u751f\u4ea7\u73af\u5883\u4e2d\u3001<code>master</code>\u5206\u652f\u53d1\u5e03\u5230\u6d4b\u8bd5\u73af\u5883\u4e2d </li> <li><code>BUILD_URL</code>:\u5f53\u524d\u6784\u5efa\u9875\u9762\u7684<code>URL</code>\u3002\u5982\u679c\u6784\u5efa\u5931\u8d25\u5219\u9700\u8981\u5c06\u5931\u8d25\u7684\u6784\u6b62\u94fe\u63a5\u653e\u5230\u90ae\u4ef6\u901a\u77e5\u4e2d\uff0c\u8fd9\u4e2a\u94fe\u63a5\u5c31\u53ef\u4ee5\u662f<code>BUILD_URL</code> </li> <li><code>GIT_BRANCH</code>:\u901a\u8fc7<code>git</code>\u62c9\u53d6\u7684\u6e90\u7801\u6784\u5efa\u7684\u9879\u76ee\u624d\u4f1a\u6709\u6b64\u53d8\u6700 </li> </ul> <p>\u5728\u4f7f\u7528<code>env</code>\u53d8\u91cf\u65f6\uff0c \u9700\u8981\u6ce8\u610f\u4e0d\u540c\u7c7b\u578b\u7684\u9879\u76ee\uff0c<code>env</code>\u53d8\u91cf\u4ece\u6240\u5305\u542b\u7684\u53d8\u91cf\u53ca\u5176\u503c\u662f\u4e0d\u4e00\u6837\u7684\u3002 \u6bd4\u5982\u666e\u901a<code>pipeline</code>\u52a1\u4e2d\u7684<code>GIT_BRANCH</code>\u53d8\u91cf\u7684\u503c\u4e3a<code>origin/master</code>,\u800c\u5728\u591a\u5206\u652f<code>pipeline</code>\u4efb\u52a1\u4e2d<code>GIT_BRANCH</code>\u53d8\u91cf\u7684\u503c\u4e3a<code>master</code></p> <p>\u5c0f\u6280\u5de7\uff1a\u5728\u8c03\u8bd5<code>pipeline</code>\u65f6\u53ef\u4ee5\u5728\u5f00\u59cb\u9636\u6bb5\u52a0\u4e00\u53e5\uff1a<code>sh 'printenv'</code>\u65f6\u53d8\u91cf\u7684\u5c5e\u6027\u503c\u6253\u5370\u51fa\u6765\u3002\u8fd9\u6837\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u907f\u514d\u4e0d\u5c11\u95ee\u9898 </p> <p>\u81ea\u5b9a\u4e49<code>piepline</code>\u73af\u5883\u53d8\u91cf</p> <p>\u5f53<code>piepline</code>\u53d8\u5f97\u590d\u6742\u65f6, \u6211\u4eec\u5c31\u4f1a\u6709\u5b9a\u4e49\u81ea\u5df1\u7684\u73af\u5883\u53d8\u91cf\u7684\u9700\u6c42\u3002\u58f0\u660e\u5f0f<code>piepline</code>\u63d0\u4f9b\u4e86<code>environment</code>\u6307\u4ee4\u65b9\u4fbf\u81ea\u5b9a\u4e49\u53d8\u662f\u3002\u6bd4\u5982 </p> <pre><code>pipeline { \n    agent any \n    environment {\n        CC = 'clang'\n    } \n stages { \n        stage('Example') { \n            environment {\n                DEBUG_FLAGS = '-g'\n            }\n            steps { \n                echo \"${CC} ${DEBUG_FLAGS}\" \n                sh 'printenv' \n            } \n        } \n    } \n} \n</code></pre> <pre><code>printenv\nJENKINS_NODE_COOKIE=591de548-b216-498b-8221-26ae09ca063d\nXDG_SESSION_ID=4\nBUILD_URL=http://192.168.33.11:8080/job/Chapter2-6env/2/\nHOSTNAME=jabox\nTERM=xterm-256color\nSHELL=/bin/bash\nHUDSON_SERVER_COOKIE=ec6f20ac1eab6177\nHISTSIZE=1000\nSTAGE_NAME=Example\nSSH_CLIENT=172.16.72.2 51333 22\nBUILD_TAG=jenkins-Chapter2-6env-2\nSSH_TTY=/dev/pts/1\n...\nLANG=en_US.UTF-8\nJOB_NAME=Chapter2-6env\nBUILD_DISPLAY_NAME=#2\nBUILD_ID=2\nJENKINS_URL=http://192.168.33.11:8080/\nHISTCONTROL=ignoredups\nJOB_BASE_NAME=Chapter2-6env\nHOME=/home/vagrant\nSHLVL=3\nEXECUTOR_NUMBER=3\n</code></pre> <p>\u53e6\u5916\uff0c<code>environment</code>\u6307\u4ee4\u53ef\u4ee5\u5728<code>pipeline</code>\u4e2d\u5b9a\u4e49\uff0c\u4ee3\u8868\u53d8\u91cf\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a<code>pipeline</code>\uff1b\u4e5f\u53ef\u4ee5\u5728<code>Stage</code>\u4e2d\u5b9a\u4e49\uff0c\u4ee3\u8868\u53d8\u91cf\u53ea\u5728\u8be5\u9636\u6bb5\u6709\u6548\u3002 </p> <p>\u4f46\u662f\u8fd9\u4e9b\u53d8\u91cf\u90fd\u4e0d\u662f\u8de8<code>pipeline</code>\u7684\uff0c\u6bd4\u5982<code>pipeline a</code>\u8bbf\u95ee\u4e0d\u5230<code>pipeline b</code>\u7684\u53d8\u91cf\u3002\u5728<code>pipeline</code>\u4e4b\u95f4\u5171\u4eab\u53d8\u91cf\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570\u5316<code>pipeline</code>\u6765\u5b9e\u73b0\u3002</p> <p>\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u8fd8\u4f1a\u9047\u5230\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\u5f15\u7528\u53e6\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\u7684\u60c5\u51b5\u3002\u5728 <code>environment</code>\u4e2d\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\uff1a </p> <pre><code>environment ( \n    _server_name = 'mail\u2014server' \n    _version = \"${BUILD_NUMBER}\" \n    _artifact_name = \"${_server_name}\u2014S{_VERSION}.jar\" \n</code></pre> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5982\u679c\u5728<code>environment</code>\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u4e0e<code>env</code>\u4e2d\u7684\u53d8\u91cf\u91cd\u540d\u90a3\u4e48\u88ab\u91cd\u540d\u7684\u53d8\u91cf\u7684\u503c\u4f1a\u88ab\u652b\u76d6\u6389\u3002\u6bd4\u5982\u5728<code>environment</code>\u4e2d\u5b9a\u4e49<code>PATH</code>\u53d8\u91cf(<code>PATH</code>\u4e5f\u662f<code>env</code>\u4e2d\u7684\u4e00\u4e2a\u53d8\u91cf\uff09\u3002</p> <pre><code>environment ( \n    PATH=\"invalid path\"\n}\n</code></pre> <p>\u6267\u884c<code>sh</code>\u65f6\uff0c\u5c31\u4f1a\u62a5\u9519</p> <p>\u81ea\u5b9a\u4e49\u5168\u5c40\u73af\u5883\u53d8\u91cf</p> <p><code>env</code>\u4e2d\u7684\u53d8\u6b23\u90fd\u662f<code>Jenkins</code>\u5185\u7f6e\u7684\u6216\u8005\u662f\u4e0e\u5177\u4f53<code>plpeline</code>\u76f8\u5173\u7684\u3002\u6709\u65f6\u5019\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e00\u4e9b\u5168\u5c40\u7684\u8de8<code>plpeline</code>\u7684\u81ea\u5b9a\u4e49\u53d8\u91cf</p> <p>\u8fdb\u5165<code>Manage Jenkins -&gt; Configure System -&gt; Global properties</code>\u9875\uff0c\u52fe\u9009<code>\"Environment variables\"</code></p> <p> </p> <p>\u81ea\u5b9a\u4e49\u5168\u5c40\u73af\u5883\u53d8\u7ae5\u4f1a\u88ab\u52a0\u4eba<code>env</code>\u5c5e\u6027\u5217\u8868\u4e2d\uff0c\u6240\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u5168\u5c40\u73af\u5883\u53d8\u91cf\u4e0e\u4f7f\u7528<code>Jenkins</code>\u5185\u7f6e\u53d8\u91cf\u7684\u65b9\u6cd5\u65e0\u5f02\uff1a<code>${env. whomai}</code></p> <pre><code>echo \"whomai: ${env.whoami}\"\n</code></pre> <pre><code>whomai: admin_jacob\n</code></pre>"},{"location":"chap2/2chap2_declarative_pipeline/#1-5-2-options","title":"1-5-2 options","text":"<p><code>options</code> \u6307\u4ee4\u5141\u8bb8\u4ece\u6d41\u6c34\u7ebf\u5185\u90e8\u914d\u7f6e\u7279\u5b9a\u4e8e\u6d41\u6c34\u7ebf\u7684\u9009\u9879\u3002 \u6d41\u6c34\u7ebf\u63d0\u4f9b\u4e86\u8bb8\u591a\u8fd9\u6837\u7684\u9009\u9879, \u6bd4\u5982<code>buildDiscarder</code>,\u4f46\u4e5f\u53ef\u4ee5\u7531\u63d2\u4ef6\u63d0\u4f9b, \u6bd4\u5982 <code>timestamps</code>\u3002</p> <ul> <li><code>buildDiscarder</code>: \u4e3a\u6700\u8fd1\u7684\u6d41\u6c34\u7ebf\u8fd0\u884c\u7684\u7279\u5b9a\u6570\u91cf\u4fdd\u5b58\u7ec4\u4ef6\u548c\u63a7\u5236\u53f0\u8f93\u51fa\u3002</li> <li><code>disableConcurrentBuilds</code>: \u4e0d\u5141\u8bb8\u540c\u65f6\u6267\u884c\u6d41\u6c34\u7ebf\u3002 \u53ef\u88ab\u7528\u6765\u9632\u6b62\u540c\u65f6\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u7b49\u3002</li> <li><code>overrideIndexTriggers:</code> \u5141\u8bb8\u8986\u76d6\u5206\u652f\u7d22\u5f15\u89e6\u53d1\u5668\u7684\u9ed8\u8ba4\u5904\u7406\u3002</li> <li><code>skipDefaultCheckout</code>: \u5728<code>agent</code> \u6307\u4ee4\u4e2d\uff0c\u8df3\u8fc7\u4ece\u6e90\u4ee3\u7801\u63a7\u5236\u4e2d\u68c0\u51fa\u4ee3\u7801\u7684\u9ed8\u8ba4\u60c5\u51b5\u3002</li> <li><code>skipStagesAfterUnstable</code>: \u4e00\u65e6\u6784\u5efa\u72b6\u6001\u53d8\u5f97<code>UNSTABLE</code>\uff0c\u8df3\u8fc7\u8be5\u9636\u6bb5\u3002</li> <li><code>checkoutToSubdirectory</code>: \u5728\u5de5\u4f5c\u7a7a\u95f4\u7684\u5b50\u76ee\u5f55\u4e2d\u81ea\u52a8\u5730\u6267\u884c\u6e90\u4ee3\u7801\u63a7\u5236\u68c0\u51fa\u3002</li> <li><code>timeout:</code> \u8bbe\u7f6e\u6d41\u6c34\u7ebf\u8fd0\u884c\u7684\u8d85\u65f6\u65f6\u95f4, \u5728\u6b64\u4e4b\u540e\uff0c<code>Jenkins</code>\u5c06\u4e2d\u6b62\u6d41\u6c34\u7ebf\u3002</li> <li> <p><code>retry</code>: \u5728\u5931\u8d25\u65f6, \u91cd\u65b0\u5c1d\u8bd5\u6574\u4e2a\u6d41\u6c34\u7ebf\u7684\u6307\u5b9a\u6b21\u6570\u3002</p> </li> <li> <p><code>timestamps</code> \u9884\u6d4b\u6240\u6709\u7531\u6d41\u6c34\u7ebf\u751f\u6210\u7684\u63a7\u5236\u53f0\u8f93\u51fa\uff0c\u4e0e\u8be5\u6d41\u6c34\u7ebf\u53d1\u51fa\u7684\u65f6\u95f4\u4e00\u81f4\u3002</p> </li> </ul> <pre><code>//\u6307\u5b9a\u4e00\u4e2a\u5c0f\u65f6\u7684\u5168\u5c40\u6267\u884c\u8d85\u65f6, \u5728\u6b64\u4e4b\u540e\uff0cJenkins\u5c06\u4e2d\u6b62\u6d41\u6c34\u7ebf\u8fd0\u884c\u3002\npipeline {\nagent any\noptions {\n    timeout(time: 1, unit: 'HOURS') \n}\nstages {\n    stage('Example') {\n        steps {\n            echo 'Hello World'\n        }\n    }\n}\n}\n</code></pre> <p><code>buildDiscarder</code>\uff1a</p> <p>\u4fdd\u5b58\u6700\u8fd1\u5386\u53f2\u6784\u5efa\u8bb0\u5f55\u7684\u6570\u91cf\u3002\u5f53<code>piepline</code>\u6267\u884c\u5b8c\u6210\u540e\uff0c\u4f1a\u5728\u786c\u76d8\u4e0a\u4fdd\u5b58\u5236\u54c1\u548c\u6784\u5efa\u6267\u884c\u65e5\u5fd7\uff0c\u5982\u679c\u957f\u65f6\u95f4\u4e0d\u6e05\u7406\u4f1a\u5360\u7528\u5927\u91cf\u7a7a\u95f4\uff0c\u8bbe\u7f6e\u6b64\u9009\u9879\u540e\u4f1a\u81ea\u52a8\u6e05\u7406\u3002\u6b64\u9009\u9879\u53ea\u80fd\u5728<code>piepline</code>\u4e0b\u7684<code>Options</code>\u4e2d\u4f7f\u7528\u3002\u793a\u4f8b\u5982\u4e0b\uff1a </p> <pre><code>options {\n    buildDiscarder(logRatator(numToKeepStr: '10'))\n}\n</code></pre> <p><code>checkoutToSubdirectory</code>: </p> <p><code>Jenkins</code>\u4ece\u7248\u672c\u63a7\u5236\u5e93\u62c9\u53d6\u6e90\u7801\u65f6\uff0c\u9ed8\u8ba4\u68c0\u51fa\u5230\u5de5\u4f5c\u7a7a\u95f4\u7684\u6839\u76ee\u5f55\u4e2d\uff0c\u6b64\u9009\u9879\u53ef\u4ee5\u6307\u5b9a\u68c0\u51fa\u5230\u5de5\u4f5c\u7a7a\u95f4\u7684\u5b50\u76ee\u5f55\u4e2d\u3002\u793a\u4f8b\u5982\u4e0b\uff1a </p> <pre><code>options {\n    checkoutToSubdirectory('subdir')\n}\n</code></pre> <p><code>disableConcurrentBuilds</code>\uff1a</p> <p>\u540c\u4e00\u4e2a<code>pipeline</code>, <code>Jenkins</code>\u9ed8\u8ba4\u662f\u53ef\u4ee5\u540c\u65f6\u6267\u884c\u591a\u6b21\u7684\uff0c\u6b64\u9009\u9879\u662f\u4e3a\u4e86\u7981\u6b62<code>pipeline</code>\u540c\u65f6\u6267\u884c\u3002 \u5728\u67d0\u4e9b<code>pipeline</code>\u5b58\u5728\u62a2\u5360\u8d44\u6e90\u6216\u8c03\u7528\u51b2\u7a81\u7684\u573a\u666f\u4e0b\uff0c\u6b64\u9009\u9879\u975e\u5e38\u6709\u7528\u3002 </p> <pre><code>options {\n    disableConcurrentBuilds()\n}\n</code></pre> <p><code>newContainerPerStage</code>\uff1a</p> <p>\u5f53<code>agent</code>\u4e3a<code>docker</code>\u6216<code>dockerfile</code>\u65f6\uff0c\u6307\u5b9a\u5728\u540c\u4e00\u4e2a<code>Jenkins</code>\u8282\u70b9\u4e0a\uff0c\u6bcf\u4e2a<code>stage</code>\u90fd\u5206\u522b\u8fd0\u884c\u5728\u4e00\u4e2a\u65b0\u7684\u5bb9\u5668\u4e2d\uff0c\u800c\u4e0d\u662f\u6240\u6709<code>stage</code>\u90fd\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u5bb9\u5668\u4e2d\u3002 </p> <pre><code>options {\n    newContainerPerStage()\n}\n</code></pre> <p><code>retry</code>\uff1a</p> <p>\u5f53\u53d1\u751f\u5931\u8d25\u65f6\u8fdb\u884c\u91cd\u8bd5\uff0c\u53ef\u4ee5\u6307\u5b9a\u6574\u4e2a<code>pipeline</code>\u7684\u91cd\u8bd5\u6b21\u6570\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e2a\u6b21\u6570\u662f\u6307\u603b\u6b21\u6570\uff0c\u5305\u62ec\u7b2c<code>1</code>\u6b21\u5931\u8d25\u3002\u4ee5\u4e0b\u4f8b\u5b50\u603b\u5171\u4f1a\u6267\u884c<code>4</code>\u6b21\u3002\u5f53\u4f7f\u7528<code>retry</code>\u9009\u9879\u65f6\uff0c <code>options</code>\u53ef\u4ee5\u88ab\u653e\u5728<code>stage</code>\u5757\u4e2d\u3002 </p> <pre><code>pipeline {\n    agent any\n    options {\n        retry(4)    \n    }\n\n    stages{\n    stage('build'){\n        steps{\n            echo 'ok'\n            error(\"emmm...\")\n            }\n        }   \n    }\n}\n</code></pre> <ul> <li><code>timeout</code>:</li> </ul> <p>\u5982\u679c<code>piepline</code>\u6267\u884c\u65f6\u95f4\u8fc7\u957f\u4e86\uff0c\u8d85\u51fa\u4e86\u6211\u4eec\u8bbe\u7f6e\u7684<code>timeout</code>\u65f6\u95f4\uff0c Jenkins \u5c06\u7ec8\u6b62<code>pipeline</code>. \u4ee5\u4e0b\u4f8b\u5b50\u4e2d\u4ee5\u5c0f\u65f6\u4e3a\u5355\u4f4d\uff0c\u8fd8\u53ef\u4ee5\u4ee5<code>SECONDS(\u79d2\uff09</code>\u3001<code>MINUTES(\u5206\u949f)</code>\u4e3a\u5355\u4f4d\u3002\u5f53\u4f7f\u7528timeout\u9009\u9879\u65f6\uff0coptions\u53ef\u4ee5\u88ab\u653e\u5728<code>stage</code>\u5757\u4e2d</p> <pre><code>options {\n    timeout(time: 10, unit\": 'HOURS'\n}\n</code></pre> <p>\u8bbe\u7f6e\u6b64\u9009\u9879\u540e\uff0c \u5f3a\u8feb\u56e2\u961f\u53bb\u5904\u7406\u6267\u884c\u65f6\u95f4\u8fc7\u957f\u7684<code>pipeline</code>,\u4ece\u800c\u4f18\u5316<code>pipeline</code>\u7684\u53cd\u9988\u5468\u671f\u3002\u901a\u5e38\u5c06<code>timeout</code>\u8bbe\u7f6e\u4e3a10\u5206\u949f\u5c31\u53ef\u4ee5\u4e86</p>"},{"location":"chap2/2chap2_declarative_pipeline/#1-5-3-pipeline","title":"1-5-3 \u53c2\u6570\u5316pipeline","text":"<p>\u53c2\u6570\u5316<code>pipeline</code>\u662f\u6307\u53ef\u4ee5\u901a\u8fc7\u4f20\u53c2\u6765\u51b3\u5b9a <code>pipeline</code>\u7684\u884c\u4e3a\u3002\u53c2\u6570\u5316\u8ba9\u5199<code>pipeline</code>\u5c31\u50cf\u5199\u51fd\u6570\uff0c \u800c\u51fd\u6570\u610f\u4e3a\u7740\u53ef\u91cd\u7528\uff0c\u66f4\u62bd\u8c61\u3002\u6240\u4ee5\uff0c\u901a\u5e38\u4f7f\u7528\u53c2\u6570\u5316<code>pipeline</code>\u6765\u5b9e\u73b0\u4e00\u4e9b\u901a\u7528\u7684pipeline</p> <p>\u4e3a\u6d41\u6c34\u7ebf\u8fd0\u884c\u65f6\u8bbe\u7f6e\u9879\u76ee\u76f8\u5173\u7684\u53c2\u6570</p> <ul> <li><code>string</code> \u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u53c2\u6570, \u4f8b\u5982:</li> </ul> <pre><code>parameters { string(name: 'DEPLOY_ENV', defaultValue: 'staging', description: '') }\n</code></pre> <ul> <li><code>booleanParam</code> \u65b9\u6cd5\u7528\u6765\u5b9a\u4e49\u4e00\u4e2a\u5e03\u5c14\u7c7b\u578b\u7684\u53c2\u6570<ul> <li><code>defaultValue</code> \u9ed8\u8ba4\u503c</li> <li><code>description</code>: \u53c2\u6570\u63cf\u8ff0\u4fe1\u606f</li> <li><code>name</code>: \u53c2\u6570\u540d</li> </ul> </li> </ul> <pre><code>parameters { booleanParam(name: 'DEBUG_BUILD', defaultValue: true, description: '') }\n</code></pre> <ul> <li><code>text</code> \u591a\u884c\u6587\u672c\u7c7b\u578b\uff0c\u6362\u884c\u4f7f\u7528<code>\\n</code> </li> </ul> <pre><code>parameters {\n    text(name, 'DEPLOY_TEXT, defaultValue: 'One\\nTwo\\nThree\\n', description: '') \n}\n</code></pre> <ul> <li><code>choice</code> \u9009\u62e9\u53c2\u6570\u7c7b\u578b\uff0c\u4f7f\u7528<code>\\n</code>\u6765\u5206\u9694\u591a\u4e2a\u9009\u9879\u3002 </li> </ul> <pre><code>parameters {\n    choice(name: 'CHOICES', choices: 'dev\\ntest\\nstaging', description: 'Please chose your env') \n}\n</code></pre> <ul> <li> <p><code>file</code>\uff0c\u6587\u4ef6\u7c7b\u578b\uff0c\u7528\u6237\u53ef\u4e0a\u4f20\u6587\u4ef6\u3002</p> </li> <li> <p><code>password</code>\uff0c\u5bc6\u7801\u7c7b\u578b\u3002  </p> </li> </ul> <pre><code>parameters { \n    password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'A secret password'\n}\n</code></pre> <ul> <li>\u591a\u53c2\u6570</li> </ul> <p>\u53c2\u6570\u5316\u7684<code>pipeline</code>\u4e0d\u53ef\u80fd\u53ea\u652f\u6301\u63a5\u6536\u4e00\u4e2a\u53c2\u6570,\u4ee5\u4e0b\u5c31\u662f\u4e3apipeline\u540c\u65f6\u5b9a\u4e49\u591a\u4e2a\u53c2\u6570\u7684\u4f8b\u5b50 </p> <pre><code>parameters { \n    booleanParam(name: 'DEBUG_BUILD', defaultValue: true, description: '') \n    password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'A secret password') \n    string(name: 'DEPLOY_ENV', defaultValue: 'staging', description: '') \n}\n</code></pre> <ul> <li>\u793a\u4f8b</li> </ul> <pre><code>pipeline {\nagent any\nparameters {\n    string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')\n}\nstages {\n    stage('Example') {\n        steps {\n            echo \"Hello ${params.PERSON}\"\n        }\n    }\n}\n}\n</code></pre>"},{"location":"chap2/2chap2_declarative_pipeline/#1-5-4-pipeline","title":"1-5-4 \u89e6\u53d1<code>pipeline</code>\u8be6\u89e3\uff1a","text":"<p>1.\u6784\u5efa\u89e6\u53d1\u5668</p> <ul> <li><code>cron</code> \u8ba1\u5212\u4efb\u52a1\u5b9a\u671f\u6267\u884c\u6784\u5efa\u3002</li> </ul> <pre><code>triggers { cron('H */4 * * 1-5') }\n</code></pre> <ul> <li><code>pollSCM</code> \u4e0e<code>cron</code>\u5b9a\u4e49\u7c7b\u4f3c\uff0c\u4f46\u662f\u7531<code>jenkins</code>\u5b9a\u671f\u68c0\u6d4b\u6e90\u7801\u53d8\u5316\u3002</li> </ul> <pre><code>triggers { pollSCM('H */4 * * 1-5') }\n</code></pre> <ul> <li><code>upstream</code> \u63a5\u53d7\u9017\u53f7\u5206\u9694\u7684\u5de5\u4f5c\u5b57\u7b26\u4e32\u548c\u9608\u503c\u3002 \u5f53\u5b57\u7b26\u4e32\u4e2d\u7684\u4efb\u4f55\u4f5c\u4e1a\u4ee5\u6700\u5c0f\u9608\u503c\u7ed3\u675f\u65f6\uff0c\u6d41\u6c34\u7ebf\u88ab\u91cd\u65b0\u89e6\u53d1\u3002</li> </ul> <pre><code>triggers { upstream(upstreamProjects: 'job1,job2', threshold: hudson.model.Result.SUCCESS) }\n</code></pre> <ul> <li>\u793a\u4f8b</li> </ul> <pre><code>pipeline {\nagent any\ntriggers {\n    cron('H */4 * * 1-5')\n}\nstages {\n    stage('Example') {\n        steps {\n            echo 'Hello World'\n        }\n    }\n}\n}\n</code></pre> <p>2.\u65f6\u95f4\u89e6\u53d1</p> <p>\u65f6\u95f4\u89e6\u53d1\u662f\u6307\u5b9a\u4e49\u4e00\u4e2a\u65f6\u95f4\uff0c\u65f6\u95f4\u5230\u4e86\u5c31\u89e6\u53d1<code>pipeline</code>\u6267\u884c\u3002 \u5728<code>Jenkins Pipeline</code>\u4e2d\u4f7f\u7528<code>trigger</code>\u6307\u4ee4\u6765\u5b9a\u4e49\u65f6\u95f4\u89e6\u53d1\u3002</p> <p><code>trigger</code>\u6307\u4ee4\u53ea\u80fd\u88ab\u5b9a\u4e49\u5728<code>pipeline</code>\u5757\u4e0b, <code>Jenkins</code>\u5185\u7f6e\u652f\u5f85<code>cron</code>\u3001 <code>pollSCM</code>\u3001<code>upstream</code>\u4e09\u79cd\u65b9\u5f0f\u51e0\u4ed6\u65b9\u5f0f\u53ef\u4ee5\u901a\u8fc7\u63d2\u4ef6\u6765\u5b9e\u73b0\u3002 </p> <ul> <li>\u5b9a\u65f6\u6267\u884c: cron</li> </ul> <p>\u5b9a\u65f6\u6267\u884c\u5c31\u50cf<code>cronjob</code>,\u4e00\u5230\u65f6\u95f4\u70b9\u5c31\u6267\u884c\u3002\u5b83\u7684\u4f7f\u7528\u573a\u666f\u901a\u5e38\u662f\u6267\u884c\u4e00\u4e9b\u5468\u671f\u6027\u7684<code>job</code>,\u5982\u6bcf\u591c\u6784\u5efa</p> <pre><code>pipeline { \n    agent any \n    triggers { \n        cron('0 0 * * *') \n    }\n    stages { \n        stage('Nightly build') { \n            steps { \n                echo \"Build every night\"\n            }\n        }\n    }\n}\n</code></pre> <p><code>Jenkins trigger cron</code>\u8bed\u6cd5\u91c7\u7528\u7684\u662f<code>UNIX cron</code>\u8bed\u6cd5\uff08\u6709\u4e9b\u7ec6\u5fae\u7684\u533a\u522b\uff09\u3002</p> <p>\u4e00\u6761<code>cron</code>\u5305\u542b5\u4e2a\u5b57\u6bb5\uff0c\u4f7f\u7528\u7a7a\u683c\u6216<code>Tab\u5206</code>\u9694\uff0c\u683c\u5f0f\u4e3a\uff1a<code>MINUTE</code>, <code>HOUR</code>, <code>DOM</code>, <code>MONTH</code>, <code>DOW</code>\u3002</p> <p>\u6bcf\u4e2a\u5b57\u6bb5\u7684\u542b\u4e49\u4e3a\uff1a</p> <ul> <li><code>MINUTE</code>\uff1a\u4e00\u5c0f\u65f6\u5185\u7684\u5206\u949f\uff0c\u53d6\u503c\u8303\u56f4\u4e3a<code>0\uff5e59</code></li> <li><code>HOUR</code>\uff1a\u4e00\u5929\u5185\u7684\u5c0f\u65f6\uff0c\u53d6\u503c\u8303\u56f4\u4e3a<code>0~23</code> </li> <li><code>DOM</code>\uff1a\u4e00\u4e2a\u6708\u7684\u67d0\u4e00\u5929\uff0c\u53d6\u503c\u8303\u56f4\u4e3a<code>1-31</code> </li> <li><code>MONTH</code>\uff1a\u6708\u4efd\uff0c\u53d6\u503c\u8303\u56f4\u4e3a<code>1~12</code>\u3002</li> <li><code>DOW</code>\uff1a\u661f\u671f\u51e0\uff0c\u53d6\u503c\u8303\u56f4\u4e3a<code>0~7</code>\u3002 <code>0</code>\u548c<code>7</code>\u4ee3\u8868\u661f\u671f\u5929\u3002 </li> </ul> <p>\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u7279\u6b8a\u5b57\u7b26\uff0c\u4e00\u6b21\u751f\u6307\u5b9a\u591a\u4e2a\u503c</p> <ul> <li><code>\uff0a</code>\uff1a\u5339\u914d\u6240\u6709\u7684\u503c </li> <li><code>M-N</code>\uff1a\u5339\u914dM\u5230N\u4e4b\u95f4\u7684\u503c\u3002 </li> <li><code>M-N/X</code> or <code>*/x</code>\uff1a\u6307\u5b9a\u5728<code>M</code>\u5230<code>N</code>\u8303\u56f4\u5185\uff0c\u4ee5<code>N</code>\u503c\u4e3a\u6b65\u957f\u3002</li> <li><code>A,B,....Z</code>\uff1a\u4f7f\u7528\u9017\u53f7\u679a\u4e3e\u591a\u4e2a\u503c </li> </ul> <p>\u5728\u4e00\u4e9b\u5927\u578b\u7ec4\u7ec7\u4e2d\uff0c\u4f1a\u540c\u65f6\u5b58\u5728\u5927\u91cf\u7684\u540c\u4e00\u65f6\u523b\u6267\u884c\u7684\u5b9a\u65f6\u4efb\u52a1\uff0c\u6bd4\u5982<code>N</code>\u4e2a\u534a\u591c\u96f6\u70b9\uff08<code>0 0 * * *</code>\u4e2d\uff09\u6267\u884c\u7684\u4efb\u52a1\u3002\u8fd9\u6837\u4f1a\u4ea7\u751f\u8d1f\u8f7d\u4e0d\u5747\u8861\u3002</p> <p>\u5728<code>Jenkins trigger cron</code>\u8bed\u6cd5\u4e2d\u4f7f\u7528<code>\"H\"</code>\u5b57\u7b26\u6765\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c<code>H</code>\u4ee3\u8868<code>hash</code>\u3002\u5bf9\u4e8e\u6ca1\u5fc5\u8981\u51c6\u786e\u5230\u96f6\u70b9<code>0</code>\u5206\u6267\u884c\u7684\u4efb\u52a1\uff0c<code>cron</code>\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a<code>H 0 * * *</code> , \u4ee3\u8868\u5728\u96f6\u70b9<code>0</code>\u5206\u81f3\u96f6\u70b9<code>59</code>\u5206\u4e4b\u95f4\u4efb\u4f55\u4e00\u4e2a\u65f6\u95f4\u70b9\u6267\u884c\u3002 </p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c<code>H</code>\u5e94\u7528\u5728<code>DOM\uff08\u4e00\u4e2a\u6708\u7684\u67d0\u4e00\u5929\uff09</code>\u5b57\u6bb5\u65f6\u4f1a\u6709\u4e0d\u51c6\u786e\u7684\u6e05\u51b5\uff0c\u56e0\u4e3a10\u6708\u670931\u5929\uff0c\u800c2\u6708\u5374\u662f28\u5929\u3002 </p> <p><code>Jenkins trigger cron</code>\u8fd8\u8bbe\u8ba1\u4e86\u4e00\u4e9b\u4eba\u6027\u5316\u7684\u522b\u540d\uff1a<code>@yearly</code>\u3001 <code>@annually</code>\u3001 <code>@monthly</code>\u3001 <code>@weekly</code>\u3001 <code>@daily</code>\u3001<code>\uff20 midnight</code>\u548c<code>\uff20hourly</code>\u3002\u4f8b\u5982\uff0c<code>@hourly</code>\u4e0e<code>H * * * *</code>\u76f8\u540c\uff0c\u4ee3\u8868\u4e00\u5c0f\u65f6\u5185\u7684\u4efb\u4f55\u65f6\u95f4 <code>@midnight</code>\u5b9e\u9645\u4e0a\u4ee3\u8868\u5728\u534a\u591c<code>12:00</code>\u5230\u51cc\u6668<code>2:59</code>\u4e4b\u95f4\u7684\u67d0\u4e2a\u65f6\u95f4\u3002\u5176\u4ed6\u522b\u540d\u5f88\u5c11\u6709\u5e94\u7528\u573a\u666f\u3002 </p> <ul> <li>\u8f6e\u8be2\u4ee3\u7801\u4ed3\u5e93\uff1apollSCM</li> </ul> <p>\u8f6e\u8be2\u4ee3\u7801\u4ed3\u5e93\u662f\u6307\u5b9a\u671f\u5230\u4ee3\u7801\u4ed3\u5e93\u8be2\u95ee\u4ee3\u7801\u662f\u5426\u6709\u53d8\u5316\uff0c\u5982\u679c\u6709\u53d8\u5316\u5c31\u6267\u884c\u3002\u6709\u8bfb\u8005\u4f1a\u95ee: \u90a3\u591a\u4e45\u8f6e\u8be2\u4e00\u6b21\uff1f\u7b14\u8005\u7684\u56de\u7b54\u662f\uff1a\u8d8a\u9891\u7e41\u8d8a\u597d\u3002\u56e0\u4e3a\u6784\u5efa\u7684\u95f4\u9694\u65f6\u95f4\u8d8a\u957f\uff0c\u5728\u4e00\u6b21\u6784\u5efa\u5185\u5c31\u53ef\u80fd \u4f1a\u5305\u542b\u591a\u6b21\u4ee3\u7801\u63d0\u4ea4\u3002\u5f53\u6784\u5efa\u5931\u8d25\u65f6\uff0c\u4f60\u65e0\u6cd5\u9a6c\u4e0a\u77e5\u9053\u662f\u54ea\u4e00\u6b21\u4ee3\u7801\u63d0\u4ea4\u5bfc\u81f4\u4e86\u6784\u5efa\u5931\u8d25\u3002</p> <pre><code>pipeline { \n    agent any \n    triggers { \n        // check every minute \n        pollSCM(`H/1 * * * *`) \n    } \n}\n</code></pre> <p>3.\u4e8b\u4ef6\u89e6\u53d1 </p> <p>\u4e8b\u4ef6\u89e6\u53d1\u5c31\u662f\u53d1\u751f\u4e86\u67d0\u4e2a\u4e8b\u4ef6\u5c31\u89e6\u53d1<code>pipeline</code>\u6267\u884c\u3002\u8fd9\u4e2a\u4e8b\u4ef6\u53ef\u4ee5\u662f\u4f60\u80fd\u60f3\u5230\u7684\u4efb\u4f55\u4e8b\u4ef6\u3002 \u6bd4\u5982\u624b\u52a8\u5728\u754c\u9762\u4e0a\u89e6\u53d1\u3001\u5176\u4ed6<code>job</code>\u4e3b\u52a8\u89e6\u53d1\u3001<code>HTTP API Webhook</code>\u89e6\u53d1\u7b49 </p> <p>\u7531\u4e0a\u6e38\u4efb\u52a1\u89e6\u53d1\uff1aupstream</p> <p>\u5f53<code>B</code>\u4efb\u52a1\u7684\u6267\u884c\u4f9d\u8d56<code>A</code>\u4efb\u52a1\u7684\u6267\u884c\u7ed3\u679c\u65f6\uff0c<code>A</code>\u5c31\u88ab\u79f0\u4e3a<code>B</code>\u7684\u4e0a\u6e38\u4efb\u52a1\u3002\u5728<code>Jenkins 2.22</code>\u53ca\u4ee5 \u4e0a\u7248\u672c\u4e2d\uff0c<code>trigger</code>\u6307\u4ee4\u5f00\u59cb\u652f\u6301<code>upstream</code>\u7c7b\u578b\u7684\u89e6\u53d1\u6761\u4ef6\u3002<code>upstream</code>\u7684\u4f5c\u7528\u5c31\u662f\u80fd\u8ba9<code>B plpeline</code>\u81ea\u884c\u51b3\u5b9a\u4f9d\u8d56\u54ea\u4e9b\u4e0a\u6e38\u4efb\u52a1\u3002\u793a\u4f8b\u5982\u4e0b </p> <pre><code>// jobl fil job2 #6kII45- \n\ntriggers { \n    upstream(upstreamProjects: 'job1,job2', threshold: hudson.model.Result.SUCCESS)\n}\n</code></pre> <p>\u5f53<code>upstreamProjects</code>\u53c2\u6570\u63a5\u6536\u591a\u4e2a\u4efb\u52a1\u65f6\uff0c\u4f7f\u7528, \u5206\u9694\u3002<code>threshold</code>\u53c2\u6570\u662f\u6307\u4e0a\u6e38\u4efb\u52a1\u7684\u6267\u884c\u7ed3\u679c\u662f\u4ec0\u4e48\u503c\u65f6\u89e6\u53d1\u3002<code>hudson.model.Result</code>\u662f\u4e00\u4e2a\u679a\u4e3e\u5305\u62ec\u4ee5\u4e0b\u503c\uff1a </p> <ul> <li><code>ABORTED</code>\uff1a\u4efb\u52a1\u88ab\u624b\u52a8\u4e2d\u6b62\u3002 </li> <li><code>FAILURE</code>\uff1a\u6784\u5efa\u5931\u8d25\u3002 </li> <li><code>SUCCESS</code>\uff1a\u6784\u5efa\u6210\u529f\u3002 </li> <li><code>UNSTABLE</code>\uff1a\u5b58\u5728\u4e00\u4e9b\u9519\u8bef\uff0c\u4f46\u4e0d\u81f3\u4e8e\u6784\u5efa\u5931\u8d25\u3002 </li> <li><code>NOT BUILT</code>\uff1a\u5728\u591a\u9636\u6bb5\u6784\u5efa\u65f6\uff0c\u524d\u9762\u9636\u6bb5\u7684\u95ee\u9898\u5bfc\u81f4\u540e\u9762\u9636\u6bb5\u65e0\u6cd5\u6267\u884c\u3002 </li> </ul> <p>\u6ce8\u610f\uff1a\u9700\u8981\u624b\u52a8\u89e6\u53d1\u4e00\u6b21\u4efb\u52a1\uff0c\u8ba9<code>Jenkins</code>\u52a0\u8f7d<code>pipeline</code>\u540e\uff0c<code>trigger</code>\u6307\u4ee4\u624d\u4f1a\u751f\u6548\u3002 </p> <p>\u7531\u53e6\u4e00\u4e2a<code>pipeline</code>\u4f20\u53c2\u5e76\u89e6\u53d1 </p> <p>\u65e2\u7136\u5b58\u5728\u53c2\u6570\u5316\u7684<code>pipeline</code>, \u90a3\u4e48\u5c31\u8868\u793a\u53ef\u4ee5\u5728\u4e00\u4e2a<code>pipeline</code>\u4e2d\"\u8c03\u7528\"\u53e6\u4e00\u4e2a<code>pipeline</code>\u3002 <code>Jenkins pipeline</code>\u4e2d\u53ef\u4ee5\u4f7f\u7528<code>build</code>\u6b65\u6387\u5b9e\u73b0\u6b64\u529f\u80fd\u3002<code>build</code>\u6b65\u9aa4\u662f<code>pipeline</code>\u63d2\u4ef6\u7684\u4e00\u4e2a\u7ec4\u4ef6\u6240\u4ee5\u4e0d\u9700\u8981\u53e6\u5916\u5b89\u88c5\u63d2\u4ef6\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528</p> <p><code>build</code>\u6b65\u9aa4\u5176\u5b9e\u4e5f\u662f\u4e00\u79cd\u89e6\u53d1<code>pipeline</code>\u6267\u884c\u7684\u65b9\u5f0f\u5b83\u4e0e<code>triggers</code>\u6307\u4ee4\u4e2d\u7684<code>upstream</code>\u65b9\u5f0f\u6709\u4e24\u4e2a\u533a\u522b\uff1a </p> <ul> <li>(1) <code>build</code>\u6b65\u9aa4\u662f\u7531\u4e0a\u6e38<code>pipeline</code>\u4f7f\u7528\u7684\uff0c\u800c<code>upstream</code>\u65b9\u5f0f\u662f\u7531\u4e0b\u6e38<code>pipeline</code>\u4f7f\u7528\u7684\u3002</li> <li>(2) <code>build</code>\u6b65\u9aa4\u662f\u53ef\u4ee5\u5e26\u53c2\u6570\u7684\uff0c\u800c<code>upstream</code>\u65b9\u5f0f\u53ea\u662f\u88ab\u52a8\u89e6\u53d1\uff0c\u5e76\u4e14\u6ca1\u6709\u5e26\u53c2\u6570\u3002 </li> </ul> <pre><code>steps { \n    build( \n        job:\"parameters-example\", \n        parameters: [ \n            booleanParam(name: 'userFlag', value: true) \n        ]\n    )\n}\n</code></pre> <p>\u6211\u4eec\u6765\u770b\u770b<code>build</code>\u6b65\u9aa4\u7684\u57fa\u672c\u7684\u4e24\u4e2a\u53c2\u6570\u3002</p> <ul> <li><code>job</code>\uff08\u5fc5\u586b\uff09\uff1a\u76ee\u6807<code>Jenkins</code>\u4efb\u52a1\u7684\u540d\u79f0\u3002 </li> <li><code>parameters</code>(\u53ef\u9009\uff09\u6570\u7ec4\u7c7b\u578b\uff0c\u4f20\u5165\u76ee\u6807<code>pipeline</code>\u7684\u53c2\u6570\u5217\u8868\u3002\u4f20\u53c2\u65b9\u6cd5\u4e0e\u5b9a\u53c2\u65b9\u6cd5\u7c7b\u4f3c\u3002 </li> </ul> <pre><code>parameters: [ \n    booleanParam(name: 'DEBUG_BUILD', value: true), \n    password(name: 'PASSWORD', value: 'prodSECRET'), \n    string(name: 'DEPLOY_ENV', value: 'prod'), \n    text(name: 'DEPLOY_TEXT', value: 'a\\nb\\nc\\n'), \n    string(name: 'CHOICES', value: 'dev') \n]\n</code></pre> <p>\u6211\u4eec\u6ce8\u610f\u5230<code>choice</code>\u7c7b\u578b\u7684\u53c2\u6570\u6ca1\u6709\u5bf9\u5e94\u7684\u4f20\u53c2\u65b9\u6cd5\uff0c\u800c\u662f\u4f7f\u7528<code>string</code>\u4f20\u53c2\u65b9\u6cd5\u4ee3\u66ff\u7684\u3002 </p> <p>\u9664\u6b64\u4e4b\u5916\uff0c<code>build</code>\u6b65\u9aa4\u8fd8\u652f\u6301\u5176\u4ed6\u4e09\u4e2a\u53c2\u6570 </p> <ul> <li><code>propagate</code>\uff08\u53ef\u9009\uff09\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u5982\u679c\u503c\u4e3a<code>true</code>\uff0c\u5219\u53ea\u6709\u5f53\u4e0b\u6e38<code>pipeline</code>\u7684\u6700\u7ec8\u6784\u5efa\u72b6\u6001\u4e3a <code>SUCCESS</code>\u65f6\uff0c\u4e0a\u6e38<code>pipeline</code>\u624d\u7b97\u6210\u529f\uff1b\u5982\u679c\u503c\u4e3a<code>false</code>\uff0c\u5219\u4e0d\u8bba\u4e0b\u6e38<code>pipeline</code>\u7684\u6700\u7ec8\u6784\u5efa\u72b6\u6001\u662f\u4ec0\u4e48\uff0c\u4e0a\u6e38<code>pipeline</code>\u90fd\u5ffd\u7565\u3002\u9ed8\u8ba4\u503c\u4e3a<code>true</code> </li> <li><code>quietPeriod</code>\uff08\u53ef\u9009\uff09\uff1a\u6574\u578b\uff0c\u89e6\u53d1\u4e0b\u6e38<code>pipeline</code>\u540e\uff0c\u4e0b\u6e38<code>pipeline</code>\u7b49\u5f85\u591a\u4e45\u6267\u884c\u3002\u5982\u679c\u4e0d\u8bbe\u7f6e\u6b64\u53c2\u6570\uff0c\u5219\u7b49\u5f85\u65f6\u957f\u7531\u4e0b\u6e38<code>pipeline</code>\u786e\u5b9a\u3002\u5355\u4f4d\u4e3a\u79d2\u3002 </li> <li><code>wait</code>(\u53ef\u9009\uff09\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u662f\u5426\u7b49\u5f85\u4e0b\u6e38<code>pipeline</code>\u6267\u884c\u5b8c\u6210\u3002\u9ed8\u8ba4\u503c\u4e3a<code>true</code> </li> </ul> <p>\u5982\u679c\u4f60\u4f7f\u7528\u4e86<code>folder</code>\u63d2\u4ef6\uff08<code>https://plugins.jenkins.io/clondbees-folder</code>)\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u6ce8\u610f<code>build</code> \u6b65\u9aa4\u7684<code>job</code>\u53c2\u6570\u7684\u5199\u6cd5\u4e86\u3002 </p> <p>\u4f7f\u7528<code>Folder</code>\u63d2\u4ef6\uff0c\u53ef\u4ee5\u8ba9\u6211\u4eec\u50cf\u7ba1\u7406\u6587\u4ef6\u5939\u4e0b\u7684\u6587\u4ef6\u4e00\u6837\u6765\u7ba1\u7406<code>Jenkins</code>\u9879\u76ee\u3002 \u6211\u4eec\u7684<code>Jenkins</code> \u9879\u76ee\u53ef\u4ee5\u521b\u5efa\u5728\u8fd9\u4e9b\u6587\u4ef6\u5939\u4e0b\u3002\u5982\u679c\u65e5\u6807pipeline\u4e0e\u6e90pipeline\u5728\u540c\u4e00\u4e2a\u76ee\u5f55\u4e0b\u5219\u53ee\u4ee5\u76f4\u63a5\u4f7f \u7528\u540d\u79f0\uff1b\u5982\u679c\u4e0d\u5728\u540c\u4e00\u4e2a\u76ee\u5f55\u4e0b\uff0c\u5219\u9700\u8981\u6307\u5b9a\u76f8\u5bf9\u8def\u5f84\uff0c\u5982<code>sister-folder/downstream</code>,\u6216\u8005\u6307\u5b9a\u7edd\u5bf9\u8def\u5f84\uff0c\u5982<code>top-level-folder/nested-folder/dowsstream</code>\u3002</p> <p>\u83b7\u53d6\u4e0a\u6e38<code>pipeline</code>\u7684\u4fe1\u606f</p> <p>\u9057\u61be\u7684\u662f\uff0c\u4e0a\u6e38<code>pipeline</code>\u89e6\u53d1\u4e0b\u6e38<code>pipeline</code>\u65f6\uff0c\u5e76\u6ca1\u6709\u81ea\u52a8\u5e26\u4e0a\u81ea\u8eab\u7684\u4fe1\u606f\u3002\u6240\u4ee5\uff0c\u5f53\u4e0b\u6e38 <code>pipeline</code>\u9700\u8981\u4f7f\u7528\u4e0a\u6e38<code>pipeline</code>\u7684\u4fe1\u606f\u65f6\uff0c\u4e0a\u6e38<code>pipeline</code>\u4fe1\u606f\u5c31\u8981\u4ee5\u53c2\u6570\u7684\u65b9\u5f0f\u4f20\u7ed9\u4e0b\u6e38<code>pipeline</code>\u3002 \u6bd4\u5982\u5728\u4e0a\u6e38<code>pipeline</code>\u4e2d\u8c03\u7528\u4e0b\u6e38<code>pipeline</code>\u65f6\uff0c\u53ef\u4ee5\u91c7\u7528\u4ee5\u4e0b\u505a\u6cd5\u3002 </p> <pre><code>build job: 'all-in-one-deploy' , parameters: [ \n    string(name: 'DEPLOY_ENV', value: '${deploy_env}\"), \n    string(name: 'triggerJobName', value: \"${env.JOB_NAME}\"),\n    string(name: 'triggerJobBuildNumber', value: ${env.BUILD_NUMBER}\") \n] \n</code></pre> <p>4. \u4f7f\u7528<code>Conditonal BuildStep</code>\u63d2\u4ef6\u5904\u7406\u590d\u6742\u7684\u5224\u65ad\u903b\u8f91: </p> <p>\u8fd9\u6837\u5199\u8d77\u6765\u5f88\u4e0d\u4f18\u96c5<code>Conditional BuildStep</code>\u63d2\u4ef6,\u53ef\u4ee5\u8ba9\u6211\u4eec\u50cf\u4f7f\u7528<code>when</code>\u6307\u4ee4\u6837\u8fdb\u884c\u6761\u4ef6\u5224\u65ad\u4ee5\u4e0b\u4ee3\u7801\u5c31\u662f\u5b89\u88c5<code>Conditional BuildStep</code>\u63d2\u4ef6\u7684\u5199\u6cd5</p> <pre><code>pipeline {\n    agent any \n    parameters {\n        choice(name: 'CHOICES', choices: 'dev\\ntest\\nstaging', description: 'Please choose your env') \n    }\n\n    stages { \n        stage(\"deploy test\") { \n            when { \n                expression { return params.CHOICES == 'test' }\n            }\n            steps { \n                echo \"deploy to test\"\n            }\n        } \n        stage(\"deploy staging\") { \n            when { \n                expression { return params.CHOICES == 'staging' }\n            }\n            steps { \n                echo \"deploy to staging\" \n            }\n        }\n    }\n}\n</code></pre> <pre><code>[Pipeline] {\n[Pipeline] stage\n[Pipeline] { (deploy test)\nStage \"deploy test\" skipped due to when conditional\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] stage\n[Pipeline] { (deploy staging)\n[Pipeline] echo\ndeploy to staging\n</code></pre> <p>\u73b0\u5b9e\u4e2d\uff0c\u6211\u4eec\u4f1a\u9762\u5bf9\u66f4\u590d\u6742\u7684\u5224\u65ad\u6761\u4ef6\u3002\u800c<code>expression</code>\u8868\u8fbe\u5f0f\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a<code>Groovy</code>\u4ee3 \u7801\u5757\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u8868\u8fbe\u5f0f\u7684\u7075\u6d3b\u80dc\u3002\u4ee5\u4e0b\u662f\u6bd4\u8f83\u5e38\u7528\u7684\u4f8b\u5b50\u3002</p> <ul> <li>\u6216\u903b\u8f91 </li> </ul> <pre><code>when { \n    // A or B \n    expression {  return A || B } \n} \n</code></pre> <ul> <li>\u4e0e\u903b\u8f91 </li> </ul> <pre><code>when { \n    // A or B \n    expression {  return A &amp;&amp; B } \n} \n</code></pre> <ul> <li>\u4ece\u6587\u4ef6\u4e2d\u53d6\u503c</li> </ul> <pre><code>when { \n    expression { return readFile('pom.xml' ).contains('mycomponent') } \n}\n</code></pre> <ul> <li>\u6b63\u5219\u8868\u8fbe\u5f0f</li> </ul> <pre><code>when { \n    expression { return token ==~ /(?i)(Y|YES|T|TRUE|ON|RUN)/}\n}\n</code></pre> <p>5. \u4f7f\u7528<code>Generic Webhook Trigger</code>\u63d2\u4ef6\u5b9e\u73b0\u89e6\u53d1</p> <p>\u5b89<code>\u88c5Generic Webhook Trigger</code>\u63d2\u4ef6\uff08\u4e0b\u6587\u4f7f\u7528<code>GWT</code>\u7b80\u79f0\uff09\u540e\uff0c<code>Jenkins</code>\u4f1a\u66b4\u9732\u4e00\u4e2aAPI: <code>&lt;JENKINS_URL&gt;/generic-webhook-trigger/invoke</code>\uff0c\u5373\u7531<code>GWT</code>\u63d2\u4ef6\u6765\u5904\u7406\u6b64<code>API</code>\u7684\u8bf7\u6c42\u3002 \u5982\u4f55\u5904\u7406\u5462\uff1f<code>GWT</code>\u63d2\u4ef6\u63a5\u6536\u5230<code>JSON</code>\u6216<code>XML</code>\u7684<code>HTTP POST</code>\u8bf7\u6c42\u540e\uff0c\u6839\u636e\u6211\u4eec\u914d\u7f6e\u7684\u89c4\u5219\u51b3\u5b9a\u89e6\u53d1\u54ea\u4e2a<code>Jenkins</code>\u9879\u76ee\u3002\u57fa\u672c\u539f\u7406\u5c31\u8fd9\u4e48\u7b80\u5355\u3002\u4e0b\u9762\u6211\u4eec\u5148\u611f\u53d7\u4e00\u4e0b\uff0c\u7136\u540e\u518d\u8be6\u7ec6\u4ecb\u7ecd<code>GWT</code>\u5404\u53c2\u6570\u7684\u542b\u4e49\u3002 </p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u666e\u901a\u7684<code>pipeline\u9879</code>\u76ee\u3002\u4ee3\u7801\u5982\u4e0b\uff1a </p> <pre><code>pipeline { \n    agent any \n    triggers { \n        GenericTrigger(\n            genericVariables: [ \n                [key: 'ref', value: '$.ref']\n            ],\n            token: 'secret',\n            causeString: 'Triggered on $ref',\n            printContributedVariables: true,\n            printPostContent: true\n        )\n    }\n    stages { \n        stage('Some step')  { \n            steps { \n            sh \"echo $ref\"\n            sh \"printenv\"\n        }\n    }\n  }\n} \n</code></pre> <p>\u6ce8\u610f\uff1a\u5728\u521b\u5efa\u5b8c\u6210\u540e\uff0c\u9700\u8981\u624b\u52a8\u8fd0\u884c\u4e00\u6b21\uff0c\u8fd9\u6837<code>pipeline</code>\u7684\u89e6\u53d1\u6761\u4ef6\u624d\u4f1a\u751f\u6548\u3002 \u7136\u540e\u6211\u4eec\u53d1\u8d77\u4e00\u6b21<code>HTTP POST</code>\u8bf7\u6c42.</p> <pre><code>curl -X POST -H \"Content-Type: application/json\" -d '{\"ref\": \"refs/heads/master\"}' -vs http://192.168.33.11:8080/generic-webhook-trigger/invoke?token=secret\n</code></pre> <pre><code>...\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/&gt;\n&lt;title&gt;Error 403 No valid crumb was included in the request&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;&lt;h2&gt;HTTP ERROR 403 No valid crumb was included in the request&lt;/h2&gt;\n&lt;table&gt;\n&lt;tr&gt;&lt;th&gt;URI:&lt;/th&gt;&lt;td&gt;/jenkins/generic-webhook-trigger/invoke&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;th&gt;STATUS:&lt;/th&gt;&lt;td&gt;403&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;th&gt;MESSAGE:&lt;/th&gt;&lt;td&gt;No valid crumb was included in the request&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;th&gt;SERVLET:&lt;/th&gt;&lt;td&gt;Stapler&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;\n&lt;hr&gt;&lt;a href=\"http://eclipse.org/jetty\"&gt;Powered by Jetty:// 9.4.27.v20200227&lt;/a&gt;&lt;hr/&gt;.\n...\n</code></pre> <p>\u6211\u4eec\u9700\u8981<code>disbale CSRF</code>,  open <code>\"Manage Jenkins\" / \"Script Console\"</code></p> <pre><code>import jenkins.model.Jenkins\ndef instance = Jenkins.instance\ninstance.setCrumbIssuer(null)\n</code></pre> <p>It should be enabled afterwards again by setting to the Default CrumbIssuer again </p> <pre><code>import hudson.security.csrf.DefaultCrumbIssuer\nimport jenkins.model.Jenkins\n\ndef instance = Jenkins.instance\ninstance.setCrumbIssuer(new DefaultCrumbIssuer(true))\ninstance.save()\n</code></pre> <pre><code>curl -X POST -H \"Content-Type: application/json\" -d '{\"ref\": \"refs/heads/master\"}' -vs http://192.168.33.11:8080/generic-webhook-trigger/invoke?token=secret\n</code></pre> <p>\u65e5\u5fd7\u5982\u4e0b</p> <pre><code>Triggered on refs/heads/master\nRunning in Durability level: MAX_SURVIVABILITY\n[Pipeline] Start of Pipeline\nGenericWebhookEnvironmentContributor\n Received:\n\n{\"ref\": \"refs/heads/master\"}\n\n\nContributing variables:\n\n    ref = refs/heads/master\n\n\n[Pipeline] node\nRunning on Jenkins in /var/jenkins_home/workspace/Chapter2-8webhook\n[Pipeline] {\n[Pipeline] stage\n[Pipeline] { (Some step)\n[Pipeline] sh\n+ echo refs/heads/master\nrefs/heads/master\n[Pipeline] sh\n+ printenv\nJAVA_URL_VERSION=8u242b08\n...\n</code></pre> <p><code>Generi Trigger</code>\u89e6\u53d1\u6761\u4ef6\u7531<code>GWT</code>\u63d2\u4ef6\u63d0\u4f9b\u3002\u6b64\u89e6\u53d1\u6761\u4ef6\u53ef\u4ee5\u8bf4\u662f<code>GWT</code>\u7684\u6240\u6709\u5185\u5bb9\u3002 </p> <p>\u7b14\u8005\u5c06<code>GenericTrigger</code>\u89e6\u53d1\u6761\u4ef6\u5206\u4e3a<code>5</code>\u90e8\u5206\uff0c\u8fd9\u6837\u66f4\u6613\u4e8e\u7406\u89e3\u5404\u53c2\u6570\u7684\u4f5c\u7528\u3002</p> <ul> <li>\u4ece<code>HTTP POST</code>\u8bf7\u6c42\u4e2d\u63d0\u53d6\u53c2\u6570\u503c\u3002</li> <li><code>token</code>,<code>GWT</code>\u63d2\u4ef6\u7528\u4e8e\u6807\u8bc6<code>Jenkins</code>\u9879\u76ee\u7684\u552f\u4e00\u6027\u3002 </li> <li>\u6839\u636e\u8bf7\u6c42\u53c2\u6570\u503c\u5224\u65ad\u662f\u5426\u89e6\u53d1<code>Jenkins</code>\u9879\u76ee\u7684\u6267\u884c\u3002 </li> <li>\u65e5\u5fd7\u6253\u5370\u63a7\u5236\u3002 </li> <li> <p><code>Webhook</code>\u54cd\u5e94\u63a7\u5236\u3002 </p> </li> <li> <p>\u4ece<code>Webhook</code>\u8bf7\u6c42\u4e2d\u6349\u53d6\u53c2\u6570\u503c</p> </li> </ul> <p>\u4e00\u4e2a<code>HTTP POST</code>\u8bf7\u6c42\u53ef\u4ee5\u4ece\u4e09\u4e2a\u7ef4\u5ea6\u63d0\u53d6\u53c2\u6570\u5373<code>POST body</code>\u3001<code>URL</code>\u53c2\u6570\u548c<code>header</code>\u3002<code>GWT</code> \u63d2\u4ef6\u63d0\u4f9b\u4e86\u4e09\u4e2a\u53c2\u6570\u5206\u522b\u5bf9\u8fd9\u4e0b\u4e2a\u7ef4\u5ea6\u7684\u6570\u636e\u8fdb\u884c\u63d0\u53d6 </p> <p>1.<code>genericVariables</code>:\u63d0\u53d6<code>POST body</code>\u4e2d\u7684\u53c2\u6570\u3002 </p> <pre><code>genericVariables: [ \n    [key: 'ref', value: '$.ref', \n    [key: 'before', \n    value: '$before', \n    expressionType: 'JSONPath', \n    regexprFiter: ' ',\n    defaultValue: ' '\n    ]\n]\n</code></pre> <ul> <li><code>value</code>: <code>JSONPath</code>\u8868\u8fbe\u5f0f\u6216\u8005<code>XPath</code>\u8868\u8fbe\u5f0f\u53d6\u51b3\u4e8e<code>expressionType</code>\u53c2\u6570\u503c\uff0c\u7528\u4e8e\u4ece<code>POST body</code> \u4e2d\u63d0\u53d6\u503c</li> <li><code>key</code>\uff1a\u4ece<code>POST body</code>\u4e2d\u63d0\u53d6\u51fa\u7684\u503c\u7684\u65b0\u53d8\u91cf\uff0c\u53ef\u7528\u4e8e<code>pipeline</code>\u5176\u4ed6\u6b65\u9aa4\u3002 </li> <li><code>expressionType:</code> \u53ef\u9009 <code>value</code>\u7684\u8868\u8fbe\u5f0f\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3a<code>JSONPath</code>\u3002\u5f53\u8bf7\u6c42\u4e3a<code>XML</code>\u5185\u5bb9\u65f6\uff0c\u5fc5\u987b\u6307\u5b9a<code>XPath</code>\u503c\u3002 </li> <li><code>defaultValue</code>\uff1a\u53ef\u9009\uff0c\u5f53\u63d0\u53d6\u4e0d\u5230\u503c\uff0c\u4e14<code>defaultValue</code>\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u5219\u4f7f\u7528<code>defaultValue</code>\u4f5c\u4e3a\u8fd4\u56de\u503c </li> <li><code>regexpFilter</code>\uff1a\u53ef\u9009\uff0c\u8fc7\u6ee4\u8868\u8fbe\u5f0f\uff0c\u5bf9\u63d0\u53d6\u51fa\u6765\u7684\u4ec7\u8fdb\u884c\u8fc7\u6ee4\u3002<code>regexpFilter</code>\u505a\u7684\u4e8b\u60c5\u5176\u5b9e\u5c31\u662f <code>string.replaceAll(regexpFilter,\" \");</code>\u3002<code>string</code>\u662f\u4ece<code>HTTP</code>\u8bf7\u6c42\u4e2d\u63d0\u53d6\u51fa\u6765\u7684\u503c\u3002 </li> </ul> <p>2.<code>genericRequestVariables</code>\uff1a\u4ece<code>URL</code>\u53c2\u6570\u4e2d\u63d0\u53d6\u503c\u3002 </p> <pre><code>genericRequestVariables: [ \n    [key: 'requestWithNumber', regexpFilter: '[^0-9]'], \n    [key: 'requestWithString', regexpFilter: ''] \n] \n</code></pre> <p>3.<code>genericHeaderVariables</code>\uff1a\u4ece<code>HTTP header</code>\u4e2d\u63d0\u53d6\u503c\u3002 </p> <pre><code>genericHeaderVariables: [ \n    [key: headerWithNumber', regexpFilter: '[^0-9]'], \n    [key: 'rheaderWithString', regexpFilter: ' '] \n] \n</code></pre> <p><code>genericHeaderVariables</code>\u7684\u7528\u6cd5\u4e0e<code>genericRequestVariables</code>\u4e00\u6837\uff0c\u533a\u53e6\u662f\u5b83\u662f\u4ece<code>HTTP header</code>\u4e2d\u63d0\u53d6\u503c\u7684\u3002 </p> <p>\u89e6\u53d1\u5177\u4f53\u67d0\u4e2a<code>Jenkins</code>\u9879\u76ee</p> <p>\u6211\u4eec\u770b\u5230<code>GenericTrigger</code>\u65b9\u6cd5\u6709\u4e00\u4e2a<code>token</code>\u53c2\u6570\u3002 </p> <pre><code>triggers { \n    GenericTrigger( \n        token: 'secret',\n    )\n}\n</code></pre> <p><code>token</code>\u53c2\u6570\u7684\u4f5c\u7528\u662f\u6807\u8bc6\u4e00\u4e2a<code>pipeline</code>,\u5728<code>Jenkins</code>\u4e2d\u7684\u552f\u4e00\u6027\uff08\u5f53\u7136\uff0c\u6ca1\u6709\u4eba\u963b\u6b62\u4f60\u8ba9\u6240\u6709\u7684 <code>pipeline</code>\u4f7f\u7528\u540c\u4e00\u4e2atoken)\u3002\u4e3a\u4ec0\u4e48\u9700\u8981\u8fd9\u4e2a\u53c2\u6570\u5462\uff1f\u8fd9\u8981\u4ece<code>GWT</code>\u63d2\u4ef6\u7684\u539f\u7406\u8bf4\u8d77 </p> <p>\u5f53<code>Jenkins</code>\u63a5\u6536\u5230<code>genenic-webhook-trigger/invoke</code>\u63a5\u53e3\u7684\u8bf7\u6c42\u65f6\uff0c\u4f1a\u5c06\u8bf7\u6c42\u4ee3\u7406\u7ed9<code>GWT</code> \u63d2\u4ef6\u5904\u7406\u3002</p> <p><code>GWT</code>\u63d2\u4ef6\u5185\u90e8\u4f1a\u4ece<code>Jenkins</code>\u5b9e\u4f8b\u5bf9\u8c61\u4e2d\u53d6\u51fa\u6240\u6709\u7684\u53c2\u6570\u5316<code>Jenkins</code>\u9879\u76ee\uff0c\u5305\u62ec<code>pipeline</code>, \u7136\u540e\u8fdb\u884c\u904d\u5386\u3002\u5982\u679c\u5728\u53c2\u6570\u5316\u9879\u76ee\u4e2d<code>GenericTrigger</code>\u914d\u7f6e\u7684<code>token</code>\u7684\u503c\u4e0e<code>Webhook</code>\u8bf7\u6c42\u65f6\u7684<code>token</code> \u7684\u503c\u4e00\u81f4\uff0c\u5219\u89e6\u53d1\u6b64\u53c2\u6570\u5316\u9879\u65e5\u3002 </p> <p>\u5982\u679c\u591a\u4e2a\u53c2\u6570\u5316\u9879\u76ee\u7684<code>token</code>\u503c\u4e00\u6837\uff0c\u5219\u4ed6\u4eec\u90fd\u4f1a\u88ab\u89e6\u53d1\u3002 </p> <p>\u5c0f\u6280\u5de7\uff1a<code>pipeline</code>\u7684<code>token</code>\u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3a<code>Jenkins</code>\u7684\u9879\u76ee\u540d\u3002\u6bd4\u5982\uff1a </p> <pre><code>triggers { \n    GenericTrigger( \n    // ... \n    token: env.JOB_NAME, \n    // ...\n    )\n} \n</code></pre> <p>\u6839\u636e\u8bf7\u6c42\u53c2\u6570\u503c\u5224\u65ad\u662f\u5426\u89e6\u53d1<code>Jenkins</code>\u9879\u76ee\u6267\u884c </p> <p><code>GWT</code>\u5e76\u4e0d\u53ea\u662f\u6839\u636e<code>token</code>\u503c\u6765\u5224\u65ad\u662f\u5426\u89e6\u53d1\uff0c\u8fd8\u53ef\u4ee5\u6839\u636e\u6211\u4eec\u63d0\u53d6\u51fa\u7684\u503c\u8fdb\u884c\u5224\u65ad\u3002\u5982\u4e0b\uff1a </p> <pre><code>GenericTrigger( \n    genericVariables: [ \n        [key: 'refValue', value: '$.ref']\n    ], \n    token: env.JOB_NAME, \n\n    regexpFilterText: '$refValue', \n    regegpFilterExpresston: 'refs/heads/(master|dev)' \n</code></pre> <ul> <li><code>regexpFi!terText:</code>\u9700\u8981\u8fdb\u884c\u5339\u914d\u7684<code>key</code>\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4ece<code>POST body</code>\u4e2d\u63d0\u53d6\u51fa\u7684<code>refValue</code> \u53d8\u91cf\u503c\u3002 </li> <li><code>regexpFilterExpression</code>\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 </li> </ul> <p>\u5982\u679c<code>regexpFilterText</code>\u53c2\u6570\u7684\u503c\u7b26\u5408<code>regexpFilterExpressnon</code>\u53c2\u6570\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5219\u89e6\u53d1\u6267\u884c\u3002 </p> <p>\u63a7\u5236\u6253\u5370\u5185\u5bb9</p> <p>\u6253\u5370\u65e5\u5fd7\u6709\u52a9\u4e8e\u8c03\u8bd5\u3002GWT\u63d2\u4ef6\u63d0\u4f9b\u4e86\u4e09\u4e2a\u53c2\u6570\u3002 </p> <ul> <li><code>printPostContent</code>\uff1a\u5e03\u5c14\u503c\uff0c \u5c06<code>Webhook</code>\u8bf7\u6c42\u4fe1\u606f\u6253\u5370\u5230\u65e5\u5fd7\u4e0a\u3002</li> <li><code>printContributedVariables</code>: \u5e03\u5c14\u503c\uff0c\u5c06\u63d0\u53d6\u540e\u7684\u53d8\u91cf\u540d\u53ca\u53d8\u91cf\u503c\u6253\u5370\u51fa\u6765\u3002\uff0c</li> <li><code>causeString</code>\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u89e6\u53d1\u539f\u56e0\uff0c\u53ef\u4ee5\u76f4\u63a5\u5f15\u7528\u63d0\u53d6\u540e\u7684\u53d8\u91cf\uff0c <code>causeString</code>\uff1a<code>Triggered on $msg</code>\u3002 </li> </ul> <p>\u63a7\u5236\u54cd\u5e94 </p> <ul> <li><code>silentResponse</code>\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u5728\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u5f53<code>Webhook</code>\u8bf7\u6c42\u6210\u529f\u540e\uff0c<code>GWT</code>\u63d2\u4ef6\u4f1a\u8fd4\u56de<code>HTTP 200</code>\u72b6\u6001\u7801\u548c\u89e6\u53d1\u7ed3\u679c\u7ed9\u8c03\u7528\u65b9\u3002\u4f46\u662f\u5f53<code>silentResponse</code>\u8bbe\u7f6e\u4e3a<code>true</code>\u65f6\uff0c\u5c31\u53ea\u8fd4\u56de<code>HTTP 200</code> \u72b6\u6001\u7801,\u4e0d\u8fd4\u56de\u89e6\u53d1\u7ed3\u679c\u3002 </li> </ul>"},{"location":"chap2/2chap2_declarative_pipeline/#1-5-5-tool","title":"1-5-5 tool","text":"<p>\u83b7\u53d6\u901a\u8fc7\u81ea\u52a8\u5b89\u88c5\u6216\u624b\u52a8\u653e\u7f6e\u5de5\u5177\u7684\u73af\u5883\u53d8\u91cf\u3002\u652f\u6301<code>maven/jdk/gradle</code>\u3002\u5de5\u5177\u7684\u540d\u79f0\u5fc5\u987b\u5728<code>\u7cfb\u7edf\u8bbe\u7f6e-&gt;\u5168\u5c40\u5de5\u5177\u914d\u7f6e\u4e2d\u5b9a\u4e49</code>\u3002</p> <p>\u793a\u4f8b:</p> <pre><code>pipeline {\n    agent any\n    tools {\n        maven 'apache-maven-3.0.1' \n    }\n    stages {\n        stage('Example') {\n            steps {\n                sh 'mvn --version'\n            }\n        }\n    }\n}\n</code></pre> <p>Or </p> <p>Global Tool Configuration -&gt; Maven</p> <p></p> <p>\u5728<code>Agent</code>\u4e0a\u9762\u5b89\u88c5\u6700\u65b0\u7684<code>maven</code></p> <pre><code>https://linuxize.com/post/how-to-install-apache-maven-on-centos-7/\nwget https://www-us.apache.org/dist/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz -P /tmp\nsudo tar xf /tmp/apache-maven-3.6.3-bin.tar.gz -C /opt\nsudo ln -s /opt/apache-maven-3.6.3 /opt/maven\nsudo vim /etc/profile.d/maven.sh\n\nexport JAVA_HOME=/usr/lib/jvm/jre-openjdk\nexport M2_HOME=/opt/maven\nexport MAVEN_HOME=/opt/maven\nexport PATH=${M2_HOME}/bin:${PATH}\n\nsudo chmod +x /etc/profile.d/maven.sh\n\nsource /etc/profile.d/maven.sh\n</code></pre> <pre><code>$ mvn -version\nApache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)\nMaven home: /opt/maven\nJava version: 1.8.0_252, vendor: Oracle Corporation, runtime: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.252.b09-2.el7_8.x86_64/jre\nDefault locale: en_US, platform encoding: UTF-8\nOS name: \"linux\", version: \"3.10.0-957.12.2.el7.x86_64\", arch: \"amd64\", family: \"unix\"\n\n$ whereis mvn\nmvn: /opt/apache-maven-3.6.3/bin/mvn.cmd /opt/apache-maven-3.6.3/bin/mvn\n</code></pre> <pre><code>stage('tools') {\n        steps {\n\n            mvnHome = tool \"m2\"\n            println(mvnHome)\n\n            sh \"${mvnHome}/bin/mvn --version\"\n        }\n    }\n</code></pre> <p></p>"},{"location":"chap2/2chap2_declarative_pipeline/#1-5-6-input","title":"1-5-6 input","text":"<p>\u6267\u884c<code>input</code>\u6b65\u9aa4\u4f1a\u6682\u505c<code>pipeline</code>\uff0c\u76f4\u5230\u7528\u6237\u8f93\u5165\u53c2\u6570\u3002\u8fd9\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u53c2\u6570\u5316<code>pipeline</code>\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u53ef\u4ee5\u5229\u7528<code>Input</code>\u6b65\u9aa4\u5b9e\u73b0\u4ee5\u4e0b\u4e24\u79cd\u573a\u666f\uff1a </p> <ul> <li>(1)\u5b9e\u73b0\u7b80\u6613\u7684\u5ba1\u6279\u6d41\u7a0b\u3002\u4f8b\u5982\uff0c<code>pipeline</code>\u6682\u505c\u5728\u90e8\u7f72\u524d\u7684\u9636\u6bb5\uff0c\u7531\u8d1f\u8d23\u4eba\u70b9\u51fb\u786e\u8ba4\u540e\uff0c\u624d\u80fd\u90e8\u7f72 </li> <li>(2)\u5b9e\u73b0\u624b\u52a8\u6d4b\u8bd5\u9636\u6bb5\u3002\u5728<code>pipeline</code>\u4e2d\u589e\u52a0\u4e00\u4e2a\u624b\u52a8\u6d4b\u8bd5\u9636\u6bb5\uff0c\u8be5\u9636\u6bb5\u4e2d\u53ea\u6709\u4e00\u4e2a<code>input</code>\u6b65\u9aa4\uff0c\u5f53\u624b\u52a8\u6d4b\u8bd5\u901a\u8fc7\u540e\uff0c\u6d4b\u8bd5\u4eba\u5458\u624d\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a<code>Input</code>\u6b65\u9aa4\u3002 </li> </ul> <pre><code>pipeline { \n    agent any \n    stages { \n        stage('deploy') { \n            steps { \n                input message: \"Deploy or terminate\" \n            } \n        }\n    }\n}\n</code></pre> <p></p> <pre><code>[Pipeline] input\nDeploy or terminate\nProceed or Abort\n[Pipeline] }\n[Pipeline] // stage\n</code></pre> <p>Input \u6b65\u9aa4\u7684\u590d\u6742\u7528\u6cd5</p> <pre><code>def approvalMap \n\npipeline { \n    agent any \n    stages { \n        stage('pre deploy') { \n            steps { \n                script { \n                    approvalMap = input( \n                        message: 'Ready to deploy to which env?' ,\n                        ok: 'ok', \n                        parameters: [ \n                            choice(choices: 'dev\\ntest\\nprod', description: 'Deploy to which Env? ', name: 'ENV'),\n                            string(defaultValue: '', description: '', name: 'myparam') \n                        ], \n                        submitter: 'admin,admin2,releaseGroup', \n                        submitterParameter: 'APPROVER' \n                    )\n                }\n            }\n        }\n        stage('deploy') { \n            steps { \n                echo \"APPROVER is ${approvalMap['APPROVER']}\" \n                echo \"Deploy to the Env: ${approvalMap['ENV']}\"\n                echo \"Self defined param: ${approvalMap['myparam']}\" \n                }\n            }\n        }\n}\n</code></pre> <p>approvaiMap \u8fd8\u53ef\u4ee5\u9632\u5728environment\u4e2d\uff0c\u66f4\u52a0\u4f18\u96c5</p> <pre><code>environment {\n    approvalMap = ' '\n}\n</code></pre> <p>\u6211\u4eec\u5728<code>pipeline</code>\u5916\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cf<code>approvalMap</code>\uff1a\u8fd9\u662f\u56e0\u4e3a\u5b9a\u4e49\u5728\u9636\u6bb5\u5185\u7684\u53d8\u6700\u7684\u4f5c\u7528\u57df\u53ea\u5728\u8fd9\u4e2a\u9636\u6bb5\u4e2d\uff0c\u800c<code>input</code>\u6b65\u9aa4\u7684\u8fd4\u56de\u503c\u9700\u8981\u8de8\u9636\u6bb5\u4f7f\u7528\uff0c\u542c\u4ee5\u9700\u8981\u5c06\u5176\u5b9a\u4e49\u5728<code>pipeline</code>\u5916\uff1a\u8fd9\u6837\u53d8\u91cf<code>approvaiMap</code>\u7684\u4f5c\u7528\u57df\u5c31\u662f\u6574\u4e2a<code>pipeline</code>\u4e86\u3002 </p> <p>\u540c\u65f6\uff0c\u7531\u4e8e\u5728<code>pipeline</code>\u4e2d\u76f4\u63a5\u4f7f\u7528\u4e86<code>Groovy</code>\u8bed\u8a00\u8d4b\u503c\u8868\u8fbe\u5f0f\uff0e\u6240\u4ee5\u9700\u8981\u5c06<code>approvalMap=input(...)</code>\u653e\u5230<code>script</code>\u5757\u4e2d\u3002 </p> <p><code>input</code>\u6b65\u9aa4\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u53d6\u51b3\u4e8e\u8981\u8fd4\u56de\u7684\u503c\u7684\u4e2a\u6570\u3002\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u503c\uff0c\u8fd4\u56de\u503c\u7c7b\u578b\u5c31\u662f\u8fd9\u4e2a\u503c\u7684\u7c7b\u578b\uff1b\u5982\u679c\u6709\u591a\u4e2a\u503c\uff0c\u5219\u8fd4\u56de\u503c\u7c7b\u578b\u662f<code>Map</code>\u7c7b\u578b\u3002\u672c\u4f8b\u8fd4\u56de\u7684<code>approvalMap</code>\u5c31\u662f\u4e00\u4e2a<code>map</code>, <code>Map</code>\u7684<code>key</code>\u5c31\u662f\u6bcf\u4e2a\u53c2\u6570\u7684<code>name</code>\u5c5e\u6027\uff0c\u6bd4\u5982<code>ENV</code>\u3001<code>myparam</code>\u90fd\u662f<code>key</code> </p> <p>\u9664\u4e86\u53ef\u4ee5\u5728\u8fd4\u56de\u7684<code>map</code>\u4e2d\u653e\u624b\u52a8\u8f93\u5165\u7684\u503c\uff0c\u8fd8\u53ef\u4ee5\u653e\u5176\u4ed6\u6570\u636e\uff0c\u6bd4\u5982<code>submitterParameter: 'APPROVER</code>\uff0c\u4ee3\u8868\u5c06<code>key APPROVER</code>\u653e\u5230\u8fd4\u56de\u7684<code>map</code>\u4e2d\u3002 \u4e0b\u9762\u6211\u4eec\u5206\u522b\u4ecb\u7ecd<code>input</code>\u6b65\u9aa4\u7684\u53c2\u6570\u3002</p> <ul> <li><code>message</code> \u5448\u73b0\u7ed9\u7528\u6237\u7684\u63d0\u793a\u4fe1\u606f\u3002</li> <li><code>id</code> \u53ef\u9009\uff0c\u9ed8\u8ba4\u4e3a<code>stage</code>\u540d\u79f0\u3002</li> <li><code>ok</code> \u9ed8\u8ba4\u8868\u5355\u4e0a\u7684<code>ok</code>\u6587\u672c\u3002</li> <li><code>submitter</code>\u53ef\u9009\u7684,\u4ee5\u9017\u53f7<code>\",\"</code>\u5206\u9694\u7684\u7528\u6237\u5217\u8868\u6216\u5141\u8bb8\u63d0\u4ea4\u7684\u5916\u90e8\u7ec4\u540d\u3002\u9ed8\u8ba4\u5141\u8bb8\u4efb\u4f55\u7528\u6237\u3002</li> <li><code>submitterParameter</code> \u73af\u5883\u53d8\u91cf\u7684\u53ef\u9009\u540d\u79f0\u3002\u5982\u679c\u5b58\u5728\uff0c\u7528<code>submitter</code>\u540d\u79f0\u8bbe\u7f6e\u3002</li> <li><code>parameters</code> \u63d0\u793a\u63d0\u4ea4\u8005\u63d0\u4f9b\u7684\u4e00\u4e2a\u53ef\u9009\u7684\u53c2\u6570\u5217\u8868\u3002</li> </ul> <p>\u793a\u4f8b\uff1a</p> <pre><code>pipeline {\n    agent any\n    stages {\n        stage('Example') {\n            input {\n                message \"Should we continue?\"\n                ok \"Yes, we should.\"\n                submitter \"alice,bob\"\n                parameters {\n                    string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')\n                }\n            }\n            steps {\n                echo \"Hello, ${PERSON}, nice to meet you.\"\n            }\n        }\n    }\n}\n</code></pre> <p>\u8bbe\u7f6e\u624b\u52a8\u8f93\u5165\u6b65\u9aa4\u8d85\u65f6\u540e\uff0c<code>pipeline</code>\u81ea\u52a8\u4e2d\u6b62 </p> <p><code>input</code>\u6b65\u9aa4\u53ef\u4ee5\u4e0e<code>timeout</code>\u6b65\u9aa4\u5b9e\u73b0\u8d85\u65f6\u81ea\u52a8\u4e2d\u6b62<code>pipeline</code>\uff0c\u9632\u6b62\u65e0\u9650\u7b49\u5f85\u3002\u4ee5\u4e0b<code>pipeline</code>\u4e00\u5c0f\u65f6\u540e\u4e0d\u5904\u7406\u5c31\u81ea\u52a8\u4e2d\u6b62\u3002 </p> <pre><code>pipeline { \n    agent any \n    stages { \n        stage('deploy') { \n            steps { \n                timeout(time: 1, unit:'HOURS') { \n                    input message: \"Deploy or terimate\" \n                } \n            }\n        }\n    }\n}\n</code></pre>"},{"location":"chap2/2chap2_declarative_pipeline/#1-5-7-when","title":"1-5-7 <code>when</code>\u548c\u591a\u5206\u652f\u6784\u5efa","text":"<p>\u6839\u636e\u5206\u652f\u90e8\u7f72\u5230\u4e0d\u540c\u7684\u73af\u5883</p> <p><code>git</code>\u5206\u652f\u53ef\u4ee5\u7528\u4e8e\u5bf9\u4ee3\u7801\u8fdb\u884c\u7269\u7406\u9694\u79bb\u3002\u5bf9\u5206\u652f\u7684\u7ba1\u7406\u6709\u5f88\u591a\u65b9\u6cd5\uff0c\u6bd4\u5982\u4e3b\u5e72\u5f00\u53d1\uff0c\u53d1\u5e03\u5206\u652f\u4ee5\u53ca<code>Gitflow</code>\u6cd5\u7b49\u3002\u6211\u4eec\u4e0d\u8ba8\u8bba\u5b83\u4eec\u7684\u597d\u574f\u3002 </p> <p>\u4f46\u4e0d\u8bba\u4f7f\u7528\u54ea\u79cd\u5206\u652f\u7ba1\u7406\u65b9\u6cd5\uff0c\u90fd\u53ef\u80fd\u4f1a\u6d89\u53ca\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u6839\u636e\u4e0d\u540c\u7684\u5206\u652f\u505a\u4e0d\u540c\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982\u6839\u636e\u4e0d\u540c\u7684\u5206\u652f\u90e8\u7f72\u5230\u4e0d\u540c\u7684\u73af\u5883\u3002\u7c7b\u4f3c\u8fd9\u6837\u7684\u4e8b\u60c5\u53ef\u4ee5\u4f7f\u7528<code>if-else</code>\u6765\u5b9e\u73b0\u3002 </p> <pre><code>stage(\"deploy to test\"){ \n    steps{ \n        script { if (env.GIT_BRANCH == 'master') { \n                echo \"deploy to test env\" \n            } \n        } \n    } \n} \nstage(\"deploy to prod\"){ \n    steps{ \n        script { \n            if (env.GIT_BRANCH == 'release') { \n                echo \"deploy to prod\" \n                } \n            } \n        } \n} \n</code></pre> <p>\u4f46\u662f\u8fd9\u6837\u7684\u4ee3\u7801\u4e0d\u591f\u4f18\u96c5\uff0c\u800c\u4e14\u4e0d\u662f\u58f0\u660e\u5f0f\u7684\u3002\u4f7f\u7528<code>when</code>\u6307\u4ee4\u53ef\u4ee5\u8ba9<code>pipeline</code>\u770b\u8d77\u6765\u66f4\u4f18\u96c5\u3002 </p> <pre><code>stage(\"deploy to test\"){ \n    when { \n        branch 'master' \n    } \n        steps{ \n        echo \"deploy to test\" \n    } \n} \n\nstage(\"deploy to prod\"){ \n    when { \n        branch 'release' \n    } \n    steps{ \n        echo \"deploy to prod\" \n    } \n} \n</code></pre> <p><code>when</code> \u6307\u4ee4\u5141\u8bb8\u6d41\u6c34\u7ebf\u6839\u636e\u7ed9\u5b9a\u7684\u6761\u4ef6\u51b3\u5b9a\u662f\u5426\u5e94\u8be5\u6267\u884c\u9636\u6bb5\u3002 <code>when</code> \u6307\u4ee4\u5fc5\u987b\u5305\u542b\u81f3\u5c11\u4e00\u4e2a\u6761\u4ef6\u3002 \u5982\u679c<code>when</code> \u6307\u4ee4\u5305\u542b\u591a\u4e2a\u6761\u4ef6, \u6240\u6709\u7684\u5b50\u6761\u4ef6\u5fc5\u987b\u8fd4\u56de<code>True</code>\uff0c\u9636\u6bb5\u624d\u80fd\u6267\u884c\u3002 \u8fd9\u4e0e\u5b50\u6761\u4ef6\u5728 <code>allOf</code> \u6761\u4ef6\u4e0b\u5d4c\u5957\u7684\u60c5\u51b5\u76f8\u540c\u3002</p> <p>\u5185\u7f6e\u6761\u4ef6</p> <ul> <li><code>changelog</code>\uff1a\u5982\u679c\u7248\u672c\u63a7\u5236\u5e93\u7684<code>changelog</code>\u7b26\u5408\u6b63\u5219\u8868\u8fbe\u5f0f, \u5219\u6267\u884c </li> </ul> <pre><code>when {\n    changelog '.*^\\\\[DEPENDENCY\\\\].+$'\n}\n</code></pre> <ul> <li><code>changeset</code>\uff1a\u5982\u679c\u7248\u672c\u63a7\u5236\u5e93\u7684\u53d8\u66f4\u96c6\u5408\u4e2d\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u6587\u4ef6\u7b26\u5408\u7ed9\u5b9a\u7684<code>Ant</code>\u98ce\u683c\u8def\u5f84\u8868\u8fbe\u5f0f\uff0c\u5219\u6267\u884c </li> </ul> <pre><code>when {\n    changeset \"**/*.js\"\n}\n</code></pre> <ul> <li><code>equals</code>\uff1a\u5982\u679c\u671f\u671b\u503c\u4e0e\u7ed9\u5b9a\u7684\u503c\u76f8\u540c\u5219\u6267\u884c </li> </ul> <pre><code>when { \n    equals expected: 2, actual: currentBuild.number \n}\n</code></pre> <ul> <li><code>branch</code>: \u5f53\u6b63\u5728\u6784\u5efa\u7684\u5206\u652f\u4e0e\u6a21\u5f0f\u7ed9\u5b9a\u7684\u5206\u652f\u5339\u914d\u65f6\uff0c\u6267\u884c\u8fd9\u4e2a\u9636\u6bb5,\u8fd9\u53ea\u9002\u7528\u4e8e\u591a\u5206\u652f\u6d41\u6c34\u7ebf\u4f8b\u5982:</li> </ul> <pre><code>when { branch 'master' }\n</code></pre> <ul> <li><code>environment</code> \u5f53\u6307\u5b9a\u7684\u73af\u5883\u53d8\u91cf\u662f\u7ed9\u5b9a\u7684\u503c\u65f6\uff0c\u6267\u884c\u8fd9\u4e2a\u6b65\u9aa4,\u4f8b\u5982:</li> </ul> <pre><code>when { environment name: 'DEPLOY_TO', value: 'production' }\n</code></pre> <ul> <li><code>expression</code> \u5f53\u6307\u5b9a\u7684<code>Groovy</code>\u8868\u8fbe\u5f0f\u8bc4\u4f30\u4e3a<code>true</code>\u65f6\uff0c\u6267\u884c\u8fd9\u4e2a\u9636\u6bb5, \u4f8b\u5982:</li> </ul> <pre><code>when { expression { return params.DEBUG_BUILD } }\n</code></pre> <pre><code>when { \n    expression  { \n        return env.BRANCH_NAME != 'master'; \n    }\n}\n</code></pre> <p>\u5f53\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u662f\u5b57\u7b26\u4e32\u65f6\uff0c\u5b83\u5fc5\u987b\u8f6c\u6362\u6210\u5e03\u5c14\u7c7b\u578b\u6216<code>null</code>;\u5426\u5219\uff0c\u6240\u6709\u7684\u5b57\u7b26\u4e32\u90fd\u88ab\u5f53\u4f5c<code>true</code>\u5904\u7406\u3002 </p> <ul> <li><code>buildingTag</code>\uff1a\u5982\u679c<code>pipeline</code>\u6240\u6267\u884c\u7684\u4ee3\u7801\u88ab\u6253\u4e86<code>tag</code>\u5219\u6267\u884c </li> </ul> <pre><code>when { \n    buildingTag() \n} \n</code></pre> <ul> <li><code>not</code> \u5f53\u5d4c\u5957\u6761\u4ef6\u662f\u9519\u8bef\u65f6\uff0c\u6267\u884c\u8fd9\u4e2a\u9636\u6bb5,\u5fc5\u987b\u5305\u542b\u4e00\u4e2a\u6761\u4ef6\uff0c\u4f8b\u5982:</li> </ul> <pre><code>when { not { branch 'master' } }\n</code></pre> <ul> <li><code>allOf</code> \u5f53\u6240\u6709\u7684\u5d4c\u5957\u6761\u4ef6\u90fd\u6b63\u786e\u65f6\uff0c\u6267\u884c\u8fd9\u4e2a\u9636\u6bb5,\u5fc5\u987b\u5305\u542b\u81f3\u5c11\u4e00\u4e2a\u6761\u4ef6\uff0c\u4f8b\u5982:</li> </ul> <pre><code>when { \n    allOf {\n         branch 'master'; \n         environment name: 'DEPLOY_TO', value: 'production' \n    } \n}\n</code></pre> <ul> <li><code>anyOf</code> \u5f53\u81f3\u5c11\u6709\u4e00\u4e2a\u5d4c\u5957\u6761\u4ef6\u4e3a\u771f\u65f6\uff0c\u6267\u884c\u8fd9\u4e2a\u9636\u6bb5,\u5fc5\u987b\u5305\u542b\u81f3\u5c11\u4e00\u4e2a\u6761\u4ef6\uff0c\u4f8b\u5982:</li> </ul> <pre><code>when { anyOf { branch 'master'; branch 'staging' } }\n</code></pre> <ul> <li><code>tag</code>\uff1a\u5982\u679c<code>pipeline</code>\u6240\u6267\u884c\u7684\u4ee3\u7801\u88ab\u6253\u4e86<code>tag</code>\uff0c\u4e14<code>tag\u540d</code>\u79f0\u7b26\u5408\u89c4\u5219\uff0c\u5219\u6267\u884c </li> </ul> <pre><code>when { \n    tag \"release-*\" \n} \n</code></pre> <p>\u5982\u679c<code>tag</code>\u7684\u53c2\u6570\u4e3a\u7a7a\uff0c\u5373<code>tag()</code>\uff0c\u5219\u8868\u793a\u4e0d\u8bba<code>tag</code>\u540d\u79f0\u662f\u4ec0\u4e48\u90fd\u6267\u884c\uff0c\u4e0e<code>buildingTag</code>\u7684\u6548\u679c\u76f8\u540c\u3002 </p> <p><code>tag</code>\u6761\u4ef6\u652f\u6301<code>comparator</code>\u53c2\u6570\uff0c\u652f\u6301\u7684\u503c\u5982\u4e0b\u3002 </p> <p><code>EQUALS</code>\uff1a\u7b80\u5355\u7684\u6587\u672c\u6bd4\u8f83\u3002 </p> <pre><code>when { \n    tag pattern: \"release-3.1\", comparator: \"EQUALS\"\n} \n</code></pre> <p><code>GLOB</code>\uff08\u9ed8\u8ba4\u503c\uff09:<code>Ant</code>\u98ce\u683c\u8def\u5f84\u8868\u8fbe\u5f0f\u3002\u7531\u4e8e\u662f\u9ed8\u8ba4\u503c\uff0c\u6240\u4ee5\u4f7f\u7528\u65f6\u4e00\u822c\u7701\u7565\u3002\u5b8c\u6574\u5199\u6cd5\u5982\u4e0b\uff1a </p> <pre><code>when { \n    tag pattern: \"release\u2014*\", comparator: \"GLOB\"\n}\n</code></pre> <p><code>PEGEXP</code>\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b </p> <pre><code>when { \n    tag pattern: \"release \u2014\\\\d+\", comparator: \"REGEXP\" \n}\n</code></pre> <p>\u793a\u4f8b\uff1a</p> <pre><code>pipeline {\n    agent any\n    stages {\n        stage('Example Build') {\n            steps {\n                echo 'Hello World'\n            }\n        }\n        stage('Example Deploy') {\n            when {\n                branch 'production'\n            }\n            steps {\n                echo 'Deploying'\n            }\n        }\n    }\n}\n</code></pre> <pre><code>pipeline {\n    agent any\n    stages {\n        stage('Example Build') {\n            steps {\n                echo 'Hello World'\n            }\n        }\n        stage('Example Deploy') {\n            when {\n                branch 'production'\n                environment name: 'DEPLOY_TO', value: 'production'\n            }\n            steps {\n                echo 'Deploying'\n            }\n        }\n    }\n}\n</code></pre> <pre><code>pipeline {\n    agent any\n    stages {\n        stage('Example Build') {\n            steps {\n                echo 'Hello World'\n            }\n        }\n        stage('Example Deploy') {\n            when {\n                allOf {\n                    branch 'production'\n                    environment name: 'DEPLOY_TO', value: 'production'\n                }\n            }\n            steps {\n                echo 'Deploying'\n            }\n        }\n    }\n}\n</code></pre> <pre><code>pipeline {\n    agent any\n    stages {\n        stage('Example Build') {\n            steps {\n                echo 'Hello World'\n            }\n        }\n        stage('Example Deploy') {\n            when {\n                branch 'production'\n                anyOf {\n                    environment name: 'DEPLOY_TO', value: 'production'\n                    environment name: 'DEPLOY_TO', value: 'staging'\n                }\n            }\n            steps {\n                echo 'Deploying'\n            }\n        }\n    }\n}\n</code></pre> <pre><code>pipeline {\n    agent any\n    stages {\n        stage('Example Build') {\n            steps {\n                echo 'Hello World'\n            }\n        }\n        stage('Example Deploy') {\n            when {\n                expression { BRANCH_NAME ==~ /(production|staging)/ }\n                anyOf {\n                    environment name: 'DEPLOY_TO', value: 'production'\n                    environment name: 'DEPLOY_TO', value: 'staging'\n                }\n            }\n            steps {\n                echo 'Deploying'\n            }\n        }\n    }\n}\n</code></pre> <pre><code>pipeline {\n    agent none\n    stages {\n        stage('Example Build') {\n            steps {\n                echo 'Hello World'\n            }\n        }\n        stage('Example Deploy') {\n            agent {\n                label \"some-label\"\n            }\n            when {\n                beforeAgent true\n                branch 'production'\n            }\n            steps {\n                echo 'Deploying'\n            }\n        }\n    }\n}\n</code></pre> <p><code>Generic Webhook Trigger</code>\u63d2\u4ef6\u5728\u591a\u5206\u652f<code>pipeline</code></p> <p>\u5728\u591a\u5206\u652f<code>pipeline</code>\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u89e6\u53d1\u67d0\u4e2a\u5206\u652f\u7684\u6784\u5efa\u6267\u884c\uff0c<code>GenericTrigger</code>\u53ef\u4ee5\u8fd9\u4e48\u4f20\u53c2\uff1a </p> <pre><code>triggers { \n    GenericTrigger( \n        genericVariables: [ \n            [key: 'ref', value: '$.ref'] \n        ], \n\n        token: env.JOB_NAME, \n        regexpFilterText: '$ref', \n        regexpFilterExpression: 'refs/heads/' + env.BRANCH_NAME\n        } \n}\n</code></pre>"},{"location":"chap2/2chap2_declarative_pipeline/#1-5-8-examples","title":"\u6307\u4ee4 1-5-8 Examples","text":"<pre><code>pipeline {\n    agent { node { label \"hostmachine\"   //\u6307\u5b9a\u8fd0\u884c\u8282\u70b9\u7684\u6807\u7b7e\u6216\u8005\u540d\u79f0\n            }\n    }\nparameters {\n    string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')\n}\nstages {\n    stage('parameter') {\n        when { environment name: 'PERSON', value: 'jacob' }\n        steps {\n            echo \"Hello ${params.PERSON}\"\n        }\n    }\n\n    stage('tools') {\n        steps {\n            script{\n                mvnHome = tool \"m2\"\n                println(mvnHome)\n\n                sh \"${mvnHome}/bin/mvn --version\"\n            }\n        }\n    }\n\n    stage('Input') {\n            input {\n                message \"Should we continue?\"\n                ok \"Yes, we should.\"\n                submitter \"Jacob\"\n                parameters {\n                    string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')\n                }\n            }\n            steps {\n                echo \"Hello, ${PERSON}, nice to meet you.\"\n            }\n        }\n}\n}\n</code></pre> <p> which is not <code>jacob</code></p> <p><code>when { environment name: 'PERSON', value: 'jacob' }</code>  \u8df3\u8fc7\u6b64Stage</p> <p> </p>"},{"location":"chap2/2chap2_declarative_pipeline/#1-5-9","title":"1-5-9 \u5e76\u884c\u6784\u5efa","text":"<p>\u58f0\u660e\u5f0f\u6d41\u6c34\u7ebf\u7684\u9636\u6bb5\u53ef\u4ee5\u5728\u4ed6\u4eec\u5185\u90e8\u58f0\u660e\u591a\u9694\u5d4c\u5957\u9636\u6bb5, \u5b83\u4eec\u5c06\u5e76\u884c\u6267\u884c\u3002 \u6ce8\u610f\uff0c\u4e00\u4e2a\u9636\u6bb5\u5fc5\u987b\u53ea\u6709\u4e00\u4e2a <code>steps</code> \u6216<code>parallel</code>\u7684\u9636\u6bb5\u3002 \u5d4c\u5957\u9636\u6bb5\u672c\u8eab\u4e0d\u80fd\u5305\u542b \u8fdb\u4e00\u6b65\u7684 <code>parallel</code> \u9636\u6bb5, \u4f46\u662f\u5176\u4ed6\u7684\u9636\u6bb5\u7684\u884c\u4e3a\u4e0e\u4efb\u4f55\u5176\u4ed6 <code>stageparallel</code> \u7684\u9636\u6bb5\u4e0d\u80fd\u5305\u542b<code>agent</code> \u6216 <code>tools</code> \u9636\u6bb5, \u56e0\u4e3a\u4ed6\u4eec\u6ca1\u6709\u76f8\u5173 <code>steps</code>\u3002</p> <p>\u53e6\u5916, \u901a\u8fc7\u6dfb\u52a0 <code>failFast true</code>\u5230\u5305\u542b<code>parallel</code>\u7684 <code>stage</code>\u4e2d\uff0c \u5f53\u5176\u4e2d\u4e00\u4e2a\u8fdb\u7a0b\u5931\u8d25\u65f6\uff0c\u4f60\u53ef\u4ee5\u5f3a\u5236\u6240\u6709\u7684 <code>parallel</code> \u9636\u6bb5\u90fd\u88ab\u7ec8\u6b62\u3002</p> <p>\u793a\u4f8b:</p> <pre><code>pipeline {\n    agent any\n    stages {\n        stage('Non-Parallel Stage') {\n            steps {\n                echo 'This stage will be executed first.'\n            }\n        }\n        stage('Parallel Stage') {\n            when {\n                branch 'master'\n            }\n            failFast true\n            parallel {\n                stage('Branch A') {\n                    agent {\n                        label \"for-branch-a\"\n                    }\n                    steps {\n                        echo \"On Branch A\"\n                    }\n                }\n                stage('Branch B') {\n                    agent {\n                        label \"for-branch-b\"\n                    }\n                    steps {\n                        echo \"On Branch B\"\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre> <p><code>Jenkins pipeline</code>\u63d2\u4ef6\u652f\u6301\u8fd9\u79cd\u5e76\u884c\u6784\u5efa\uff0c\u5e76\u6708\u4e00\u4f7f\u7528\u8d77\u6765\u4e5f\u975e\u5e38\u7b80\u5355\u3002 </p> <pre><code>pipeline{ \n    agent none \n    stages{ \n        stage('Run Tests'){ \n            failFast true \n            parallel{ \n                stage('Test On Chrome'){ \n                    agent{ label \"chrome\" } \n                    steps{ \n                        echo \"Chrome U\u5de5\u6d4b\u8bd5\"\n                    } \n                } \n                stage('Test On Firefox'){ \n                    agent{ label \"firefox\" } \n                    steps{ \n                        echo \"Firefox UI\u6d4b\u8bd5\" \n                        } \n                } \n                stage('Test On IE'){ \n                    agent{ label \"ie\" } \n                    steps{ \n                        echo \"IE UI \u6d4b\u8bd5\u201c \n                    } \n                } \n            } //end of parallel \n        } //end of run tests \n    } //end of stages \n} //end of pipeline \n</code></pre> <p>\u5728<code>stage</code>\u90e8\u5206\u5305\u542b\u4e00\u4e2a<code>Run Tests</code>\u9636\u6bb5\uff0c\u5728\u8fd9\u4e2a\u9636\u6bb5\u4e0b\u5305\u542b\u4e00\u4e2a<code>parallel</code>\u5757\uff0c\u5728<code>parallel</code>\u5757\u4e0b\u53c8\u5305\u542b\u4e86\u591a\u4e2a\u9636\u6bb5\u3002\u4f4d\u4e8e<code>parallel</code>\u5757\u4e0b\u7684\u9636\u6bb5\u90fd\u5c06\u5e76\u884c\u6267\u884c\uff0c\u800c\u4e14\u5e76\u884c\u9636\u6bb5\u8fd8\u53ef\u4ee5\u88ab\u5206\u5230\u4e0d\u540c\u7684<code>Jenkins agent</code>\u4e0a\u6267\u884c\u3002 </p> <p>\u56e0\u4e3aparallel\u672c\u8eab\u4e0d\u5305\u542b\u4efb\u4f55\u6b65\u9aa4\uff0c\u6240\u4ee5\u5728<code>parallel</code>\u5757\u4e0b\u672c\u8eab\u4e0d\u5141\u8bb8\u5305\u542b<code>agent</code>\u548c<code>tools</code>.</p> <p>\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c<code>Jenkins pipeline</code>\u8981\u7b49\u5f85<code>parallel</code>\u5757\u4e0b\u6240\u6709\u7684\u9636\u6bb5\u90fd\u6267\u884c\u5b8c\u6210\uff0c\u624d\u80fd\u786e\u5b9a\u7ed3\u679c\u3002\u5982\u679c\u5e0c\u671b\u6240\u6709\u5e76\u884c\u9636\u6bb5\u4e2d\u7684\u67d0\u4e2a\u9636\u6bb5\u5931\u8d25\u540e\uff0c\u5c31\u8ba9\u5176\u4ed6\u6b63\u5728\u6267\u884c\u7684\u9636\u6bb5\u90fd\u4e2d\u6b62\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5728\u4e0e<code>parallel</code>\u5757\u540c\u7ea7\u7684\u4f4d\u7f6e\u52a0\u4eba<code>failFast true</code>\u5c31\u53ef\u4ee5\u4e86\u3002 </p> <p>\u5728\u4e0d\u540c\u7684\u5206\u652f\u4e0a\u5e94\u7528\u5e76\u884c\u6784\u5efa</p> <pre><code>pipeline { \n    agent any \n    stages { \n        stage('Parallel Stage') { \n            failFast true \n            parallel { \n                stage('Branch master') { \n                    when { branch 'master' } \n                    agent any \n                    steps { \n                        echo \"On Branch master\" \n                    } \n                }\n                stage('Branch dev') {\n                    when { branch 'staging' }\n                    agent any\n                    stages {\n                        stage('\u5d4c\u5957staging 1'){\n                            steps{\n                                echo \"staging 1\"\n                            }\n                        }\n                        stage('\u5d4c\u5957staging 2'){\n                            steps{\n                                echo \"staging 2\"\n                            }\n                        }\n                    }\n                } // end of staging\n            } // end of parallel\n        }\n    }\n} //end of pipepline \n</code></pre> <p>\u6211\u4eec\u6ce8\u610f\u5230\u5728\u5e76\u884c\u9636\u6bb5<code>Branch staging</code>\u4e0b\u53c8\u51fa\u73b0\u4e86\u4e00\u4e2astage\u90e8\u5206\u3002 \u662f\u7684\uff0c\u9636\u6bb5\u662f\u53ef\u4ee5\u5d4c\u5957\u7684\u3002</p> <p>\u5e76\u884c\u6b65\u9aa4</p> <p>\u524d\u9762\u6211\u4eec\u4ecb\u7ecd\u7684\u662f\u9636\u6bb5\u7ea7\u522b\u7684\u5e76\u884c\u6267\u884c<code>Jenkins pipeline</code>\u8fd8\u652f\u6301\u6b65\u9aa4\u7ea7\u522b\u7684\u5e76\u884c\u6267\u884c\u3002\u8fd9\u4e5f\u662f<code>Jenkins Pipeline</code>\u6700\u65e9\u652f\u6301\u7684\u5e76\u884c\u65b9\u5f0f </p> <pre><code>stage('parallel build') { \n    steps { \n        parallel {\n            jdk8: {\n                echo \"jdk8 build\" \n            },\n            jdk9: {\n                echo \"jdk9 build\" \n            }\n        }\n    }\n}\n</code></pre>"},{"location":"chap2/2chap2_declarative_pipeline/#1-6-step","title":"1-6 step\u6b65\u9aa4","text":""},{"location":"chap2/2chap2_declarative_pipeline/#1-6-1-script","title":"1-6-1 script","text":"<p><code>script</code> \u6b65\u9aa4\u9700\u8981 <code>[scripted-pipeline]</code>\u5757\u5e76\u5728\u58f0\u660e\u5f0f\u6d41\u6c34\u7ebf\u4e2d\u6267\u884c\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u7528\u4f8b\u6765\u8bf4,\u5e94\u8be5\u58f0\u660e\u5f0f\u6d41\u6c34\u7ebf\u4e2d\u7684\u201c\u811a\u672c\u201d\u6b65\u9aa4\u662f\u4e0d\u5fc5\u8981\u7684\uff0c\u4f46\u662f\u5b83\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u6709\u7528\u7684\u201d\u9003\u751f\u51fa\u53e3\u201d\u3002\u975e\u5e73\u51e1\u7684\u89c4\u6a21\u548c/\u6216\u590d\u6742\u6027\u7684script\u5757\u5e94\u8be5\u88ab\u8f6c\u79fb\u5230 \u5171\u4eab\u5e93 \u3002</p> <p>\u793a\u4f8b\uff1a\u6bd4\u5982\u5206\u522b\u5728\u4e0d\u540c\u7684\u6d4f\u89c8\u5668\u4e0a\u8dd1\u6d4b\u8bd5</p> <pre><code>pipeline {\n    agent any\n    stages {\n        stage('Example') {\n            steps {\n                echo 'Hello World'\n\n                script {\n                    def browsers = ['chrome', 'firefox']\n                    for (int i = 0; i &lt; browsers.size(); ++i) {\n                        echo \"Testing the ${browsers[i]} browser\"\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"chap2/2chap2_declarative_pipeline/#1-7-pipeline","title":"1-7 pipeline\u5185\u7f6e\u57fa\u7840\u6b65\u9aa4","text":""},{"location":"chap2/2chap2_declarative_pipeline/#1-7-1","title":"1-7-1 \u6587\u4ef6\u76ee\u5f55\u76f8\u5173\u6b65\u9aa4","text":"<p><code>deleteDir</code>:\u5220\u9664\u5f53\u524d\u76ee\u5f55 </p> <p><code>deleteDir</code>\u662f\u4e00\u4e2a\u65e0\u53c2\u6b65\u9aa4\uff0c\u5220\u9664\u7684\u662f\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u3002\u901a\u5e38\u5b83\u4e0e<code>dir</code>\u6b65\u9aa4\u4e00\u8d77\u4f7f\u7528\uff0c\u7528\u4e8e\u5220  \u9664\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9\u3002 </p> <p><code>dir</code>\uff1a\u5207\u6362\u5230\u76ee\u5f55</p> <p>\u9ed8\u8ba4<code>pipeline</code>\u5de5\u4f5c\u5728\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\u4e0b\uff0cdir\u6b65\u9aa4\u53ef\u4ee5\u8ba9\u6211\u4eec\u5207\u6362\u5230\u5176\u4ed6\u76ee\u5f55\u3002\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a </p> <pre><code>dir(\"/var/logs\"){\n    deleteDir()\n}\n</code></pre> <p>fileExists\uff1a\u5224\u65ad\u6587\u4ef6\u662f\u5426\u5b58\u5728</p> <p><code>fileExists('/tmp/a.jar'\uff09</code> \u5224\u65ad<code>/tmp/a.jar</code>\u6587\u4ef6\u662f\u5426\u5b58\u5728\u3002\u5982\u679c\u53c2\u6570\u662f\u76f8\u5bf9\u8def\u5f84\uff0c\u5219\u5224\u65ad\u5728\u76f8\u5bf9\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e0b\uff0c\u8be5\u6587\u4ef6\u662f\u5426\u5b58\u5728\u3002\u7ed3\u679c\u8fd4\u56de\u5e03\u5c14\u7c7b\u578b\u3002 </p> <p>isUnix\uff1a\u5224\u65ad\u662f\u5426\u4e3a\u7c7bUNIX\u7cfb\u7edf</p> <p>\u5982\u679c\u5f53\u524d<code>pipeline</code>\u8fd0\u884c\u5728\u4e00\u4e2a\u7c7b<code>UNIX</code>\u7cfb\u7edf\u4e0a\uff0c\u5219\u8fd4\u56de<code>true</code></p> <p>pwd\uff1a\u786e\u8ba4\u5f53\u524d\u76ee\u5f55</p> <p><code>pwd</code>\u4e0e<code>Linux</code>\u7684<code>pwd</code>\u547d\u4ee4\u4e00\u6837\uff0c\u8fd4\u56de\u5f53\u524d\u6240\u5728\u76ee\u5f55\uff1a\u5b83\u6709\u4e00\u4e2a\u5e03\u5c14\u7c7b\u578b\u7684\u53ef\u9009\u53c2\u6570\uff1a<code>tmp</code>\uff0c\u5982  \u679c\u53c2\u6570\u503c\u4e3a<code>true</code>\uff0c\u5219\u8fd4\u56de\u4e0e\u5f53\u524d\u5de5\u4f5c\u7a7a\u95f4\u5173\u8054\u7684\u4e34\u65f6\u76ee\u5f55\u3002 </p> <p>writeFile\uff1a\u5c06\u5185\u5bb9\u5199\u5165\u6307\u5b9a\u6587\u4ef6\u4e2d</p> <p><code>writeFile</code>\u652f\u6301\u7684\u53c2\u6570\u6709\uff1a </p> <ul> <li><code>file</code>\uff1a\u6587\u4ef6\u8def\u5f84\uff0c\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u662f\u76f8\u5bf9\u8def\u5f84\u3002 </li> <li><code>text</code>: \u8981\u5199\u4eba\u7684\u6587\u4ef6\u5185\u5bb9\u3002 </li> <li><code>encoding</code>\uff08\u53ef\u9009\uff09\uff1a\u76ee\u6807\u6587\u4ef6\u7684\u7f16\u7801\u3002 \u5982\u679c\u7559\u7a7a\uff0c\u5219\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u9ed8\u8ba4\u7684\u7f16\u7801\u3002\u5982\u679c\u5199\u7684\u662f <code>Base64</code>\u7684\u6570\u636e\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528<code>Base64</code> \u7f16\u7801\u3002 </li> </ul> <p><code>readFile</code>\uff1a\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9 </p> <p>\u8bfb\u53d6\u6307\u5b9a\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u4ee5\u6587\u672c\u8fd4\u56de\u3002<code>readFile</code>\u652f\u6301\u7684\u53c2\u6570\u6709\uff1a</p> <ul> <li><code>file</code>\uff1a\u8def\u5f84\uff0c\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u662f\u76f8\u5bf9\u8def\u5f84\uff1a</li> <li><code>encoding</code>\uff08\u53ef\u9009\uff09\uff1a\u8bfb\u53d6\u6587\u4ef6\u65f6\u4f7f\u7528\u7684\u7f16\u7801\u3002 </li> </ul> <p>\u793a\u4f8b\u5982\u4e0b\uff1a </p> <pre><code>script{ \n    // \"amVua2lucyBib29r\" \u662f \"jenkins book\" \u8fdb\u884cBase64\u7f16\u7801\u540e\u7684\u503c\n    writeFile(file:\"base64File\", text: \"amVua2lucyBib29r\", encoding: \"Base64\") \n    def content = readFile(file: 'base64File', encoding: 'UTF\u20148' ) \n    echo \"${content}\" \n    // \u6253\u5370\u7ed3\u679c: jenkins book \n}\n</code></pre>"},{"location":"chap2/2chap2_declarative_pipeline/#1-7-2","title":"1-7-2 \u5236\u54c1\u76f8\u5173\u6b65\u9aa4","text":"<p>stash\uff1a\u4fdd\u5b58\u4e34\u65f6\u6587\u4ef6</p> <p><code>stash</code>\u6b65\u9aa4\u53ef\u4ee5\u5c06\u4e00\u4e9b\u6587\u4ef6\u4fdd\u5b58\u8d77\u6765\uff0c\u4ee5\u4fbf\u88ab\u540c\u4e00\u6b21\u6784\u5efa\u7684\u5176\u4ed6\u6b65\u9aa4\u6216\u9636\u6bb5\u4f7f\u7528\u3002\u5982\u679c\u6574\u4e2a <code>pipeline</code>\u7684\u6240\u6709\u9636\u6bb5\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\u6267\u884c\uff0c\u5219<code>stash</code>\u6b65\u9aa4\u662f\u591a\u4f59\u7684\u3002\u6240\u4ee5\uff0c\u901a\u5e38\u9700\u8981<code>stash</code>\u7684\u6587\u4ef6\u90fd\u662f\u8981\u8de8<code>Jenkins node</code>\u4f7f\u7528\u7684\u3002 </p> <p><code>stash</code>\u6b65\u9aa4\u4f1a\u5c06\u6587\u4ef6\u5b58\u50a8\u5728<code>tar</code>\u6587\u4ef6\u4e2d\uff0c\u5bf9\u4e8e\u5927\u6587\u4ef6\u7684<code>stash</code>\u64cd\u4f5c\u5c06\u4f1a\u6d88\u8017<code>Jenkins master</code>\u7684\u8ba1\u7b97\u8d44\u6e90\u3002<code>Jenkins</code>\u5b98\u65b9\u6587\u6863\u63a8\u8350\uff0c\u5f53\u6587\u4ef6\u5927\u5c0f\u4e3a<code>5~1OOMB</code>\u65f6\uff0c\u5e94\u8be5\u8003\u8651\u4f7f\u7528\u5176\u4ed6\u66ff\u4ee3\u65b9\u6848\u3002 </p> <p><code>stash</code>\u6b65\u9aa4\u7684\u53c2\u6570\u5217\u8868\u5982\u4e0b\uff1a </p> <ul> <li><code>name</code>\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u4fdd\u5b58\u6587\u4ef6\u7684\u96c6\u5408\u7684\u552f\u4e00\u6807\u8bc6\u3002 </li> <li><code>allowEmpty</code>\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u5141\u8bb8<code>stash</code>\u5185\u5bb9\u4e3a\u7a7a\u3002 </li> <li><code>excludes</code>\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u5c06\u54ea\u4e9b\u6587\u4ef6\u6392\u9664\u3002\u5982\u679c\u6392\u9664\u591a\u4e2a\u6587\u4ef6\uff0c\u5219\u4f7f\u7528\u9017\u53f7\u5206\u9694\u3002\u7559\u7a7a\u4ee3\u8868 \u4e0d\u6392\u9664\u4efb\u4f55\u6587\u4ef6\u3002 </li> <li><code>includes</code>\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c<code>stash</code>\u54ea\u4e9b\u6587\u4ef6\uff0c\u7559\u7a7a\u4ee3\u8868\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u3002</li> <li><code>useDefaultExciudes</code>\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u5982\u679c\u4e3a<code>true</code>\uff0c\u5219\u4ee3\u8868\u4f7f\u7528<code>Ant</code>\u98ce\u683c\u8def\u5f84\u9ed8\u8ba4\u6392\u9664\u6587\u4ef6\u5217\u8868\u3002 </li> </ul> <p>\u9664\u4e86<code>name\u53c2</code>\u6570\uff0c\u5176\u4ed6\u53c2\u6570\u90fd\u662f\u53ef\u9009\u7684\u3002<code>excludes</code>\u548c<code>includes</code>\u4f7f\u7528\u7684\u662f<code>Ant</code>\u98ce\u683c\u8def\u5f84\u8868\u8fbe\u5f0f\u3002 </p> <p><code>unstash</code>\uff1a\u53d6\u51fa\u4e4b\u524d<code>stash</code>\u7684\u6587\u4ef6</p> <p><code>unstash</code>\u6b65\u9aa4\u53ea\u6709\u4e00\u4e2a<code>name</code>\u53c2\u6570\uff0c\u5373<code>stash</code>\u65f6\u7684\u552f\u4e00\u6807\u8bc6\u3002\u901a\u5e38<code>stash</code>\u4e0e<code>unstash</code>\u6b65\u9aa4\u540c\u65f6\u4f7f\u7528\u3002\u4ee5\u4e0b\u662f\u5b8c\u6574\u793a\u4f8b\u3002 </p> <pre><code>pipeline { \n    agent none \n    stages {\n        stage('stash') { \n            agent { label \"master\" } \n            steps { \n                writeFile file: \"a.txt\",text: \"$BUILO_NUMBER\" \n                stash(name \"abc\", includes: \"a.txt\")\n                }\n            }   \n        stage('unstash') { \n            agent { label \"node2\" }\n            steps {\n                script{ \n                    unstash(\"abc\") \n                    def content = readFile(\"a.txt\") \n                    echo \"${content}\" \n                }\n            }\n        }\n    }\n}\n</code></pre> <p><code>stash</code>\u6b65\u9aa4\u5728<code>master</code>\u8282\u70b9\u4e0a\u6267\u884c\uff0c\u800c<code>unstash</code>\u6b65\u9aa4\u5728 <code>node2</code>\u8282\u70b9\u4e0a\u6267\u884c</p>"},{"location":"chap2/2chap2_declarative_pipeline/#1-7-3","title":"1-7-3 \u547d\u4ee4\u76f8\u5173\u6b65\u9aa4","text":"<p>\u4e0e\u547d\u4ee4\u76f8\u5173\u7684\u6b65\u9aa4\u5176\u5b9e\u662f<code>Pipeline: Nodes and processes</code>\u63d2\u4ef6\u63d0\u4f9b\u7684\u6b65\u9aa4\u3002 \u7531\u4e8e\u5b83\u662f<code>Pipeline</code> \u63d2\u4ef6\u7684\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u6240\u4ee5\u57fa\u672c\u4e0d\u9700\u8981\u5355\u72ec\u5b89\u88c5\u3002 </p> <p>sh\uff1a\u6267\u884cshell\u547d\u4ee4 </p> <p><code>sh</code>\u6b65\u9aa4\u652f\u6301\u7684\u53c2\u6570\u6709\uff1a</p> <ul> <li><code>script</code>\uff1a\u5c06\u8981\u6267\u884c\u7684<code>shell</code>\u811a\u672c\uff0c\u901a\u5e38\u5728\u7c7b<code>UNIX</code>\u7cfb\u7edf\u4e0a\u53ef\u4ee5\u662f\u591a\u884c\u811a\u672c\u3002</li> <li><code>encoding</code>\uff1a\u811a\u672c\u6267\u884c\u540e\u8f93\u51fa\u65e5\u5fd7\u7684\u7f16\u7801\uff0c\u9ed8\u8ba4\u503c\u4e3a\u811a\u672c\u8fd0\u884c\u542c\u5728\u7cfb\u7edf\u7684\u7f16\u7801\u3002</li> <li><code>return Status</code>\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c \u9ed8\u8ba4\u811a\u672c\u8fd4\u56de\u7684\u662f\u72b6\u6001\u7801\uff0c \u5982\u679c\u662f\u4e00\u4e2a\u975e\u96f6\u7684\u72b6\u6001\u7801\uff0c\u5219\u4f1a\u5f15\u53d1 <code>pipeline</code>\u6267\u884c\u5931\u8d25\u3002\u5982\u679c<code>returnStatus</code>\u53c2\u6570\u4e3a<code>true</code>,\u5219\u4e0d\u8bba\u72b6\u6001\u7801\u662f\u4ec0\u4e48,<code>pipeline</code>\u7684\u6267\u884c\u90fd\u4e0d\u4f1a\u53d7\u5f71\u54cd\u3002 </li> <li><code>return Stdout</code>\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u5982\u679c\u4e3a<code>true</code>\uff0c\u5219\u4efb\u52a1\u7684\u6807\u51c6\u8f93\u51fa\u5c06\u4f5c\u4e3a\u6b65\u9aa4\u7684\u8fd4\u56de\u503c\uff0c\u800c\u4e0d\u662f\u6253\u5370\u5230\u6784\u5efa\u65e5\u5fd7\u4e2d\uff08\u5982\u679c\u6709\u9519\u8bef\uff0c\u5219\u4f9d\u7136\u4f1a\u6253\u5370\u5230\u65e5\u5fd7\u4e2d\uff09\u3002 </li> </ul> <p>\u9664\u4e86<code>script</code>\u53c2\u6570\uff0c\u5176\u4ed6\u53c2\u6570\u90fd\u662f\u53ef\u9009\u7684\u3002 </p> <p><code>returnStatus</code>\u4e0e<code>returnStdout</code>\u53c2\u6570\u4e00\u822c\u4e0d\u4f1a\u540c\u65f6\u4f7f\u7528\uff0c\u56e0\u4e3a\u8fd4\u56de\u503c\u53ea\u80fd\u6709\u4e00\u4e2a\u3002\u5982\u679c\u540c\u65f6\u4f7f\u7528\u3001 \u5219\u53ea\u6709<code>returnStatus</code>\u53c2\u6570\u751f\u6548\u3002</p> <p>bat\u3001powershell\u6b65\u9aa4</p> <p><code>bat</code>\u6b65\u9aa4\u6267\u884c\u7684\u662f<code>Windows</code>\u7684\u6279\u5904\u7406\u547d\u4ee4\u3002<code>powershell</code>\u6b65\u9aa4\u6267\u884c\u7684\u662f<code>PowerShell</code>\u811a\u672c\uff0c\u652f\u6301<code>3+</code>\u7248\u672c\u3002\u8fd9\u4e24\u4e2a\u6b65\u9aa4\u652f\u6301\u7684\u53c2\u6570\u4e0e<code>sh</code>\u6b65\u9aa4\u7684\u4e00\u6837\uff0c\u8fd9\u91cc\u5c31\u4e0d\u91cd\u590d\u4ecb\u7ecd\u4e86\u3002 </p>"},{"location":"chap2/2chap2_declarative_pipeline/#1-7-4","title":"1-7-4 \u5176\u4ed6\u6b65\u9aa4","text":"<p><code>error</code>\uff1a\u4e3b\u52a8\u62a5\u9519\uff0c\u4e2d\u6b62\u5f53\u524d<code>pipeline</code></p> <p><code>error</code>\u6b65\u9aa4\u7684\u6267\u884c\u7c7b\u4f3c\u4e8e\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002\u5b83\u53ea\u6709\u4e00\u4e2a\u5fc5\u9700\u53c2\u6570\uff1a<code>message</code>\u3002\u901a\u5e38\u7701\u7565\u53c2\u6570\uff1a <code>error(\"there's an error\"\uff09</code>\u3002 </p> <p>tool\uff1a\u4f7f\u7528\u9884\u5b9a\u4e49\u7684\u5de5\u5177 </p> <p>\u5982\u679c\u5728<code>Global Tool Configuration</code>\uff08\u5168\u5c40\u5de5\u5177\u914d\u7f6e\uff09\u4e2d\u914d\u7f6e\u4e86\u5de5\u5177\uff0c\u5982\u56fe\u6240\u793a\uff0c\u6bd4\u5982  \u914d\u7f6e\u4e86<code>Docker</code>\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7<code>tool</code>\u6b65\u9aa4\u5f97\u5230\u5de5\u5177\u8def\u5f84\u3002 </p> <p> </p> <pre><code>stage('Docker') {\n            steps { \n                script{ \n                    def t = tool name: 'docker', type: 'org.jenkinsci.plugins.docker.commons.tools.DockerTool'\n                    echo \"${t}\" // \u6253\u5370 /var/lib/docker \n                } \n            }\n        }\n</code></pre> <pre><code>...\n/var/lib/docker\n[Pipeline] }\n[Pipeline] // script\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] }\n[Pipeline] // node\n[Pipeline] End of Pipeline\n</code></pre> <p>tool\u6b65\u9aa4\u652f\u6301\u7684\u53c2\u6570\u6709\uff1a </p> <ul> <li>name\uff1a\u5de5\u5177\u540d\u79f0\u3002 </li> <li>type\uff08\u53ef\u9009\uff09\uff1a\u5de5\u5177\u7c7b\u578b\uff0c\u6307\u8be5\u5de5\u5177\u5b89\u88c5\u7c7b\u7684\u5168\u8def\u5f84\u7c7b\u540d\u3002 </li> </ul> <p>\u6bcf\u4e2a\u63d2\u4ef6\u7684<code>type</code>\u503c\u90fd\u4e0d\u4e00\u6837\uff0c\u800c\u4e14\u7edd\u5927\u591a\u6570\u63d2\u4ef6\u7684\u6587\u6863\u6839\u672c\u4e0d\u5199<code>type</code>\u503c\u3002\u9664\u4e86\u5230\u8be5\u63d2\u4ef6\u7684\u6e90\u7801\u4e2d\u67e5\u627e\uff0c\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5\u8ba9\u6211\u4eec\u5feb\u901f\u627e\u5230<code>type</code>\u503c\uff0c\u5c31\u662f\u524d\u5f80<code>Jenkins pipeline</code>\u4ee3\u7801\u7247\u6bb5\u751f\u6210\u5668\u4e2d\u751f\u6210\u8be5<code>tool</code>\u6b65\u9aa4\u7684\u4ee3\u7801\u5373\u53ef\uff0c</p> <p> </p> <p><code>timeout</code>\uff1a\u4ee3\u7801\u5757\u8d85\u65f6\u65f6\u95f4 </p> <p>\u4e3a<code>timeout</code>\u6b65\u9aa4\u95ed\u5305\u5185\u8fd0\u884c\u7684\u4ee3\u7801\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\u9650\u5236\u3002\u4e00\u5982\u679c\u8d85\u65f6\uff0c\u5c06\u629b\u51fa\u4e00\u4e2a<code>org.jenkinsci.plugins.workflow. steps.FlowlnterruptedException</code>\u5f02\u5e38\u3002<code>timeout</code>\u6b65\u9aa4\u652f\u6301\u5982\u4e0b\u53c2\u6570\uff1a</p> <ul> <li><code>time</code>\uff1a\u6574\u578b, \u8d85\u65f6\u65f6\u95f4\u3002 </li> <li><code>unit</code>\uff08\u53ef\u9009\uff09\uff1a\u65f6\u95f4\u5355\u4f4d\uff0c\u652f\u6301\u7684\u503c\u6709<code>NANOSECONDS</code>\u3001 <code>MICROSECONDS</code>\u3001<code>MILLISECONDS</code>\u3001 <code>SECONDS</code>\u3001<code>MINUTES</code>\uff08\u9ed8\u8ba4\uff09\u3001<code>HOURS</code>\u3001<code>DAYS</code>\u3002 </li> <li><code>activity</code>\uff08\u53ef\u9009\uff09\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u5982\u679c\u503c\u4e3a<code>true</code>\uff0c\u5219\u53ea\u6709\u5f53\u65e5\u5fd7\u6ca1\u6709\u6d3b\u52a8\u540e\uff0c\u624d\u771f\u6b63\u7b97\u4f5c\u8d85\u65f6 </li> </ul> <p><code>waitUntil</code>\uff1a\u7b49\u5f85\u6761\u4ef6\u6ee1\u8db3</p> <p>\u4e0d\u65ad\u91cd\u590d<code>waitUntil</code>\u5757\u5185\u7684\u4ee3\u7801\uff0c\u76f4\u5230\u6761\u4ef6\u4e3a<code>true</code>. <code>waitUntil</code>\u4e0d\u8d1f\u8d23\u5904\u7406\u5757\u5185\u4ee3\u7801\u7684\u5f02\u5e38\uff0c\u76f4\u5230\u5f02\u5e38\u65f6\u76f4\u63a5\u5411\u5916\u629b\u51fa\u3002<code>waitUntil</code>\u6b65\u9aa4\u6700\u597d\u4e0e<code>timeout</code>\u6b65\u9aa4\u5171\u540c\u4f7f\u7528\uff0c\u907f\u514d\u6b7b\u5faa\u73af\u3002\u793a\u4f8b\u5982\u4e0b\uff1a </p> <pre><code>timeout(50) { \n    waitUntil { \n        script { \n            def r = sh script: 'curl http://exmaple', returnStatus: true \n            return (r == 0) \n        } \n    } \n} \n</code></pre> <p>retry\uff1a\u91cd\u590d\u6267\u884c\u5757 </p> <p>\u6267\u884c<code>N</code>\u6b21\u95ed\u5305\u5185\u7684\u811a\u672c\u3002\u5982\u679c\u5176\u4e2d\u67d0\u6b21\u6267\u884c\u629b\u51fa\u5f02\u5e38\uff0c\u5219\u53ea\u4e2d\u6b62\u672c\u6b21\u6267\u884c\uff0c\u5e76\u4e0d\u4f1a\u4e2d\u6b62\u6574\u4e2a<code>retry</code>\u7684\u6267\u884c\u3002\u540c\u65f6\uff0c\u5728\u6267\u884c<code>retry</code>\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7528\u6237\u662f\u65e0\u6cd5\u4e2d\u6b62<code>pipeline</code>\u7684\u3002 </p> <pre><code>steps{ \n    retry(20){ \n        script{ \n        sh script: 'curl http://exmaple', returnStatus: true\n        } \n    } \n} \n</code></pre> <p><code>sleep</code>\uff1a\u8ba9<code>pipeline</code>\u4f11\u7720\u4e00\u6bb5\u65f6\u95f4 </p> <p><code>sleep</code>\u6b65\u9aa4\u53ef\u7528\u4e8e\u7b80\u5355\u5730\u6682\u505c<code>pipeline</code>\uff0c\u5176\u652f\u6301\u7684\u53c2\u6570\u6709\uff1a</p> <ul> <li><code>time</code>\uff1a\u6574\u578b\uff0c\u4f11\u7720\u65f6\u95f4\u3002</li> <li><code>unit</code>\uff08\u53ef\u9009\uff09:\u65f6\u95f4\u5355\u4f4d\uff0c\u652f\u6301\u7684\u503c\u6709<code>NANOSECONDS</code>\u3001<code>MICROSECONDS</code>\u3001 <code>MILLISECONDS</code>\u3001 <code>SECONDS</code>\uff08\u9ed8\u8ba4\uff09\u3001<code>MINUTES</code>\u3001<code>HOURS</code>\u3001<code>DAYS</code> </li> </ul> <p>\u793a\u4f8b\u5982\u4e0b\uff1a </p> <pre><code>sleep(120) // \u4f11\u7720120s\nsleep(time:'2', unit:\"MINUTES\") // \u4f11\u77202\u5206\u949f \n</code></pre>"},{"location":"chap2/2chap2_declarative_pipeline/#1-7-5-pipeline","title":"1-7-5 \u4f7f\u7528pipeline\u4ee3\u7801\u7247\u6bb5\u751f\u6210\u5668\u5b66\u4e60","text":"<p>\u5bf9\u4e8e\u521d\u5b66<code>Jenkins pipeline</code>\u7684\u65b0\u4eba\u6765\u8bf4\uff0c\u5982\u4f55\u5f00\u59cb\u5199<code>pipeline</code>\u662f\u4e00\u4e2a\u574e\u513f\u3002\u597d\u5728<code>Jenkins</code>\u63d0\u4f9b\u4e86 </p> <p>\u4e00\u4e2a<code>pipeline</code>\u4ee3\u7801\u7247\u6bb5\u751f\u6210\u5668\uff0c\u901a\u8fc7\u754c\u9762\u64cd\u4f5c\u5c31\u53ef\u4ee5\u751f\u6210\u4ee3\u7801\u3002 </p> <p>\u8fdb\u5165<code>pipeline</code>\u9879\u76ee\u540e\uff0c\u5355\u51fb\u5de6\u8fb9\u7684<code>\u201cPipeline Syntax\u201d</code>\u83dc\u5355\u9879\uff08\u53ea\u6709<code>pipeline</code>\u9879\u76ee\u6709\uff09\u56fe3-6\u6240\u793a\u3002 </p> <p>\u8fdb\u5165<code>\u201cPipeline Syntax\"</code>\u9875\u9762\u540e\uff0c\u5728\u53f3\u8fb9\u7684\u201cSample Step\u201d\u4e0b\u62c9\u6846\u4e2d\u9009\u62e9\u9700\u8981\u751f\u6210\u4ee3\u7801\u7684\u6b65\u9aa4\uff0c\u5e76\u6839\u636e\u63d0\u793a\u586b\u5165\u53c2\u6570\uff0c\u7136\u540e\u5355\u51fb<code>\u201cGenerate Pipeline Script\u201d</code>\u6309\u94ae\uff0c\u5c31\u53ef\u4ee5\u751f\u6210\u4ee3\u7801\u4e86\uff0c\u5982 </p> <p> </p>"},{"location":"chap2/2chap2_declarative_pipeline/#1-7-6-vs-codejenkinsfile","title":"1-7-6 \u4f7f\u7528<code>VS Code</code>\u6269\u5c55\u6821\u9a8c<code>Jenkinsfile</code>","text":"<p>\u4e0d\u50cfJava\u8bed\u8a00\u6709\u5404\u79cd\u5f00\u53d1\u5de5\u5177\u652f\u6301\uff0c<code>Jenkinsfile</code> \u4ece\u8bde\u751f\u4ee5\u6765\u5c31\u6ca1\u6709\u5f88\u597d\u7684\u5de5\u5177\u652f\u6301, \u65e0\u5948\u53ea\u80fd\u4f7f\u7528<code>VSCode</code>\u6587\u672c\u7f16\u8f91\u5668<code>\uff0bGroovy</code>\u8bed\u6cd5\u9ad8\u4eae\u8fdb\u884c\u5f00\u53d1\u3002\u5bf9\u8bed\u6cd5\u7684\u6821\u9a8c\u5168\u51ed\u81ea\u5df1\u5bf9<code>Jenkinsfile</code>\u7684\u4e86\u89e3</p> <p>2018\u5e7411\u6708\u521d\uff0cJenkins\u5b98\u65b9\u535a\u5ba2\u4ecb\u7ecd\u4e86\u4e00\u4e2a<code>VS Code</code>\u6269\u5c55\uff1a<code>Jenkins Pipeline Linter Connector,</code> \u5b9e\u73b0\u4e86\u5bf9<code>Jenkinsfile</code>\u7684\u8bed\u6cd5\u6821\u9a8c\u3002 </p> <p>\u5728<code>VS Code</code>\u5e94\u7528\u5e02\u573a\u641c\u7d22<code>\u201cJenkins Pipeline Linter Connector\u201d</code>\u5e76\u5b89\u88c5\uff0c\u7136\u540e\u5bf9\u4e00\u8be5\u6269\u5c55\u8fdb\u884c\u8bbe\u7f6e\uff0c</p> <p> </p> <p>\u7136\u540e\uff0c\u8fdb\u4eba<code>Jenkins</code>\u7684<code>Manage Jenkins</code>-&gt;<code>Manage Configure Global Security</code>\u9875\uff0c\u786e\u8ba4<code>Jenkins</code> \u542f\u7528\u4e86<code>\u201cCSRF Protection\"</code></p> <p> </p> <p>\u63a5\u4e0b\u6765\uff0c\u6253\u5f00\u4e00\u4e2a<code>Jenkinsfile</code>\u6587\u4ef6\uff0c\u8c03\u7528\u6269\u5c55\u547d\u4ee4\uff0c </p> <p>vscode <code>shift + command + p</code></p> <p> </p> <p>\u6700\u540e\u5728OUTPUT\u4e2d\u53ef\u4ee5\u770b\u5229\u6821\u9a8c\u7ed3\u679c </p> <p> </p> <p>\u4f7f\u7528<code>Workspace Cleanup</code>\u63d2\u4ef6\u7406\u7a7a\u95f4 </p> <p>\u901a\u5e38\uff0c \u5f53<code>pipeline</code>\u6267\u884c\u5b8c\u6210\u540e\uff0c\u4e0d\u4f1a\u81ea\u52a8\u6e05\u7406\u7a7a\u95f4\u5982\u679c\u9700\u8981\uff08\u901a\u5e38\u9700\u8981\uff09\u6e05\u7406\u5de5\u4f5c\u7a7a\u95f4\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7<code>Workspace Cleanup</code>\u63d2\u4ef6\u5b9e\u73b0 </p> <ul> <li>\u5b89\u88c5<code>Workspace Cleanup</code>\u63d2\u4ef6</li> <li>\u5728<code>pipeline</code>\u7684<code>post</code>\u90e8\u5206\u52a0\u5165\u63d2\u4ef6\u6b65\u9aa4</li> </ul> <pre><code>post {\n    always {\n        cleanWs()\n    }\n}\n</code></pre>"},{"location":"chap2/2chap2_declarative_pipeline/#1-7-7-ant","title":"1-7-7 Ant\u98ce\u683c\u8def\u5f84\u8868\u8fbe\u5f0f\u7b80\u4ecb","text":"<p><code>Ant</code>\u662f\u6bd4<code>Maven</code>\u66f4\u8001\u7684<code>Java</code>\u6784\u5efa\u5de5\u5177\u3002<code>Ant</code>\u53d1\u660e\u4e86\u4e00\u79cd\u63cf\u8ff0\u6587\u4ef6\u8def\u5f84\u7684\u8868\u8fbe\u5f0f\uff0c\u5927\u5bb6\u90fd\u4e60\u60ef\u79f0\u5176\u4e3a<code>Ant</code>\u98ce\u683c\u8def\u5f84\u8868\u8fbe\u5f0f\u3002 <code>Jenkins pipeline</code>\u7684\u5f88\u591a\u6b65\u9aa4\u7684\u53c2\u6570\u4e5f\u4f1a\u4f7f\u7528\u6b64\u8868\u8fbe\u5f0f\u3002 </p> <p><code>Ant</code>\u8def\u5f84\u8868\u8fbe\u5f0f\u5305\u62ec3\u79cd\u901a\u914d\u7b26\u3002</p> <ul> <li><code>\uff1f</code>\uff1a\u5339\u914d\u4efb\u4f55\u5355\u5b57\u7b26\u3002 </li> <li><code>*</code>\uff1a\u5339\u914d<code>0</code>\u4e2a\u6216\u8005\u4efb\u610f\u6570\u91cf\u7684\u5b57\u7b26\u3002 </li> <li><code>**</code>\uff1a\u5339\u914d0\u4e2a\u6216\u8005\u66f4\u591a\u7684\u76ee\u5f55\u3002 </li> </ul> <p>\u6211\u4eec\u901a\u8fc7\u4ee5\u4e0b\u4f8b\u5b50\u6765\u5b66\u4e60\u3002</p> <ul> <li><code>**/cvs/*</code>\uff1a\u5339\u914d<code>cvs</code>\u6587\u4ef6\u5939\u4e0b\u7684\u6240\u6709\u6587\u4ef6\uff0c<code>cvs</code>\u6587\u4ef6\u5939\u53ef\u4ee5\u5728\u4efb\u4f55\u5c42\u7ea7\u3002</li> </ul> <p>\u4ee5\u4e0b\u8def\u5f84\u4f1a\u88ab\u5339\u914d\u5230\uff1a </p> <pre><code>CVS/Repository \norg/apache/CVS/Entries \norg/apache/jakarta/tools/ant/CVS/Entries \n</code></pre> <p>\u4ee5\u4e0b<code>foo/bar</code>\u90e8\u5206\u4e0d\u4f1a\u88ab\u5339\u914d\u5230</p> <pre><code>org/apache/CVS/foo/bar/Entries \n</code></pre> <ul> <li><code>org/apache/jakarta/**</code>\uff1a\u5339\u914d<code>org/apache/jakarta</code>\u8def\u5f84\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u3002 </li> </ul> <p>\u4ee5\u4e0b\u8def\u5f84\u4f1a\u88ab\u5339\u914d\u5230\uff1a </p> <pre><code>org/apache/jakarta/tools/ant/docs/index.html \norg/apache/jakarta/test.xml \n</code></pre> <p>\u4ee5\u4e0b\u8def\u5f84\u4e0d\u4f1a\u88ab\u5339\u914d\u5230\uff1a </p> <pre><code>org/apache/xyz.java\n</code></pre> <ul> <li><code>org/apache/**/CVS/*</code>\uff1a\u5339\u914d<code>org/apache</code>\u8def\u5f84\u4e0b\u7684<code>cvs</code>\u6587\u4ef6\u5939\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u3002<code>cvs</code>\u6587\u4ef6\u5939\u53ef\u4ee5\u5728\u4efb\u4f55\u5c42\u7ea7\u3002 </li> </ul> <p>\u4ee5\u4e0b\u8def\u5f84\u4f1a\u88ab\u5339\u914d\u5230\uff1a </p> <pre><code>org/apache/CVS/Entries \norg/apache/jakarta/tools/ant/CVS/Entries \n</code></pre> <p>\u4ee5\u4e0b\u8def\u5f84\u4e0d\u4f1a\u88ab\u5339\u914d\u5230\uff1a </p> <pre><code>org/apache/CVS/foo/bar/Entries \n</code></pre> <ul> <li><code>**/test/**</code>: \u5339\u914d\u6240\u6709\u8def\u5f84\u4e2d\u542b\u6709<code>test</code>\u7684\u8def\u5f84</li> </ul>"},{"location":"chap2/2chap2_declarative_pipeline/#how-to-check-jenkins-dsl-viewer-page","title":"How to check Jenkins DSL Viewer Page","text":"<p>Input the url of Viewer Page</p> <pre><code>htpp://jenkins_url/plugin/job-dsl/api-viewer/index.html\n</code></pre> <p>For example:</p> <pre><code>http://192.168.33.11:8080/plugin/job-dsl/api-viewer/index.html\n</code></pre> <p> </p>"},{"location":"chap2/3chap2_script_pipeline/","title":"\u7b2c\u4e09\u8282 \u811a\u672c\u5316Pipeline","text":"<p>\u811a\u672c\u5316\u6d41\u6c34\u7ebf, \u4e0e\u58f0\u660e\u5f0f\u4e00\u6837\u7684\u662f, \u662f\u5efa\u7acb\u5728\u5e95\u5c42\u6d41\u6c34\u7ebf\u7684\u5b50\u7cfb\u7edf\u4e0a\u7684\u3002\u4e0e\u58f0\u660e\u5f0f\u4e0d\u540c\u7684\u662f, \u811a\u672c\u5316\u6d41\u6c34\u7ebf\u5b9e\u9645\u4e0a\u662f\u7531 <code>Groovy</code>\u6784\u5efa\u7684\u901a\u7528 <code>DSL</code> \u3002 <code>Groovy</code> \u8bed\u8a00\u63d0\u4f9b\u7684\u5927\u90e8\u5206\u529f\u80fd\u90fd\u53ef\u4ee5\u7528\u4e8e\u811a\u672c\u5316\u6d41\u6c34\u7ebf\u7684\u7528\u6237\u3002\u8fd9\u610f\u5473\u7740\u5b83\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u8868\u73b0\u529b\u548c\u7075\u6d3b\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b83\u7f16\u5199\u6301\u7eed\u4ea4\u4ed8\u6d41\u6c34\u7ebf\u3002</p>"},{"location":"chap2/3chap2_script_pipeline/#1","title":"1.\u6d41\u7a0b\u63a7\u5236","text":"<p>\u811a\u672c\u5316\u6d41\u6c34\u7ebf\u4ece<code>Jenkinsfile</code>\u7684\u9876\u90e8\u5f00\u59cb\u5411\u4e0b\u4e32\u884c\u6267\u884c, \u5c31\u50cf <code>Groovy</code> \u6216\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u5927\u591a\u6570\u4f20\u7edf\u811a\u672c\u4e00\u6837\u3002 \u56e0\u6b64\uff0c\u63d0\u4f9b\u6d41\u63a7\u5236\u53d6\u51b3\u4e8e <code>Groovy</code> \u8868\u8fbe\u5f0f, \u6bd4\u5982 <code>if/else</code> \u6761\u4ef6, \u4f8b\u5982:</p> <pre><code>node {\n    stage('Example') {\n        if (env.BRANCH_NAME == 'master') {\n            echo 'I only execute on the master branch'\n        } else {\n            echo 'I execute elsewhere'\n        }\n    }\n}\n</code></pre> <p>\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528<code>Groovy</code>\u7684\u5f02\u5e38\u5904\u7406\u652f\u6301\u6765\u7ba1\u7406\u811a\u672c\u5316\u6d41\u6c34\u7ebf\u6d41\u63a7\u5236\u3002\u5f53 \u6b65\u9aa4 \u5931\u8d25 \uff0c\u65e0\u8bba\u4ec0\u4e48\u539f\u56e0\uff0c\u5b83\u4eec\u90fd\u4f1a\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002\u5904\u7406\u9519\u8bef\u7684\u884c\u4e3a\u5fc5\u987b\u4f7f\u7528<code>Groovy</code>\u4e2d\u7684 <code>try/catch/finally</code> \u5757 , \u4f8b\u5982:</p> <pre><code>node {\n    stage('Example') {\n        try {\n            sh 'exit 1'\n        }\n        catch (exc) {\n            echo 'Something failed, I should sound the klaxons!'\n            throw\n        }\n    }\n}\n</code></pre>"},{"location":"chap2/4chap2_sharedlib/","title":"\u7b2c\u56db\u8282 Jenkins Pipeline \u6269\u5c55 \u2014\u2014 \u5171\u4eab\u5e93","text":""},{"location":"chap2/4chap2_sharedlib/#1-pipene","title":"1. \u5728pipene\u4e2d\u5b9a\u4e49\u51fd\u6570","text":"<p><code>pipeline</code>\u672c\u8d28\u5c31\u662f\u4e00\u4e2a<code>Groovy</code>\u811a\u672c\u3002\u6240\u4ee5\uff0c\u53ef\u4ee5\u5728<code>pipeline</code>\u4e2d\u5b9a\u4e49\u51fd\u6570\uff0c\u5e76\u4f7f\u7528<code>Groovy</code>\u8bed\u8a00\u81ea\u5e26\u7684\u7279\u6027\u3002\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86<code>createVersion</code>\u51fd\u6570\uff0c\u5e76\u4f7f\u7528\u4e86<code>Date</code>\u7c7b\u3002 </p> <pre><code>pipeline { \n    agent any \n    stages {\n        stage('Build') { \n            steps { \n                echo \"${createVersion(BUILD_NUMBER)}\" \n            } \n        }\n    }\n}\n\ndef createVersion(String BUILD_NUMBER) {\n    return new Date().format( 'yyMM' ) + \"-${BUILD_NUMBER}\"\n}\n</code></pre> <p>\u65e5\u5fd7\u6253\u5370</p> <pre><code>2006-4\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] }\n[Pipeline] // node\n[Pipeline] End of Pipeline\nFinished: SUCCESS\n</code></pre> <p>\u5176\u5b9e\u8fd8\u6709\u4e00\u79cd\u66f4\u52a0\u4f18\u96c5\u7684\u5199\u6cd5\uff0c\u5c06\u53d8\u91cf\u5b9a\u4e49\u5728<code>evnvironment</code>\u90e8\u5206</p> <pre><code>pipeline{\n    agent any\n    environment {\n        _version = createVersion(BUILD_NUMBER)\n    }\n    stages {\n        stage('Build'){\n            steps {\n                echo \"${_version}\"\n            }\n        }\n    }\n}\n\ndef createVersion(String BUILD_NUMBER) {\n    return new Date().format( 'yyMM' ) + \"-${BUILD_NUMBER}\"\n}\n</code></pre> <p>\u5982\u679c\u5728\u4e00\u4e2a<code>JenklnfiIe</code>\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u5012\u662f\u65e0\u4f24\u5927\u96c5\uff0c \u4f46\u662f\u5982\u679c\u572820\u4e2a<code>JenklnfiIe</code>\u4e2d\u91cd\u590d\u5b9a\u4e49\u8fd9\u4e2a\u51fd\u657020\u904d\uff0c\u5c31\u6709\u95ee\u9898\u4e86\u2014\u2014\u5b58\u5728\u5927\u91cf\u91cd\u590d\u7684\u4ee3\u7801\uff0c\u6240\u4ee5\uff0c\u4e0d\u63a8\u8350\u5927\u91cf\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u51fd\u6570</p>"},{"location":"chap2/4chap2_sharedlib/#2-jenkins","title":"2. Jenkins \u5171\u4eab\u5e93","text":""},{"location":"chap2/4chap2_sharedlib/#_1","title":"\u672c\u8282\u4ecb\u7ecd","text":"<p>\u7531\u4e8e\u6d41\u6c34\u7ebf\u88ab\u7ec4\u7ec7\u4e2d\u8d8a\u6765\u8d8a\u591a\u7684\u9879\u76ee\u6240\u91c7\u7528\uff0c\u5e38\u89c1\u7684\u6a21\u5f0f\u5f88\u53ef\u80fd\u4f1a\u51fa\u73b0\u3002 \u5728\u591a\u4e2a\u9879\u76ee\u4e4b\u95f4\u5171\u4eab\u6d41\u6c34\u7ebf\u6709\u52a9\u4e8e\u51cf\u5c11\u5197\u4f59\u5e76\u4fdd\u6301\u4ee3\u7801\u3002\u6d41\u6c34\u7ebf\u652f\u6301\u521b\u5efa \"\u5171\u4eab\u5e93\" \uff0c\u53ef\u4ee5\u5728\u5916\u90e8\u6e90\u4ee3\u7801\u63a7\u5236\u4ed3\u5e93\u4e2d\u5b9a\u4e49\u5e76\u52a0\u8f7d\u5230\u73b0\u6709\u7684\u6d41\u6c34\u7ebf\u4e2d\u3002</p> <ul> <li><code>src</code>\u76ee\u5f55\u7c7b\u4f3c\u4e8e\u6807\u51c6<code>Java</code>\u6e90\u76ee\u5f55\u7ed3\u6784\u3002\u6267\u884c\u6d41\u6c34\u7ebf\u65f6\uff0c\u6b64\u76ee\u5f55\u5c06\u6dfb\u52a0\u5230\u7c7b\u8def\u5f84\u4e2d\u3002 </li> <li><code>vars</code>\u76ee\u5f55\u6258\u7ba1\u811a\u672c\u6587\u4ef6\uff0c\u8fd9\u4e9b\u811a\u672c\u6587\u4ef6\u5728\u201c\u7ba1\u9053\u201d\u4e2d\u4f5c\u4e3a\u53d8\u91cf\u516c\u5f00\u3002</li> <li><code>resources</code>\u76ee\u5f55\u5141\u8bb8<code>libraryResource</code>\u4ece\u5916\u90e8\u5e93\u4e2d\u4f7f\u7528\u6b65\u9aa4\u6765\u52a0\u8f7d\u76f8\u5173\u8054\u7684\u975e <code>Groovy</code>\u6587\u4ef6\u3002 </li> </ul> <p></p> <pre><code>$ tree JenkinslibTest\nJenkinslibTest\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 org\n\u2502       \u2514\u2500\u2500 devops\n\u2502           \u251c\u2500\u2500 build.groovy\n\u2502           \u2514\u2500\u2500 tools.groovy\n\u2514\u2500\u2500 vars\n    \u2514\u2500\u2500 hello.groovy\n\n4 directories, 4 files\n</code></pre> <ul> <li><code>src</code>:  \u7c7b</li> <li><code>vars</code>: \u53d8\u91cf</li> </ul> <p><code>tools.groovy</code></p> <pre><code>package org.devops\n\n//Print content\ndef PrintMes(content){\n  println(content)\n}\n</code></pre> <p><code>build.groovy</code></p> <pre><code>package org.devops\n\ndef PrintMes(){\n  println(\"Hello World!\")\n}\n</code></pre> <p><code>hello.groovy</code></p> <pre><code>def call(){\n  print(\"hello\")\n}\n</code></pre> <p>Global Pipeline Libraries</p> <p></p> <p>\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e0b\u914d\u7f6e\u9879\u3002 </p> <ul> <li><code>Name</code>\uff1a\u5171\u4eab\u5e93\u7684\u552f\u4e00\u6807\u8bc6\uff0c\u5728<code>Jenkinsfile</code>\u4e2d\u4f1a\u4f7f\u7528\u5230\u3002</li> <li><code>Default version</code>\uff1a\u9ed8\u8ba4\u7248\u672c\u3002\u53ef\u4ee5\u662f\u5206\u652f\u540d\u3001<code>tag</code>\u6807\u7b7e\u7b49\u3002 </li> <li><code>Load implicitly</code>:\u9690\u5f0f\u52a0\u8f7d\u3002\u5982\u679c\u52fe\u9009\u6b64\u9879\uff0c\u5c06\u81ea\u52a8\u52a0\u8f7d\u5168\u5c40\u5171\u4eab\u5e93\uff0c\u5728<code>Jenkinsfile</code>\u4e2d\u4e0d\u9700\u8981\u663e\u5f0f\u5f15\u7528\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002 </li> <li><code>Allow default version to be overridden</code>\uff1a\u5982\u679c\u52fe\u9009\u6b64\u9879\uff0c\u5219\u8868\u793a\u5141\u8bb8<code>\u201cDefault version\u201d</code>\u88ab<code>Jenkinsfile</code>\u4e2d\u7684\u914d\u7f6e\u8986\u76d6\u3002</li> <li><code>Include @Library changes in job recent changes</code>:\u5982\u679c\u52fe\u9009\u6b64\u9879\uff0c\u90a3\u4e48\u5171\u4eab\u5e93\u7684\u6700\u540e\u53d8\u66f4\u4fe1\u606f\u4f1a\u8ddf\u9879\u76ee\u7684\u53d8\u66f4\u4fe1\u606f\u4e00\u8d77\u88ab\u6253\u5370\u5728\u6784\u5efa\u65e5\u5fd7\u4e2d\u3002 </li> <li><code>Retrieval method</code>\uff1a\u83b7\u53d6\u5171\u4eab\u5e93\u4ee3\u7801\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u9009\u62e9<code>\u201cModern SCM\u201d</code>\u9009\u9879\uff0c\u8fdb\u800c\u9009\u62e9\u4f7f\u7528<code>Git</code>\u4ed3\u5e93\u3002 </li> </ul> <p>\u63d0\u793a: \u9664\u4e86\u53ef\u4ee5\u4f7f\u7528<code>Git</code>\u4ed3\u5e93\u6258\u7ba1\u5171\u4eab\u5e93\u4ee3\u7801\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528<code>SVN</code>\u4ed3\u5e93\u6258\u7ba1\u3002\u4f7f\u7528\u4e0d\u540c\u7684\u4ee3\u7801\u4ed3\u5e93\u6258\u7ba1, \"Default version\" \u7684\u503c\u7684\u5199\u6cd5\u4e0d\u4e00\u6837\u3002</p>"},{"location":"chap2/4chap2_sharedlib/#3","title":"3. \u7b80\u5355\u4f7f\u7528\u5e93","text":"<p>\u6807\u8bb0<code>Load</code>\u7684\u5171\u4eab\u5e93\u9690\u542b\u7684\u5141\u8bb8\u7ba1\u9053\u7acb\u5373\u4f7f\u7528\u4efb\u4f55\u6b64\u7c7b\u5e93\u5b9a\u4e49\u7684\u7c7b\u6b7b\u5168\u5c40\u53d8\u91cf\u3002 \u8981\u8bbf\u95ee\u5176\u4ed6\u5171\u4eab\u5e93\uff0c Jenkinsfile\u9700\u8981\u4f7f\u7528<code>@Library</code>\u6ce8\u91ca\uff0c\u5e76\u6307\u5b9a\u5e93\u7684\u540d\u79f0</p> <pre><code>@Library('my-shared-library')  _\n/* Using a version specifierk such as branch, tag, etc */ \n\n\n@Library('my-shared-library@&lt;version&gt;')  _\n\n@Library('my-shared-library@1.0') _ \n/* Accessing multiple libraries with one statement */ \n\n@Library(['my-shared-library', 'otherlib@abc12341']) _ \n</code></pre> <p><code>_</code>\uff1a \u4ee3\u8868\u5f15\u7528</p> <ul> <li>\u7248\u672c</li> <li>\u5206\u652f\uff0c<code>@Library('my-shared-library@dev') _</code></li> <li><code>tag</code>\u6807\u7b7e\uff0c\u5982<code>@Library('my-shared-library@release1.0') _</code> </li> <li><code>git commit id</code>\uff0c\u5982<code>@Library('my-shared-library@e88044e73fea304a905dc00a1af2l97d945aa1e36') _</code> </li> </ul> <p>\u56e0\u4e3a<code>Jenkins</code>\u4ea4\u6301\u540c\u65f6\u6dfb\u52a0\u591a\u4e2a\u5171\u4eab\u5e93, \u6240\u4ee5<code>@Library</code>\u6ce8\u89e3\u8fd8\u5141\u8bb8\u6211\u4eec\u540c\u65f6\u5f15\u5165\u591a\u4e2a\u5171\u4eab \u5e93\u3001\u5982<code>@Library( ['global-shared-library','my-shared-library@dev']) _</code>\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cJenkins\u5904\u7406\u591a\u4e2a\u5171\u4eab\u5e93\u51fa\u73b0\u540c\u540d\u51fd\u6570\u7684\u65b9\u5f0f\u662f\u5148\u5b9a\u4e49\u8005\u751f\u6548\u3002\u4e5f\u5c31\u662f\u8bf4\u5982 <code>global-shared-library</code>\u4e0e<code>my-shared-library</code>\u5b58\u5728\u540c\u540d\u7684<code>sayHello</code>, \u800c<code>@Library</code>\u5f15\u4eba\u65f6<code>'global-shared-library'</code> \u5728<code>my-shared-library</code> \u524d\u90a3\u4e48\u5c31\u53ea\u6709<code>global-shared-library</code>\u7684<code>sayHello</code>\u751f\u6548\u3002</p>"},{"location":"chap2/4chap2_sharedlib/#jenkinsfile","title":"<code>Jenkinsfile</code>","text":"<pre><code>@Library('jenkinslib') _\ndef tools = new org.devops.tools()\n\n\nString workspace = \"/home/vagrant/workspace\" \n\n//Pipeline \npipeline {\n    agent { node { label \"hostmachine\"   //\u6307\u5b9a\u8fd0\u884c\u8282\u70b9\u7684\u6807\u7b7e\u6216\u8005\u540d\u79f0\n                     customWorkspace \"${workspace}\" //\u6307\u5b9a\u8fd0\u884c\u5de5\u4f5c\u76ee\u5f55\uff08\u53ef\u9009\uff09\n            }\n    }\n\n    options { \n        timestamps()    //\u65e5\u5fd7\u4f1a\u6709\u65f6\u95f4\n        skipDefaultCheckout()  //\u5220\u9664\u9690\u5f0fcheckout scm \u8bed\u53e5\n        disableConcurrentBuilds()  //\u9759\u6b62\u5e76\u884c\n        timeout(time: 1, unit: 'HOURS')  //\u6d41\u6c34\u7ebf\u8d85\u65f6\u8bbe\u7f6e1h\n    }\n\n    stages { \n    //\u4e0b\u8f7d\u4ee3\u7801\n        stage(\"GetCode\"){   //\u9636\u6bb5\u540d\u79f0\n            steps{   //\u540d\u79f0\n                timeout(time:5, unit:\"MINUTES\"){   //\u6b65\u9aa4\u8d85\u65f6\u65f6\u95f4\n                    script{   //\u586b\u5199\u8fd0\u884c\u4ee3\u7801\n                        println('\u83b7\u53d6\u4ee3\u7801') \n                    } \n                } \n            } \n        }\n       //\u6784\u5efa\n        stage(\"Build\"){ \n            steps{\n                timeout(time:20, unit:\"MINUTES\"){ \n                    script{ \n                        println('\u5e94\u7528\u6253\u5305')\n\n                        mvnHome = tool \"m2\"\n                        println(mvnHome)\n\n                        sh \"${mvnHome}/bin/mvn --version\"\n                    }\n                } \n            }\n        }\n\n        //\u4ee3\u7801\u626b\u63cf\n        stage(\"CodeScan\"){\n            steps{ \n                timeout(time:30, unit:\"MINUTES\"){ \n                    script{ \n                        print('\u4ee3\u7801\u626b\u63cf')\n\n                        tools.PrintMes('This from shared Libray')\n                    } \n                }\n            }\n        }\n    } \n</code></pre> <p>\u8ba9\u6211\u4eec\u770b\u770b<code>build-log</code></p> <pre><code>Obtained Jenkinsfile from git https://github.com/Chao-Xi/JenkinslibTest.git\nRunning in Durability level: MAX_SURVIVABILITY\nLoading library jenkinslib@master\nExamining Chao-Xi/JenkinslibTest\nAttempting to resolve master as a branch\nResolved master as branch master at revision c06d27a576408f760436629bc6b4948d8722ed89\nusing credential GitHub\nCloning the remote Git repository\nCloning with configured refspecs honoured and without tags\nCloning repository https://github.com/Chao-Xi/JenkinslibTest.git\n...\n19:07:38  \u4ee3\u7801\u626b\u63cf\n[Pipeline] echo\n19:07:38  This from shared Libray\n...\n</code></pre>"},{"location":"chap2/4chap2_sharedlib/#4","title":"4. \u5171\u4eab\u5e93\u8be6\u7ec6\u7684\u4ecb\u7ecd","text":"<p>\u56de\u987e\u4e00\u4e0b\u5e93\u76ee\u5f55</p> <pre><code>.\n\u251c\u2500\u2500 Jenkinsfile\n\u251c\u2500\u2500 Jenkinsfiletests\n\u2502   \u2514\u2500\u2500 Jenkinsfile-mvn\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 org\n\u2502       \u251c\u2500\u2500 devops\n\u2502       \u2502   \u251c\u2500\u2500 build.groovy\n\u2502       \u2502   \u2514\u2500\u2500 tools.groovy\n\u2502       \u2514\u2500\u2500 showme\n\u2502           \u2514\u2500\u2500 Utils.groovy\n\u2514\u2500\u2500 vars\n    \u251c\u2500\u2500 hello.groovy\n    \u251c\u2500\u2500 mvn.groovy\n    \u2514\u2500\u2500 sayHello.groovy\n\n6 directories, 9 files\n</code></pre> <p>\u9996\u5148\u770b<code>vars</code>\u76ee\u5f55</p> <p>\u653e\u5728<code>vars</code>\u76ee\u5f55\u4e0b\u7684\u662f\u53ef\u4ee5\u4ece<code>pipeline</code>\u76f4\u63a5\u8c03\u7528\u7684\u5168\u5c40\u53d8\u91cf\uff08\u4f7f\u7528\u53d8\u91cf\u8fd9\u4e2a\u540d\u79f0\u5b9e\u5728\u6709\u4e9b\u5947\u602a\uff09\u3002\u53d8\u91cf\u7684\u6587\u4ef6\u540d\u5373\u4e3a\u5728<code>pipeline</code>\u4e2d\u8c03\u7528\u7684\u51fd\u6570\u540d\u3002\u6587\u4ef6\u540d\u4e3a\u9a7c\u5cf0\u5f0f\uff08<code>camelCased</code>)\u7684 </p> <p>\u4f7f\u7528<code>vars</code>\u76ee\u5f55\u4e0b\u7684\u5168\u5c40\u53d8\u91cf\u53ef\u4ee5\u8c03\u7528<code>Jenkins pipelne</code>\u7684\u6b65\u9aa4\u3002\u6b63\u5982<code>sayHello.groovy</code>\u811a\u672c \u76f4\u63a5\u4f7f\u7528\u4e86<code>echo</code>\u6b65\u9aa4 </p> <pre><code>def call(String name = 'human'\uff09{ \n    echo \u201dHello, ${name).\u201c\n}\n</code></pre> <p>\u5f53\u6211\u4eec\u5728<code>Jenkinsfile</code>\u4e2d\u5199<code>sayHello(\"world\")</code>\u65f6\u5b83\u5b9e\u9645\u8c03\u7528\u7684\u662f<code>sayHello. groovy</code>\u6587\u4ef6\u4e2d\u7684<code>call</code>\u51fd\u6570 </p> <p><code>call</code>\u51fd\u6570\u8fd8\u652f\u6301\u63a5\u6536\u95ed\u5305<code>\uff08Closure)</code>\u3002\u4e0b\u4f8b\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a<code>mvn</code>\u5168\u5c40\u53d8\u91cf\u3002</p> <pre><code>//var/mvn.groovy\n\ndef call(mvnExec) { \n    configFileProvider([configFile(fileId: 'maven-global-settings', variable: 'MAVEN_GLOBAL_ENV')]) { \n    mvnExec(\"${MAVEN_GLOBAI_ENV}\")\n    }\n} \n</code></pre> <p>\u4ee5\u4e0a<code>call</code>\u51fd\u6570\u91cc\u7684\u5185\u5bb9\u5c31\u662f\u5c06<code>configFileProvider</code>\u54c6\u55e6\u7684\u5199\u6cd5\u5c01\u88c5\u5728<code>mvn</code>\u53d8\u91cf\u4e2d\u3002\u8fd9\u6837\u6211\u4eec\u5c31  \u53ef\u4ee5\u66f4\u7b80\u6377\u5730\u6267\u884c<code>mvn</code>\u547d\u4ee4\u4e86</p> <pre><code>@Library('global-shared-library@master') _ \npipeline {\n    agent any \n    tools { \n        maven 'mvn-3.5.4' \n    }\n\n    stages { \n        stage('Build') { \n            steps \n                mvn { settings -&gt; \n                    sh \"mvn -s ${settings} clean install\" \n                } \n            } \n        } \n    }\n}\n</code></pre> <p>\u63a5\u7740\u6211\u4eec\u6765\u770bsrc\u76ee\u5f55\u3002 </p> <p><code>src</code>\u76ee\u5f55\u662f\u4e00\u4e2a\u6807\u51c6\u7684<code>Java</code>\u6e90\u7801\u7ed3\u6784\uff0c\u76ee\u5f55\u4e2d\u7684\u7c7b\u88ab\u79f0\u4e3a\u5e93\u7c7b(<code>Library class</code>)\uff1a\u800c<code>@Library(' global-shared-library@dev') _</code>\u4e2d\u7684<code>_</code>\u4ee3\u8868\u4e00\u6b21\u6027\u9759\u6001\u52a0\u8f7d<code>src</code>\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u4ee3\u7801\u5230<code>classpath</code>\u4e2d\uff1a </p> <pre><code>package org.showme\n\nclass Utils implements Serializable { \n    def getVersion(String BUILD_NUMBER ,String GIT_COMMIT){ \n        return new Date().format( 'yyMM' ) + \"-${BUILD_NUMBER}\" + \"-${GIT_COMMIT}\" \n        }\n}\n</code></pre> <p>\u63d0\u793a\uff1a<code>Utils</code>\u5b9e\u73b0\u4e86<code>Serializable</code>\u63a5\u53e3\uff0c\u662f\u4e3a\u4e86\u786e\u4fdd\u5f53<code>pipeline</code>\u88ab<code>Jenkins</code>\u6302\u8d77\u540e\u80fd\u6b63\u786e\u6062\u590d\u3002 </p> <p>\u5728\u4f7f\u7528<code>src</code>\u76ee\u5f55\u4e2d\u7684\u7c7b\u65f6\uff0c\u9700\u8981\u4f7f\u7528\u5168\u5305\u540d\u3002\u540c\u65f6\uff0c\u56e0\u4e3a\u5199\u7684\u662f<code>Groovy</code>\u4ee3\u7801\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u4f7f  \u7528<code>script</code>\u6307\u4ee4\u5305\u8d77\u6765, \u793a\u4f8b\u5982\u4e0b\uff1a </p> <pre><code>@Library(['jenkinslib'])  _ \npipeline { \n    agent any \n    stages { \n        stage('Build') { \n            steps { \n                script{ \n                    def util = new org.showme.Utils() \n                    def v = util.getVersion(\"${BUILD_NUMBER}\", \"${GIT_COMMIT}\") \n                    echo \"${v}\" \n                }    \n            } \n        } \n    } \n} \n</code></pre> <ul> <li><code>Script Path</code>: <code>./Jenkinsfiletests/Jenkinsfile-mvn</code></li> </ul> <pre><code>[Pipeline] { (Build)\n[Pipeline] script\n[Pipeline] {\n[Pipeline] echo\n2006-3-261d033b7fd541cadab80ddb110a3e7ddd93cdd7\n[Pipeline] }\n[Pipeline] // script\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] }\n[Pipeline] // withEnv\n</code></pre> <p><code>src</code>\u76ee\u5f55\u4e2d\u7684\u7c7b\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528<code>Groovy</code>\u7684\u3002<code>Grab</code>\u6ce8\u89e3\uff0c\u81ea\u52a8\u4e0b\u8f7d\u7b2c\u4e09\u65b9\u4f9d\u8d56\u5305\u3002 </p> <pre><code>package org.showme\n@Grab(group = 'org.apache.commons', module = 'commons\u2014lang3', version = '3.6') \nimport org.apache.commons.lang3.StringUtils \n...\n</code></pre> <p>\u4f7f\u7528\u5171\u4eab\u5e93\u5b9e\u73b0pipeline\u6a21\u677f</p> <p>\u58f0\u660e\u5f0f<code>pipeline</code>\u5728<code>1.2</code>\u7248\u672c\u540e\uff0c\u53ef\u4ee5\u5728\u5171\u4eab\u5e93\u4e2d\u5b9a\u4e49<code>pipeline</code>\u3002\u901a\u8fc7\u6b64\u7279\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49<code>pipeline</code>\u7684\u6a21\u677f\uff0c\u6839\u636e\u4e0d\u540c\u7684\u8bed\u8a00\u6267\u884c\u4e0d\u540c\u7684<code>pipeline</code>\u3002\u5171\u4eab\u5e93\u4ee3\u7801\u5982\u4e0b\uff1a </p> <pre><code>// vars/generatePipeline.groovy \n\ndef call(String lang) {\n    if(lang == 'go') {\n        pipeline { \n            agent any \n            stages { \n                stage('set GOPATH') { \n                    steps { \n                        echo \"GOPATH is ready\" \n                    } \n                } \n            }\n        } \n    } else if(lang == 'java') { \n        pipeline { \n        agent any \n        stages { \n            stage('clean install') { \n                steps { \n                    sh \"mvn clean install\" \n                    } \n                } \n            } \n        } \n    } \n//\u5176\u4ed6\u8bed\u8a00\n}\n</code></pre> <p>\u4f7f\u7528\u65f6\uff0c<code>Jenkinsfile</code>\u53ea\u6709\u4e24\u884c\u4ee3\u7801\uff1a </p> <pre><code>@Library(['jenkinslib'])  _ \ngeneratePipeline('go')\n</code></pre> <p>\u5982\u679c\u5927\u591a\u6570\u9879\u76ee\u7684\u7ed3\u6784\u90fd\u662f\u6807\u51c6\u5316\u7684\uff0c\u90a3\u4e48\u5229\u7528<code>pipeline</code>\u6a21\u677f\u6280\u672f\u53ef\u4ee5\u5927\u5927\u964d\u4f4e\u7ef4\u62a4<code>pipeline</code> \u7684\u6210\u672c\u3002</p>"},{"location":"chap2/4chap2_sharedlib/#5","title":"5. \u5b9e\u8df5\u4f7f\u7528\u5171\u4eab\u5e93\u683c\u5f0f\u5316\u65e5\u5fd7","text":"<p>\u672c\u8282\u4f7f\u7528\u524d\u9762\u4e00\u8282\u8bfe\u5b66\u4e60\u7684\u5171\u4eab\u5e93\u6765\u5b9e\u8df5\uff0c\u4f7f\u7528\u5171\u4eab\u5e93\u6765\u683c\u5f0f\u5316\u65e5\u5fd7\u8f93\u51fa\u3002</p>"},{"location":"chap2/4chap2_sharedlib/#5-1-ansicolor","title":"5-1 \u5b89\u88c5<code>ansicolor</code> \u63d2\u4ef6","text":"<p>\u6ce8\u610f\uff1a\u6211\u4eec\u9700\u8981\u5b89\u88c5 \u63d2\u4ef6AnsiColor\uff0c\u8fd9\u6837\u624d\u80fd\u4f7f\u7528ansiColor()\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u7247\u6bb5\u751f\u6210\u5668\u67e5\u770b\u66f4\u591a\u7684\u7528\u6cd5\u3002</p> <p>https://plugins.jenkins.io/ansicolor/</p>"},{"location":"chap2/4chap2_sharedlib/#5-2","title":"5-2 \u589e\u52a0\u683c\u5f0f\u5316\u8f93\u51fa\u65b9\u6cd5","text":"<p><code>tools.groovy</code></p> <pre><code>package org.devops\n\n//\u683c\u5f0f\u5316\u8f93\u51fa\ndef PrintMes(value,color){\n    colors = ['red'   : \"\\033[40;31m &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;${value}&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; \\033[0m\",\n              'blue'  : \"\\033[47;34m ${value} \\033[0m\",\n              'green' : \"\u001b[1;32m&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;${value}&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\u001b[m\",\n              'green1' : \"\\033[40;32m &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;${value}&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; \\033[0m\" ]\n\n   ansiColor('xterm') {\n        println(colors[color])\n    }\n}\n</code></pre>"},{"location":"chap2/4chap2_sharedlib/#5-3-jenkinsfile","title":"5-3 \u4fee\u6539<code>Jenkinsfile</code>","text":"<p>\u5728<code>Jenkinsfile</code>\u4e2d\u4f7f\u7528<code>@Library('jenkinslib') _</code>\u6765\u52a0\u8f7d\u5171\u4eab\u5e93\uff0c\u6ce8\u610f\u540e\u9762\u7b26\u53f7<code>_</code>\u7528\u4e8e\u52a0\u8f7d\u3002\u7c7b\u7684\u5b9e\u4f8b\u5316<code>def tools = new org.devops.tools()</code>,\u4f7f\u7528\u7c7b\u4e2d\u7684\u65b9\u6cd5<code>tools.PrintMes(\"\u83b7\u53d6\u4ee3\u7801\",'green')</code>\u3002</p> <pre><code>@Library('jenkinslib') _\ndef tools = new org.devops.tools()\n\nString workspace = \"/home/vagrant/workspace\" \n\n//Pipeline \npipeline {\n    agent { node { label \"hostmachine\"   //\u6307\u5b9a\u8fd0\u884c\u8282\u70b9\u7684\u6807\u7b7e\u6216\u8005\u540d\u79f0\n                     customWorkspace \"${workspace}\" //\u6307\u5b9a\u8fd0\u884c\u5de5\u4f5c\u76ee\u5f55\uff08\u53ef\u9009\uff09\n            }\n    }\n\n    options { \n        timestamps()    //\u65e5\u5fd7\u4f1a\u6709\u65f6\u95f4\n        skipDefaultCheckout()  //\u5220\u9664\u9690\u5f0fcheckout scm \u8bed\u53e5\n        disableConcurrentBuilds()  //\u9759\u6b62\u5e76\u884c\n        timeout(time: 1, unit: 'HOURS')  //\u6d41\u6c34\u7ebf\u8d85\u65f6\u8bbe\u7f6e1h\n    }\n\n    stages { \n    //\u4e0b\u8f7d\u4ee3\u7801\n        stage(\"GetCode\"){   //\u9636\u6bb5\u540d\u79f0\n            steps{   //\u540d\u79f0\n                timeout(time:5, unit:\"MINUTES\"){   //\u6b65\u9aa4\u8d85\u65f6\u65f6\u95f4\n                    script{   //\u586b\u5199\u8fd0\u884c\u4ee3\u7801\n                        println('\u83b7\u53d6\u4ee3\u7801') \n                        tools.PrintMes('\u4ee3\u7801\u626b\u63cf','green1')\n                    } \n                } \n            } \n        }\n       //\u6784\u5efa\n        stage(\"Build\"){ \n            steps{\n                timeout(time:20, unit:\"MINUTES\"){ \n                    script{ \n                        println('\u5e94\u7528\u6253\u5305')\n                        tools.PrintMes('\u4ee3\u7801\u626b\u63cf','blue')\n\n                        mvnHome = tool \"m2\"\n                        println(mvnHome)\n\n                        sh \"${mvnHome}/bin/mvn --version\"\n                    }\n                } \n            }\n        }\n\n        //\u4ee3\u7801\u626b\u63cf\n        stage(\"CodeScan\"){\n            steps{ \n                timeout(time:30, unit:\"MINUTES\"){ \n                    script{ \n                        print('\u4ee3\u7801\u626b\u63cf')\n                        tools.PrintMes('\u4ee3\u7801\u626b\u63cf','green')\n                    } \n                }\n            }\n        }\n    } \n</code></pre> <p>\u63a5\u4e0b\u6765\u5728\u4f60\u7684Jenkins\u4e0a\u9762\u8fd0\u884c\u4e00\u4e0b\u5427\uff0c\u6d4b\u8bd5\u4e00\u4e0b\u662f\u5426\u80fd\u591f\u770b\u5230\u5e26\u6709\u7eff\u8272\u7684\u6587\u5b57\u5462\uff1f</p>"},{"location":"chap2/5chap2_quick_jenkinsfile/","title":"\u7b2c\u4e94\u8282 \u5982\u4f55\u5feb\u901f\u4e0a\u624b<code>Jenkinsfile</code>\u7f16\u5199","text":""},{"location":"chap2/5chap2_quick_jenkinsfile/#_1","title":"\u672c\u8282\u4ecb\u7ecd","text":"<ol> <li>\u7247\u6bb5\u751f\u6210\u5668</li> <li>\u58f0\u660e\u5f0f\u8bed\u6cd5\u751f\u6210\u5668</li> <li>\u5168\u5c40\u53d8\u91cf\u53c2\u8003</li> <li>\u5e38\u7528\u7684\u6d41\u6c34\u7ebf\u65b9\u6cd5</li> </ol>"},{"location":"chap2/5chap2_quick_jenkinsfile/#1","title":"1. \u7247\u6bb5\u751f\u6210\u5668","text":"<p>\u4f7f\u7528\u7247\u6bb5\u751f\u6210\u5668\u53ef\u4ee5\u6839\u636e\u4e2a\u4eba\u9700\u8981\u751f\u6210\u65b9\u6cd5\uff0c\u6709\u4e9b\u65b9\u6cd5\u6765\u6e90\u4e8e\u63d2\u4ef6\uff0c\u5219\u9700\u8981\u5148\u5b89\u88c5\u76f8\u5173\u7684\u63d2\u4ef6\u624d\u80fd\u4f7f\u7528\u54e6\u3002</p> <p></p> <p>\u586b\u5199\u597d\u53c2\u6570\u540e\uff0c\u70b9\u51fb\u751f\u6210\uff0c\u7136\u540e\u590d\u5236\u7c98\u8d34\u5230<code>Jenkinsfile</code>\u3002</p> <p></p>"},{"location":"chap2/5chap2_quick_jenkinsfile/#2","title":"2. \u58f0\u660e\u5f0f\u8bed\u6cd5\u751f\u6210\u5668","text":"<p>\u5bf9\u4e8e\u4e0d\u719f\u6089\u58f0\u660e\u5f0f\u8bed\u6cd5\u7684\u4f19\u4f34\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u58f0\u660e\u5f0f\u8bed\u6cd5\u751f\u6210\u5668\u9009\u62e9\u751f\u6210<code>jenkinsfile</code>\u7684\u7247\u6bb5\u3002\u5728\u5b9e\u9645\u5b9e\u8df5\u4e2d\u5f88\u6709\u5e2e\u52a9\u7684\u3002</p> <p></p>"},{"location":"chap2/5chap2_quick_jenkinsfile/#3","title":"3. \u5168\u5c40\u53d8\u91cf","text":"<p>\u5f53\u6211\u4eec\u5728\u914d\u7f6e\u90ae\u4ef6\u901a\u77e5\u65f6\u6216\u8005\u5236\u4f5c\u6807\u7b7e\u65f6\uff0c\u53ef\u4ee5\u501f\u7528Jenkins\u81ea\u5e26\u7684\u5168\u5c40\u53d8\u91cf\u5b8c\u6210\u3002</p>"},{"location":"chap2/5chap2_quick_jenkinsfile/#env","title":"\u5e38\u7528\u7684<code>env</code>\u53d8\u91cf","text":"<pre><code>BUILD_NUMBER          //\u6784\u5efa\u53f7\nBUILD_ID              //\u6784\u5efa\u53f7\nBUILD_DISPLAY_NAME    //\u6784\u5efa\u663e\u793a\u540d\u79f0\nJOB_NAME              //\u9879\u76ee\u540d\u79f0\n\nEXECUTOR_NUMBER       //\u6267\u884c\u5668\u6570\u91cf\nNODE_NAME             //\u6784\u5efa\u8282\u70b9\u540d\u79f0\nWORKSPACE             //\u5de5\u4f5c\u76ee\u5f55\nJENKINS_HOME          //Jenkins home\nJENKINS_URL           //Jenkins\u5730\u5740\nBUILD_URL             //\u6784\u5efa\u5730\u5740\nJOB_URL               //\u9879\u76ee\u5730\u5740\n</code></pre>"},{"location":"chap2/5chap2_quick_jenkinsfile/#currendbuild","title":"\u5e38\u7528\u7684<code>currendBuild</code>\u53d8\u91cf","text":"<pre><code>result  currentResult   //\u6784\u5efa\u7ed3\u679c\ndisplayName      //\u6784\u5efa\u540d\u79f0  #111\ndescription      //\u6784\u5efa\u63cf\u8ff0\nduration         //\u6301\u7eed\u65f6\u95f4\n</code></pre>"},{"location":"chap2/5chap2_quick_jenkinsfile/#4","title":"4.\u5e38\u7528\u7684\u6d41\u6c34\u7ebf\u65b9\u6cd5","text":""},{"location":"chap2/5chap2_quick_jenkinsfile/#json","title":"JSON\u5904\u7406","text":"<pre><code>def response = readJSON text: \"${scanResult}\"\nprintln(scanResult)\n\n//\u539f\u751f\u65b9\u6cd5\nimport groovy.json.*\n\n@NonCPS\ndef GetJson(text){\n    def prettyJson = JsonOutput.prettyPrint(text) \n    new JsonSlurperClassic().parseText(prettyJson)\n}\n</code></pre>"},{"location":"chap2/5chap2_quick_jenkinsfile/#_2","title":"\u4f7f\u7528\u51ed\u636e","text":"<pre><code>withCredentials([string(credentialsId: \"xxxxx\", variable: \"sonarToken\")]) {\n    println(sonarToken)\n}\n</code></pre>"},{"location":"chap2/5chap2_quick_jenkinsfile/#_3","title":"\u4e0b\u8f7d\u4ee3\u7801","text":"<pre><code>\n//Git\ncheckout([$class: 'GitSCM', branches: [[name: \"brnachName\"]], \n            doGenerateSubmoduleConfigurations: false, \n            extensions: [], submoduleCfg: [], \n            userRemoteConfigs: [[credentialsId: \"${credentialsId}\", \n            url: \"${srcUrl}\"]]])\n//Svn\ncheckout([$class: 'SubversionSCM', additionalCredentials: [], \n            filterChangelog: false, ignoreDirPropChanges: false, \n            locations: [[credentialsId: \"${credentialsId}\", \n            depthOption: 'infinity', ignoreExternalsOption: true, \n            remote: \"${svnUrl}\"]], workspaceUpdater: [$class: 'CheckoutUpdater']]\n)\n</code></pre>"},{"location":"chap2/5chap2_quick_jenkinsfile/#_4","title":"\u5c55\u793a\u62a5\u544a","text":"<pre><code>publishHTML([allowMissing: false, \n        alwaysLinkToLastBuild: false, \n        keepAll: true, \n        reportDir: './report/', \n        reportFiles: \"a.html, b.html\", \n        reportName: 'InterfaceTestReport', \n        reportTitles: 'HTML'])\n</code></pre>"},{"location":"chap2/5chap2_quick_jenkinsfile/#_5","title":"\u4ea4\u4e92\u8f93\u5165","text":"<pre><code>def result = input  message: '\u9009\u62e9xxxxx', \n                    ok: '\u63d0\u4ea4',\n                    parameters: [extendedChoice( description: 'xxxxx', \n                                                descriptionPropertyValue: '', \n                                                multiSelectDelimiter: ',', \n                                                name: 'failePositiveCases', \n                                                quoteValue: false, \n                                                saveJSONParameterToFile: false, \n                                                type: 'PT_CHECKBOX', \n                                                value: \"1,2,3\", \n                                                visibleItemCount: 99)]   \nprintln(result)\n</code></pre>"},{"location":"chap2/5chap2_quick_jenkinsfile/#_6","title":"\u6784\u5efa\u7528\u6237","text":"<pre><code>wrap([$class: 'BuildUser']){\n            echo \"full name is $BUILD_USER\"\n            echo \"user id is $BUILD_USER_ID\"\n            echo \"user email is $BUILD_USER_EMAIL\"\n}\n</code></pre>"},{"location":"chap2/5chap2_quick_jenkinsfile/#http","title":"\u53d1\u9001<code>http</code>\u8bf7\u6c42","text":"<pre><code>ApiUrl = \"http://xxxxxx/api/project_branches/list?project=${projectName}\"\nResult = httpRequest authentication: 'xxxxxxxxx',\n                         quiet: true, \n                         contentType: 'APPLICATION_JSON' ,  \n                         url: \"${ApiUrl}\"\n</code></pre>"},{"location":"chap2/6chap2_pipe_vs_dec/","title":"\u7b2c\u516d\u8282 \u811a\u672c\u5f0f\u7ba1\u9053\u4e0e\u58f0\u660e\u5f0f\u7ba1\u9053-\u56db\u4e2a\u5b9e\u9645\u5dee\u5f02","text":"<p>\u4e3a\u4ec0\u4e48\u8981\u6709\u4e24\u79cd\u7ba1\u9053\u7c7b\u578b\uff1f</p> <ul> <li>\u811a\u672c\u5316\u7ba1\u9053\u662f<code>Jenkins</code>\u4e2d\u4f5c\u4e3a\u4ee3\u7801\u7684\u7ba1\u9053\u7684\u7b2c\u4e00\u4e2a\u5b9e\u73b0\u3002\u5373\u4f7f\u5b83\u4f7f\u7528\u5e95\u5c42\u7684\u7ba1\u9053\u5b50\u7cfb\u7edf\uff0c\u5b83\u8fd8\u662f\u6216\u591a\u6216\u5c11\u5730\u8bbe\u8ba1\u4e3a\u4f7f\u7528<code>Groovy</code>\u6784\u5efa\u7684\u901a\u7528<code>DSL</code>\u3002\u8fd9\u610f\u5473\u7740\u5b83\u4e0d\u5177\u6709\u56fa\u5b9a\u7684\u7ed3\u6784\uff0c\u5e76\u4e14\u7531\u60a8\u51b3\u5b9a\u5982\u4f55\u5b9a\u4e49\u7ba1\u9053\u903b\u8f91\u3002</li> <li>\u58f0\u660e\u6027\u7ba1\u9053\u66f4\u81ea\u4ee5\u4e3a\u662f\uff0c\u5176\u7ed3\u6784\u662f\u660e\u786e\u5b9a\u4e49\u7684\u3002\u53ef\u80fd\u770b\u8d77\u6765\u6709\u4e9b\u5c40\u9650\u3002</li> </ul> <p>\u4f46\u5b9e\u9645\u4e0a\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u811a\u672c\u5316\u6216\u58f0\u660e\u6027\u7ba1\u9053\u6765\u5b9e\u73b0\u76f8\u540c\u7684\u76ee\u7684\u3002\u90a3\u4e48\u9009\u62e9\u54ea\u4e00\u4e2a\u5462\uff1f\u5982\u679c\u60a8\u95ee\u6211\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4f1a\u8bf4\u4f7f\u7528\u58f0\u660e\u6027\u7ba1\u9053\u3002\u4ee5\u4e0b\u5185\u5bb9\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u3002</p>"},{"location":"chap2/6chap2_pipe_vs_dec/#1","title":"1\u3001\u7ba1\u9053\u542f\u52a8\u65f6\u7684\u4ee3\u7801\u9a8c\u8bc1","text":"<pre><code>pipeline {\n    agent any\n\n    stages {\n        stage(\"Build\") {\n            steps {\n                echo \"Some code compilation here...\"\n            }\n        }\n\n        stage(\"Test\") {\n            steps {\n                echo \"Some tests execution here...\"\n                echo 1\n            }\n        }\n    }\n}\n</code></pre> <p>\u5982\u679c\u6211\u4eec\u5c1d\u8bd5\u8fd0\u884c\u4ee5\u4e0b\u7ba1\u9053\uff0c\u5219\u9a8c\u8bc1\u5c06\u5f88\u5feb\u4f7f\u6784\u5efa\u5931\u8d25\u3002\u8be5\u65e5\u5fd7\u663e\u793a\u53ea\u80fd\u4e0e\u89e6\u53d1<code>String</code>\u53c2\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u5f97\u5230\u8fd9\u6837\u7684\u9519\u8bef\u3002</p> <p></p> <p>\u8bf7\u6ce8\u610f\uff0c\u7ba1\u9053\u6ca1\u6709\u6267\u884c\u4efb\u4f55\u9636\u6bb5\uff0c\u53ea\u662f\u5931\u8d25\u4e86\u3002\u8fd9\u53ef\u80fd\u4e3a\u6211\u4eec\u8282\u7701\u4e86\u5f88\u591a\u65f6\u95f4-\u60f3\u8c61\u4e00\u4e0b\u6267\u884c<code>Build</code>\u9636\u6bb5\u51e0\u5206\u949f\uff0c\u800c\u53ea\u662f\u83b7\u53d6<code>echo</code>\u6b65\u9aa4\u5e0c\u671b\u5f97\u5230\u7684\u4fe1\u606f<code>java.lang.String</code>\u800c\u4e0d\u662f<code>java.lang.Integer</code>\u3002</p> <p>\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u4e0e\u8be5\u793a\u4f8b\u7b49\u6548\u7684\u811a\u672c\u7ba1\u9053\u3002</p> <pre><code>node {\n    stage(\"Build\") {\n        echo \"Some code compilation here...\"\n    }\n\n    stage(\"Test\") {\n        echo \"Some tests execution here...\"\n        echo 1\n    }\n}\n</code></pre> <p></p> <p>\u5b83\u6309\u9884\u671f\u5931\u8d25\u3002\u4f46\u662f\u8fd9\u6b21\u662f\u6267\u884cBuild\u9636\u6bb5\uff0c\u4e5f\u662fTest\u9636\u6bb5\u7684\u7b2c\u4e00\u6b65\u3002\u5982\u60a8\u6240\u89c1\uff0c\u6ca1\u6709\u9a8c\u8bc1\u7ba1\u9053\u4ee3\u7801\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u58f0\u660e\u5f0f\u7ba1\u9053\u53ef\u4ee5\u66f4\u597d\u5730\u5904\u7406\u6b64\u7c7b\u7528\u4f8b\u3002</p>"},{"location":"chap2/6chap2_pipe_vs_dec/#2","title":"2\u3001\u4ece\u6307\u5b9a\u6b65\u9aa4\u91cd\u65b0\u5f00\u59cb","text":"<p>\u58f0\u660e\u5f0f\u7ba1\u9053\u5177\u6709\u7684\u53e6\u4e00\u4e2a\u5f88\u9177\u7684\u529f\u80fd\u662f\u201c\u4ece\u9636\u6bb5\u91cd\u65b0\u542f\u52a8\u201d\u3002\u8ba9\u6211\u4eec\u4fee\u590d\u4e0a\u4e00\u4e2a\u793a\u4f8b\u4e2d\u7684\u7ba1\u9053\uff0c\u770b\u770b\u662f\u5426\u53ea\u80fd\u91cd\u65b0\u542f\u52a8Test\u9636\u6bb5\u3002</p> <pre><code>\npipeline {\n    agent any\n\n    stages {\n        stage(\"Build\") {\n            steps {\n                echo \"Some code compilation here...\"\n            }\n        }\n\n        stage(\"Test\") {\n            steps {\n                echo \"Some tests execution here...\"\n            }\n        }\n    }\n}\n</code></pre> <p>\u8ba9\u6211\u4eec\u6267\u884c\u5b83\u3002</p> <p></p> <p>\u5728\u8fd9\u91cc\u60a8\u53ef\u4ee5\u770b\u5230\u5df2\u9009\u62e9\u6d4b\u8bd5\u9636\u6bb5\u3002\u5728\u53f3\u4fa7\u7684\u6b65\u9aa4\u5217\u8868\u4e0a\u65b9\uff0c\u6709\u4e00\u4e2a\u540d\u4e3a\u201c\u91cd\u65b0\u542f\u52a8\u6d4b\u8bd5\u201d\u7684\u9009\u9879\u3002\u8ba9\u6211\u4eec\u5355\u51fb\u5b83\u5e76\u67e5\u770b\u7ed3\u679c\u3002</p> <p></p> <p>\u5982\u60a8\u6240\u89c1\uff0cJenkins\u8df3\u8fc7\u4e86Build\u9636\u6bb5\uff08\u5b83\u4f7f\u7528\u4e86\u5148\u524d\u6784\u5efa\u4e2d\u7684\u5de5\u4f5c\u7a7a\u95f4\uff09\uff0c\u5e76\u4eceTest\u9636\u6bb5\u5f00\u59cb\u4e86\u4e0b\u4e00\u4e2a\u7ba1\u9053\u6267\u884c\u3002\u5f53\u60a8\u6267\u884c\u4e00\u4e9b\u5916\u90e8\u6d4b\u8bd5\u5e76\u4e14\u7531\u4e8e\u8fdc\u7a0b\u73af\u5883\u7684\u67d0\u4e9b\u95ee\u9898\u800c\u5bfc\u81f4\u6d4b\u8bd5\u5931\u8d25\u65f6\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5f88\u6709\u7528\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u6d4b\u8bd5\u73af\u5883\u89e3\u51b3\u95ee\u9898\uff0c\u7136\u540e\u91cd\u65b0\u8fd0\u884c\u8be5\u9636\u6bb5\uff0c\u800c\u65e0\u9700\u91cd\u5efa\u6240\u6709\u5de5\u4ef6\u3002\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5e94\u7528\u7a0b\u5e8f\u7684\u4ee3\u7801\u672a\u66f4\u6539\u3002\uff09</p> <p>\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u811a\u672c\u5316\u7ba1\u9053\u793a\u4f8b\u3002</p> <pre><code>\nnode {\n    stage(\"Build\") {\n        echo \"Some code compilation here...\"\n    }\n\n    stage(\"Test\") {\n        echo \"Some tests execution here...\"\n    }\n}\n</code></pre> <p></p> <p>\u5982\u60a8\u6240\u89c1\uff0c\u6ca1\u6709\u91cd\u65b0\u542f\u52a8\u9009\u9879\u3002\u58f0\u660e\u5f0f\u7ba1\u9053\u4e0e\u811a\u672c\u5f0f\u7ba1\u9053<code>-2\uff1a0</code>\u3002</p>"},{"location":"chap2/6chap2_pipe_vs_dec/#3options","title":"3\u3001\u58f0\u660e\u5f0f\u7ba1\u9053<code>options</code>\u5757","text":"<p>\u4e24\u79cd\u7ba1\u9053\u7c7b\u578b\u90fd\u652f\u6301\u7b2c\u4e09\u4e2a\u529f\u80fd\uff0c\u4f46\u662f\u6211\u8ba4\u4e3a\u58f0\u660e\u6027\u7ba1\u9053\u66f4\u597d\u5730\u5904\u7406\u4e86\u5b83\u3002\u5047\u8bbe\u6211\u4eec\u5c06\u4ee5\u4e0b\u529f\u80fd\u6dfb\u52a0\u5230\u4e0a\u4e00\u4e2a\u7ba1\u9053\u4e2d\u3002</p> <ul> <li>\u63a7\u5236\u53f0\u65e5\u5fd7\u4e2d\u7684\u65f6\u95f4\u6233\u3002</li> <li>ANSI\u989c\u8272\u8f93\u51fa\u3002 </li> <li>\u57281\u5206\u949f\u7684\u8d85\u65f6\u6784\u5efa\u9636\u6bb5\uff0c2\u5206\u949f\u8d85\u65f6\u7684\u6d4b\u8bd5\u9636\u6bb5\u3002</li> </ul> <pre><code>pipeline {\n    agent any\n\n    options {\n        timestamps()\n        ansiColor(\"xterm\")\n    }\n\n    stages {\n        stage(\"Build\") {\n            options {\n                timeout(time: 1, unit: \"MINUTES\")\n            }\n            steps {\n                sh 'printf \"\\\\e[31mSome code compilation here...\\\\e[0m\\\\n\"'\n            }\n        }\n\n        stage(\"Test\") {\n            options {\n                timeout(time: 2, unit: \"MINUTES\")\n            }\n            steps {\n                sh 'printf \"\\\\e[31mSome tests execution here...\\\\e[0m\\\\n\"'\n            }\n        }\n    }\n}\n</code></pre> <p></p> <p>\u8fd9\u662f\u63a7\u5236\u53f0\u65e5\u5fd7\u3002</p> <pre><code>Started by user unknown or anonymous\nRunning in Durability level: MAX_SURVIVABILITY\n[Pipeline] Start of Pipeline\n[Pipeline] node\nRunning on hostmachine in /home/vagrant/workspace/workspace/chap2-12comp2\n[Pipeline] {\n[Pipeline] timestamps\n[Pipeline] {\n[Pipeline] ansiColor\n[Pipeline] {\n[Pipeline] stage\n[Pipeline] { (Build)\n[Pipeline] timeout\n02:23:57  Timeout set to expire in 1 min 0 sec\n[Pipeline] {\n[Pipeline] sh\n02:23:59  + printf '\\e[31mSome code compilation here...\\e[0m\\n'\n02:23:59  Some code compilation here...\n[Pipeline] }\n[Pipeline] // timeout\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] stage\n[Pipeline] { (Test)\n[Pipeline] timeout\n02:23:59  Timeout set to expire in 2 min 0 sec\n[Pipeline] {\n[Pipeline] sh\n02:23:59  + printf '\\e[31mSome tests execution here...\\e[0m\\n'\n02:23:59  Some tests execution here...\n[Pipeline] }\n[Pipeline] // timeout\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] }\n[Pipeline] // ansiColor\n[Pipeline] }\n[Pipeline] // timestamps\n[Pipeline] }\n[Pipeline] // node\n[Pipeline] End of Pipeline\nFinished: SUCCESS\n</code></pre> <p>\u5728\u58f0\u660e\u6027\u7ba1\u9053\u4e2d\uff0c\u9009\u9879\u4e0e\u7ba1\u9053\u811a\u672c\u903b\u8f91\u5206\u5f00\u3002\u8be5\u811a\u672c\u7ba1\u9053\u4e5f\u652f\u6301<code>timestamps</code>\uff0c<code>ansiColor</code>\u548c<code>timeout</code>\u9009\u9879\uff0c\u4f46\u5b83\u9700\u8981\u4e00\u4e2a\u4e0d\u540c\u7684\u4ee3\u7801\u3002\u8fd9\u662f\u4f7f\u7528\u811a\u672c\u5316\u7ba1\u9053\u8868\u8fbe\u7684\u76f8\u540c\u7ba1\u9053\u3002</p> <pre><code>node {\n    timestamps {\n        ansiColor(\"xterm\") {\n            stage(\"Build\") {\n                timeout(time: 1, unit: \"MINUTES\") {\n                    sh 'printf \"\\\\e[31mSome code compilation here...\\\\e[0m\\\\n\"'\n                }\n            }\n            stage(\"Test\") {\n                timeout(time: 2, unit: \"MINUTES\") {\n                    sh 'printf \"\\\\e[31mSome tests execution here...\\\\e[0m\\\\n\"'\n                }\n            }\n        }\n    }\n}\n</code></pre> <p>\u6211\u60f3\u4f60\u770b\u5230\u4e86\u95ee\u9898\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4ec5\u4f7f\u7528<code>timestamps</code>\u548c<code>ansiColorJenkins</code>\u63d2\u4ef6\u3002\u60f3\u8c61\u518d\u6dfb\u52a0\u4e00\u4e2a\u6216\u4e24\u4e2a\u63d2\u4ef6\u3002\u58f0\u660e\u5f0f\u4e0e\u811a\u672c\u5f0f\uff0c3\uff1a0\u3002</p>"},{"location":"chap2/6chap2_pipe_vs_dec/#4when","title":"4\u3001\u7528when\u5757\u8df3\u8fc7\u9636\u6bb5\u3002","text":"<p>\u5728\u6b64\u535a\u5ba2\u6587\u7ae0\u4e2d\u6211\u6700\u540e\u8981\u63d0\u5230\u7684\u662f<code>when</code>\u58f0\u660e\u6027\u7ba1\u9053\u652f\u6301\u7684\u5757\u3002\u8ba9\u6211\u4eec\u6539\u8fdb\u524d\u9762\u7684\u793a\u4f8b\u5e76\u6dfb\u52a0\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <ul> <li>\u4ec5\u5728\u7b49\u4e8e\u65f6\u6267\u884c\u6d4b\u8bd5\u9636\u6bb5\u3002<code>env.FOO=bar</code></li> </ul> <p>\u8fd9\u662f\u58f0\u660e\u6027\u7ba1\u9053\u4ee3\u7801\u7684\u5916\u89c2\u3002</p> <pre><code>pipeline {\n    agent any\n\n    options {\n        timestamps()\n        ansiColor(\"xterm\")\n    }\n\n    stages {\n        stage(\"Build\") {\n            options {\n                timeout(time: 1, unit: \"MINUTES\")\n            }\n            steps {\n                sh 'printf \"\\\\e[31mSome code compilation here...\\\\e[0m\\\\n\"'\n            }\n        }\n\n        stage(\"Test\") {\n            when {\n                environment name: \"FOO\", value: \"bar\"\n            }\n            options {\n                timeout(time: 2, unit: \"MINUTES\")\n            }\n            steps {\n                sh 'printf \"\\\\e[31mSome tests execution here...\\\\e[0m\\\\n\"'\n            }\n        }\n    }\n}\n</code></pre> <p>\u7136\u540e\u6267\u884c\u5b83\u3002</p> <p></p> <pre><code>node {\n    timestamps {\n        ansiColor(\"xterm\") {\n            stage(\"Build\") {\n                timeout(time: 1, unit: \"MINUTES\") {\n                    sh 'printf \"\\\\e[31mSome code compilation here...\\\\e[0m\\\\n\"'\n                }\n            }\n            if (env.FOO == \"bar\") {\n                stage(\"Test\") {\n                    timeout(time: 2, unit: \"MINUTES\") {\n                        sh 'printf \"\\\\e[31mSome tests execution here...\\\\e[0m\\\\n\"'\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre> <p>\u5982\u60a8\u6240\u89c1\uff0c\u6211\u4eec\u5fc5\u987b\u4f7f\u7528<code>if-condition</code>\u6765\u68c0\u67e5\u662f\u5426<code>env.FOO</code>\u7b49\u4e8e<code>bar</code>\uff0c\u7136\u540e\u624d\u6dfb\u52a0<code>Test</code>\u9636\u6bb5\u3002\uff08\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u5e76\u4e0d\u662f\u771f\u6b63\u7684\u8df3\u8fc7\u3002\uff09\u8ba9\u6211\u4eec\u8fd0\u884c\u5b83\uff0c\u770b\u770b\u7ed3\u679c\u5982\u4f55\u3002</p> <p></p> <p>\u8fd9\u662f\u4e0d\u540c\u7684\u7ed3\u679c\u3002\u5728\u811a\u672c\u5316\u7ba1\u9053\u7528\u4f8b\u4e2d\uff0c\u751a\u81f3\u4e0d\u4f1a\u5448\u73b0\u201c \u6d4b\u8bd5\u201d\u9636\u6bb5\u3002\u5728\u6211\u770b\u6765\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5e26\u6765\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684\u6df7\u4e71\uff0c\u58f0\u660e\u6027\u7ba1\u9053\u4f1a\u66f4\u597d\u5730\u5904\u7406\u5b83\u3002\u58f0\u660e\u5f0f\u4e0e\u811a\u672c\u5f0f\uff0c<code>4\uff1a0</code>\u3002</p>"},{"location":"chap2/7chap2_jenkins_git/","title":"\u7b2c\u4e03\u8282 \u4f7f\u7528Jenkins Git\u53c2\u6570\u5b9e\u73b0\u5206\u652f\u6807\u7b7e\u52a8\u6001\u9009\u62e9","text":""},{"location":"chap2/7chap2_jenkins_git/#1git","title":"1\u3001\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528Git\u53c2\u6570\uff1f","text":"<p>\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528 git\u53c2\u6570\u5462\uff1f\u6bcf\u4e2a\u9879\u76ee\u4ee3\u7801\u5e93\u90fd\u4f1a\u6709\u4e0d\u540c\u7684\u5206\u652f\uff0c\uff08\u5982\u679c\u4f60\u6ca1\u6709\u7528\u591a\u5206\u652f\u6d41\u6c34\u7ebf\u7684\u60c5\u51b5\u4e0b\uff09\u5bf9\u4e8e\u666e\u901a\u7684\u6d41\u6c34\u7ebf\u9879\u76ee\u6211\u4eec\u53ef\u4ee5 \u8ba9\u4e00\u6761\u6d41\u6c34\u7ebf\u6765\u652f\u6301\u591a\u4e2a\u5206\u652f\u7684\u53d1\u5e03\uff0c\u5176\u5b9e\u6709\u65f6\u5019\u4f60\u4f1a\u53d1\u73b0\u6bcf\u4e2a\u5206\u652f\u7684\u96c6\u6210\u6b65\u9aa4\u90fd\u662f\u5dee\u4e0d\u591a\u7684\u3002\u5982\u679c\u51fa\u73b0\u5dee\u5f02\u6b65\u9aa4\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728<code>jenkinsfile</code>\u4e2d\u6839\u636e\u4e0d\u540c\u7684\u5206\u652f\u6267\u884c\u4e0d\u540c\u7684stage\u3002</p> <p>\u5982\u4f55\u89e3\u51b3\u56fa\u5b9a\u5206\u652f\u95ee\u9898\uff1f\u8d77\u521d\u6211\u4eec\u7684\u6d41\u6c34\u7ebf\u9879\u76ee\u914d\u7f6e\u5206\u652f\u53ef\u80fd\u662f\u91c7\u7528\u7684\u9009\u9879\u53c2\u6570\u3002\u521b\u5efa\u4e00\u4e2a\u9009\u9879\u53c2\u6570\u7136\u540e\u628a\u9879\u76ee\u7ecf\u5e38\u7528\u5230\u7684\u5206\u652f\u7ed9\u66f4\u65b0\u4e0a\u53bb\uff0c\u6700\u540e\u5f00\u53d1\u4eba\u5458\u5728\u53d1\u5e03\u7684\u65f6\u5019\u6765\u9009\u62e9\u5bf9\u5e94\u7684\u5206\u652f\u3002\u770b\u4f3c\u89e3\u51b3\u4e86\u56fa\u5b9a\u5206\u652f\u95ee\u9898\uff0c\u4f46\u662f\u540e\u671f\u7ef4\u62a4\u8d77\u6765\u975e\u5e38\u56f0\u96be\uff0c\u9700\u8981\u4e0d\u65ad\u7684\u66f4\u6539\u53c2\u6570\u503c\u3002</p> <p>\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u53c2\u6570\u8bbe\u7f6e\u4e00\u4e2a\u9ed8\u8ba4\u503c\uff0c\u7136\u540e \u4ea4\u7ed9\u5f00\u53d1\u4eba\u5458\u81ea\u5df1\u586b\u5199\u3002\u8fd9\u6837\u7684\u786e\u65b9\u4fbf\u4e86\u914d\u7f6e\u7ba1\u7406\u4eba\u5458\uff0c\u7ed9\u5f00\u53d1\u4eba\u5458\u589e\u52a0\u4e86\u8d1f\u62c5\uff0c\u624b\u52a8\u8f93\u5165\u907f\u514d\u4e0d\u4e86\u5e26\u6765\u4e86\u9519\u8bef\u53d1\u751f\u7684\u53ef\u80fd\u3002</p> <p>\u6211\u4eec\u6765\u901a\u8fc7\u4e0b\u9762\u7684\u5185\u5bb9\uff0c\u638c\u63e1\u5982\u4f55\u4f7f\u7528 git\u53c2\u6570\u5b9e\u73b0\u52a8\u6001\u5206\u652f\u6784\u5efa\u5462\uff1f</p>"},{"location":"chap2/7chap2_jenkins_git/#2pipeline","title":"2\u3001\u5728Pipeline\u9879\u76ee\u4e2d\u4f7f\u7528","text":"<p>\u8fd9\u91cc\u628a\u666e\u901a\u7684pipeline\u9879\u76ee\u5b9a\u4e49\u4e3a \u672a\u5c06Jenkinsfile\u5185\u5bb9\u4fdd\u5b58\u5728\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u4e2d\uff0c\u800c\u662f\u5b58\u50a8\u5728\u8be5JOB\u4e2d\u3002</p>"},{"location":"chap2/7chap2_jenkins_git/#2-1-pipeline","title":"2-1 \u666e\u901a\u7684Pipeline\u9879\u76ee","text":"<p>\u9996\u5148\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a<code>srcUrl</code>\u53c2\u6570\u5b9a\u4e49\u9879\u76ee\u4ee3\u7801\u5e93\u7684\u5730\u5740\uff0c\u4fbf\u4e8e\u540e\u671f\u5728<code>pipeline</code>\u4e2d\u8c03\u7528\u3002</p> <ul> <li><code>srcUrl</code>: <code>http://192.168.1.200:30088/idevops/idevops-maven-service.git</code></li> <li><code>branchName</code>: <code>origin/master</code></li> </ul> <p>\u7f16\u5199<code>Jenkinsfile</code></p> <pre><code>//pipeline\npipeline{\n    agent { node { label \"build\"}}\n\n\n    stages{\n\n        stage(\"CheckOut\"){\n            steps{\n                script{\n\n                    println(\"${branchName}\")\n\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], \n                              doGenerateSubmoduleConfigurations: false, \n                              extensions: [], \n                              submoduleCfg: [], \n                              userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', \n                              url: \"${srcUrl}\"]]])\n\n                }\n            }\n        }\n    }\n}\n</code></pre> <p>\u5bf9\u4e8e\u5c06<code>jenkinsfile</code>\u4fdd\u5b58\u5728\u4f5c\u4e1a\u4e2d\uff0c\u8fd9\u79cd\u65b9\u5f0f\u6709\u5229\u6709\u5f0a\uff0c\u597d\u5904\u662f\u53ef\u4ee5\u65b9\u4fbf\u6211\u4eec\u8fdb\u884c\u4ee3\u7801\u8c03\u8bd5\uff0c\u574f\u5904\u662f\u4e0d\u5229\u4e8e\u7edf\u4e00\u7ba1\u7406\u3002\u5927\u5bb6\u914c\u60c5\u4f7f\u7528\u3002</p>"},{"location":"chap2/7chap2_jenkins_git/#2-2-pipeline","title":"2-2 \u6d41\u884c\u7684Pipeline\u9879\u76ee","text":"<p>\u8fd9\u91cc\u6d41\u884c\u7684<code>Pipeline</code>\u9879\u76ee\u6211\u4eec\u7406\u89e3\u4e3a\u6b64<code>job</code>\u4f7f\u7528\u7684<code>jenkinsfile</code>\u6587\u4ef6\u5b58\u50a8\u5728<code>git</code>\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u4e2d\u3002</p> <p>\u9996\u5148\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u6d4b\u8bd5<code>jenkinsfile</code>,\u4fdd\u5b58\u5728<code>git</code>\u9879\u76ee\u4e2d\uff0c\u547d\u540d\u4e3a<code>git.jenkinsfile</code>\u3002\u6b64\u6587\u4ef6\u5185\u5bb9\u4e0e\u4e0a\u9762\u90a3\u79cd\u65b9\u5f0f\u662f\u4e00\u6837\u7684\uff0c\u53ea\u4e0d\u8fc7\u5c06<code>jenkinsfile</code>\u7eb3\u5165\u4e86\u7248\u672c\u63a7\u5236\u3002</p> <pre><code>//pipeline\npipeline{\n    agent { node { label \"build\"}}\n\n\n    stages{\n\n        stage(\"CheckOut\"){\n            steps{\n                script{\n\n                    println(\"${branchName}\")\n\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], \n                              doGenerateSubmoduleConfigurations: false, \n                              extensions: [], \n                              submoduleCfg: [], \n                              userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', \n                              url: \"${srcUrl}\"]]])\n\n                }\n            }\n        }\n    }\n}\n</code></pre> <p>\u7136\u540e\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6d41\u6c34\u7ebf\u9879\u76ee\u3002\u6ce8\u610f\u60c5\u51b5\u6211\u4eec\u73b0\u5728\u7528\u5230\u4e86\u4e24\u4e2a\u4ed3\u5e93\uff0c\u4e00\u4e2a\u662f<code>Jenkinsfile</code>\u4ed3\u5e93\uff0c\u53e6\u4e00\u4e2a\u662f\u9879\u76ee\u4ee3\u7801\u4ed3\u5e93\u3002\u521b\u5efa\u4e00\u4e2a\u53c2\u6570<code>srcUrl</code>\u7528\u4e8e\u5b58\u50a8\u9879\u76ee\u4ee3\u7801\u4ed3\u5e93\u7684<code>URL</code>\u3002</p> <p>\u9ed8\u8ba4<code>git</code>\u53c2\u6570\u4f1a\u8bc6\u522b\u5230<code>Jenkinsfile</code>\u7684\u4ed3\u5e93\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728git\u53c2\u6570\u7684\u9ad8\u7ea7\u8bbe\u7f6e\u4e2d\u6307\u5b9a\u6211\u4eec\u8981\u4f7f\u7528\u7684\u4ed3\u5e93\u5730\u5740\u300280%\u9519\u8bef\u56e0\u4e3a\u6ca1\u6709\u6307\u5b9a\u4ed3\u5e93\u5bfc\u81f4\u83b7\u53d6\u5206\u652f\u9519\u8bef\u7b49\u95ee\u9898\u3002</p>"},{"location":"chap2/7chap2_jenkins_git/#2-3-pipeline-as-code","title":"2-3 \u4f7f\u7528Pipeline as Code","text":"<p>\u6211\u4eec\u5c06\u53c2\u6570\u4fe1\u606f\u5168\u90e8\u653e\u5230Jenkinsfile\u4e2d\u5b58\u50a8\u3002\u6b64\u65f6\u751f\u6210\u7684\u4ee3\u7801\u5c31\u4e0d\u533a\u5206\u5728\u4f5c\u4e1a\u4e2d\u4fdd\u5b58\u8fd8\u662f\u5728\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u4e2d\u4fdd\u5b58\u4e86\u3002\u4e0d\u8fc7\u8fd8\u662f\u5efa\u8bae\u5927\u5bb6\u628a<code>jenkinsfile</code>\u7eb3\u5165\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u4e2d\u4fdd\u5b58\u3002</p> <p>\u6211\u4eec\u5982\u4f55\u751f\u6210Jenkinsfile\u4ee3\u7801\uff1f\u5f88\u65b9\u4fbf\u7684\u5de5\u5177\uff0c\u6211\u4eec\u5bfc\u822a\u5230 \u6d41\u6c34\u7ebf\u8bed\u6cd5-&gt; Declarative Directive Generator \u3002</p> <p></p> <p>\u6700\u540e\u5b8c\u6574\u7684Jenkinsfile\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>//pipeline\npipeline{\n    agent { node { label \"build\"}}\n\n    parameters {\n      string defaultValue: 'http://192.168.1.200:30088/idevops/idevops-maven-service.git', \n             description: '', \n             name: 'srcUrl', \n             trim: false\n\n      gitParameter  branch: '', \n                    branchFilter: '.*', \n                    defaultValue: 'origin/master', \n                    description: '', \n                    name: 'branchName', \n                    quickFilterEnabled: false, \n                    selectedValue: 'NONE', \n                    sortMode: 'NONE', \n                    tagFilter: '*', \n                    type: 'PT_BRANCH', \n                    useRepository: 'http://192.168.1.200:30088/idevops/idevops-maven-service.git'\n\n    }\n    stages{\n\n        stage(\"CheckOut\"){\n            steps{\n                script{\n\n                    println(\"${branchName}\")\n\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], \n                              doGenerateSubmoduleConfigurations: false, \n                              extensions: [], \n                              submoduleCfg: [], \n                              userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', \n                              url: \"${srcUrl}\"]]])\n\n                }\n            }\n        }\n    }\n}\n</code></pre> <p>\u540c\u6837\u7684\u914d\u7f6e\u8fc7\u7a0b\uff0c\u6211\u4eec\u6784\u5efa \u4e00\u6b21\u4e4b\u540e\u5c31\u80fd\u591f \u6b63\u5e38\u83b7\u53d6\u5230\u9879\u76ee\u4ee3\u7801\u5e93\u7684\u5206\u652f\u4fe1\u606f\u4e86\u3002</p>"},{"location":"chap2/8Jenkinsfile_pipeline_multibranch/","title":"\u7b2c\u516b\u8282 \u591a\u5206\u652f\u7c7b\u578b\u7ba1\u9053- \u57fa\u4e8eJenkinsfile\u81ea\u52a8\u521b\u5efaPipeline(2023)","text":"<p>Jenkins\u591a\u5206\u652f\u7ba1\u9053\u662f\u8bbe\u8ba1CI/CD\u5de5\u4f5c\u6d41\u7684\u6700\u4f73\u65b9\u6cd5\u4e4b\u4e00\uff0c\u56e0\u4e3a\u5b83\u5b8c\u5168\u662f\u57fa\u4e8egit\u7684pipeline as code</p> <p>\u591a\u5206\u652f\u7ba1\u9053\u662f\u4e00\u79cd\u57fa\u4e8eGit\u5206\u652f\u81ea\u52a8\u521b\u5efaJenkins Pipeline\u7684\u6982\u5ff5\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5b83\u53ef\u4ee5\u5728SCM\uff08Github\uff09\u4e2d\u521b\u5efa\u65f6\u81ea\u52a8\u53d1\u73b0\u65b0\u7684Git\u5206\u652f\uff0c\u5e76\u81ea\u52a8\u4e3a\u8be5\u5206\u652f\u521b\u5efa\u7ba1\u9053\u3002\u5f53\u7ba1\u9053\u6784\u5efa\u5f00\u59cb\u65f6\uff0cJenkins\u5728\u8be5\u5206\u652f\u4e2d\u4f7f\u7528Jenkinsfile\u8fdb\u884c\u6784\u5efa\u9636\u6bb5\u3002</p> <p>SCM\u53ef\u4ee5\u662fGithub\uff0cBitbucket\u6216Gitlab\u5b58\u50a8\u5e93\u3002</p> <p></p> <pre><code>stage ('Deploy for production') {\n    when {\n        branch 'production'\n    }\n\n    steps {\n        ...\n    }\n}\n</code></pre> <p>\u56e0\u6b64\uff0c\u6bcf\u5f53\u5f00\u53d1\u4eba\u5458\u5c06PR\u4ece\u529f\u80fd\u5206\u652f\u63d0\u4ea4\u5230\u5176\u4ed6\u5206\u652f\u65f6\uff0c\u7ba1\u9053\u5c06\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u548cSonar\u5206\u6790\u9636\u6bb5\uff0c\u4ece\u800c\u8df3\u8fc7\u90e8\u7f72\u9636\u6bb5\u3002\u800c\u4e14\uff0c\u591a\u5206\u652f\u6d41\u6c34\u7ebf\u4e0d\u4ec5\u9650\u4e8e\u8fde\u7eed\u4ea4\u4ed8\u5e94\u7528\u7a0b\u5e8f\u3002\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u7ba1\u7406\u57fa\u7840\u7ed3\u6784\u4ee3\u7801</p>"},{"location":"chap2/8Jenkinsfile_pipeline_multibranch/#_1","title":"\u591a\u5206\u652f\u7ba1\u9053\u5982\u4f55\u5de5\u4f5c\uff1f","text":"<p>\u6211\u5c06\u5f15\u5bfc\u60a8\u5b8c\u6210\u57fa\u672c\u7684\u6784\u5efa\u548c\u90e8\u7f72\u5de5\u4f5c\u6d41\u7a0b\uff0c\u4ee5\u4e86\u89e3\u591a\u5206\u652f\u7ba1\u9053\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002</p> <p>\u5047\u8bbe\u6211\u5e0c\u671bJenkins\u7ba1\u9053\u5728\u4ee5\u4e0b\u6761\u4ef6\u4e0b\u6784\u5efa\u548c\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\u3002</p> <ol> <li>\u5f00\u53d1\u4eba\u5458\u901a\u8fc7\u5411\u529f\u80fd\u5206\u652f\u63d0\u4ea4\u4ee3\u7801\u6765\u4ece\u529f\u80fd\u5206\u652f\u5f00\u59cb\u3002</li> <li>\u6bcf\u5f53\u5f00\u53d1\u4eba\u5458\u4ece\u529f\u80fd\u5206\u652f\u63d0PR\u6765\u5f00\u53d1\u5206\u652f\u65f6\uff0cJenkins\u7ba1\u9053\u90fd\u5e94\u89e6\u53d1\u4ee5\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u548c\u9759\u6001\u4ee3\u7801\u5206\u6790\u3002</li> <li>\u5728\u529f\u80fd\u5206\u652f\u4e2d\u6210\u529f\u6d4b\u8bd5\u4ee3\u7801\u540e\uff0c\u5f00\u53d1\u4eba\u5458\u5c06PR\u5408\u5e76\u5230\u5f00\u53d1\u5206\u652f\u3002</li> <li>\u5f53\u4ee3\u7801\u51c6\u5907\u53d1\u5e03\u65f6\uff0c\u5f00\u53d1\u4eba\u5458\u5c06PR\u4ecedevelop\u5206\u652f\u63d0\u5230master\u3002\u5b83\u5e94\u8be5\u89e6\u53d1\u4e00\u4e2a\u6784\u5efa\u7ba1\u9053\uff0c\u8be5\u7ba1\u9053\u5c06\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4ee3\u7801\u5206\u6790\u5e76\u5c06\u5176\u90e8\u7f72\u5230dev / QA\u73af\u5883\u3002</li> </ol> <p>\u901a\u8fc7Jenkins\u591a\u5206\u652f\u7ba1\u9053\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0\u6b64\u5de5\u4f5c\u6d41\u7a0b\u3002\u4e0b\u56fe\u663e\u793a\u4e86\u4ee5\u4e0a\u793a\u4f8b\u6784\u5efa\u8fc7\u7a0b\u7684\u591a\u5206\u652f\u7ba1\u9053\u5de5\u4f5c\u6d41\u7684\u5916\u89c2</p> <p></p> <p>\u8fd9\u662f\u591a\u5206\u652f\u7ba1\u9053\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002</p> <ol> <li>\u5f53\u5f00\u53d1\u4eba\u5458\u4ece\u529f\u80fd\u5206\u652f\u521b\u5efaPR\u6765\u5f00\u53d1\u5206\u652f\u65f6\uff0cGithub\u5c06\u5e26\u6709PR\u4fe1\u606f\u7684Webhook\u53d1\u9001\u7ed9Jenkins\u3002</li> <li>Jenkins\u6536\u5230PR\uff0c\u5e76\u627e\u5230\u76f8\u5173\u7684\u591a\u5206\u652f\u7ba1\u9053\u5e76\u81ea\u52a8\u521b\u5efa\u5206\u652f\u7ba1\u9053\u3002<ul> <li>\u7136\u540e\uff0c\u5b83\u6309\u7167\u529f\u80fd\u5206\u652f\u4e2dJenkinsfile\u4e2d\u63d0\u5230\u7684\u6b65\u9aa4\u8fd0\u884c\u4f5c\u4e1a\u3002</li> <li>\u7b7e\u51fa\u671f\u95f4\uff0cPR\u4e2d\u7684\u6e90\u5206\u652f\u548c\u76ee\u6807\u5206\u652f\u5c06\u5408\u5e76\u3002</li> <li>PR\u5408\u5e76\u5c06\u5728Github\u4e0a\u88ab\u963b\u6b62\uff0c\u76f4\u5230\u4eceJenkins\u8fd4\u56de\u6784\u5efa\u72b6\u6001\u4e3a\u6b62</li> </ul> </li> <li>\u6784\u5efa\u5b8c\u6210\u540e\uff0cJenkins\u4f1a\u5c06\u72b6\u6001\u66f4\u65b0\u4e3aGithub PR\u3002\u73b0\u5728\u60a8\u5c06\u80fd\u591f\u5408\u5e76\u4ee3\u7801\u3002<ul> <li>\u53e6\u5916\uff0c\u5982\u679c\u60a8\u60f3\u67e5\u770bJenkins\u6784\u5efa\u65e5\u5fd7\uff0c\u5219\u53ef\u4ee5\u5728PR\u72b6\u6001\u4e0b\u627e\u5230Jenkins\u6784\u5efa\u65e5\u5fd7\u94fe\u63a5\u3002</li> </ul> </li> </ol>"},{"location":"chap2/8Jenkinsfile_pipeline_multibranch/#pipleline-jenkinsfile","title":"\u591a\u5206\u652fPipleline Jenkinsfile","text":"<p>\u5728\u5f00\u59cb\u5b9e\u65bd\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u53ef\u5728\u7ba1\u9053\u4e2d\u4f7f\u7528\u7684\u591a\u5206\u652f\u7ba1\u9053Jenkins\u793a\u4f8bJenkinsfile\u3002</p> <p>\u4e3a\u4e86\u4f7f\u591a\u5206\u652f\u7ba1\u9053\u6b63\u5e38\u5de5\u4f5c\uff0c\u60a8\u9700\u8981\u5728SCM\u5b58\u50a8\u5e93\u4e2d\u5305\u542bJenkinsfile\u3002</p> <p>\u5982\u679c\u60a8\u6b63\u5728\u5b66\u4e60/\u6d4b\u8bd5\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u63d0\u4f9b\u7684\u591a\u5206\u652f\u7ba1\u9053Jenkinsfile\u3002\u5b83\u5177\u6709\u4e00\u4e2a\u68c0\u51fa\u9636\u6bb5\u548c\u5176\u4ed6\u9636\u6bb5\uff0c\u5b83\u4eec\u4f1a\u56de\u663e\u6d88\u606f\u3002</p> <p>\u53e6\u5916\uff0c\u60a8\u53ef\u4ee5\u514b\u9686\u5e76\u4f7f\u7528\u5177\u6709\u6b64Jenkinsfile\u7684Github\u5b58\u50a8\u5e93</p> <p>\u6ce8\u610f\uff1a\u5c06\u4ee3\u7406\u6807\u7b7e\u201c master\u201d\u66ff\u6362\u4e3a\u60a8\u7684Jenkins\u4ee3\u7406\u540d\u79f0\u3002master\u4e5f\u53ef\u4ee5\u5de5\u4f5c\uff0c\u4f46\u4e0d\u5efa\u8bae\u5b83\u5728\u5b9e\u9645\u7684\u9879\u76ee\u73af\u5883\u4e2d\u8fd0\u884c\u3002</p> <pre><code>pipeline {\n\n  agent {\n      node {\n          label 'master'\n      }\n  }\n\n  options {\n      buildDiscarder logRotator(\n                  daysToKeepStr: '16',\n                  numToKeepStr: '10'\n          )\n  }\n\n  stages {\n\n      stage('Cleanup Workspace') {\n          steps {\n              cleanWs()\n              sh \"\"\"\n              echo \"Cleaned Up Workspace For Project\"\n              \"\"\"\n          }\n      }\n\n      stage('Code Checkout') {\n          steps {\n              checkout([\n                  $class: 'GitSCM',\n                  branches: [[name: '*/main']],\n                  userRemoteConfigs: [[url: 'https://github.com/spring-projects/spring-petclinic.git']]\n              ])\n          }\n      }\n\n      stage(' Unit Testing') {\n          steps {\n              sh \"\"\"\n              echo \"Running Unit Tests\"\n              \"\"\"\n          }\n      }\n\n      stage('Code Analysis') {\n          steps {\n              sh \"\"\"\n              echo \"Running Code Analysis\"\n              \"\"\"\n          }\n      }\n\n      stage('Build Deploy Code') {\n          when {\n              branch 'develop'\n          }\n          steps {\n              sh \"\"\"\n              echo \"Building Artifact\"\n              \"\"\"\n\n              sh \"\"\"\n              echo \"Deploying Code\"\n              \"\"\"\n          }\n      }\n\n  }  \n}\n</code></pre>"},{"location":"chap2/8Jenkinsfile_pipeline_multibranch/#jenkins","title":"\u8bbe\u7f6eJenkins\u591a\u5206\u652f\u7ba1\u9053","text":"<p>\u5728\u8fd9\u91cc\uff0c\u6211\u5c06\u9010\u6b65\u5f15\u5bfc\u60a8\u9010\u6b65\u5728Jenkins\u4e0a\u5efa\u7acb\u591a\u5206\u652f\u7ba1\u9053\u3002\u8be5\u8bbe\u7f6e\u5c06\u57fa\u4e8eGithub\u548c\u6700\u65b0\u7684Jenkins 2.x\u7248\u672c\u3002\u60a8\u8fd8\u53ef\u4ee5\u5c06Bitbucket\u6216Gitlab\u7528\u4f5c\u591a\u5206\u652f\u7ba1\u9053\u7684SCM\u6e90\u3002</p> <p>\u6b65\u9aa41\uff1a\u5728Jenkins\u4e3b\u9875\u4e0a\u521b\u5efa\u4e00\u4e2a\u201c\u65b0\u9879\u76ee\u201d\u3002</p> <p></p> <p>\u6b65\u9aa42\uff1a\u4ece\u9009\u9879\u4e2d\u9009\u62e9\u201c\u591a\u5206\u652f\u7ba1\u9053\u201d\uff0c\u7136\u540e\u5355\u51fb\u201c\u786e\u5b9a\u201d\u3002</p> <p></p> <p>\u6b65\u9aa43\uff1a\u70b9\u51fb\u201c\u6dfb\u52a0\u6765\u6e90\u201d\uff0c\u7136\u540e\u9009\u62e9Github\u3002</p> <p></p> <p>\u6b65\u9aa44\uff1a\u5728\u8ba4\u8bc1\u5b57\u6bb5\u4e0b\uff0c\u9009\u62e9Jenkins\u5e76\u4f7f\u7528\u60a8\u7684Github\u7528\u6237\u540d\u548c\u5bc6\u7801\u521b\u5efa\u4e00\u4e2a\u8ba4\u8bc1\u3002</p> <p></p> <p>\u6b65\u9aa45\uff1a\u9009\u62e9\u521b\u5efa\u7684\u51ed\u636e\uff0c\u7136\u540e\u63d0\u4f9b\u60a8\u7684Github\u5b58\u50a8\u5e93\u4ee5\u9a8c\u8bc1\u51ed\u636e\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p>\u5982\u679c\u60a8\u6b63\u5728\u6d4b\u8bd5\u591a\u5206\u652f\u7ba1\u9053\uff0c\u5219\u53ef\u4ee5\u514b\u9686\u6f14\u793aGithub\u5b58\u50a8\u5e93\u5e76\u4f7f\u7528\u5b83\u3002</p> <p>https://github.com/devopscube/multibranch-pipeline-demo\u3002</p> <p></p> <p>\u7b2c6\u6b65\uff1a\u9009\u62e9\u6240\u9700\u7684\u9009\u9879\u4ee5\u7b26\u5408\u60a8\u7684\u8981\u6c42\u3002\u60a8\u53ef\u4ee5\u9009\u62e9\u53d1\u73b0\u5b58\u50a8\u5e93\u4e2d\u7684\u6240\u6709\u5206\u652f\uff0c\u4e5f\u53ef\u4ee5\u4ec5\u9009\u62e9\u5177\u6709\u201c\u62c9\u53d6\u8bf7\u6c42\u201d\u7684\u5206\u652f\u3002</p> <p>\u7ba1\u9053\u8fd8\u53ef\u4ee5\u4ece\u5206\u53c9\u7684\u4ed3\u5e93\u4e2d\u53d1\u73b0\u5177\u6709PR\u7684\u5206\u652f\u3002</p> <p>\u9009\u62e9\u8fd9\u4e9b\u9009\u9879\u53d6\u51b3\u4e8e\u6240\u9700\u7684\u5de5\u4f5c\u6d41\u7a0b\u3002</p> <p></p> <p>\u60a8\u53ef\u4ee5\u4ece\u201c\u6dfb\u52a0\u201d\u6309\u94ae\u4e2d\u9009\u62e9\u5176\u4ed6\u884c\u4e3a\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u9009\u62e9\u4e0d\u4ece\u5b58\u50a8\u5e93\u4e2d\u53d1\u73b0\u6240\u6709\u5206\u652f\uff0c\u5219\u53ef\u4ee5\u9009\u62e9\u6b63\u5219\u8868\u8fbe\u5f0f\u6216\u901a\u914d\u7b26\u65b9\u6cd5\u4ece\u5b58\u50a8\u5e93\u4e2d\u53d1\u73b0\u5206\u652f\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p></p> <p>\u8fd9\u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u548c\u901a\u914d\u7b26\u793a\u4f8b\u3002</p> <p></p> <p>\u6b65\u9aa47\uff1a\u5982\u679c\u9009\u62e9\u4e3aJenkinsfile\u4f7f\u7528\u5176\u4ed6\u540d\u79f0\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u5728\u6784\u5efa\u914d\u7f6e\u4e2d\u6307\u5b9a\u540d\u79f0\u6765\u5b9e\u73b0\u3002</p> <p>\u5728\u201c\u811a\u672c\u8def\u5f84\u201d\u9009\u9879\u4e2d\uff0c\u60a8\u53ef\u4ee5\u63d0\u4f9b\u6240\u9700\u7684\u540d\u79f0\u3002\u786e\u4fdd\u4ed3\u5e93\u4e2d\u7684Jenkinsfile\u4e0e\u60a8\u5728\u7ba1\u9053\u914d\u7f6e\u4e2d\u63d0\u4f9b\u7684\u540d\u79f0\u76f8\u540c\u3002</p> <p>\u53e6\u5916\uff0c\u542f\u7528\u201c\u653e\u5f03\u65e7\u7248\u672c\u201d\u4ee5\u4ec5\u4fdd\u7559\u6240\u9700\u7684\u751f\u6210\u65e5\u5fd7\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p></p> <p>\u6b65\u9aa48\uff1a\u4fdd\u5b58\u6240\u6709\u4f5c\u4e1a\u914d\u7f6e\u3002Jenkins\u626b\u63cf\u5df2\u914d\u7f6e\u7684Github\u5b58\u50a8\u5e93\uff0c\u4ee5\u67e5\u627e\u6240\u6709\u63d0\u5347\u4e86PR\u7684\u5206\u652f\u3002</p> <p>\u4e0b\u56fe\u663e\u793a\u4e86\u626b\u63cf\u4e09\u4e2a\u5206\u652f\u7684\u4f5c\u4e1a\uff0c\u5e76\u4e14\u7531\u4e8e\u6211\u6ca1\u6709\u63d0\u51fa\u4efb\u4f55\u62c9\u53d6\u8bf7\u6c42\uff0cJenkins\u4e0d\u4f1a\u521b\u5efa\u4efb\u4f55\u57fa\u4e8e\u5206\u652f\u7684\u7ba1\u9053\u3002\u6211\u5c06\u5c55\u793a\u5982\u4f55\u5728\u8bbe\u7f6eWebhook\u4e4b\u540e\u6d4b\u8bd5\u81ea\u52a8\u7ba1\u9053\u521b\u5efa\u3002</p> <p></p> <p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u5728Jenkins\u5b8c\u6210\u4e86\u914d\u7f6e\uff0c\u53ef\u4ee5\u6839\u636ePR\u8bf7\u6c42\u626b\u63cf\u5206\u652f\u3002</p> <p>\u4e3a\u4e86\u62e5\u6709\u5b8c\u6574\u7684\u5de5\u4f5c\u6d41\u7a0b\uff0c\u6211\u4eec\u9700\u8981\u5728Github\u4e2d\u914d\u7f6e\u4e00\u4e2aWebhook\uff0c\u4ee5\u5c06\u6240\u6709\u4e8b\u4ef6\uff08\u63d0\u4ea4\uff0cPR\u7b49\uff09\u53d1\u9001\u7ed9Jenkins\uff0c\u56e0\u4e3a\u53ef\u4ee5\u81ea\u52a8\u89e6\u53d1\u7ba1\u9053\u3002</p>"},{"location":"chap2/8Jenkinsfile_pipeline_multibranch/#webhook","title":"\u4e3a\u591a\u5206\u652f\u7ba1\u9053\u914d\u7f6eWebhook","text":"<p>\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u5728\u5b58\u50a8\u5e93\u4e0a\u8bbe\u7f6eJenkins Webhook\u3002</p> <p>\u7b2c1\u6b65\uff1a\u8f6c\u5230Github\u5b58\u50a8\u5e93\uff0c\u7136\u540e\u5355\u51fb\u8bbe\u7f6e\u3002</p> <p></p> <p>\u6b65\u9aa42\uff1a\u9009\u62e9\u5de6\u4fa7\u7684webhook\u9009\u9879\uff0c\u7136\u540e\u5355\u51fb\u201c\u6dfb\u52a0Webhook\u201d\u6309\u94ae\u3002</p> <p></p> <p>\u6b65\u9aa43\uff1a\u5728\u6709\u6548\u8d1f\u8f7dURL\u4e0b\u6dfb\u52a0\u60a8\u7684Jenkins URL\uff0c\u540e\u8ddf\u201c <code>**/github-webhook /</code>\u201d\u3002\u9009\u62e9\u5185\u5bb9\u7c7b\u578b\u4e3a\u201c <code>application/json</code>\u201d\uff0c\u7136\u540e\u5355\u51fb\u201c\u6dfb\u52a0Webhook\u201d**</p> <p>\u6ce8\u610f\uff1a\u60a8\u53ef\u4ee5\u9009\u62e9\u8981\u5728Jenkins\u4e2d\u63a5\u6536\u7684Webhook\u7c7b\u578b\u3002\u4f8b\u5982\uff0c\u60a8\u53ea\u60f3\u5728PR\u671f\u95f4\u89e6\u53d1\u7ba1\u9053\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u4ece\u201c\u8ba9\u6211\u9009\u62e9\u5355\u4e2a\u4e8b\u4ef6\u201d\u9009\u9879\u4e2d\u4ec5\u9009\u62e9PR\u4e8b\u4ef6\u3002</p> <p></p> <p>\u60a8\u5c06\u5728\u6210\u529f\u7684 Webhook\u914d\u7f6e\u4e0a\u770b\u5230\u4e00\u4e2a\u7eff\u8272\u7684\u52fe\u53f7 \uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p></p> <p>\u5982\u679c\u60a8\u6ca1\u6709\u770b\u5230\u7eff\u8272\u7684\u52fe\u53f7\u6216\u8b66\u544a\u6807\u5fd7\uff0c\u8bf7\u5355\u51fbWebhook\u94fe\u63a5\uff0c\u7136\u540e\u5355\u51fb\u6700\u540e\u4e00\u4e2aWebhook\u3002\u60a8\u5e94\u8be5\u80fd\u591f\u4f7f\u7528\u72b6\u6001\u4ee3\u7801\u67e5\u770b\u4e3a\u4ec0\u4e48Webhook\u4f20\u9012\u5931\u8d25\u3002</p> <p></p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u5b8c\u6210\u4e86\u591a\u5206\u652f\u7ba1\u9053\u7684\u6240\u6709\u5fc5\u9700\u914d\u7f6e\u3002\u4e0b\u4e00\u6b65\u662f\u6d4b\u8bd5\u591a\u5206\u652f\u7ba1\u9053\u5de5\u4f5c\u6d41\u89e6\u53d1\u5668\u3002</p>"},{"location":"chap2/8Jenkinsfile_pipeline_multibranch/#_2","title":"\u6d4b\u8bd5\u591a\u5206\u652f\u7ba1\u9053","text":"<p>\u51fa\u4e8e\u6f14\u793a\u76ee\u7684\uff0c\u6211\u9009\u62e9\u4e86\u201c\u4ec5\u5c06\u5206\u652f\u4f5c\u4e3aPR\u7684\u5206\u652f\u201d\u9009\u9879\u3002\u4f7f\u7528\u6b64\u9009\u9879\uff0c\u4ec5\u53d1\u73b0\u5177\u6709PR\u8bf7\u6c42\u7684\u5206\u652f\u3002</p> <p>\u8981\u4f7f\u7528\u591a\u5206\u652f\u7ba1\u9053\uff0c\u53ef\u4ee5\u5c06\u6b64\u56de\u8d2d\u4e0e\u793a\u4f8bJenkinsfile\u4e00\u8d77\u4f7f\u7528\u3002https://github.com/devopscube/multibranch-pipeline-demo</p> <p>\u8fd9\u4e2a\u4ed3\u5e93\u6709\u4e09\u4e2a\u5206\u652f\u3002\u66f4\u65b0\u529f\u80fd\u5206\u652f\u4e2d\u81ea\u8ff0\u6587\u4ef6\u4e2d\u7684\u67d0\u4e9b\u5185\u5bb9\uff0c\u5e76\u63d0\u9ad8PR\u4ee5\u8fdb\u884c\u5f00\u53d1\u3002\u5b83\u5c06\u5411Jenkins\u53d1\u9001\u4e00\u4e2aWebhook\uff0c\u5e76\u4e14Jenkins\u5c06\u53d1\u9001\u56deJenkins\u7684\u5de5\u4f5c\u8be6\u7ec6\u4fe1\u606f\uff0c\u5e76\u4e14PR\u5c06\u8fdb\u5165\u68c0\u67e5\u72b6\u6001\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p></p> <p>\u5982\u679c\u5355\u51fb\u201c\u8be6\u7ec6\u4fe1\u606f\u201d\uff0c\u5b83\u5c06\u5e26\u60a8\u5230Jenkins\u6784\u5efa\u65e5\u5fd7\u3002\u60a8\u53ef\u4ee5\u5728\u60a8\u7684Jenkins\u6587\u4ef6\u4e2d\u7f16\u5199\u81ea\u5b9a\u4e49\u68c0\u67e5\uff0c\u4ee5\u7528\u4e8e\u6784\u5efa\u5ba1\u6838\u3002</p> <p>\u73b0\u5728\uff0c\u5982\u679c\u60a8\u9009\u62e9\u4e86Jenkins\uff0c\u60a8\u5c06\u5728Jenkins\u4e2d\u627e\u5230\u529f\u80fd\u5206\u652f\u7684\u7ba1\u9053\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p></p> <p>\u5982\u679c\u6784\u5efa\u5931\u8d25\uff0c\u5219\u53ef\u4ee5\u5c06\u66f4\u6539\u63d0\u4ea4\u5230\u529f\u80fd\u5206\u652f\uff0c\u5e76\u4e14\u53ea\u8981PR\u6253\u5f00\uff0c\u5b83\u5c06\u89e6\u53d1\u529f\u80fd\u7ba1\u7ebf\u3002</p> <p>\u5728Jenkinfile\u4e2d\uff0c\u5982\u679c\u5206\u652f\u672a\u5f00\u53d1\uff0c\u6211\u6dfb\u52a0\u4e86\u4e00\u4e2a\u6761\u4ef6\u4ee5\u8df3\u8fc7\u90e8\u7f72\u9636\u6bb5\u3002\u60a8\u53ef\u4ee5\u5728Jenkins\u6784\u5efa\u65e5\u5fd7\u4e2d\u8fdb\u884c\u68c0\u67e5\u3002\u53e6\u5916\uff0c\u5982\u679c\u60a8\u5728\u84dd\u6d77\u4eea\u8868\u677f\u4e2d\u68c0\u67e5\u6784\u5efa\u6d41\u7a0b\uff0c\u5219\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u5230\u8df3\u8fc7\u7684\u90e8\u7f72\u9636\u6bb5\uff0c\u5982\u4e0b\u6240\u793a\u3002</p> <p></p> <p>\u73b0\u5728\u5408\u5e76\u529f\u80fd\u5206\u652fPR\u5e76\u5c06\u65b0\u7684PR\u4ecedevelopment\u63d0\u5347\u5230master\u5206\u652f\u3002</p> <p>Jenkins\u5c06\u6536\u5230\u6765\u81eaGithub\u7684Webhook\uff0c\u4ee5\u83b7\u53d6\u65b0\u7684PR\uff0c\u5e76\u5982\u4e0b\u6240\u793a\u521b\u5efa\u5f00\u53d1\u7ba1\u9053\u3002</p> <p></p> <p>\u5bf9\u4e8e\u5f00\u53d1\u5206\u652f\uff0c\u542f\u7528\u4e86\u90e8\u7f72\u9636\u6bb5\uff0c\u5982\u679c\u60a8\u68c0\u67e5\u4e86Blue Ocean\u7684\u6784\u5efa\u6d41\u7a0b\uff0c\u5219\u53ef\u4ee5\u770b\u5230\u6240\u6709\u9636\u6bb5\u90fd\u5df2\u6210\u529f\u89e6\u53d1\u3002</p> <p></p>"},{"location":"chap2/8Jenkinsfile_pipeline_multibranch/#_3","title":"\u5bf9\u591a\u5206\u652f\u7ba1\u9053\u8fdb\u884c\u6545\u969c\u6392\u9664","text":"<p>\u6211\u5c06\u8ba8\u8bba\u5728\u591a\u5206\u652f\u7ba1\u9053\u4e2d\u53ef\u80fd\u4f1a\u9047\u5230\u7684\u4e00\u4e9b\u9519\u8bef\uff0c\u4ee5\u53ca\u5982\u4f55\u89e3\u51b3\u8fd9\u4e9b\u9519\u8bef\u3002</p> <p>\u5206\u652f\u53d1\u73b0\u95ee\u9898</p> <p>\u6709\u65f6\uff0c\u5373\u4f7f\u5728SCM\u4e2d\u521b\u5efa\u4e86\u65b0\u5206\u652f\u4e4b\u540e\uff0c\u5b83\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u53cd\u6620\u5728Jenkins\u7ba1\u9053\u4e2d\u3002\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u8fd0\u884c\u201c\u7acb\u5373\u626b\u63cf\u5b58\u50a8\u5e93\u201d\u9009\u9879\u4ee5\u518d\u6b21\u626b\u63cf\u5b58\u50a8\u5e93\u3002\u53e6\u5916\uff0c\u68c0\u67e5\u7ba1\u9053\u4e2d\u7684\u5b58\u50a8\u5e93\u626b\u63cf\u914d\u7f6e\u3002</p> <p>Webhooks \u4e0d\u4f1a\u89e6\u53d1\u7ba1\u9053</p> <p>\u5f53Webhook\u6ca1\u6709\u89e6\u53d1\u7ba1\u9053\u65f6\uff0c\u8bf7\u68c0\u67e5Github\u4e2d\u7684Webhook\u4ea4\u4ed8\u72b6\u6001\u4ee3\u7801\u548c\u9519\u8bef\u3002\u53e6\u5916\uff0c\u8bf7\u68c0\u67e5Jenkins URL\u662f\u5426\u6b63\u786e\u3002</p> <p>\u8fd8\u8981\u4eceManage Jenkins-&gt; System Logs-&gt; All Jenkins\u65e5\u5fd7\u4e2d\u68c0\u67e5Jenkins\u65e5\u5fd7\u3002\u5982\u679cJenkins\u80fd\u591f\u63a5\u6536Webhook\uff0c\u5219\u65e5\u5fd7\u5e94\u663e\u793a\u672a\u89e6\u53d1\u4f5c\u4e1a\u7684\u539f\u56e0\u3002</p>"},{"location":"chap2/9jenkins_parallel2023/","title":"\u7b2c\u4e5d\u8282 \u5b9e\u8df5-Jenkins \u58f0\u660e\u5f0f\u7ba1\u9053\u4e2d\u7684\u52a8\u6001\u5e76\u884c\u9636\u6bb5 2023","text":"<p>\u5728 Jenkins Pipeline \u4e2d\uff0cparallel \u662f\u4e00\u4e2a\u7528\u4e8e\u5728\u4e0d\u540c\u7684 agent \u8282\u70b9\u4e0a\u5e76\u884c\u6267\u884c\u591a\u4e2a\u6b65\u9aa4\u7684\u8bed\u53e5\u3002</p> <p>\u901a\u8fc7\u4f7f\u7528 parallel\uff0c\u53ef\u4ee5\u5728\u51cf\u5c11\u6784\u5efa\u65f6\u95f4\u7684\u540c\u65f6\u63d0\u9ad8\u5176\u6548\u7387\u3002</p>"},{"location":"chap2/9jenkins_parallel2023/#parallel","title":"Parallel\u4f7f\u7528\u65b9\u6cd5","text":"<p>\u5728 script \u6807\u7b7e\u4e2d\u5b9a\u4e49\u4e00\u4e2a HashMap \u53d8\u91cf jobs\uff0c\u7528\u4e8e\u5b58\u50a8\u9700\u8981\u5e76\u884c\u6267\u884c\u7684\u4efb\u52a1\u3002</p> <pre><code>def jobs = [:]\n</code></pre> <p>\u5728 jobs \u4e2d\u6dfb\u52a0\u9700\u8981\u5e76\u884c\u6267\u884c\u7684\u4efb\u52a1\u3002\u6bcf\u4e2a\u4efb\u52a1\u90fd\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u552f\u4e00\u7684\u540d\u79f0\u3001\u4ee3\u7406\u548c\u4e00\u7ec4\u6b65\u9aa4\u3002</p> <pre><code>jobs[\"job1\"] = {\n    stage(\"job1\") {\n        steps{\n           script {\n                sh \"echo 123\"\n            }\n        }\n    }\n}\n\n\njobs[\"job2\"] = {\n    stage(\"job2\") {\n        steps{\n           script {\n                sh \"echo 123\"\n            }\n        }\n    }\n}\n</code></pre> <p>\u5728 parallel \u8bed\u53e5\u4e2d\u4f7f\u7528 jobs \u53d8\u91cf\u5e76\u884c\u6267\u884c\u8fd9\u4e9b\u4efb\u52a1\u3002</p> <pre><code>parallel jobs\n</code></pre> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u4f8b\u5b50\uff0c</p> <pre><code>pipeline {\n    agent any\n    stages {\n        stage('Build') {\n            steps {\n                script {\n                    def jobs = [:]\n                    jobs[\"job1\"] = {\n                        stage(\"job1\") {\n                            sh \"echo 123\"\n                        }\n                    }\n                    jobs[\"job2\"] = {\n                        stage(\"job2\") {\n                            sh \"echo 123\"\n                        }\n                    }\n                    parallel jobs\n                }\n            }\n        }\n        stage('Deploy') {\n            steps {\n                echo 'Deploying'\n            }\n        }\n    }\n}\n</code></pre> <p></p>"},{"location":"chap2/9jenkins_parallel2023/#collectentries","title":"CollectEntries\u7528\u6cd5","text":"<p>collectEntries \u662f Groovy \u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u7528\u4e8e\u5c06\u4e00\u4e2a\u952e\u503c\u5bf9\u96c6\u5408\u8f6c\u6362\u6210\u4e00\u4e2a Map\u3002</p> <p>\u8be5\u65b9\u6cd5\u53ef\u4ee5\u5bf9\u96c6\u5408\u8fdb\u884c\u904d\u5386\u5904\u7406\uff0c\u5e76\u5c06\u6bcf\u4e2a\u5143\u7d20\u8f6c\u6362\u6210\u4e00\u4e2a Map \u7684\u4e00\u4e2a\u952e\u503c\u5bf9\uff0c\u4ece\u800c\u751f\u6210\u4e00\u4e2a\u65b0\u7684 Map\u3002</p> <p>\u5728 Jenkins Pipeline \u4e2d\uff0ccollectEntries \u53ef\u4ee5\u7528\u4e8e\u5904\u7406\u591a\u4e2a\u9879\u76ee\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u4e00\u4e2a Map \u5e76\u8fdb\u884c\u8fdb\u4e00\u6b65\u5904\u7406\u3002</p> <pre><code>pipeline {\n    agent any\n    stages {\n        stage('Collect entries') {\n            steps {\n                script {\n                    def projects = [\n                        'Project 1': 5,\n                        'Project 2': 3,\n                        'Project 3': 1,\n                        'Project 4': 2\n                    ]\n\n                    def priorityMap = projects.collectEntries {\n                        [it.key, it.value * 10]\n                    }\n\n                    // Output the new map\n                    echo \"${priorityMap}\"\n                }\n            }\n        }\n    }\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a Pipeline \u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5177\u6709\u56db\u4e2a\u9879\u76ee\u7684\u7b80\u5355\u5217\u8868\uff0c\u5e76\u4f7f\u7528 collectEntries \u5c06\u5176\u8f6c\u6362\u4e3a\u4e00\u4e2a\u65b0\u7684 Map\u3002</p> <p>\u5728 collectEntries \u4e2d\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a Map \u5143\u7d20(key-value\u5bf9)\u8fdb\u884c\u4e86\u5904\u7406\uff0c\u5c06\u5176\u503c(value)\u4e58\u4ee5 10 \u751f\u6210\u65b0\u7684\u503c\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u65b0 Map \u7684\u503c(value)\u3002</p> <pre><code>// Example function that would return an array of jobs to deploy\ndef getjobsToDeploy() {\n    def jobList = []\n    for (int i = 0; i &lt; 5; i++) {\n        jobList &lt;&lt; \"buildjob\" + i.toString()\n    }\n  return jobList\n}\n\n// Convert array of jobs to map of stages\ndef getDeployStages() {\n  return getjobsToDeploy().collectEntries { job -&gt;\n    [\n      (job): {\n        stage(\"deploy ${job}\") {\n          sh \"ls \"\n        }\n      }\n    ]\n  }\n}\n\ndef getTestStages() {\n  return getjobsToDeploy().collectEntries { job -&gt;\n    [\n      (job): {\n        stage(\"test ${job}\") {\n          sh \"ls \"\n        }\n      }\n    ]\n  }\n}\n\npipeline {\n  agent any\n  stages {\n    // other stages...\n    stage('Deploy') {\n      steps {\n        script {\n          // Directly pass the map of stages to `parallel`\n          parallel getDeployStages()\n\n        }\n      }\n    }\n\n    stage('Test') {\n      steps {\n        script {\n          parallel getTestStages() \n        }\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"chap3/1chap3_groovy_basic/","title":"\u7b2c\u4e00\u8282 Groovy \u7b80\u660e\u6559\u7a0b","text":"<p>\u65e0\u8bba\u662f\u58f0\u660e\u5f0f\u8fd8\u662f\u811a\u672c\u5f0f\u7684 <code>Pipeline</code> \u90fd\u4f9d\u8d56\u4e86 <code>Groovy</code> \u811a\u672c\uff0c\u6240\u4ee5\u5982\u679c\u8981\u5f88\u597d\u7684\u638c\u63e1 <code>Pipeline</code> \u811a\u672c\u7684\u7528\u6cd5\uff0c\u6211\u4eec\u975e\u5e38\u6709\u5fc5\u8981\u53bb\u4e86\u89e3\u4e0b <code>Groovy</code> \u8bed\u8a00\u3002</p>"},{"location":"chap3/1chap3_groovy_basic/#1-groovy","title":"1. \u4ec0\u4e48\u662f Groovy","text":"<p><code>Groovy</code> \u662f\u8dd1\u5728 <code>JVM</code> \u4e2d\u7684\u53e6\u5916\u4e00\u79cd\u8bed\u8a00\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 <code>Groovy</code> \u5728 <code>Java</code> \u5e73\u53f0\u4e0a\u8fdb\u884c\u7f16\u7a0b\uff0c\u4f7f\u7528\u65b9\u5f0f\u57fa\u672c\u4e0e\u4f7f\u7528 <code>Java</code> \u4ee3\u7801\u7684\u65b9\u5f0f\u76f8\u540c\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u719f\u6089 <code>Java</code> \u4ee3\u7801\u7684\u8bdd\u57fa\u672c\u4e0a\u4e0d\u7528\u82b1\u5f88\u591a\u7cbe\u529b\u5c31\u53ef\u4ee5\u638c\u63e1 <code>Groovy</code> \u4e86\uff0c\u5b83\u7684\u8bed\u6cd5\u4e0e <code>Java</code> \u8bed\u8a00\u7684\u8bed\u6cd5\u5f88\u76f8\u4f3c\uff0c\u800c\u4e14\u5b8c\u6210\u540c\u6837\u7684\u529f\u80fd\u57fa\u672c\u4e0a\u6240\u9700\u8981\u7684 <code>Groovy</code> \u4ee3\u7801\u91cf\u4f1a\u6bd4 <code>Java</code> \u7684\u4ee3\u7801\u91cf\u5c11\u3002</p> <p>\u5b98\u65b9\u7f51\u7ad9\uff1ahttps://groovy.apache.org</p>"},{"location":"chap3/1chap3_groovy_basic/#2","title":"2. \u73af\u5883\u642d\u5efa","text":"<p>\u8981\u5b89\u88c5 <code>Groovy</code> \u73af\u5883\u975e\u5e38\u7b80\u5355\uff0c\u524d\u5f80\u5b98\u7f51\u7f51\u7ad9\u4e0b\u8f7d\u5bf9\u5e94\u7684\u5e73\u53f0\u5b89\u88c5\u5305\u4e00\u952e\u5b89\u88c5\u5373\u53ef\uff1ahttps://groovy.apache.org/download.html\uff0c\u6211\u8fd9\u91cc\u4f7f\u7528\u7684\u662f <code>Mac</code>\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6bd4\u8f83\u65b9\u4fbf\u7684 <code>Homebrew</code> \u5de5\u5177\u6765\u8fdb\u884c\u4e00\u952e\u5b89\u88c5\uff1a</p> <pre><code>$ brew install groovy\n</code></pre> <p>\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u770b <code>groovy</code> \u662f\u5426\u5b89\u88c5\u6210\u529f\uff1a</p> <pre><code>$ groovy -v\nGroovy Version: 3.0.4 JVM: 13.0.2 Vendor: Oracle Corporation OS: Mac OS X\n</code></pre>"},{"location":"chap3/1chap3_groovy_basic/#3","title":"3. \u57fa\u672c\u8bed\u6cd5","text":""},{"location":"chap3/1chap3_groovy_basic/#3-1","title":"3-1 \u8fd0\u884c\u65b9\u6cd5","text":"<p>\u4f7f\u7528\u7f16\u8f91\u5668\uff08vscode\uff09\u65b0\u5efa\u4e00\u4e2a <code>Groovy</code> \u6587\u4ef6 <code>hello.groovy</code>\uff0c\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff1a</p> <pre><code>class Example {\n   static void main(String[] args) {\n        // \u4f7f\u7528 println \u6253\u5370\u4fe1\u606f\u5230 stdout\n        /*\u9664\u4e86\u4e0a\u9762\u7684\u6ce8\u91ca\u65b9\u6cd5\u5916\uff0c\u8fd9\u91cc\u6ca1\u4e5f\u662f\u6ce8\u91ca\u4fe1\u606f\u54e6*/\n        println 'Hello World'\n        println \"Hello World\";\n   }\n}\n</code></pre> <p>\u5982\u679c\u4f60\u5bf9 Java \u4ee3\u7801\u8f83\u719f\u6089\u7684\u8bdd\uff0c\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u7684 Groovy \u662f\u975e\u5e38\u7c7b\u4f3c\u7684\u3002</p> <p>\u7136\u540e\u53ef\u4ee5\u4f7f\u7528 <code>groovy</code> \u547d\u4ee4\u8fd0\u884c\u4e0a\u9762\u7684\u7a0b\u5e8f\uff1a</p> <pre><code>$ groovy 1hello.groovy\nHello World\nHello World\n</code></pre> <ul> <li>\u4ece\u8f93\u51fa\u7ed3\u679c\u53ef\u4ee5\u770b\u51fa\u4e86 <code>Groovy</code> \u91cc\u9762\u652f\u6301<code>\u5355\u5f15\u53f7</code>\u548c<code>\u53cc\u5f15\u53f7</code>\u4e24\u79cd\u65b9\u5f0f\uff0c</li> <li>\u6ce8\u91ca\u652f\u6301<code>//</code>\u548c<code>/**/</code>\u4e24\u79cd\u65b9\u5f0f\uff0c</li> <li>\u800c\u4e14\u4e0d\u4ee5\u5206\u53f7<code>\u201c;\u201d</code>\u7ed3\u5c3e\u4e5f\u53ef\u4ee5\uff0c</li> <li>\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u63a8\u8350\u90fd<code>\u5e26\u4e0a\u5206\u53f7</code>\u4fdd\u6301\u4ee3\u7801\u7684\u4e00\u81f4\u6027\u3002</li> </ul>"},{"location":"chap3/1chap3_groovy_basic/#3-2","title":"3-2 \u6807\u8bc6\u7b26","text":"<p><code>\u6807\u8bc6\u7b26</code>\u88ab\u7528\u6765\u5b9a\u4e49\u53d8\u91cf\uff0c\u51fd\u6570\u6216\u5176\u4ed6\u7528\u6237\u5b9a\u4e49\u7684\u53d8\u91cf\u3002\u6807\u8bc6\u7b26\u4ee5\u5b57\u6bcd\u3001\u7f8e\u5143\u6216\u4e0b\u5212\u7ebf\u5f00\u5934\uff0c\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\u3002</p> <p>\u4ee5\u4e0b\u662f\u6709\u6548\u6807\u8bc6\u7b26\u7684\u4e00\u4e9b\u4f8b\u5b50 \uff1a</p> <pre><code>def employeename \ndef student1 \ndef student_name\n</code></pre> <p>\u5176\u4e2d\uff0cdef\u662f\u5728 <code>Groovy</code> \u4e2d\u7528\u6765\u5b9a\u4e49\u6807\u8bc6\u7b26\u7684\u5173\u952e\u5b57\u3002</p> <p>\u5982\u4e0b\u4ee3\u7801\uff1a<code>2datatype.groovy</code></p> <pre><code>class Example{\n    static void main(String[] agrs){\n        String x =\"Happy\";\n        println(x);\n\n        def _Holiday = \"Mother's Day\";\n        println(_Holiday);\n        println(x + \" \"+_Holiday);\n    }\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <pre><code>$ groovy 1hello.groovy\nHappy\nMother's Day\nHappy Mother's Day\n</code></pre>"},{"location":"chap3/1chap3_groovy_basic/#3-3","title":"3-3 \u6570\u636e\u7c7b\u578b","text":"<p>\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>x</code> \u548c\u4e00\u4e2a\u6807\u8bc6\u7b26 <code>_Name</code>\u3002\u5f53\u7136\u9664\u4e86\u5b57\u7b26\u4e32\u4e4b\u5916\uff0c<code>Groovy</code> \u4e5f\u652f\u6301\u6709\u7b26\u53f7\u6574\u6570\u3001\u6d6e\u70b9\u6570\u3001\u5b57\u7b26\u7b49\uff1a</p> <pre><code>class Example {\n    static void main(String[] args) {\n        String str = \"Hello\";  // \u5b57\u7b26\u4e32\n        int x = 5;  // \u6574\u6570\n        long y = 100L;  // \u957f\u6574\u578b\n        float a = 10.56f;  // 32\u4f4d\u6d6e\u70b9\u6570 \n        double b = 10.5e40;  // 64\u4f4d\u6d6e\u70b9\u6570\n        char c = 'A';  // \u5b57\u7b26\n        Boolean l = true;  // \u5e03\u5c14\u503c\uff0c\u53ef\u4ee5\u662ftrue\u6216false\u3002\n        println(str);\n        println(x);\n        println(y);\n        println(a);\n        println(b);\n        println(c);\n        println(l);\n    }\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <pre><code>$ groovy 2datatype.groovy\nHello\n5\n100\n10.56\n1.05E41\nA\ntrue\n</code></pre> <ul> <li>String =&gt; \u5b57\u7b26\u4e32</li> <li>int =&gt; \u6574\u6570</li> <li>long =&gt; \u957f\u6574\u578b</li> <li>float =&gt; 32\u4f4d\u6d6e\u70b9\u6570 </li> <li>double =&gt; 64\u4f4d\u6d6e\u70b9\u6570</li> <li>char =&gt; \u5b57\u7b26</li> <li>Boolean =&gt; \u5e03\u5c14\u503c\uff0c\u53ef\u4ee5\u662ftrue\u6216false\u3002</li> </ul>"},{"location":"chap3/1chap3_groovy_basic/#3-4","title":"3-4 \u6253\u5370\u53d8\u91cf","text":"<p>\u4e0a\u9762\u7528 <code>def</code> \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u53d8\u91cf\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u4e00\u4e2a\u786e\u5b9a\u7684\u6570\u636e\u7c7b\u578b\u6765\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u51e0\u79cd\u65b9\u5f0f\u6765\u6253\u5370\u53d8\u91cf\uff1a</p> <pre><code>class Example {\n    static void main(String[] args) {\n        // \u521d\u59cb\u5316\u4e24\u4e2a\u53d8\u91cf\n        int x = 5; \n        int X = 6; \n\n        // \u6253\u5370\u53d8\u91cf\u503c\n        println(\"x = \" + x + \" and X = \" + X);  \n        println(\"x = ${x} and X = ${X}\");\n        println('x = ${x} and X = ${X}');\n    }\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <pre><code>$ groovy 3Variable.groovy\nx = 5 and X = 6\nx = 5 and X = 6\nx = ${x} and X = ${X}\n</code></pre> <p>\u4ece\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u770b\u51fa <code>Groovy</code> \u5728\u5355\u5f15\u53f7\u7684\u5b57\u7b26\u4e32\u91cc\u9762\u662f\u4e0d\u652f\u6301\u63d2\u503c\u7684\uff0c\u8fd9\u70b9\u975e\u5e38\u91cd\u8981\uff0c\u5f88\u591a\u540c\u5b66\u5728\u4f7f\u7528 <code>Pipeline</code> \u811a\u672c\u7684\u65f6\u5019\u7ecf\u5e38\u4f1a\u6df7\u6dc6\u3002</p> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u652f\u6301\u4e09\u5f15\u53f7\uff1a</p> <pre><code>class Example {\n    static void main(String[] args) {\n        // \u521d\u59cb\u5316\u4e24\u4e2a\u53d8\u91cf\n        int x = 5; \n        int X = 6; \n\nprintln \"\"\"\nx = ${x}\nX = ${X}\n\"\"\"\n\nprintln '''\nx = ${x}\nX = ${X}\n'''\n    }\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <pre><code>$ groovy 3Variable.groovy\nx = 5\nX = 6\n\n\nx = ${x}\nX = ${X}\n</code></pre> <p>\u53ef\u4ee5\u770b\u51fa <code>Groovy</code> \u91cc\u9762\u4e09\u5f15\u53f7\u652f\u6301\u53cc\u5f15\u53f7\u548c\u5355\u5f15\u53f7\u4e24\u79cd\u65b9\u5f0f\uff0c\u4f46\u662f\u5355\u5f15\u53f7\u540c\u6837\u4e0d\u652f\u6301\u63d2\u503c\uff0c\u8981\u8bb0\u4f4f\u3002</p>"},{"location":"chap3/1chap3_groovy_basic/#3-5","title":"3-5 \u51fd\u6570","text":"<p><code>Groovy</code> \u4e2d\u7684\u51fd\u6570\u662f\u4f7f\u7528\u8fd4\u56de\u7c7b\u578b\u6216\u4f7f\u7528 <code>def</code> \u5173\u952e\u5b57\u5b9a\u4e49\u7684\uff0c\u51fd\u6570\u53ef\u4ee5\u63a5\u6536\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\uff0c\u5b9a\u4e49\u53c2\u6570\u65f6\uff0c\u4e0d\u5fc5\u663e\u5f0f\u5b9a\u4e49\u7c7b\u578b\uff0c</p> <p>\u53ef\u4ee5\u6dfb\u52a0\u4fee\u9970\u7b26\uff0c\u5982 <code>public</code>\uff0c<code>private</code> \u548c <code>protected</code>\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u672a\u63d0\u4f9b\u53ef\u89c1\u6027\u4fee\u9970\u7b26\uff0c\u5219\u8be5\u65b9\u6cd5\u4e3a <code>public</code>\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>class Example {\n   static def PrintHello() {\n      println(\"This is a print hello function in groovy\");\n   } \n\n   static int sum(int a, int b, int c = 10) {\n      int d = a+b+c;\n      return d;\n   }  \n\n   static void main(String[] args) {\n      PrintHello();\n      println(sum(5, 50));\n   } \n}\n</code></pre> <ul> <li><code>static def PrintHello(){}</code></li> <li><code>static int sum(int a, int b, int c = 10) {}</code></li> <li><code>static void main(String[] args) {}</code></li> </ul> <p>\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <pre><code>$ groovy 4func.groovy\nThis is a print hello function in groovy\n65\n</code></pre>"},{"location":"chap3/1chap3_groovy_basic/#3-6","title":"3-6 \u6761\u4ef6\u8bed\u53e5","text":"<p>\u5728\u6211\u4eec\u65e5\u5e38\u5de5\u4f5c\u4e2d\u6761\u4ef6\u5224\u65ad\u8bed\u53e5\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\uff0c\u5373\u4f7f\u5728 <code>Jenkins Pipeline</code> \u811a\u672c\u4e2d\u4e5f\u4f1a\u7ecf\u5e38\u9047\u5230\uff0cGroovy \u91cc\u9762\u7684\u6761\u4ef6\u8bed\u53e5\u548c\u5176\u4ed6\u8bed\u8a00\u57fa\u672c\u4e00\u81f4\uff0c\u4f7f\u7528 <code>if/else</code> \u5224\u65ad\uff1a</p> <pre><code>class Example { \n   static void main(String[] args) { \n      // \u521d\u59cb\u5316\u53d8\u91cf\u503c\n      int a = 2\n\n      // \u6761\u4ef6\u5224\u65ad\n      if (a &lt; 100) { \n         // \u5982\u679ca&lt;100\u6253\u5370\u4e0b\u9762\u8fd9\u53e5\u8bdd\n         println(\"The value is less than 100\"); \n      } else { \n         // \u5982\u679ca&gt;=100\u6253\u5370\u4e0b\u9762\u8fd9\u53e5\u8bdd\n         println(\"The value is greater than 100\"); \n      } \n   } \n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <pre><code>$ groovy 5cond.groovy\nThe value is less than 100\n</code></pre>"},{"location":"chap3/1chap3_groovy_basic/#3-7","title":"3-7 \u5faa\u73af\u8bed\u53e5","text":"<p>\u9664\u4e86\u6761\u4ef6\u5224\u65ad\u8bed\u53e5\u4e4b\u5916\uff0c\u5faa\u73af\u8bed\u53e5\u4e5f\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0cGroovy \u4e2d\u53ef\u4ee5\u4f7f\u7528\u4e09\u79cd\u65b9\u5f0f\u6765\u8fdb\u884c\u5faa\u73af\uff1a<code>while</code>\u3001<code>for\u8bed\u53e5</code>\u3001<code>for-in</code>\u8bed\u53e5\uff0c\u5982\u4e0b\uff1a</p> <pre><code>class Example {\n   static void main(String[] args) {\n      int count = 0;\n      println(\"while\u5faa\u73af\u8bed\u53e5\uff1a\");\n      while(count&lt;5) {\n         println(count);\n         count++;\n      }\n\n      println(\"for\u5faa\u73af\u8bed\u53e5\uff1a\");\n      for(int i=0;i&lt;5;i++) {\n         println(i);\n      }\n\n      println(\"for-in\u5faa\u73af\u8bed\u53e5\uff1a\");\n      int[] array = [0,1,2,3]; \n      for(int i in array) { \n         println(i); \n      } \n\n      println(\"for-in\u5faa\u73af\u8303\u56f4\uff1a\");\n      for(int i in 1..5) {\n         println(i);\n      }\n   }\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <pre><code>$ groovy 6loop.groovy\nwhile\u5faa\u73af\u8bed\u53e5\uff1a\n0\n1\n2\n3\n4\nfor\u5faa\u73af\u8bed\u53e5\uff1a\n0\n1\n2\n3\n4\nfor-in\u5faa\u73af\u8bed\u53e5\uff1a\n0\n1\n2\n3\nfor-in\u5faa\u73af\u8303\u56f4\uff1a\n1\n2\n3\n4\n5\n</code></pre> <p>\u4e0a\u9762\u662f\u5e38\u7528\u7684\u4e09\u79cd\u5faa\u73af\u65b9\u5f0f\uff0c\u5176\u4e2d\u4e00\u4e2a\u6bd4\u8f83\u7279\u6b8a\u7684\u5730\u65b9\u662f\u6211\u4eec\u53ef\u4ee5\u7528<code>..</code>\u6765\u5b9a\u4e49\u4e00\u4e2a\u6570\u636e\u8303\u56f4\uff0c\u6bd4\u5982<code>1:5</code>\u8868\u793a1\u52305\u7684\u6570\u7ec4\u3002</p> <p>\u53e6\u5916\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528<code>for-in</code>\u6765\u5faa\u73af <code>Map</code>\uff0cMap\uff08\u5b57\u5178\uff09\u662f\u6211\u4eec\u5728\u7f16\u5199\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u955c\u50cf\u4f7f\u7528\u5230\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5927\u90e8\u5206\u7684\u7f16\u7a0b\u8bed\u8a00\u90fd\u662f\u4f7f\u7528<code>{}</code>\u6765\u5b9a\u4e49 Map\uff0c\u800c\u5728 Groovy \u4e2d\u6709\u70b9\u4e0d\u4e00\u6837\u7684\u5730\u65b9\uff0c\u662f\u4f7f\u7528<code>[]</code>\u6765\u5b9a\u4e49\u7684 Map\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>class Example {\n   static void main(String[] args) {\n       // \u5b9a\u4e49\u4e00\u4e2aMap\n      def ageMap = [\"Ken\" : 21, \"John\" : 25, \"Sally\" : 22];\n\n      for(am in ageMap) {\n         println(am);\n      }\n   }\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <pre><code>$ groovy 7map.groovy\nKen=21\nJohn=25\nSally=22\n</code></pre> <p>\u9664\u4e86\u4e0a\u9762\u8fd9\u4e9b\u6700\u57fa\u672c\u7684\u7279\u6027\u5916\uff0c<code>Groovy</code> \u8fd8\u652f\u6301\u5f88\u591a\u5176\u4ed6\u7684\u7279\u6027\uff0c\u6bd4\u5982\u5f02\u5e38\u5904\u7406\u3001\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u3001\u6b63\u5219\u8868\u8fbe\u5f0f\u3001\u6cdb\u578b\u3001\u95ed\u5305\u7b49\u7b49\uff0c\u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u53ea\u662f\u4e3a\u4e86\u8ba9\u5927\u5bb6\u5bf9 <code>Jenkins Pipeline</code> \u7684\u811a\u672c\u6709\u4e00\u4e2a\u57fa\u672c\u7684\u8ba4\u8bc6\uff0c\u66f4\u6df1\u5c42\u6b21\u7684\u7528\u6cd5\u5f88\u5c11\u4f1a\u6d89\u53ca\u5230.</p>"},{"location":"chap3/2chap3_groovy_basic2/","title":"\u7b2c\u4e8c\u8282 Groovy \u57fa\u7840","text":""},{"location":"chap3/2chap3_groovy_basic2/#1","title":"1\u3001 \u5b57\u7b26\u4e32\u4e0e\u5217\u8868","text":""},{"location":"chap3/2chap3_groovy_basic2/#1-1-groovy-","title":"1-1 Groovy - \u7b80\u4ecb","text":"<ul> <li><code>Groovy</code>\u662f\u4e00\u79cd\u529f\u80fd\u5f3a\u5927\uff0c\u53ef\u9009\u7c7b\u578b\u548c\u52a8\u6001\u8bed\u8a00\uff0c\u652f\u6301Java\u5e73\u53f0 </li> <li>\u65e8\u5728\u63d0\u9ad8\u5f00\u53d1\u4eba\u5458\u7684\u751f\u4ea7\u529b\u5f97\u76ca\u4e8e\u7b80\u6d01\uff0c\u719f\u6089\u4e14\u7b80\u5355\u6613\u5b66\u7684\u8bed\u6cd5\u3002 </li> <li>\u53ef\u4ee5\u4e0e\u4efb\u4f55Java\u7a0b\u5e8f\u987a\u5229\u96c6\u6210\uff0c\u5e76\u7acb\u5373\u4e3a\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u5f3a\u5927\u7684\u529f\u80fd\uff0c \u5305\u62ec\u811a\u672c\u7f16\u5199\u529f\u80fd\uff0c\u7279\u5b9a\u9886\u57df\u8bed\u8a00\u7f16\u5199\uff0c\u8fd0\u884c\u65f6\u548c\u7f16\u8bd1\u65f6\u5143\u7f16\u7a0b\u4ee5\u53ca\u51fd\u6570\u5f0f\u7f16\u7a0b </li> </ul>"},{"location":"chap3/2chap3_groovy_basic2/#1-2-install-groovy","title":"1-2 Install Groovy","text":"<p>https://groovy-lang.org/install.html</p> <p>You should now have Groovy installed properly. You can test this by typing the following in a command shell:</p> <pre><code>groovysh\n</code></pre> <pre><code>$ groovysh\nGroovy Shell (3.0.4, JVM: 13.0.2)\nType ':help' or ':h' for help.\n--------------------------------------------------------------------------------------------------------------------------------------------------------\ngroovy:000&gt; println(\"hello world\");\nhello world\n===&gt; null\n</code></pre> <p>Which should create an interactive groovy shell where you can type Groovy statements. </p> <pre><code>groovyConsole\n</code></pre> <p></p> <p>To run a specific Groovy script type:</p> <pre><code>groovy SomeScript\n</code></pre>"},{"location":"chap3/2chap3_groovy_basic2/#1-3-groovy","title":"1-3 Groovy \u6570\u636e\u7c7b\u578b","text":"<ul> <li>\u5b57\u7b26\u4e32\u8868\u793a\uff1a\u5355\u5f15\u53f7\u3001\u53cc\u5f15\u53f7\u3001\u4e09\u5f15\u53f7 </li> <li>\u5e38\u7528\u65b9\u6cd5\uff1a <ul> <li><code>contains()</code>\u5de5\u662f\u5426\u5305\u542b\u7279\u5b9a\u5185\u5bb9\u8fd4\u56detrue false </li> <li><code>size()</code> <code>length()</code>\u5b57\u7b26\u4e32\u6570\u91cf\u5927\u5c0f\u957f\u5ea6 </li> <li><code>toString()</code> \u8f6c\u6362\u6210<code>string</code>\u7c7b\u578b <code>indexOf()</code></li> <li>\u5143\u7d20\u7684\u7d22\u5f15 <code>endsWith()</code> \u662f\u5426\u6307\u5b9a\u5b57\u7b26\u7ed3\u5c3e </li> <li><code>minus() plus()</code> \u53bb\u6389\u3001\u589e\u52a0\u5b57\u7b26\u4e32 </li> <li><code>reverse()</code> \u53cd\u5411\u6392\u5e8f </li> <li><code>substring(1,2)</code>\u5b57\u7b26\u4e32\u7684\u6307\u5b9a\u7d22\u5f15\u5f00\u59cb\u7684\u5b50\u5b57\u7b26\u4e32 </li> <li><code>toUpperCase() toLowerCase()</code>\u5b57\u7b26\u4e32\u5927\u5c0f\u5199\u8f6c\u6362 </li> <li><code>split()</code>\u5b57\u7b26\u4e32\u5206\u5272\u9ed8\u8ba4\u7a7a\u683c\u5206\u5272\u8fd4\u56de\u5217\u8868 </li> </ul> </li> </ul> <pre><code>groovy:000&gt; \"devsecurityops\".contains(\"ops\")\n===&gt; true\ngroovy:000&gt; \"devsecurityops\".contains(\"users\")\n===&gt; false\ngroovy:000&gt; \"devsecurityops\".endsWith(\"ops\")\n===&gt; true\ngroovy:000&gt; \"devsecurityops\".endsWith(\"abc\")\n===&gt; false\ngroovy:000&gt; \"devsecurityops\".length()\n===&gt; 14\ngroovy:000&gt; \"devsecurityops\".size()\n===&gt; 14\ngroovy:000&gt; \"dev\"+\"ops\"\n===&gt; devops\ngroovy:000&gt; \"devops\" - \"dev\"\n===&gt; ops\n</code></pre> <pre><code>groovy:000&gt; \"devops\".toUpperCase()\n===&gt; DEVOPS\ngroovy:000&gt; \"DEVOPS\".toLowerCase()\n===&gt; devops\n</code></pre> <pre><code> \"dev1,dev2,dev3\"\n===&gt; dev1,dev2,dev3\n\ngroovy:000&gt;  \"host1,host2,host3\".split(',')\n===&gt; [host1, host2, host3]\n\ngroovy:000&gt; hosts = \"host1,host2,host3\".split(',')\n===&gt; [host1, host2, host3]\n\ngroovy:000&gt; for( i in hosts){\ngroovy:001&gt;   println(i)\ngroovy:002&gt; }\nhost1\nhost2\nhost3\n===&gt; null\n\ngroovy:000&gt; result = [1,2,3,4].add(5)\n===&gt; true\n</code></pre>"},{"location":"chap3/2chap3_groovy_basic2/#1-4-groovylist","title":"1-4 Groovy\u6570\u636e\u7c7b\u578b\u4e00list","text":"<ul> <li>\u5217\u8868\u7b26\u53f7\uff1a[]</li> <li>\u5e38\u7528\u65b9\u6cd5<ul> <li><code>\uff0b - \uff0b -=</code> \u5143\u7d20\u589e\u52a0\u51cf\u5c11 </li> <li><code>add() &lt;&lt;</code>  \u6dfb\u52a0\u5143\u7d20 </li> <li><code>isEmpty()</code>\u5224\u65ad\u662f\u5426\u4e3a\u7a7a </li> <li><code>intersect([2,3]) disjoint([1]\uff09</code> \u53d6\u4ea4\u96c6\u3001\u5224\u65ad\u662f\u5426\u6709\u4ea4\u96c6 </li> <li><code>flatten(\uff09</code> \u5408\u5e76\u5d4c\u5957\u7684\u5217\u8868 </li> <li><code>unique()</code>\u53bb\u91cd </li> <li><code>reverse()</code> <code>sort()</code>\u53cd\u8f6c\u5347\u5e8f </li> <li><code>count()</code> \u5143\u7d20\u4e2a\u6570 </li> <li><code>join(\uff09</code> \u5c06\u5143\u7d20\u6309\u7167\u53c2\u6570\u94fe\u63a5 </li> <li><code>sum() min() max(\uff09</code> \u6c42\u548c\u6700\u5c0f\u503c\u6700\u5927\u503c </li> <li><code>contains()</code> \u5305\u542b\u7279\u5b9a\u5143\u7d20 </li> <li><code>remove(2) removeAll()</code></li> <li><code>each{}</code>\u904d\u5386 </li> </ul> </li> </ul> <pre><code>groovy:000&gt; []\n===&gt; []\ngroovy:000&gt; [1,2,3,4] + 4\n===&gt; [1, 2, 3, 4, 4]\ngroovy:000&gt; [1,2,3,4] + 46\n===&gt; [1, 2, 3, 4, 46]\ngroovy:000&gt; [1,2,3,4] &lt;&lt; 14\n===&gt; [1, 2, 3, 4, 14]\ngroovy:000&gt; result = [1,2,3,4].add(5)\n===&gt; true\ngroovy:000&gt; print(result)\ntrue===&gt; null\ngroovy:000&gt; [2,3,4,5,6,6,6].unique()\n===&gt; [2, 3, 4, 5, 6]\ngroovy:000&gt; [2,3,4,5,6,6,6].join(\"-\")\n===&gt; 2-3-4-5-6-6-6\ngroovy:000&gt; [2,3,4,5,6,6,6].each{\ngroovy:001&gt; println it}\n2\n3\n4\n5\n6\n6\n6\n===&gt; [2, 3, 4, 5, 6, 6, 6]\n</code></pre>"},{"location":"chap3/2chap3_groovy_basic2/#2","title":"2\u3001 \u5b57\u5178\u6761\u4ef6\u8bed\u53e5\u4e0e\u5faa\u73af","text":"<p>\u672c\u8282\u4ecb\u7ecd Groovy \u57fa\u7840\u8bed\u6cd5\u4e2d\u7684\u5b57\u5178\u6761\u4ef6\u8bed\u53e5\u5faa\u73af\u8bed\u53e5\u3002</p>"},{"location":"chap3/2chap3_groovy_basic2/#2-1-groovymap","title":"2-1 Groovy\u6570\u636e\u7c7b\u578b\u4e00Map","text":"<ul> <li>\u8868\u793a\uff1a <code>[:]</code> </li> <li>\u5e38\u7528\u65b9\u6cd5\uff1a <ul> <li><code>size() map</code> \u5927\u5c0f </li> <li><code>['key'].key  get()</code> \u83b7\u53d6<code>value</code> </li> <li><code>isEmpty ()</code> \u662f\u5426\u4e3a\u7a7a <code>containKey ()</code> \u662f\u5426\u5305\u542b<code>key</code> </li> <li><code>containValue \uff08\uff09</code>\u662f\u5426\u5305\u542b\u6307\u5b9a\u7684<code>value</code> </li> <li><code>keySet (\uff09</code> \u751f\u6210<code>key</code>\u7684\u5217\u8868 </li> <li><code>each{}</code>\u904d\u5386map </li> <li><code>remove( 'a'\uff09</code>\u5220\u9664\u5143\u7d20<code>(k-v)</code> </li> </ul> </li> </ul> <pre><code>groovy:000&gt; [:]\n===&gt; [:]\ngroovy:000&gt; [1:2]\n===&gt; [1:2]\ngroovy:000&gt; [1:2][1]\n===&gt; 2\n\ngroovy:000&gt; [1:2,3:4,5:6].keySet()\n===&gt; [1, 3, 5]\ngroovy:000&gt; [1:2,3:4,5:6].values()\n===&gt; [2, 4, 6]\n\ngroovy:000&gt; [1:2,3:4,5:6]+[7:8]\n===&gt; [1:2, 3:4, 5:6, 7:8]\n\ngroovy:000&gt; [1:2,3:4,5:6]-[1:2]\n===&gt; [3:4, 5:6]\n</code></pre>"},{"location":"chap3/2chap3_groovy_basic2/#2-2-groovyif","title":"2-2 Groovy\u6761\u4ef6\u8bed\u53e5\u4e00if","text":"<pre><code>if\uff08\u8868\u8fbe\u5f0f\uff09{ \n    //xxxx \n    } else if\uff08\u8868\u8fbe\u5f0f2) {\n    //xxxxx \n    } else { \n    // \n    } \n</code></pre> <pre><code>groovy:000&gt; buildType = \"maven\"\n===&gt; maven\ngroovy:000&gt; if (buildType == \"maven\"){\ngroovy:001&gt;   println(\"This is a maven project\");\ngroovy:002&gt; } else if(buildType == \"gradle\"){\ngroovy:003&gt;   println(\"project type error\");\ngroovy:004&gt; }\nThis is a maven project\n===&gt; null\n</code></pre>"},{"location":"chap3/2chap3_groovy_basic2/#2-3-groovyswitch","title":"2-3 Groovy\u6761\u4ef6\u8bed\u53e5\u4e00switch","text":"<pre><code>switch(\" ${buildType}\")\n{ \n    case: \"maven\":\n    //xxxx \n    break;\n    case \"ant\": \n    //xxxx \n    break; \n    default:\n    //xxxx \n}\n</code></pre> <pre><code>buildType = \"maven\";\nswitch(\"${buildType}\"){ \ncase 'maven': \n    println(\"This is a maven project !\"); \n    break;\n    ;;\n    case 'gradle': \n    println(\"This is a gradle projects !\"); \n    break;\n    ;; \n    default: \n    println(\"Project Type Error\");\n    ;;\n}\n</code></pre> <pre><code>$ groovy switch.groovy \nThis is a maven project !\n</code></pre> <pre><code>groovy:000&gt; langs = [\"java\",\"python\",\"ruby\"]\n===&gt; [java, python, ruby]\n\n$ groovy for.groovy \nlang is java\nlang is python\nlang is ruby\n</code></pre>"},{"location":"chap3/2chap3_groovy_basic2/#3","title":"3\u3001\u51fd\u6570\u4f7f\u7528","text":""},{"location":"chap3/2chap3_groovy_basic2/#3-1-def","title":"3-1 <code>def</code>\u5b9a\u4e49\u51fd\u6570\u8bed\u6cd5\uff1a","text":"<pre><code> def PrintMes(Value){ \n    printin(Value) \n    //xxxx \n    return value \n } \n</code></pre> <pre><code>def PrintMes(info){ \n    println (info) \n    return info \n} \n\nresponse = PrintMes(\"DevOps\") \nprintln(response) \n</code></pre>"},{"location":"chap3/2chap3_groovy_basic2/#3-2-groovy","title":"3-2 Groovy\u6b63\u5219\u8868\u8fbe\u5f0f","text":"<pre><code>@NonCPS \nString getBranch(String branchName){ \n    def matcher = \uff08branchName =~ \"RELEASE-[0-9]{4}\") \n    if (matcher.find()) { \n        newBranchName = matcher[0] \n        } else { \n        newBranchName = branchName \n        ) \n    newBranchName \n} \n\nnewBranchName = getBranch(branchName) \nprintln(\"New branch Name\" ----&gt; ${newBranchName}\") \n</code></pre>"},{"location":"chap3/2chap3_groovy_basic2/#4-pipeline-dsl","title":"4\u3001 \u5e38\u7528\u7684 Pipeline DSL \u65b9\u6cd5","text":""},{"location":"chap3/2chap3_groovy_basic2/#4-1-dsl-readjson-json","title":"4-1 \u5e38\u7528  DSL-    <code>readJSON</code>- JSON \u6570\u636e\u683c\u5f0f\u5316","text":"<pre><code>def response = readJSON text: \"${scanResult}\" \nprintln(scanResult) \n\n//\u539f\u751f\u65b9\u6cd5\n\nimport groovy.json.* \n\n@NonCPS \n\ndef GetJson(text) {\n    def prettyJson = JsonOutput.prettyPrint(text) \n    new JsonSlurperClassic().parseText(prettyJson) \n}\n</code></pre>"},{"location":"chap3/2chap3_groovy_basic2/#4-2-dsl-withcredentials","title":"4-2 \u5e38\u7528DSL-<code>withCredentials</code>","text":"<pre><code>withCredentias([string(credentialsId: \"xxxxx\", variable: \"sonarToken\")])\n{ \n    printin(sonarToken) \n} \n</code></pre>"},{"location":"chap3/2chap3_groovy_basic2/#4-3-dslcheckout","title":"4-3 \u5e38\u7528DSL\u4e00<code>checkout</code>","text":"<pre><code>//Git \ncheckout([$class: 'GitSCM', branches:  [[name: \"branchName\"]],          \n            doGenerateSubmoduleConfigurations: false, \n            extensions: [], submoduleCfg: [], \n            userRemoteConfigs: [[credentialsId: \"${credentialsId}\", \n            url: \"${srcUrl}\"]]])\n\n//Svn \ncheckout([$class: 'SubversionSCM', additionalCredentials: [], \n            filterChangelog: false, ignoreDirPropChanges: false, \n            locations: [[credentialsId: \"${credentialsId}\", \n            depthOption: 'infinity', ignoreExternalsOption: true, \n            remote: \"${svnUrl}\"]], workspaceUpdater: [$class: 'CheckoutUpdater']] \n) \n</code></pre>"},{"location":"chap3/2chap3_groovy_basic2/#4-4dsl-publishhtml","title":"4-4\u5e38\u7528DSL\u4e00 <code>publishHTML</code>","text":"<pre><code>publishHTML([allowMissing: false, \n    alwaysLinkToLastBuild: false, \n    keepAll: true, \n    reportDir: './report/', \n    reportFiles: \"a.html, b.html\", \n    reportName: 'InterfaceTestReport', \n    reportTitles: 'HTML'\n])\n</code></pre>"},{"location":"chap3/2chap3_groovy_basic2/#4-5dsl-input","title":"4-5\u5e38\u7528DSL \u4e00 <code>input</code>","text":"<pre><code>def result = input message: '\u9009\u62e9xxxxx\u2019, \n                ok: '\u63d0\u4ea4',\n                parameters: [extendedChoice( \n                        description: 'xxxxx', \n                        descriptionPropertyValue:'', \n                        multiSelectDelimiter: ',', \n                        name: 'failePositiveCases', \n                        quoteValue: false, \n                        saveJSONParameterToFile: false, \n                        type: 'PT_CHECKBOX', \n                        value: \"1,2,3\", \n                        visibleltemCount: 99)] \nprintln(result) \n</code></pre>"},{"location":"chap3/2chap3_groovy_basic2/#4-6-dsl-builduser","title":"4-6 \u5e38\u7528DSL-<code>BuildUser</code>","text":"<pre><code>wrap([$class: 'BuildUser']) {\n    echo \"full name is $BUILD_USER\" \n    echo \"user id is $BUILD_USER_ID\" \n    echo \"user email is $BUILD_USER_EMAIL\"  \n}\n</code></pre>"},{"location":"chap3/2chap3_groovy_basic2/#4-7-dsl-httprequest","title":"4-7 \u5e38\u7528DSL\u4e00 <code>httpRequest</code>","text":"<pre><code>ApiUrl = \"http://xxxxxx/api/project_branches/list?project=${projectName}\" \nResult = httpRequest authentication: 'xxxxxxxxx', \n    quiet: true, \n    contentType: 'APPLICATION_JSON' , \n    url: \"${ApiUrl}\" \n</code></pre>"},{"location":"chap3/2chap3_groovy_basic2/#4-8-dsl-email","title":"4-8 \u5e38\u7528DSL\u4e00 <code>email</code>","text":""},{"location":"chap4/1chp4_tools1/","title":"\u7b2c\u4e00\u8282 \u6784\u5efa\u5de5\u5177\u96c6\u6210","text":""},{"location":"chap4/1chp4_tools1/#1-maven","title":"1\u3001\u96c6\u6210 Maven \u6784\u5efa\u5de5\u5177","text":""},{"location":"chap4/1chp4_tools1/#1-1-maven","title":"1-1 \u5b89\u88c5<code>maven</code>","text":"<p>https://maven.apache.org/download.cgi</p> <pre><code>$  java -version\nopenjdk version \"1.8.0_252\"\nOpenJDK Runtime Environment (build 1.8.0_252-b09)\nOpenJDK 64-Bit Server VM (build 25.252-b09, mixed mode)\n\n$ sudo yum install java-1.8.0-openjdk-devel\n$ javac -version\njavac 1.8.0_252\n</code></pre> <pre><code>tar zxf apache-maven-3.6.3-bin.tar.gz -C /usr/local/\n\nvim /etc/profile\n\n#\u8bbe\u7f6e\u5168\u5c40\u53d8\u91cf(/etc/profile)\nexport JAVA_HOME=/usr/local/jdk1.8.0_252\nexport M2_HOME = /usr/local/apache-maven-3.6.3 \nexport PATH=$PATH:$JAVA_HOME/bin:$M2_HOME\n\n\nsource /etc/profile\n</code></pre>"},{"location":"chap4/1chp4_tools1/#maven-on-centos","title":"\u5b89\u88c5<code>Maven on Centos</code>","text":"<pre><code>https://linuxize.com/post/how-to-install-apache-maven-on-centos-7/\nwget https://www-us.apache.org/dist/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz -P /tmp\nsudo tar xf /tmp/apache-maven-3.6.3-bin.tar.gz -C /opt\nsudo ln -s /opt/apache-maven-3.6.3 /opt/maven\nsudo vim /etc/profile.d/maven.sh\n\nexport JAVA_HOME=/usr/lib/jvm/jre-openjdk\nexport M2_HOME=/opt/maven\nexport MAVEN_HOME=/opt/maven\nexport PATH=${M2_HOME}/bin:${PATH}\n\nsudo chmod +x /etc/profile.d/maven.sh\n\nsource /etc/profile.d/maven.sh\n\n$ mvn -version\nApache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)\nMaven home: /opt/maven\nJava version: 1.8.0_252, vendor: Oracle Corporation, runtime: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.252.b09-2.el7_8.x86_64/jre\nDefault locale: en_US, platform encoding: UTF-8\nOS name: \"linux\", version: \"3.10.0-957.12.2.el7.x86_64\", arch: \"amd64\", family: \"unix\"\n\n$ whereis mvn\nmvn: /opt/apache-maven-3.6.3/bin/mvn.cmd /opt/apache-maven-3.6.3/bin/mvn\n</code></pre>"},{"location":"chap4/1chp4_tools1/#1-2-maven","title":"1-2 \u96c6\u6210<code>maven</code>","text":"<ul> <li> <p>\u5e38\u7528\u547d\u4ee4 </p> <ul> <li><code>clean</code>\u6e05\u7406\u6784\u5efa\u76ee\u5f55 </li> <li><code>clean package</code>\u6253\u5305 </li> <li><code>clean install</code>\u6253\u5305\u90e8\u7f72 </li> <li><code>clean test</code>\u5355\u5143\u6d4b\u8bd5 </li> </ul> </li> <li> <p>Jenkins \u914d\u7f6e <code>maven</code></p> </li> </ul> <p></p> <pre><code>stage(\"Build\"){\n     mvnHome = \"/opt/apache-maven-3.6.3/bin/mvn\" \n     sh \"${mvnHome}/mvn clean package \" \n}\n</code></pre> <p><code>maven.jenkinsfile</code></p> <pre><code>#!groovy\npipeline {\n    agent { node { label \"hostmachine\" }}\n    stages{\n        stage('tools') {\n            steps {\n                script {\n                    mvnHome = tool \"m2\"\n                    sh \"${mvnHome}/bin/mvn --version\"\n                } \n            }\n        }\n    }\n }\n</code></pre> <pre><code>...\n[Pipeline] tool\n[Pipeline] sh\n+ /opt/maven/bin/mvn --version\nApache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)\nMaven home: /opt/maven\nJava version: 1.8.0_252, vendor: Oracle Corporation, runtime: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.252.b09-2.el7_8.x86_64/jre\nDefault locale: en_US, platform encoding: UTF-8\nOS name: \"linux\", version: \"3.10.0-957.12.2.el7.x86_64\", arch: \"amd64\", family: \"unix\"\n...\n</code></pre>"},{"location":"chap4/1chp4_tools1/#2-ant","title":"2\u3001\u96c6\u6210 Ant \u6784\u5efa\u5de5\u5177","text":"<ul> <li>https://ant.apache.org/bindownload.cgi</li> </ul>"},{"location":"chap4/1chp4_tools1/#2-1-ant","title":"2-1 \u5b89\u88c5Ant","text":"<pre><code>unzip apache-ant-1.9.15-bin.zip\nsudo mv apache-ant-1.9.15 /opt/ant\nsudo ln -s /opt/ant/bin/ant /usr/bin/ant\n\nsudo vim /etc/profile.d/ant.sh\n\n#!/bin/bash\nANT_HOME=/opt/ant\nPATH=$ANT_HOME/bin:$PATH\nexport PATH ANT_HOME\nexport CLASSPATH=.\n\nsudo  chmod +x /etc/profile.d/ant.sh\nsource /etc/profile.d/ant.sh\n</code></pre> <pre><code>$ ant -version\nUnable to locate tools.jar. Expected to find it in /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.252.b09-2.el7_8.x86_64/lib/tools.jar\nApache Ant(TM) version 1.9.15 compiled on May 10 2020\n\n$ echo $ANT_HOME\n/opt/ant\n\n$ /opt/ant/bin/ant -v\nUnable to locate tools.jar. Expected to find it in /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.252.b09-2.el7_8.x86_64/lib/tools.jar\nApache Ant(TM) version 1.9.15 compiled on May 10 2020\nTrying the default build file: build.xml\nBuildfile: build.xml does not exist!\nBuild failed\n</code></pre> <pre><code>#!groovy\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        choice(name: 'buildShell', choices: '-v\\nclean package\\nclean install\\nclean test', description: 'Please chose your env') \n    }\n    stages{\n        stage('tools-mvn') {\n            steps {\n                script {\n                    mvnHome = tool \"m2\"\n                    sh \"${mvnHome}/bin/mvn ${buildShell}\"\n                } \n            }\n        }\n\n        stage('tools-ant') {\n            steps {\n                script {\n                    antHome = tool \"ANT\"\n                    sh \"${antHome}/bin/ant ${buildShell}\"\n                } \n            }\n        }\n    }\n }\n</code></pre>"},{"location":"chap4/1chp4_tools1/#2-2-console-output","title":"2-2 Console Output","text":"<pre><code>+ /opt/maven/bin/mvn -v\nApache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)\nMaven home: /opt/maven\nJava version: 1.8.0_252, vendor: Oracle Corporation, runtime: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.252.b09-2.el7_8.x86_64/jre\nDefault locale: en_US, platform encoding: UTF-8\nOS name: \"linux\", version: \"3.10.0-957.12.2.el7.x86_64\", arch: \"amd64\", family: \"unix\"\n[Pipeline] }\n...\n+ /opt/ant/bin/ant -v\nUnable to locate tools.jar. Expected to find it in /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.252.b09-2.el7_8.x86_64/lib/tools.jar\nApache Ant(TM) version 1.9.15 compiled on May 10 2020\nTrying the default build file: build.xml\nBuildfile: build.xml does not exist!\nBuild failed\n</code></pre>"},{"location":"chap4/1chp4_tools1/#3-gradle","title":"3\u3001\u96c6\u6210 Gradle \u6784\u5efa\u5de5\u5177","text":"<ul> <li>https://gradle.org/releases/</li> </ul> <pre><code>wget https://services.gradle.org/distributions/gradle-6.5-bin.zip\nunzip gradle-6.5-bin.zip\nsudo mv gradle-6.5 /opt/gradle\n\nsudo ln -s /opt/gradle/bin/gradle /usr/bin/gradle\n\nsudo vim /etc/profile.d/gradle.sh\n\n\n#!/bin/bash\nGRADLE_HOME=/opt/gradle\nPATH=$GRADLE_HOME/bin:$PATH\nexport PATH GRADLE_HOME\nexport CLASSPATH=.\n\nsudo  chmod +x /etc/profile.d/gradle.sh\n\nsource /etc/profile.d/gradle.sh\n</code></pre> <pre><code>$ gradle -v\n\nWelcome to Gradle 6.5!\n\nHere are the highlights of this release:\n - Experimental file-system watching\n - Improved version ordering\n - New samples\n\nFor more details see https://docs.gradle.org/6.5/release-notes.html\n\n\n------------------------------------------------------------\nGradle 6.5\n------------------------------------------------------------\n\nBuild time:   2020-06-02 20:46:21 UTC\nRevision:     a27f41e4ae5e8a41ab9b19f8dd6d86d7b384dad4\n\nKotlin:       1.3.72\nGroovy:       2.5.11\nAnt:          Apache Ant(TM) version 1.10.7 compiled on September 1 2019\nJVM:          1.8.0_252 (Oracle Corporation 25.252-b09)\nOS:           Linux 3.10.0-957.12.2.el7.x86_64 amd64\n\n$ echo $GRADLE_HOME\n/opt/gradle\n</code></pre>"},{"location":"chap4/1chp4_tools1/#3-1-gradle","title":"3-1 <code>Gradle</code>\u6d4b\u8bd5","text":"<pre><code>#!groovy\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        choice(name: 'buildShell', choices: '-v\\nclean package\\nclean install\\nclean test', description: 'Please chose your env') \n    }\n    stages{\n        stage('tools-mvn') {\n            steps {\n                script {\n                    mvnHome = tool \"m2\"\n                    sh \"${mvnHome}/bin/mvn ${buildShell}\"\n                } \n            }\n        }\n\n        stage('tools-ant') {\n            steps {\n                script {\n                    try {\n                        antHome = tool \"ANT\"\n                        sh \"${antHome}/bin/ant ${buildShell}\"\n                    } catch(e){\n                        println(e)\n                    }\n                } \n            }\n        }\n\n        stage('tools-gradle') {\n            steps {\n                script {\n                    gradleHome = tool \"GRADLE\"\n                    sh \"${gradleHome}/bin/gradle ${buildShell}\"\n                } \n            }\n        }\n    }\n }\n</code></pre>"},{"location":"chap4/1chp4_tools1/#3-2-gradle","title":"3-2 Gradle\u5e38\u7528\u547d\u4ee4","text":"<ul> <li><code>./gradle -v</code> \u7248\u672c\u53f7\uff0c\u9996\u6b21\u8fd0\u884c\uff0c\u6ca1\u6709<code>gradle</code>\u7684\u8981\u4e0b\u8f7d\u7684\u54e6\u3002</li> <li><code>./gradle clean</code> \u5220\u9664<code>HelloWord/app</code>\u76ee\u5f55\u4e0b\u7684<code>build</code>\u6587\u4ef6\u5939</li> <li><code>./gradle build</code> \u68c0\u67e5\u4f9d\u8d56\u5e76\u7f16\u8bd1\u6253\u5305</li> <li><code>./gradle assembleDebug</code> \u7f16\u8bd1\u5e76\u6253Debug\u5305</li> <li><code>./gradle assembleRelease</code> \u7f16\u8bd1\u5e76\u6253Release\u7684\u5305</li> <li><code>./gradle installRelease</code> Release\u6a21\u5f0f\u6253\u5305\u5e76\u5b89\u88c5</li> <li><code>./gradle uninstallRelease</code> \u5378\u8f7dRelease\u6a21\u5f0f\u5305</li> </ul>"},{"location":"chap4/1chp4_tools1/#4-npm","title":"4\u3001\u96c6\u6210 NPM \u6784\u5efa\u5de5\u5177","text":"<ul> <li>https://nodejs.org/en/download/</li> </ul>"},{"location":"chap4/1chp4_tools1/#4-1-node","title":"4-1 \u5b89\u88c5Node","text":"<pre><code>wget https://nodejs.org/dist/v12.18.1/node-v12.18.1-linux-x64.tar.xz\ntar -xf node-v12.18.1-linux-x64.tar.xz\nsudo mv node-v12.18.1-linux-x64 /opt/node\nsudo ln -s /opt/node/bin/node /usr/bin/node\n\nsudo vim /etc/profile.d/node.sh\n\n#!/bin/bash\nNODE_HOME=/opt/node\nPATH=$NODE_HOME/bin:$PATH\nexport PATH NODE_HOME\nexport CLASSPATH=.\n\nsource /etc/profile.d/node.sh\n</code></pre> <pre><code>$ node -v\nv12.18.1\n$ npm -v\n6.14.5\n</code></pre> <pre><code>echo $NODE_HOME\n/opt/node\n</code></pre>"},{"location":"chap4/1chp4_tools1/#4-2-node","title":"4-2 <code>Node</code>\u6784\u5efa\u6d4b\u8bd5","text":"<pre><code>#!groovy\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        choice(name: 'buildShell', choices: '-v\\nclean package\\nclean install\\nclean test', description: 'Please chose your env') \n    }\n    stages{\n        stage('tools-mvn') {\n            steps {\n                script {\n                    mvnHome = tool \"m2\"\n                    sh \"${mvnHome}/bin/mvn ${buildShell}\"\n                } \n            }\n        }\n\n        stage('tools-ant') {\n            steps {\n                script {\n                    try {\n                        antHome = tool \"ANT\"\n                        sh \"${antHome}/bin/ant ${buildShell}\"\n                    } catch(e){\n                        println(e)\n                    }\n                } \n            }\n        }\n\n        stage('tools-gradle') {\n            steps {\n                script {\n                    gradleHome = tool \"GRADLE\"\n                    sh \"${gradleHome}/bin/gradle ${buildShell}\"\n                } \n            }\n        }\n\n        stage('tools-npm') {\n            steps {\n                script {\n                    npmHome = tool \"NPM\"\n                    sh \"${npmHome}/bin/npm ${buildShell}\"\n                    sh \"${npmHome}/bin/node ${buildShell}\"\n                } \n            }\n        }\n    }\n }\n</code></pre> <pre><code>...\n + /opt/node/bin/npm -v\n6.14.5\n[Pipeline] sh\n+ /opt/node/bin/node -v\nv12.18.1\n...\n</code></pre>"},{"location":"chap4/1chp4_tools1/#4-3-npm","title":"4-3 Npm\u5e38\u7528\u6784\u5efa\u547d\u4ee4","text":"<ul> <li><code>npm install</code></li> <li><code>npm run build</code></li> </ul>"},{"location":"chap4/1chp4_tools1/#5","title":"5\u3001\u4f7f\u7528\u5171\u4eab\u5e93\u6574\u5408\u5c01\u88c5\u5de5\u5177","text":""},{"location":"chap4/1chp4_tools1/#5-1-shared-library-function","title":"5-1 Shared Library function","text":"<p><code>JenkinslibTest/src/org/devops/buildtools.groovy</code></p> <pre><code>package org.devops\n\n// build tools\ndef Build(buildType, buildShell){\n    def buildTools = [\"mvn\":\"m2\", \"ant\":\"ANT\",\"gradle\":\"GRADLE\",\"npm\":\"NPM\"]\n\n    println(\"The current build tool is ${buildType}\")\n    buildHome = tool buildTools[buildType]\n\n    sh \"${buildHome}/bin/${buildType} ${buildShell}\"\n}\n</code></pre>"},{"location":"chap4/1chp4_tools1/#5-2-pipeline-function","title":"5-2 Pipeline function","text":"<pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        choice(name: 'buildType', choices: 'mvn\\nant\\ngradle\\nnpm', description: 'Please chose your build tool') \n        choice(name: 'buildShell', choices: '-v\\nclean package\\nclean install\\nclean test', description: 'Please chose your build command') \n    }\n    stages{\n        stage('tools-mvn') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n                } \n            }\n        }\n    }\n }\n</code></pre> <pre><code>...\nThe current build tool is mvn\n[Pipeline] tool\n[Pipeline] sh\n+ /opt/maven/bin/mvn -v\nApache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)\nMaven home: /opt/maven\nJava version: 1.8.0_252, vendor: Oracle Corporation, runtime: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.252.b09-2.el7_8.x86_64/jre\nDefault locale: en_US, platform encoding: UTF-8\nOS name: \"linux\", version: \"3.10.0-957.12.2.el7.x86_64\", arch: \"amd64\", family: \"unix\"\n...\n</code></pre>"},{"location":"chap4/2chp4_tools2/","title":"\u7b2c\u4e8c\u8282 \u96c6\u6210 SaltStack \u90e8\u7f72\u5de5\u5177","text":""},{"location":"chap4/2chp4_tools2/#1saltstack","title":"1\u3001\u5b89\u88c5saltstack","text":"<ul> <li>https://repo.saltstack.com/index.html#rhel</li> </ul>"},{"location":"chap4/2chp4_tools2/#1-1-centos7","title":"1-1 centos7","text":"<pre><code>$ sudo yum install https://repo.saltstack.com/py3/redhat/salt-py3-repo-latest.el7.noarch.rpm\n\n$ sudo yum install salt-master \n$ sudo yum install salt-minion\n\n# \u7f16\u8f91/etc/salt/minion \u6587\u4ef6\u586b\u5199\u5bf9\u5e94\u7684master\u5730\u5740\n$ sudo vim /etc/salt/minion\nmaster: 192.168.33.11\n\n# \u542f\u52a8master \u548c minion\n$ sudo service salt-master start\n$ sudo chkconfig salt-master on\n\n$ sudo service salt-minion start\n$ sudo chkconfig salt-minion on\n\n#\u5728master\u8282\u70b9\u4e0a\u8ba4\u8bc1\u5ba2\u6237\u7aef\n\n$ sudo salt-key -L \nAccepted Keys:\nDenied Keys:\nUnaccepted Keys:\njabox\nRejected Keys:\n\n# salt-key -a clientName\n$ sudo salt-key -a jabox\nThe following keys are going to be accepted:\nUnaccepted Keys:\njabox\nProceed? [n/Y] y\nKey for minion jabox accepted.\n\n$ sudo salt \"jabox\" test.ping\njabox:\n    True\n\n$ sudo salt jabox cmd.run ls\njabox:\n    anaconda-ks.cfg\n    original-ks.cfg\n</code></pre>"},{"location":"chap4/2chp4_tools2/#2saltstack","title":"2\u3001\u96c6\u6210saltstack","text":""},{"location":"chap4/2chp4_tools2/#2-1-sharedlibrary","title":"2-1 SharedLibrary","text":"<p><code>JenkinslibTest/src/org/devops/deploy.groovy</code></p> <pre><code>package org.devops\n\n//salt stack\n\ndef SaltDeploy(host,func){\n    sh \"sudo salt ${host} ${func}\"\n}\n</code></pre>"},{"location":"chap4/2chp4_tools2/#2-2-pipeline","title":"2-2 Pipeline","text":"<pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\ndef deploy = new org.devops.deploy()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        choice(name: 'buildType', choices: 'mvn\\nant\\ngradle\\nnpm', description: 'Please chose your build tool') \n        choice(name: 'buildShell', choices: '-v\\nclean package\\nclean install\\nclean test', description: 'Please chose your build command') \n        choice(name: 'deployHosts', choices: 'jabox', description: 'Please chose your salt minion')\n    }\n    stages{\n        stage('build-deploy') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n\n                    deploy.SaltDeploy(\"${deployHosts}\",\"test.ping\")\n                    deploy.SaltDeploy(\"${deployHosts}\",\"cmd.run ls\")\n                } \n            }\n        }\n    }\n }\n</code></pre> <ul> <li><code>def deploy = new org.devops.deploy()</code></li> <li><code>deploy.SaltDeploy(\"${deployHosts}\",\"test.ping\")</code></li> <li><code>deploy.SaltDeploy(\"${deployHosts}\",\"cmd.run ls\")</code></li> </ul>"},{"location":"chap4/2chp4_tools2/#2-3-console-output","title":"2-3 Console Output","text":"<pre><code>...\n[Pipeline] sh\n+ sudo salt jabox test.ping\njabox:\n    True\n[Pipeline] sh\n+ sudo salt jabox cmd.run ls\njabox:\n    anaconda-ks.cfg\n    original-ks.cfg\n...\n</code></pre> <p>Multiple Hosts Deploy</p> <pre><code>String deployHosts = \"host1,host02\" \nstage(\"Deploy\"){\n    steps{ \n        script{ \n            hosts = deployHosts.split(\",\").toList() \n\n            for (host in hosts){ \n                sh \"salt ${host} cmd.run ls\"\n            } \n        } \n    }\n}\n</code></pre>"},{"location":"chap4/3chp4_tools3/","title":"\u7b2c\u4e09\u8282 Jenkins\u96c6\u6210Ansibe\u5b9e\u73b0\u81ea\u52a8\u5316\u90e8\u7f72","text":""},{"location":"chap4/3chp4_tools3/#1ansible","title":"1\u3001Ansible\u4ecb\u7ecd","text":"<p><code>Ansible</code>\u91c7\u7528\u4e86\u4e0e<code>Puppet</code> , <code>Chef</code>\u4e0d\u4e00\u6837\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4e0d\u9700\u8981\u5728\u53d7\u63a7\u673a\u5668\u4e0a\u5b89\u88c5\u989d\u5916\u7684\u5ba2\u6237\u7aef\u8f6f\u4ef6\u3002\u539f\u56e0\u662f<code>Ansible</code>\u4f7f\u7528\u7684\u662f<code>SSH</code>\u534f\u8bae\u4e0e\u53d7\u63a7\u673a\u5668\u8fdb\u884c\u901a\u4fe1\u7684\uff0c\u4e00\u822c\u670d\u52a1\u5668\u9ed8\u8ba4\u6709<code>SSH</code>\u670d\u52a1\u3002 <code>Ansible</code>\u4e5f\u56e0\u6b64\u88ab\u79f0\u4e3a<code>agentless</code>\uff08\u53bb\u5ba2\u6237\u7aef\u7684\uff09\u3002 </p> <p><code>Ansible</code>\u4e5f\u4e0d\u50cf<code>Puppet</code>\u3001<code>Chef</code>\u90a3\u6837\u9700\u8981\u5728\u4e00\u53f0\u76f8\u5bf9\u7a33\u5b9a\u7684\u673a\u5668\u4e0a\u5b89\u88c5\u4e00\u4e2a\u4e3b\u63a7\u7a0b\u5e8f\uff0c\u597d\u8ba9\u6240\u6709\u7684\u53d7\u63a7\u673a\u5668\u8fde\u63a5\u4e0a\u6765\u3002\u53ea\u8981\u662f\u5b89\u88c5\u4e86<code>Ansible</code>\u7684\u673a\u5668\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u4e3b\u63a7\u673a\u5668\uff0c\u6bd4\u5982\u5de5\u4f5c\u65f6\u7528\u7684\u7535\u8111.</p> <p><code>Puppet</code>\u548c<code>Chef</code>\u90fd\u81ea\u5df1\u505a\u4e86\u4e00\u5957<code>DSL</code>\uff0c\u800c<code>Ansible</code>\u4f7f\u7528<code>YAML</code>\u683c\u5f0f\u4f5c\u4e3a\u81ea\u5df1\u7684<code>DSL</code>\u683c\u5f0f\u3002 </p> <p>\u7b14\u8005\u8ba4\u4e3a\u8fd9\u662f\u975e\u5e38\u806a\u660e\u7684\u8bbe\u8ba1\u4e00\uff1a</p> <ul> <li>\u4e00\u662f\u5927\u5bb6\u90fd\u719f\u6089YAML\u683c\u5f0f\uff1b</li> <li>\u4e8c\u662f\u4e0d\u9700\u8981\u81ea\u5df1\u8bbe\u8ba1DSL;</li> <li>\u4e09\u662f\u4e0d\u7528\u81ea\u5df1\u5199\u7f16\u8bd1\u5668(<code>YAML</code>\u53ef\u4ee5\u76f4\u63a5\u6620\u5c04\u5230<code>Python</code>\u5bf9\u8c61\uff09\u3002</li> </ul> <p><code>Ansible</code>\u5c06\u90e8\u7f72\u903b\u8f91\u653e\u5728\u4e00\u4e2a\u79f0\u4e3a<code>\u201cplaybook\u201d</code>\u7684<code>YAML</code>\u6587\u4ef6\u4e2d\u3002\u901a\u5e38\uff0c\u6587\u4ef6\u540d\u662f<code>playbook.yml</code></p> <pre><code>---\n- hosts: web \n  tasks: \n    \u2014 name: install nginx \n      apt: name=nginx state=latest \n\n    \u2014 hosts: db \n      tasks: \n        \u2014 name: install mysql \n          yum: name={{item}}\n          with_items: \n            \u2014 'mysql\u2014common' \n            \u2014 'mysql\u2014client' \n            \u2014 'mysql\u2014server' \n</code></pre> <p>\u7ec4\u7ec7\u53d7\u63a7\u673a\u5668\u7684\u903b\u8f91\u88ab\u653e\u5728<code>Inventory</code>\u6587\u4ef6\u4e2d\u3002\u5b83\u662f<code>ini</code>\u683c\u5f0f\u7684\u9ed8\u8ba4\u6587\u4ef6\u540d\u4e3a<code>hosts</code></p> <pre><code>[web]\n192.168.33.10\n\n[db]\n192.168.33.11\n</code></pre> <p>\u53ea\u8981\u8fd0\u884c</p> <p><code>ansible-playbook --inventory hosts --user vagrant --ask-pass playbook</code>, <code>yml</code>\u547d\u4ee4\uff0c\u8f93\u5165<code>SSH</code>\u767b\u5f55\u65f6\u7528\u6237<code>vagrant</code>\u7684\u5bc6\u7801\uff0c\u5c31\u53ef\u4ee5\u6267\u884c\u6211\u4eec\u63cf\u8ff0\u597d\u7684\u90e8\u7f72\u903b\u8f91\u3002\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u662f\u7528\u6237\u540d\u548c\u5bc6\u7801\u65b9\u5f0f\u767b\u5f55\u3002</p>"},{"location":"chap4/3chp4_tools3/#2ansible","title":"2\u3001<code>Ansible</code>\u5b89\u88c5\u4e0e\u96c6\u6210","text":"<p><code>Jenkins</code>\u4e0e<code>Ansible</code>\u96c6\u6210\u80fd\u8ba9<code>Jenkins</code>\u6267\u884c<code>ansible</code>\u547d\u4ee4\u3002</p> <p>\u662f\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a </p> <ul> <li>(1\uff09\u5b89\u88c5<code>Ansible</code>\u63d2\u4ef6 </li> <li>(2\uff09\u5728\u4e3b\u63a7\u673a\u5668\u4e0a\u5b89\u88c5<code>Ansible</code>\u4e95\u8bbe\u7f6e\u4e0d\u8fdb\u884c<code>host key</code>\u68c0\u67e5\u3002</li> </ul> <pre><code>sudo yum install epel-release\nsudo yum -y install ansible\n</code></pre> <pre><code>$ ansible --version\nansible 2.9.10\n  config file = /etc/ansible/ansible.cfg\n  configured module search path = [u'/home/vagrant/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\n  ansible python module location = /usr/lib/python2.7/site-packages/ansible\n  executable location = /usr/bin/ansible\n  python version = 2.7.5 (default, Apr  9 2019, 14:30:50) [GCC 4.8.5 20150623 (Red Hat 4.8.5-36)]\n</code></pre> <p>\u4e3b\u63a7\u673a\u5668\u6307\u7684\u662f\u771f\u6b63\u6267\u884c<code>ansible</code>\u547d\u4ee4\u7684\u673a\u5668\uff0c\u4e5f\u5c31\u662f<code>Jenkins</code>\u3002\u6211\u4eec\u9700\u8981\u5728\u4e3b\u63a7\u673a\u5668\u4e0a\u81ea\u884c\u5b89\u88c5<code>Ansible</code>,\u7136\u540e\u4fee\u6539\u4e3b\u63a7\u673a\u5668\u7684<code>Ansible</code>\u914d\u7f6e\uff0c\u4e0d\u8fdb\u884c<code>host key</code>\u68c0\u67e5 </p> <pre><code>cat /etc/ansible/ansible.cfg\n\n[defaults]\nhost_key_checking = False\n</code></pre> <p>\u5982\u679c\u8981\u6c42\u5b89\u5168\u7ea7\u522b\u9ad8\uff0c\u5219\u5e94\u8be5\u63d0\u524d\u5c06\u6240\u6709\u53d7\u63a7\u673a\u5668\u7684<code>fingerprint</code>\u653e\u5230\u4e3b\u63a7\u673a\u5668\u7684<code>knowhosts</code> \u6587\u4ef6\u4e2d\u3002 </p> <ul> <li>(3\uff09\u5728<code>Jenkins</code>\u4e0a\u8fdb\u4eba<code>Manage Jenkins -&gt; Global Tool Configuration-&gt; Ansible</code>\u914d\u7f6e\u9875\u9762\u914d\u7f6e <code>Ansible</code>\u7684\u6267\u884c\u8def\u5f84. </li> </ul> <p>\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u6dfb\u52a0\u591a\u4e2a<code>Ansible</code>\u7248\u672c\u3002\u8bf7\u7559\u610f<code>Name</code>\u5b57\u6bb5\u7684\u6ec7\u540e\u9762\u4ecb\u7ecd\u7684<code>ansiblePlaybook</code>\u6b65\u9aa4\u4f1a\u4f7f\u7528\u5230\u3002 </p> <ul> <li>(4\uff09\u5728<code>Jenkins</code>\u4e0a\u6dfb\u52a0\u767b\u5f55\u53d7\u63a7\u673a\u5668\u7684\u51ed\u8bc1\u3002<code>Ansible</code>\u4e0e\u53d7\u63a7\u673a\u5668\u8fde\u63a5\u7684\u51ed\u8bc1\u9700\u8981\u6211\u4eec\u5728<code>Jenkins</code>\u624b\u52a8\u6dfb\u52a0\u3002\u6839\u636e\u9879\u76ee\u7684\u5b9e\u9645\u6e05\u51b5\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684\u65b9\u5f0f\u6216\u8005\u7528\u6237\u540d\u548c\u5bc6\u94a5\u7684 </li> </ul> <p></p>"},{"location":"chap4/3chp4_tools3/#2-1-ansible-sharedlibrary","title":"2-1 \u7b80\u5355\u96c6\u6210<code>ansible</code> \u4e0e <code>SharedLibrary</code>","text":"<pre><code>cd /etc/ansible\nsudo vim hosts\n\n[jabox]\n127.0.0.1 ansible_connection=local\n\nansible -m ping localhost\n127.0.0.1 | SUCCESS =&gt; {\n    \"ansible_facts\": {\n        \"discovered_interpreter_python\": \"/usr/bin/python\"\n    }, \n    \"changed\": false, \n    \"ping\": \"pong\"\n}\n</code></pre> <p>SharedLibrary</p> <p><code>JenkinslibTest/src/org/devops/deploy.groovy</code></p> <pre><code>package org.devops\n\n//salt stack\n\ndef SaltDeploy(host,func){\n    sh \"sudo salt ${host} ${func}\"\n}\n\ndef AnsibleDeploy(host,func){\n    sh \"ansible ${host} ${func}\"\n}\n</code></pre> <p>Pipeline</p> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\ndef deploy = new org.devops.deploy()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        choice(name: 'buildType', choices: 'mvn\\nant\\ngradle\\nnpm', description: 'Please chose your build tool') \n        choice(name: 'buildShell', choices: '-v\\nclean package\\nclean install\\nclean test', description: 'Please chose your build command') \n        choice(name: 'deployHosts', choices: 'jabox', description: 'Please chose your salt minion')\n    }\n    stages{\n        stage('build-deploy') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n\n                    deploy.SaltDeploy(\"${deployHosts}\",\"test.ping\")\n                    deploy.AnsibleDeploy(\"${deployHosts}\",\"-m ping\")\n                } \n            }\n        }\n    }\n }\n</code></pre> <pre><code>...\n[Pipeline] tool\n[Pipeline] sh\n+ /opt/maven/bin/mvn -v\nApache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)\nMaven home: /opt/maven\nJava version: 1.8.0_252, vendor: Oracle Corporation, runtime: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.252.b09-2.el7_8.x86_64/jre\nDefault locale: en_US, platform encoding: UTF-8\nOS name: \"linux\", version: \"3.10.0-957.12.2.el7.x86_64\", arch: \"amd64\", family: \"unix\"\n[Pipeline] sh\n+ sudo salt jabox test.ping\njabox:\n    True\n[Pipeline] sh\n+ ansible jabox -m ping\n127.0.0.1 | SUCCESS =&gt; {\n    \"ansible_facts\": {\n        \"discovered_interpreter_python\": \"/usr/bin/python\"\n    }, \n    \"changed\": false, \n    \"ping\": \"pong\"\n}\n[Pipeline] }\n[Pipeline] // script\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] }\n[Pipeline] // node\n[Pipeline] End of Pipeline\nFinished: SUCCESS\n</code></pre>"},{"location":"chap4/3chp4_tools3/#2-2-ansible-playbook-jenkins","title":"2-2 \u7b80\u5355\u96c6\u6210<code>ansible playbook</code> \u4e0e <code>Jenkins</code>","text":"<p>\u90e8\u7f72\u76ee\u5f55\u5982\u4e0b</p> <pre><code>$ cd orkspace/workspace/chap4-ansible2\n$ tree .\n\n.\n\u251c\u2500\u2500 hosts\n\u2514\u2500\u2500 playbook.yml\n\n0 directories, 2 files\n</code></pre> <p>playbook.yml</p> <pre><code>---\n- hosts: localhost\n  tasks:\n    - debug: msg=\"{{ lookup('env','BUILD_TAG') }}\"\n</code></pre> <p>hosts \u6587\u4ef6</p> <pre><code>[localhost]\n127.0.0.1 ansible_connection=local\n</code></pre> <p>Jenkinsfile\u5185\u5bb9\u5982\u4e0b</p> <pre><code>pipeline {\n    agent { node { label \"hostmachine\" }}\n    stages{\n        stage('AnsibleDeploy') {\n            steps {\n                ansiblePlaybook(\n                        playbook: \"${env.WORKSPACE}/playbook.yml\",\n                        inventory: \"${env.WORKSPACE}/hosts\",\n                    )\n            }\n        }\n    }\n }\n</code></pre> <p>\u6253\u5370\u65e5\u5fd7</p> <pre><code>Running on hostmachine in /home/vagrant/workspace/workspace/chap4-ansible2\n[Pipeline] {\n[Pipeline] stage\n[Pipeline] { (AnsibleDeploy)\n[Pipeline] ansiblePlaybook\n[chap4-ansible2] $ ansible-playbook /home/vagrant/workspace/workspace/chap4-ansible2/playbook.yml -i /home/vagrant/workspace/workspace/chap4-ansible2/hosts\n\nPLAY [localhost] ***************************************************************\n\nTASK [Gathering Facts] *********************************************************\nok: [127.0.0.1]\n\nTASK [debug] *******************************************************************\nok: [127.0.0.1] =&gt; {\n    \"msg\": \"jenkins-chap4-ansible2-9\"\n}\n\nPLAY RECAP *********************************************************************\n127.0.0.1                  : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   \n</code></pre>"},{"location":"chap4/3chp4_tools3/#3ansible","title":"3\u3001<code>Ansible</code>\u63d2\u4ef6\u8be6\u89e3","text":""},{"location":"chap4/3chp4_tools3/#3-1-ansibileplaybook","title":"3-1 <code>ansibilePlaybook</code>\u6b65\u9aa4","text":"<p><code>ansiblePlaybook</code>\u6b65\u9aa4\u9664\u652f\u6301 <code>playbook</code>,<code>inventory</code>, <code>credetialsId</code>\u4e09\u4e2a\u53c2\u6570\u5916\uff0c\u8fd8\u652f\u6301\u4ee5\u4e0b\u53c2\u6570\u3002</p> <ul> <li><code>installation</code>\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u503c\u4e3a\u524d\u9762\u8bbe\u7f6e\u7684<code>Name</code> \u5b57\u6bb5\u7684\u503c\u3002\u7528\u4e8e\u6307\u5b9a\u4e0d\u540c\u7248\u672c\u7684<code>Ansible</code></li> <li><code>vaultCredentialsld</code> : <code>Ansible vault</code>\u5bc6\u7801\u5728<code>Jenkins</code>\u4e2d\u7684\u51ed\u8bc1ID\uff0c\u5b83\u76f8\u5f53\u4e8e<code>--vault\u4e00password-file</code>\u53c2\u6570</li> <li><code>disabieHostKeychecking</code>: \u5e03\u5c14\u7c7b\u578b\uff0c\u662f\u5426\u8fdb\u884c<code>host key</code>\u68c0\u67e5\u3002</li> <li><code>become</code>\uff1a\u5e03\u5c14\u7c7b\u578b, \u5728\u6267\u884c\u64cd\u4f5c\u65f6\u662f\u5426\u52a0\u4e0a <code>sudo</code>,\u5b83\u76f8\u5f53\u4e8e<code>ansible</code>\u547d\u4ee4\u884c\u7684 <code>--become</code>\u53c2\u6570\u3002</li> <li><code>becorneUser</code>:  \u5b57\u7b26\u4e32\u7c7b\u578b,\u5207\u6362\u5230\u8d85\u7ea7\u7ba1\u7406\u5458\u7528\u6237\u540d,\u9ed8\u8ba4\u662f\uff1a<code>root</code>\u3002\u5b83\u76f8\u5f53\u4e8e<code>ansible</code>\u547d\u4ee4\u884c\u7684<code>--become-user</code>\u53c2\u6570\u3002  </li> <li><code>limlt</code>\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b, \u6307\u5b9a\u6267\u884c\u7684\u4e3b\u673a\u3002\u76f8\u5f53\u4e8e<code>ansible</code>\u547d\u4ee4\u884c\u7684<code>-l</code>\u53c2\u6570\u3002\u591a\u4e2a\u4e3b\u673a\u4e4b\u95f4\u4f7f\u7528\u9017\u53f7\u5206\u9694 </li> <li><code>tags</code>\uff1a\u6307\u5b9a\u6267\u884c\u6253\u4e0a\u7279\u5b9a<code>tag</code>\u7684\u4efb\u52a1\u3002\u5b83\u76f8\u5f53\u4e8e<code>ansible</code>\u547d\u4ee4\u884c\u7684<code>-t</code>\u53c2\u6570\u3002\u591a\u4e2a<code>tag</code>\u4e4b\u95f4\u4f7f\u7528\u9017\u53f7\u5206\u9694 </li> <li><code>skippedTags</code> \u53c2\u6570\u3002\u5b57\u7b26\u4e32\u7c7b\u578b, \u6307\u5b9a\u8df3\u8fc7\u54ea\u4e9b<code>tag</code>\u7684\u4efb\u52a1,\u5b83\u76f8\u5f53\u4e8e<code>ansible</code>\u547d\u4ee4\u884c\u7684<code>--skip-tags</code>\u53c2\u6570\uff0c\u591a\u4e2a<code>tag</code>\u4e4b\u95f4\u4f7f\u7528\u9017\u53f7\u5206\u9694\u3002</li> <li><code>StartAtTask</code>: \u5b57\u7b26\u4e32\u7c7b\u578b, \u4ece\u6307\u5b9a\u4efb\u52a1\u5f00\u59cb\u6267\u884c\u3002\u5b83\u76f8\u5f53\u4e8e<code>ansible</code>\u547d\u4ee4\u884c\u7684<code>--start-at-task</code>\u53c2\u6570 </li> <li><code>forks</code>: \u5e76\u884c\u6267\u884c\u7684\u8fdb\u7a0b\u6570\u3002\u76f8\u5f53\u5e72<code>ansible</code>\u547d\u4ee4\u884c\u7684<code>-f</code>\u53c2\u6570</li> <li><code>extras</code>: \u5b57\u7b26\u4e32\u7c7b\u578b, \u6269\u5c55\u53c2\u6570\u3002\u5f53<code>ansiblePlaybook</code>\u6b65\u9aa4\u7684\u53c2\u6570\u65e0\u6cd5\u6ee1\u8db3\u9700\u6c42\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u6b64\u53c2\u6570\uff0c\u4f8b\u5982<code>extras: '--syntax-check'</code></li> <li><code>extrasVars</code>: <code>List&lt;org.jenkinsci.plugins.ansible.ExtraVar&gt;</code>\u7c7b\u578b\uff0c\u6269\u5c55\u53d8\u91cf\u3002\u5b83\u76f8\u5f53\u4e8e<code>ansible</code>\u547d\u4ee4\u884c\u7684<code>-e</code>\u53c2\u6570, \u683c\u5f0f\u5982\u4e0b </li> </ul> <pre><code>extraVars: [\n    &lt;key&gt;: '&lt;value&gt;', \n    &lt;key&gt;: [value: '&lt;value&gt;', hidden: true|false] \n]\n</code></pre> <p><code>extraVars</code>\u652f\u6301<code>hidden</code>\u5c5e\u6027\uff0c\u5f53\u5176\u503c\u4e3a<code>true</code>\u65f6\uff0c\u5728\u6267\u884c\u65e5\u5fd7\u4e2d\u4f1a\u9690\u85cf\u53c2\u6570\u503c\u3002 </p> <p>\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u5b8c\u6574\u7684\u4ee3\u7801\u793a\u4f8b\u3002 </p> <pre><code>pipeline {\n    agent any \n    stages {\n        stage('Syntax check ansible playbook'){\n            steps {\n                ansiblePlaybook( \n                    disableHostKeyChecking: true, \n                    playbook: \"${env.WORKSPACE}/playbook.yml\",\n                    inventory: \"${env.WORKSPACE}/hosts\",\n                    credentialsId: 'vagrant', \n                    extras: '--syntax\u2014check' \n                )\n            }\n        }\n\n        stage('Deploy') {\n            steps { \n                ansiblPlaybook( \n                        disableHostKeyChecking: true, \n                        playbook: \"${env.WORKSPACE}/playbook.yml\",\n                        inventory: \"${env.WORKSPACE}/hosts\",\n                        credentialsId: 'vagrant', \n                        // skippedTags: 'debugtag'\n                        forks: 2, \n                        limit: 'example1,example', \n                        tags: 'debugtag,testtag', \n                        extraVars: [\n                            login: 'mylogin'\n                            secret_key: [value: 'g4fKkiEllpeF6pY05', hidden: true] \n                        ]\n                        // startAtTask: 'task4'\n                    )\n                }\n            }\n        }\n    }\n</code></pre> <p><code>ansibleplaybook</code>\u6b65\u9aa4\u53ea\u662f<code>Ansible</code>\u63d2\u4ef6\u63d0\u4f9b\u7684\u4e24\u4e2a\u6b65\u9aa4\u4e2d\u7684\u4e00\u4e2a\u8fd8\u6709<code>ansibleVault</code>\u6b65\u9aa4 </p>"},{"location":"chap4/3chp4_tools3/#3-2-ansiblevault","title":"3-2 <code>ansibleVault</code>\u6b65\u9aa4","text":"<p>\u653e\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684<code>MySQL</code>\u8fde\u63a5\u5bc6\u7801\u60f3\u5fc5\u662f\u4e0d\u5e0c\u671b\u5982\u8bc9\u6709\u4eba\u770b\u89c1\u7684\u3002<code>Ansible vault</code>\u662f<code>Anaible</code> \u7684\u4e00\u4e2a\u7279\u6027,\u5b83\u80fd\u5e2e\u52a9\u6211\u4eec\u52a0\u89e3\u5bc6\u914d\u7f6e\u6587\u4ef6\u6216\u8005\u67d0\u4e2a\u914d\u7f6e\u9879 </p> <p>\u5728<code>ansiblePlaybook</code>\u6b65\u9aa4\u4e2d<code>vaultCradentialsId</code>\u53c2\u6570\u7684\u4f5c\u7528\u5c31\u662f\u5728<code>ansible-playbook</code>\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5bf9\u4e8b\u5148\u653e\u5728<code>playbook\u4e2d</code>\u7684\u5bc6\u4e49\u8fdb\u884c\u89e3\u5bc6\u89e3\u5bc6\u9700\u8981\u5bc6\u7801<code>vaultCradentialsId</code>\u5c31\u662f\u6211\u4eec\u4e8b\u5148\u5b58\u50a8\u5728<code>Jenkins</code>\u4e2d\u7684\u5bc6\u7801\u7684\u51ed\u8bc1<code>ID</code>\u3002</p> <p>\u800c<code>ansibleVault</code>\u6b65\u9aa4\u6240\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u6267\u884c<code>Ansible</code>\u63d0\u4f9b\u7684<code>ansible-vault</code>\u547d\u4ee4\u3002\u8be5\u547d\u4ee4\u901a\u5e38\u7528\u4e8e\u5bf9\u654f\u611f\u6570\u636e\u8fdb\u884c\u52a0\u89e3\u5bc6\u3002</p> <p><code>ansibleVault</code>\u652f\u6301\u4ee5\u4e0b\u53c2\u6570\u3002 </p> <ul> <li> <p><code>action</code>(\u5fc5\u586b\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c<code>ansibleVault</code>\u6267\u884c\u7684\u64cd\u4f5c\u7c7b\u578b\u3002\u5305\u62ec\uff1a</p> <ul> <li><code>encrypt</code>\u52a0\u5bc6\u6587\u4ef6 \u3002</li> <li><code>encrypt_string</code>\u52a0\u5bc6\u5b57\u7b26 </li> <li><code>rekey</code>\u4f7f\u7528\u4e00\u4e2a\u65b0\u7684\u5bc6\u7801,\u8fdb\u884c\u52a0\u5bc6\u4f46\u9700\u8981\u65e7\u7684\u5bc6\u7801 </li> <li><code>ecceypt</code>\u89e3\u5bc6 </li> </ul> </li> <li> <p><code>content</code>\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b, \u52a0\u5bc6\u6587\u672c\u65f6\u7684\u5b57\u7b26\u4e32\u5185\u5bb9\u3002 </p> </li> <li><code>input</code>\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\u8ffd\u52a0\u5230<code>ansible-vault</code>\u547d\u4ee4\u884c\u540e\u9762\u7684\u53c2\u6570 </li> <li><code>installation</code>\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\u4e0e<code>ansibilePlaybook</code>\u6b65\u9aa4\u7684<code>installation</code>\u53c2\u6570\u7684\u4f5c\u7528\u4e00\u6837\u3002 </li> <li><code>newVaultCredentialsld</code>\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b, \u4f7f\u7528\u65b0\u7684\u51ed\u8bc1\u8fdb\u884c\u91cd\u65b0\u52a0\u5bc6\u76f8\u5f53\u4e8e<code>ansible-vault</code>\u547d\u4ee4\u7684<code>--new-vault-password-file</code>\u53c2\u6570 </li> <li><code>output</code>\u7b26\u4e32\u7c7b\u578b\uff0c\u8ffd\u52a0\u5230<code>ansible-vault</code>\u547d\u4ee4\u884c\u540e\u9762\u7684\u53c2\u6570\u4f46\u662f\u4f1a\u653e\u5728<code>input</code>\u53c2\u6570\u4e4b\u524d</li> <li><code>vaultCradentialsId</code>\uff08\u5fc5\u586b\uff09\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u5bc6\u7801\u7684\u51ed\u8bc1lD\u3002 </li> </ul> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u770b\u770bausible Vault\u5e94\u7528\u573a\u666f\u7684\u4ee3\u7801\u793a\u4f8b \u3002</p> <p>\u5bf9\u6587\u672c\u5185\u5bb9\u8fdb\u884c\u52a0\u5bc6 </p> <pre><code>ansibleVault( \n    action: \"encrypt_string\", \n    content: \"${secret}\",\n    vaultCradentialsId: \"vaultid\", \n)\n</code></pre> <p>\u5bf9\u4e8e<code>content</code>\u53c2\u6570\uff0c\u4e5f\u5e38\u901a\u8fc7\u53c2\u6570\u5316\u4f20\u5165\uff0c\u800c\u4e0d\u662f\u8fd9\u6837\u5199\u7684</p> <ul> <li>\u52a0\u5bc6\u6587\u4ef6 </li> </ul> <pre><code>ansibleVault( \n    action: \"encrypt\", \n    vaultCredentialsId: \"vaultid\", \n    input: \"./vault--test.yml\" \n)\n</code></pre> <ul> <li>\u66f4\u6362<code>vault</code>\u5bc6\u7801</li> </ul> <pre><code>ansibleVault( \n    action:\"rekey\", \n    vaultCredentialsId:\"vaultid\", \n    newVaultCredentialsId:\"vaultid2\", \n    input: \"./vault-test.yml\" \n) \n</code></pre> <ul> <li>\u89e3\u5bc6\u6587\u4ef6 </li> </ul> <pre><code>ansibleVault( \n    action:\"decrypt\", \n    vaultCredentialsId:\"vaultid2\", \n    input: \"./vault-test.yml\" \n) \n</code></pre>"},{"location":"chap4/4chp4_tools4/","title":"\u7b2c\u56db\u8282 Jenkins\u96c6\u6210Ansibe\u5b9e\u6218\u624b\u518c \u2014\u2014 BB Mobile\uff082018\uff09","text":""},{"location":"chap4/4chp4_tools4/#description","title":"Description:","text":"<p>Ansible setup functions and aws ec2 manipulation functions for Jenkins master and agents</p>"},{"location":"chap4/4chp4_tools4/#1getting-started","title":"1\u3001Getting Started","text":"<ul> <li><code>install pip and pyenv</code> [version:2.7.9]</li> <li><code>pip install ansible in pyenv</code></li> <li>absoulte path:  <code>/home/ubuntu/pyenv/versions/ansible/bin</code></li> <li>check ansible version: </li> </ul> <pre><code>/home/ubuntu/pyenv/versions/ansible/bin/ansible --version\nansible 2.5.1\n  config file = None\n  configured module search path = [u'/home/ubuntu/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\n  ansible python module location = /home/ubuntu/pyenv/versions/2.7.9/envs/ansible/lib/python2.7/site-packages/ansible\n  executable location = /home/ubuntu/pyenv/versions/ansible/bin/ansible\n  python version = 2.7.9 (default, Apr 28 2018, 06:18:59) [GCC 4.8.4]\n</code></pre> <ul> <li>enter virtual env of ansible, you dont have use absolute path</li> </ul> <pre><code>source ~/pyenv/versions/ansible/bin/activate\n</code></pre> <ul> <li>use ansible directly</li> </ul>"},{"location":"chap4/4chp4_tools4/#2-ansible-files-layout","title":"2\u3001 Ansible files layout","text":"<p>ansible <code>agent_playbook</code> laying out roles, inventories ans playbooks</p> <pre><code>ansible-foobar/\n\u251c\u2500\u2500 cloud\n\u2502   \u251c\u2500\u2500 ec2.ini\n\u2502   \u251c\u2500\u2500 ec2.py\n\u2502   \u2514\u2500\u2500 group_vars\n\u251c\u2500\u2500 roles\n|   \u251c\u2500\u2500 ansible_playbook_name\n|   |   |__ files --- files\n|   |   |__ tasks --- main.yml\n|   |   |__ templates --- tempalte\n\u2502   \u251c\u2500\u2500 base\n|   |   |__ files --- jenkins_master_pub\n|   |   |__ tasks --- main.yml\n|   |   |__ templates --- 01-warning.j2\n\u2502   \u2514\u2500\u2500 agents_name_for_setup\n|   \u2514\u2500\u2500 function_name_for_ec2\n\u251c\u2500\u2500 handlers\n\u2502   \u2514\u2500\u2500 main.yml\n\u251c\u2500\u2500 localhost\n\u251c\u2500\u2500 site.yml\n\u251c\u2500\u2500 agent_name.yml\n\u2514\u2500\u2500 ec2_function.yaml\n</code></pre>"},{"location":"chap4/4chp4_tools4/#cloudec2ini","title":"<code>cloud/ec2.ini</code>","text":"<pre><code>[ec2]\n# To exclude RDS instances from the inventory, uncomment and set to False.\nrds = False\n# To exclude ElastiCache instances from the inventory, uncomment and set to False.\nelasticache = False\nregions = us-east-1\ndestination_variable = private_dns_name\nvpc_destination_variable = private_ip_address\n</code></pre>"},{"location":"chap4/4chp4_tools4/#3run-the-ansible-playbook-for-setup","title":"3\u3001Run the ansible playbook for setup","text":"<p>how to seup jenkins master and agent with ansible playbook</p> <p><code>ansible-playbook -i cloud/ec2.py android_sdk_builder.yml -vvv</code></p> <p><code>ansible-playbook -i cloud/ec2.py android_sdk_builder.yml</code></p> <p><code>ansible-playbook -i cloud/ec2.py agents_name.yml</code></p>"},{"location":"chap4/4chp4_tools4/#4run-the-ansible-playbook-for-ec2-function","title":"4\u3001Run the ansible playbook for ec2 function","text":"<p>how to manipulate ec2 instance or instances with ansible playbook</p> <pre><code>/home/ubuntu/pyenv/versions/ansible/bin/ansible-playbook agents_playbook/ec2_ansible_function.yaml -i agents_playbook/localhost -t stop-one -e ONE_INSTNACE_NAME=instance_name -vvv\n</code></pre> <p>for example:</p> <pre><code>ansible-playbook agents_playbook/ec2_ansible_function.yaml -i agents_playbook/localhost -t tags_name  -e  additional variables as key=value -vvv\n</code></pre>"},{"location":"chap4/4chp4_tools4/#reference","title":"Reference","text":"<ul> <li> <p>ansible playbook command line <code>https://docs.ansible.com/ansible/2.4/ansible-playbook.html</code></p> </li> <li> <p>ansible agent playbook layout <code>https://leucos.github.io/ansible-files-layout</code></p> </li> <li> <p>README-Template.md <code>https://gist.github.com/PurpleBooth/109311bb0361f32d87a2</code></p> </li> </ul>"},{"location":"chap5/1chap5_cred1/","title":"\u7b2c\u4e00\u8282 \u51ed\u8bc1\u7ba1\u7406","text":""},{"location":"chap5/1chap5_cred1/#1","title":"1\u3001\u51ed\u8bc1\u662f\u4ec0\u4e48","text":"<p>\u51ed\u8bc1\uff08<code>credential</code>\uff09\u662f<code>Jenkins</code>\u8fdb\u884c\u53d7\u9650\u64cd\u4f5c\u65f6\u7684\u51ed\u636e\u3002\u6bd4\u5982\u4f7f\u7528<code>SSH</code>\u767b\u5f55\u8fdc\u7a0b\u673a\u5668\u65f6\uff0c\u7528\u6237\u540d\u548c\u5bc6\u7801\u6216<code>SSH key</code>\u5c31\u662f\u51ed\u8bc1\u3002\u800c\u8fd9\u4e9b\u51ed\u8bc1\u4e0d\u53ef\u80fd\u4ee5\u660e\u6587\u5199\u5728<code>Jenkinsfile</code>\u4e2d\u3002Jenkins\u51ed\u8bc1\u7ba1\u7406\u6307\u7684\u5c31\u662f\u5bf9\u8fd9\u4e9b\u51ed\u8bc1\u8fdb\u884c\u7ba1\u7406\u3002 </p> <p>\u4e3a\u4e86\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u5b89\u5168\u6027\uff0c\u5728<code>Jenkins master</code>\u8282\u70b9\u4e0a\u5bf9\u51ed\u8bc1\u8fdb\u884c\u52a0\u5bc6\u5b58\u50a8\uff08\u901a\u8fc7Jenkins\u5b9e \u4f8bID\u52a0\u5bc6\uff09\uff0c\u53ea\u6709\u901a\u8fc7\u5b83\u4eec\u7684\u51ed\u8bc1ID\u624d\u80fd\u5728pipeline\u4e2d\u4f7f\u7528\uff0c\u5e76\u4e14\u9650\u5236\u4e86\u5c06\u8bc1\u4e66\u4ece\u4e00\u4e2a<code>Jenkins</code> \u5b9e\u4f8b\u590d\u5236\u5230\u53e6\u4e00\u4e2a<code>Jenkins</code>\u5b9e\u4f8b\u7684\u80fd\u529b\u3002 </p> <p>\u4e5f\u56e0\u4e3a\u6240\u6709\u7684\u51ed\u8bc1\u90fd\u88ab\u5b58\u50a8\u5728<code>Jenkins master</code>\u4e0a\uff0c\u6240\u4ee5\u5728<code>Jenkins master</code>\u4e0a\u6700\u597d\u4e0d\u8981\u6267\u884c\u4efb\u52a1\uff0c \u4ee5\u514d\u88ab<code>pipeline</code>\u975e\u6cd5\u8bfb\u53d6\u51fa\u6765\u3002\u90a3\u4e48\u5728\u54ea\u91cc\u6267\u884c<code>pipeline</code>\u5462\uff1f\u5e94\u8be5\u5206\u914d\u5230<code>Jenkins agent</code>\u4e0a\u6267\u884c\u3002</p>"},{"location":"chap5/1chap5_cred1/#2","title":"2\u3001\u521b\u5efa\u51ed\u8bc1","text":"<p>\u5728\u521b\u5efa\u51ed\u8bc1\u524d\uff0c\u8bf7\u786e\u4fdd\u5f53\u524d\u7528\u6237\u6709\u6dfb\u52a0\u51ed\u8bc1\u7684\u6743\u9650\u3002\u6211\u4eec\u4f7f\u7528\u8d85\u7ea7\u7ba1\u7406\u5458\u7684\u8eab\u4efd\u767b\u5f55\u3002\u5355\u51fb  <code>Jenkins</code>\u9996\u9875\u5de6\u4fa7\u7684<code>Credentials -&gt; System</code></p> <p></p> <p>\u7136\u540e\u5355\u51fb<code>\u201cGlobal credentials (unrestricted)\u201d</code>\u94fe\u63a5\uff0c\u518d\u5355\u51fb<code>\u201cAdd Credentials\"</code></p> <p></p> <p>\u5728\u53f3\u4fa7\u7684\u8868\u5355\u4e2d\u3001\u6211\u4eec\u6765\u770b\u51e0\u4e2a\u5173\u952e\u7684\u9009\u9879\u3002</p> <ul> <li><code>Kind</code>\uff1a\u9009\u62e9\u51ed\u8bc1\u7c7b\u578b\u3002 </li> <li><code>Scope</code>:\u51ed\u8bc1\u7684\u4f5c\u7528\u57df\u3002\u6709\u4e24\u79cd\u4f5c\u7528\u57df\uff1a <ul> <li><code>Global</code>\uff0c\u5168\u5c40\u4f5c\u7528\u57df\u3002\u5982\u679c\u51ed\u8bc1\u7528\u4e8e<code>pipeline</code>\uff0c\u5219\u4f7f\u7528\u4f5c\u7528\u57df\uff0c\u4f5c\u7528\u57df\u3002 </li> <li><code>System</code>\uff0c\u5982\u679c\u7528\u4e8e<code>Jenkins</code>\u672c\u8eab\u7684\u7cfb\u7edf\u7ba1\u7406\uff0c \u4f8b\u5982\u7535\u5b50\u90ae\u4ef6\u8eab\u4efd\u9a8c\u8bc1\uff0c\u4ee3\u7406\u8fde\u63a5\u7b49\uff0c\u5219\u4f7f\u7528\u6b64\u79cd\u4f5c\u7528\u57df\u3002 </li> </ul> </li> <li><code>ID</code>\uff1a\u5728<code>pipeline</code>\u4f7f\u7528\u51ed\u8bc1\u7684\u552f\u4e00\u6807\u8bc6\u3002</li> </ul> <p><code>Jenkins</code>\u9ed8\u8ba4\u652f\u6301\u4ee5\u4e0b\u51ed\u8bc1\u7c7b\u578b: <code>Secret text</code>,<code>Username with password</code> , <code>Secret file</code>\u3001 <code>SSH Usename with private key</code>\u3001<code>Certificate</code>\u3001<code>PKCS#12</code>\u3001<code>Docker Host Certificate Authentication credentials</code></p> <p>\u63a5\u4e0b\u6765\uff0c\u5206\u522b\u4ecb\u7ecd\u51e0\u79cd\u5e38\u7528\u7684\u51ed\u8bc1\u3002 </p>"},{"location":"chap5/1chap5_cred1/#3","title":"3\u3001\u5e38\u7528\u51ed\u8bc1","text":"<p>\u6dfb\u52a0\u51ed\u8bc1\u540e\uff0c\u9700\u8981\u5b89\u88c5<code>\"Credentials Binding Plugin\"</code>\u63d2\u4ef6\uff0c\u5c31\u53ef\u4ee5\u5728 pipeline\u4e2d\u4f7f\u7528withCredentials \u6b65\u9aa4\u4f7f\u7528\u51ed\u8bc1\u4e86\u3002</p>"},{"location":"chap5/1chap5_cred1/#3-1-secret-text","title":"3-1 Secret text","text":"<p><code>Secret text</code>\u662f\u4e00\u4e32\u9700\u8981\u4fdd\u5bc6\u7684\u6587\u672c\uff0c\u6bd4\u5982<code>GitLab</code>\u7684<code>API token</code>\u3002</p> <p></p> <pre><code>withCredentials([string(credentialsId: 'secretText', variable: 'varName')]) { \n        echo \"${varName}\" \n} \n</code></pre>"},{"location":"chap5/1chap5_cred1/#3-2-usernarne-with-password","title":"3-2 Usernarne with password","text":"<p><code>Username with password</code>\u6307\u7528\u6237\u548c\u5bc6\u7801\u51ed\u8bc1\u3002</p> <p></p> <pre><code>withCredentials([usernamePassword(credentialsId: 'gitlab\u2014userpwd\u2014pair', usernameVariable: 'username', passwordVariable: 'passwd')]){ \n        echo \"${username} ${passwd}\" \n} \n</code></pre>"},{"location":"chap5/1chap5_cred1/#3-3-secret-file","title":"3-3 Secret file","text":"<p><code>Secret file</code>\u6307\u9700\u8981\u4fdd\u5bc6\u7684\u6587\u672c\u6587\u4ef6\u3002 \u4f7f\u7528<code>Secret file</code>\u65f6\uff0c<code>Jenkins</code>\u4f1a\u5c06\u6587\u4ef6\u590d\u5236\u5230\u4e00\u4e2a\u4e34\u65f6\u76ee\u5f55\u4e2d\uff0c\u518d\u5c06\u6587\u4ef6\u8def\u5f84\u8bbe\u7f6e\u5230\u4e00\u4e2a\u53d8\u91cf\u4e2d\u3002 \u6784\u5efa\u7ed3\u675f\u540e\uff0c\u6240\u590d\u5236\u7684<code>Secret file</code> \u4f1a\u88ab\u5220\u9664\u3002</p> <p>\u793a\u4f8b\u5982\u4e0b\uff1a </p> <pre><code>withCredentials([file(credentialsId: 'ansible-vault-password', variable: 'vault')]){ \n        sh \"ansible -i hosts playbook.yml --vault-password-file=${vault}\" \n} \n</code></pre> <p></p>"},{"location":"chap5/1chap5_cred1/#3-4-ssh-username-with-private-key","title":"3-4 SSH Username with private key","text":"<p><code>SSH Usernarne with private key</code>\u6307\u4e00\u5bf9<code>SSH</code>\u7528\u6237\u540d\u548c\u5bc6\u94a5\u3002</p> <p></p> <pre><code>withCredentials([sshUserPrivateKey(\n                keyFileVariable:\"key\", \n                credentialsId : \"private-key\" )]) { \n        echo \"${key}\" \n} \n</code></pre> <ul> <li><code>sshUserPrivateKey</code>\u51fd\u6570\u8fd8\u652f\u6301\u4ee5\u4e0b\u53c2\u6570\u3002 </li> <li><code>usernarneVariable</code>: SSH\u7528\u6237\u540d\u7684\u53d8\u91cf\u540d\u3002 </li> <li><code>passphraseVariable</code>: SSH key\u5bc6\u7801\u7684\u53d8\u91cf\u540d\u3002 </li> </ul>"},{"location":"chap5/1chap5_cred1/#4","title":"4\u3001\u4f18\u96c5\u5730\u4f7f\u7528\u51ed\u8bc1","text":"<p>\u58f0\u660e\u5f0f<code>pipeline</code>\u63d0\u4f9b<code>credentials helper</code>\u65b9\u6cd5\uff08\u53ea\u80fd\u5728<code>environment</code> \u6307\u4ee4\u4e2d\u4f7f\u7528\uff09\u6765\u7b80\u5316\u51ed\u8bc1\u7684\u4f7f\u7528\u3002\u4ee5\u4e0b\u662f\u4f7f\u7528\u65b9\u6cd5\u3002 </p>"},{"location":"chap5/1chap5_cred1/#secret-text","title":"Secret text","text":"<pre><code>environment { \n    AWS_ACCESS_KEY_ID = credentials( 'aws-secret-key-id' ) \n    AWS_SECRET_ACCESS_KEY = credentials( 'aws-secret-access-key' ) \n} \n</code></pre> <p><code>AWS-SECRET-KEY-ID</code>\u548c<code>AWS-SECRET-ACCESS-KEY</code>\u662f\u6211\u4eec\u9884\u5148\u5b9a\u4e49\u7684\u51ed\u8bc1ID\u3002<code>credentials</code>\u65b9\u6cd5\u5c06\u51ed\u8bc1\u7684\u503c\u8d4b\u7ed9\u53d8\u91cf\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u50cf\u4f7f\u7528\u666e\u901a\u73af\u5883\u53d8\u91cf\u4e00\u6837\u4f7f\u7528\u5b83\u4eec\u4e86\uff0c\u5982\uff1a <code>echo \"${AWS_ACCESS_KEY_ID}\"</code>\u3002 </p>"},{"location":"chap5/1chap5_cred1/#username-with-password","title":"Username with password","text":"<pre><code>environment { \n    BITBUCKET_CREDS = credentials( 'jenkins-bitbucket-creds' ) \n}\n</code></pre> <p>\u4e0e<code>Secret text</code>\u4e0d\u540c\u7684\u662f\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7<code>BITBUCKET_CREDS_USR</code>\u62ff\u5230\u7528\u6237\u540d\u7684\u503c\uff0c\u901a\u8fc7 <code>BITBUCKET_CREDS_PSW</code>\u62ff\u5230\u5bc6\u7801\u7684\u503c\u3002\u800c\u53d8\u91cf<code>BITBUCKET_CREDS</code>\u7684\u503c\u5219\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u683c \u5f0f\u4e3a\uff1a<code>\uff1c\u7528\u6237\u540d\uff1e:\uff1c\u5bc6\u7801\uff1e</code>\u3002 </p>"},{"location":"chap5/1chap5_cred1/#secret-file","title":"Secret file","text":"<pre><code>environment { \n    KNOWN_HOSTS = credentials('known_hosts') \n} \n</code></pre> <p>\u901a\u8fc7<code>credentials helper</code>\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u50cf\u4f7f\u7528\u73af\u5883\u53d8\u91cf\u4e00\u6837\u4f7f\u7528\u51ed\u8bc1\u3002 </p> <p>\u4f46\u9057\u61be\u7684\u662f\uff0c<code>credentials helper</code>\u65b9\u6cd5\u53ea\u652f\u6301<code>Secret texts</code>, <code>Username with passwords</code>, <code>Secret file</code>\u4e09\u79cd\u51ed\u8bc1\u3002 </p>"},{"location":"chap5/2chap5_vault/","title":"\u7b2c\u4e8c\u8282 \u51ed\u8bc1\u7ba1\u7406\u4f7f\u7528HashiCorp Vault","text":"<p>\u5982\u679c\u89c9\u5f97<code>Jenkins</code> \u7684\u51ed\u8bc1\u7ba1\u7406\u529f\u80fd\u592a\u5f31\u65e0\u6cd5\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\u5219\u53ef\u4ee5\u8003\u8651\u4f7f\u7528<code>HashCorp Vault</code> </p>"},{"location":"chap5/2chap5_vault/#1hashrcorp-vault","title":"1\u3001HashrCorp Vault\u4ecb\u7ecd","text":"<p>HashCorp Vault\u662f\u6b3e\u5bf9\u654f\u611f\u4fe1\u606f\u8fdb\u884c\u5b58\u50a8\u5e76\u8fdb\u884c\u8bbf\u95ee\u63a7\u5236\u7684\u7684\u5de5\u5177\u3002\u654f\u611f\u4fe1\u606f\u6307\u7684\u662f\u5bc6\u7801  \u3001token\u3001\u5bc6\u94a5\u7b49\u3002\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u5b58\u50a8\u654f\u611f\u4fe1\u606f\u8fd8\u5177\u6709\u6eda\u52a8\u66f4\u65b0\u3001\u5ba1\u8ba1\u7b49\u529f\u80fd </p>"},{"location":"chap5/2chap5_vault/#1-1-vault-on-docker","title":"1-1 \u5feb\u901f\u542f\u52a8 Vault on Docker","text":"<p>Store Secrets using Hashicorp Vault with Docker</p>"},{"location":"chap5/2chap5_vault/#1-2-hashrcorp-vault","title":"1-2 \u96c6\u6210HashrCorp Vault","text":"<ol> <li>\u5b89\u88c5HashCorp Vault\u63d2\u4ef6</li> <li>\u6dfb\u52a0<code>Vault Token</code>\u51ed\u8bc1</li> </ol> <p>3.\u914d\u7f6e<code>Vault</code>\u63d2\u4ef6</p> <p></p> <p>\u9996\u5148\u6211\u4eec\u4f7f\u7528<code>vault</code>\u547d\u4ee4\u5411<code>vault</code>\u670d\u52a1\u5199\u5165\u79c1\u5bc6\u6570\u636e\u4ee5\u65b9\u4fbf\u6d4b\u8bd5\uff1a</p> <pre><code>vault write -address=${VAULT_ADDR} \\\n    secret/hello value=world\nSuccess! Data written to: secret/hello\n</code></pre> <pre><code>vault read -address=${VAULT_ADDR} \\\n    secret/hello\nKey             Value\nlease_duration  2592000\nvalue           world\n</code></pre> <p>\u63a5\u7740\u5728<code>pipeline</code>\u4e2d\u8bfb\u53d6\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a </p> <pre><code>pipeline { \n    agent { label 'hostmachine '}\n\n    environment { \n        SECRET = vault path: 'secret/hello', key: 'value' \n    } \n\n    stages { \n        stage(\"read vault key\") { \n            steps { \n                script{ \n                    def x = vault path: 'secret/hello', key: 'value' \n                    echo \"${x}\" \n                    echo \"${SECRET}\" \n                }\n            } \n        } \n    } \n} \n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u5728<code>environment</code>\u548c<code>steps</code>\u4e2d\u4f7f\u7528<code>vault</code>\u6b65\u9aa4\u3002\u63a8\u8350\u5728<code>environment</code>\u4e2d\u4f7f\u7528\u3002 vault\u6b65\u9aa4\u7684\u53c2\u6570\u5982\u4e0b: </p> <ul> <li><code>path</code>\uff0c\u5b58\u50a8\u952e\u503c\u5bf9\u7684\u8def\u5f84\u3002 </li> <li><code>key</code>\uff0c\u5b58\u50a8\u5185\u5bb9\u7684\u952e\u3002 </li> <li><code>vaultUrl</code>\uff08\u53ef\u9009\uff09, <code>vault</code>\u670d\u52a1\u5730\u5740\u3002 </li> <li><code>credentialsld</code>\uff08\u53ef\u9009\uff09,<code>vault</code>\u670d\u52a1\u8ba4\u8bc1\u7684\u51ed\u8bc1\u3002 </li> </ul> <p>\u5982\u679c\u4e0d\u586b<code>vaultUrl</code>\u4e0e<code>credentialsld</code>\u53c2\u6570\uff0c\u5219\u4f7f\u7528\u7cfb\u7edf\u7ea7\u522b\u7684\u914d\u7f6e\u3002 </p>"},{"location":"chap5/3docker_valut/","title":"\u7b2c\u4e8c\u8282(Extra) - Store Secrets using Hashicorp Vault with Docker","text":""},{"location":"chap5/3docker_valut/#1what-is-hashicorp-vault","title":"1.What is Hashicorp Vault","text":"<p>Vault is a tool for securely accessing secrets. A secret is anything that you want to tightly control access to, such as API keys, passwords, certificates, and more. Vault provides a unified interface to any secret, while providing tight access control and recording a detailed audit log. More details can be found at https://github.com/hashicorp/vault/</p>"},{"location":"chap5/3docker_valut/#2configuration","title":"2.Configuration","text":"<p>The first step is to configure a Data Container to store the configuration for Vault.</p> <pre><code>$ touch vault.hcl\n\nbackend \"consul\" {\n  address = \"consul:8500\"\n  advertise_addr = \"consul:8300\"\n  scheme = \"http\"\n}\nlistener \"tcp\" {\n  address = \"0.0.0.0:8200\"\n  tls_disable = 1\n}\ndisable_mlock = true\n</code></pre> <p>The config defines three important properties. </p> <ul> <li>Firstly, it sets Vault to use Consul to store the secrets. Using Consul enables high availability mode as Consul manages to information and distribution to ensure HA. </li> <li>Secondly, it binds Vault to listen on all IP addresses, this is for use with the HTTP API. </li> <li>Finally, for development purposes, we disable TLS.</li> </ul>"},{"location":"chap5/3docker_valut/#create-data-container","title":"Create Data Container","text":"<p>To store the configuration we'll create a container. This will be used by Vault and Consul to read the required configuration files.</p> <pre><code>docker create -v /config --name config busybox; docker cp vault.hcl config:/config/;\n</code></pre>"},{"location":"chap5/3docker_valut/#3launch","title":"3.Launch","text":"<p>With the configuration data container created we can launch the necessary processes to start Vault.</p>"},{"location":"chap5/3docker_valut/#3-1-launch-services","title":"3-1 Launch Services","text":"<p>Launch a single Consul agent. In production, we'd want to have a cluster of 3 or 5 agents as a single node can lead to data loss.</p> <pre><code>docker run -d --name consul -p 8500:8500 consul:1.8.0 agent -dev -client=0.0.0.0\n\n$ docker ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                                                                NAMES\nbf950a5631cc        consul:v0.6.4       \"docker-entrypoint.s\u2026\"   14 seconds ago      Up 13 seconds       8300-8302/tcp, 8400/tcp, 8301-8302/udp, 8600/tcp, 8600/udp, 0.0.0.0:8500-&gt;8500/tcp   consul\n</code></pre> <p>Our Vault instance can now use Consul to store the data. All data stored within Consul will be encrypted.</p> <pre><code>docker run -d --name vault-dev \\\n  --link consul:consul \\\n  -p 8200:8200 \\\n  --volumes-from config \\\n   cgswong/vault:0.5.3 server -config=/config/vault.hcl\n</code></pre> <ul> <li><code>--detach , -d</code>: Run container in background and print container ID</li> <li><code>--link</code>: Add link to another container</li> <li><code>--publish , -p</code>  : Publish a container\u2019s port(s) to the host</li> <li><code>--volumes-from</code>: Mount volumes from the specified container(s)</li> </ul>"},{"location":"chap5/3docker_valut/#4-initialise","title":"4. Initialise","text":"<p>With a vault instance running, we can now configure our environment and initialise the Vault.</p>"},{"location":"chap5/3docker_valut/#4-1-configure-environment","title":"4-1 Configure Environment","text":"<p>This command will create an alias which will proxy commands to vault to the Docker container. As we're in development, we need to define a non-HTTPS address for the vault.</p> <pre><code>alias vault='docker exec -it vault-dev vault \"$@\"'\nexport VAULT_ADDR=http://127.0.0.1:8200\n</code></pre>"},{"location":"chap5/3docker_valut/#4-2-initialise-vault","title":"4-2 Initialise Vault","text":"<p>With the alias in place, we can make calls to the CLI. The first step is to initialise the vault using the init command.</p> <pre><code>vault init -address=${VAULT_ADDR} &gt; keys.txt\n</code></pre> <p>We store the results in <code>cat keys.txt</code></p> <pre><code>cat keys.txt\nKey 1: 04028656e5a5726aa2995540a30fe31663150d86ba36924cc2e65a69aa8463ce01\nKey 2: 7dcbdb1003a37395e23181eb27bde8a4a68165251f57014ba518466da646c2c202\nKey 3: 1bd673dda7ec11327f66dbac5abd0f5608d7ebdc3fd280128906c334607b148503\nKey 4: 3d3911be81097c494374e0573b8e23aeab7ffd31b2991b34347ee01b8c7e762604\nKey 5: 5b24b97325461eeede23ba10468ec45c052973c8921c9a6d186065424a43a06105\nInitial Root Token: b550b1e3-042b-f327-0c44-41f05dcac228\n\nVault initialized with 5 keys and a key threshold of 3. Please\nsecurely distribute the above keys. When the Vault is re-sealed,\nrestarted, or stopped, you must provide at least 3 of these keys\nto unseal it again.\n\nVault does not store the master key. Without at least 3 keys,\nyour Vault will remain permanently sealed.\n</code></pre> <p>The file contains valuable information about how to access the vault and seal/unseal. The output includes our master key and token. We'll use this in the next step when communicating with our running instance.</p>"},{"location":"chap5/3docker_valut/#5-unseal-vault","title":"5. Unseal Vault","text":"<p>When a Vault server is started, it starts in a sealed state. The server knows how to communicate with the backend storage, but it does not know how to decrypt any of the contents. Unsealing is the process of constructing the master key necessary to read the decryption key to decrypt the data, allowing read access to the Vault.</p>"},{"location":"chap5/3docker_valut/#5-1-unseal-vault","title":"5-1 Unseal Vault","text":"<p>To unseal with Vault server you need access to three of the five keys defined when the Vault was initialised. The following command will grep the first three keys and unseal the Vault.</p> <pre><code>$ vault unseal -address=${VAULT_ADDR} $(grep 'Key 1:' keys.txt | awk '{print $NF}')\nSealed: true\nKey Shares: 5\nKey Threshold: 3\nUnseal Progress: 1\n</code></pre> <pre><code>$ vault unseal -address=${VAULT_ADDR} $(grep 'Key 2:' keys.txt | awk '{print $NF}')\nSealed: true\nKey Shares: 5\nKey Threshold: 3\nUnseal Progress: 2\n</code></pre> <pre><code>$ vault unseal -address=${VAULT_ADDR} $(grep 'Key 3:' keys.txt | awk '{print $NF}')\n\nSealed: false\nKey Shares: 5\nKey Threshold: 3\nUnseal Progress: 0\n</code></pre> <p>In production, these keys should be stored separately and securely. Vault uses an algorithm known as Shamir's Secret Sharing to split the master key into shards. Each of the five keys is part of the shard.</p>"},{"location":"chap5/3docker_valut/#5-2-status","title":"5-2 Status","text":"<p>You can view the status of the vault using </p> <pre><code>vault status -address=${VAULT_ADDR}\n</code></pre> <pre><code>$ vault status -address=${VAULT_ADDR}\nSealed: false\nKey Shares: 5\nKey Threshold: 3\nUnseal Progress: 0\n\nHigh-Availability Enabled: true\n        Mode: active\n        Leader: consul:8300\n</code></pre>"},{"location":"chap5/3docker_valut/#6-vault-tokens","title":"6. Vault Tokens","text":"<p>Tokens are used to communicate with the Vault. When the vault was initialised, a root token was outputted. Store this in a variable with the following command. We'll use it for future API calls. export </p> <pre><code>VAULT_TOKEN=$(grep 'Initial Root Token:' keys.txt | awk '{print substr($NF, 1, length($NF)-1)}')\n</code></pre> <p>You can use this token to login to vault. </p> <pre><code>vault auth -address=${VAULT_ADDR} ${VAULT_TOKEN}\n</code></pre> <pre><code>$ vault auth -address=${VAULT_ADDR} ${VAULT_TOKEN}\nSuccessfully authenticated!\ntoken: b550b1e3-042b-f327-0c44-41f05dcac228\ntoken_duration: 0\ntoken_policies: [root]\n</code></pre> <p>The primary reason is to create new tokens using vault <code>token-create</code>.</p>"},{"location":"chap5/3docker_valut/#7-readwrite-data","title":"7. Read/Write Data","text":"<p>The Vault CLI can be used to read and write data securely. Vault is a primarily a key/value store. Each pairing can have additional security configuration attached, such as policies on access, TTL, and the ability to be revoked.</p>"},{"location":"chap5/3docker_valut/#7-1-save-data","title":"7-1 Save Data","text":"<p>To store data, we use the write CLI command. In this case, we have a key named <code>secret/api-key</code> with the value <code>12345678</code></p> <pre><code>$ vault write -address=${VAULT_ADDR} \\\n&gt; secret/api-key value=12345678\nSuccess! Data written to: secret/api-key\n</code></pre>"},{"location":"chap5/3docker_valut/#7-2-read-data","title":"7-2 Read Data","text":"<p>Reading the key will output the value, along with other information such as the lease duration. </p> <pre><code>$ vault read -address=${VAULT_ADDR} \\\n    secret/api-key\nKey             Value\nlease_duration  2592000\nvalue           12345678\n</code></pre> <p>You can also use the <code>-field</code> flag to extract the value from the secret data</p> <pre><code>$ vault read -address=${VAULT_ADDR} \\\n&gt; -field=value secret/api-key\n12345678\n</code></pre>"},{"location":"chap5/3docker_valut/#8-http-api","title":"8. HTTP API","text":"<pre><code>$ curl -H \"X-Vault-Token:$VAULT_TOKEN\" -XGET http://127.0.0.1:8200/v1/secret/api-key\n{\"lease_id\":\"\",\"renewable\":false,\"lease_duration\":2592000,\"data\":{\"value\":\"12345678\"},\"warnings\":null,\"auth\":null}\n</code></pre> <p>Using the command like tool jq we can parse the data and extract the value for our key.</p> <pre><code>curl -s -H  \"X-Vault-Token:$VAULT_TOKEN\" \\\n     -XGET http://127.0.0.1:8200/v1/secret/api-key \\\n    | jq -r .data.value\n12345678\n</code></pre> <p>This could be used to launch additional processes, such as MySQL, or access external services like AWS. Using this as part of a Docker Entrypoint will be discussed in future scenarios.</p>"},{"location":"chap5/4docker_mask/","title":"\u7b2c\u4e09\u8282 \u5728Jenkins\u65e5\u5fd7\u4e2d\u9690\u85cf\u654f\u611f\u4fe1\u606f","text":"<p>\u5982\u679c\u4f7f\u7528\u7684\u662f<code>credentials helper</code>\u65b9\u6cd5\u6216\u8005<code>withCredentials</code>\u3002\u6b65\u9aa4\u4e3a\u53d8\u91cf\u8d4b\u503c\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\u662f\u4e0d\u4f1a\u88ab\u660e\u6587\u6253\u5370\u5230<code>Jenkins</code>\u65e5\u5fd7\u4e2d\u7684\u3002\u9664\u975e\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\uff1a </p> <pre><code>steps { \n    script{ \n        def hack = 'hack it' \n        withCredentials([string(credentialsId: 'abc', variable: 'secretText')]) { \n            echo \"${secretText}\"\n            hack = \"${secretText}\" \n        } \n        echo \"${hack}\"\n    } \n} \n</code></pre> <p>\u5728\u6ca1\u6709\u4f7f\u7528<code>credential</code>\u7684\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u53c8\u8be5\u5982\u4f55\u5728\u65e5\u5fd7\u4e2d\u9690\u85cf\u53d8\u91cf\u5462\uff1f\u53ef\u4ee5\u4f7f\u7528<code>Masked Password</code>\u63d2\u4ef6\u3002\u901a\u8fc7\u8be5\u63d2\u4ef6\u63d0\u4f9b\u7684\u5305\u88c5\u5668\uff0c\u53ef\u4ee5\u9690\u85cf\u6211\u4eec\u6307\u5b9a\u7684\u654f\u611f\u4fe1\u606f\u3002 </p> <p>\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a </p> <pre><code>pipeline { \n    agent any \n    environment { \n        SECRET1 = \"secret1\" \n        SECRET2 = \"secret2\" \n        NOT_SECRET = \"no secret\" \n    } \n    stages { \n        stage(\"read vault key\"){ \n            steps { \n                wrap([$class: 'MaskPasswordsBuildWrapper', varPasswordPairs: [ \n                    [password: env['SECRET1'], var: 's1'],\n                    [password: env['SECRET2'], var: 's2']]] \n                    ) { \n                    echo \"Masked secret: ${SECRET1} and ${SECRET2}\" \n                    echo \"secret1\" \n                    echo \"Not masked secret ${NOT_SECRET}\" \n                } \n            } \n        } \n    } \n}\n</code></pre> <pre><code>[Pipeline] stage (hide)\n[Pipeline] { (read vault key)\n[Pipeline] wrap\n[Pipeline] {\n[Pipeline] echo\nMasked secret: ******** and ********\n[Pipeline] echo\n********\n[Pipeline] echo\nNot masked secret no secret\n[Pipeline] }\n</code></pre> <p>\u521d\u6b21\u4f7f\u7528    <code>Masked Password</code> \u63d2\u4ef6\u5f88\u5bb9\u6613\u4ee5\u4e3a\u662f\u4f7f\u7528\u3002<code>s1</code>\u548c<code>s2</code>\u4f5c\u4e3a\u53d8\u91cf\u7684\uff0c\u5982<code>echo \"Masked secret: ${SECRET1} and ${SECRET2}\"</code>\u3002</p> <p>\u5b9e\u9645\u4e0a\uff0c<code>var</code>\u53c2\u6570\u53ea\u662f\u7528\u4e8e\u65b9\u4fbf\u5728\u81ea\u7531\u98ce\u683c\u7684<code>Jenkins</code>\u9879\u76ee \u4e2d\u533a\u5206\u4e0d\u540c\u7684\u9700\u8981\u9690\u85cf\u7684\u5bc6\u6587\u3002\u5728<code>pipeline</code>\u4e2d\u4f7f\u7528\uff0c\u5b83\u5c31\u6ca1\u6709\u5b58\u5728\u7684\u610f\u4e49\u4e86\u3002\u4f46\u662f\u5373\u4f7f\u8fd9\u6837\u4e5f\u4e0d\u80fd\u7701\u7565\u5b83\uff0c\u5fc5\u987b\u4f20\u4e00\u4e2a\u503c\u3002<code>password</code>\u53c2\u6570\u4f20\u7684\u662f\u771f\u6b63\u8981\u9690\u85cf\u7684\u5bc6\u6587\u3002 </p> <p>\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48<code>echo \"secret1\"</code>\u8fd9\u6761\u8bed\u53e5\u4e2d\u5e76\u6ca1\u6709\u4f7f\u7528\u9884\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c<code>secret1</code>\u4e5f\u4f1a\u88ab\u9690\u85cf\u5462\uff1f\u8fd9\u662f\u7531<code>Masked Password</code>\u63d2\u4ef6\u7684\u5b9e\u73b0\u65b9\u5f0f\u51b3\u5b9a\u7684\u3002 </p> <p><code>Jenkins</code>\u63d0\u4f9b\u4e86<code>ConsoleLogFilter</code>\u63a5\u53e3\uff0c\u53ef\u4ee5\u5728\u65e5\u5fd7\u6253\u5370\u9636\u6bb5\u5b9e\u73b0\u6211\u4eec\u81ea\u5df1\u7684\u4e1a\u52a1\u903b\u8f91\u3002  <code>Masked Password</code>\u63d2\u4ef6\u5b9e\u73b0\u4e86<code>ConsoleLogFilter</code>\u63a5\u53e3\uff0c\u7136\u540e\u5229\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5c06\u5339\u914d\u5230\u7684\u6587\u672c <code>replaceAll</code>\u6210<code>******</code>\u3002 </p> <p><code>MaskPasswordsBuildWrapper</code>\u5305\u88c5\u5668\u9664\u4e86\u652f\u6301<code>varPasswordPair</code>\u3002\u53c2\u6570\uff0c\u8fd8\u652f\u6301<code>varMask Regexes</code>\u53c2\u6570\uff0e\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u9700\u8981\u9690\u85cf\u7684\u6587\u672c\u3002\u5199\u6cd5\u5982\u4e0b\uff1a </p> <pre><code>steps { \n    wrap([$class: 'MaskPasswordsBuildWrapper', \n        varMaskRegexes: [[regex: 'abc--.*']] \n    ] \n    ) {\n        echo \"abc--xxxx\" \n    }\n}\n</code></pre> <p>\u901a\u8fc7<code>Masked Password</code>\u63d2\u4ef6\u8fd8\u53ef\u4ee5\u8bbe\u7f6e\u5168\u5c40\u7ea7\u522b\u7684\u5bc6\u6587\u9690\u85cf\uff0c\u5728<code>Manage Jenkins -&gt; Configure System</code>\u9875\u4e2d\u53ef\u4ee5\u627e\u5230\uff0c</p> <p></p>"},{"location":"chap5/5jenkins_secrets/","title":"0 \u5982\u4f55\u5728 Jenkins \u4e2d\u5b89\u5168\u7ba1\u7406 Secrets","text":"<p>CI/CD \u6d41\u6c34\u7ebf\u662f DevOps \u56e2\u961f\u8f6f\u4ef6\u4ea4\u4ed8\u8fc7\u7a0b\u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\u3002</p> <p>\u8be5\u6d41\u6c34\u7ebf\u5229\u7528\u81ea\u52a8\u5316\u548c\u6301\u7eed\u76d1\u63a7\u6765\u5b9e\u73b0\u8f6f\u4ef6\u7684\u65e0\u7f1d\u4ea4\u4ed8\u3002\u901a\u8fc7\u6301\u7eed\u81ea\u52a8\u5316\uff0c\u786e\u4fdd CI/CD \u6d41\u6c34\u7ebf\u6bcf\u4e00\u6b65\u7684\u5b89\u5168\u6027\u975e\u5e38\u91cd\u8981\u3002</p> <p>\u5728\u6d41\u6c34\u7ebf\u7684\u5404\u4e2a\u9636\u6bb5\uff0c\u901a\u5e38\u9700\u8981\u8bbf\u95ee\u51ed\u636e\u7b49\u654f\u611f\u4fe1\u606f\u3002\u4fdd\u62a4\u8fd9\u4e9b\u4fe1\u606f\u5bf9\u4e8e\u4fdd\u6301\u5f3a\u5927\u7684\u5b89\u5168\u6001\u52bf\u81f3\u5173\u91cd\u8981\u3002\u672c\u6587\u5c06\u5e26\u4f60\u4e86\u89e3\u5982\u4f55\u5728 Jenkins CI/CD \u6d41\u6c34\u7ebf\u4e2d\u4fdd\u62a4\u673a\u5bc6\uff08Secrets\uff09\u3002</p>"},{"location":"chap5/5jenkins_secrets/#cicd-secrets","title":"\u5728 CI/CD \u6d41\u6c34\u7ebf\u4e2d\u4f7f\u7528 Secrets","text":"<p>\u5982\u524d\u6240\u8ff0\uff0cCI/CD \u6d41\u6c34\u7ebf\u901a\u5e38\u9700\u8981\u8bbf\u95ee\u654f\u611f\u4fe1\u606f\uff0c\u5982\u5bc6\u7801\u548c API \u5bc6\u94a5\u3002</p> <p>\u4ee5\u660e\u6587\u5bf9\u5b83\u4eec\u8fdb\u884c\u786c\u7f16\u7801\u4f1a\u4ea7\u751f\u4e25\u91cd\u7684\u5b89\u5168\u98ce\u9669\uff0c\u5e76\u4e14\u8fdd\u53cd\u4e86\u5927\u591a\u6570\u5408\u89c4\u6846\u67b6\u4e2d\u7684\u5ba1\u8ba1\u51c6\u5219\u3002\u4f7f\u7528\u8fd9\u4e9b\u51ed\u8bc1\u800c\u4e0d\u5728\u975e\u5fc5\u8981\u7684\u60c5\u51b5\u4e0b\u516c\u5f00\u5b83\u4eec\u7684\u673a\u5236\uff0c\u5bf9\u4e8e\u81ea\u52a8\u5316\u8f6f\u4ef6\u4ea4\u4ed8\u5f88\u91cd\u8981\u3002</p> <p>\u7528\u4e8e\u5b89\u5168\u5b58\u50a8\u3001\u7ba1\u7406\u548c\u8bbf\u95ee\u4e0a\u8ff0\u51ed\u8bc1\u7684\u5de5\u5177\u548c\u6280\u672f\u7684\u96c6\u5408\u79f0\u4e3a\u673a\u5bc6\u7ba1\u7406\uff08Secrets Management\uff09\u3002Secrets \u5e7f\u6cdb\u7528\u4e8e IT\u3001DevOps \u548c\u4e91\u73af\u5883</p> <p>Secrets \u5305\u62ec\uff1a</p> <ul> <li>\u5e94\u7528\u7a0b\u5e8f\u751f\u6210\u7684\u5bc6\u7801</li> <li>\u7cfb\u7edf\u5230\u7cfb\u7edf\u7684\u5bc6\u7801</li> <li>API \u5bc6\u94a5</li> <li>\u79c1\u6709\u52a0\u5bc6\u5bc6\u94a5</li> <li>\u4e00\u6b21\u6027\u5bc6\u7801</li> <li>\u8bc1\u4e66</li> <li>\u7279\u6743\u5e10\u6237\u51ed\u8bc1</li> </ul> <p>CI/CD \u6d41\u6c34\u7ebf\u96c6\u6210\u4e86\u591a\u4e2a\u914d\u7f6e\u7ba1\u7406\u5e73\u53f0\uff0c\u9700\u8981 secrets \u6765\u542f\u7528\u670d\u52a1\u5230\u670d\u52a1\u7684\u901a\u4fe1\u3002\u8fd9\u4e9b\u5e73\u53f0\u8fd8\u9700\u8981 secrets \u6765\u9a8c\u8bc1\u8bf7\u6c42\u8bbf\u95ee SSH \u670d\u52a1\u5668\u3001\u6570\u636e\u5e93\u3001HTTP \u670d\u52a1\u548c\u5176\u4ed6\u8d44\u6e90\u7684\u5b9e\u4f53\u3002</p>"},{"location":"chap5/5jenkins_secrets/#cicd-secrets_1","title":"CI/CD \u4e2d Secrets \u7684\u7528\u9014","text":"<p>Secrets \u7528\u4e8e\u7ba1\u7406 CI/CD \u6d41\u6c34\u7ebf\u4e2d\u7684\u8bbf\u95ee\u6743\u9650\u3002\u4e00\u4e9b\u7528\u4f8b\u5305\u62ec\u6e90\u4ee3\u7801\u63a7\u5236\u7ba1\u7406\u3001\u57fa\u7840\u8bbe\u65bd\u8fde\u63a5\u3001\u534f\u4f5c\u63d0\u4f9b\u8005\u548c\u9a8c\u8bc1\u3002\u8ba9\u6211\u4eec\u66f4\u8be6\u7ec6\u5730\u8ba8\u8bba\u8fd9\u4e9b\u7528\u4f8b\u4e2d\u7684\u6bcf\u4e00\u4e2a\u3002</p>"},{"location":"chap5/5jenkins_secrets/#1","title":"1. \u6e90\u4ee3\u7801\u63a7\u5236\u7ba1\u7406","text":"<p>\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u5982 Git\uff0c\u4fbf\u4e8e\u591a\u4eba\u56e2\u961f\u4e4b\u95f4\u7684\u534f\u4f5c\u3002</p> <p>\u8fd9\u4e9b\u7cfb\u7edf\u901a\u8fc7\u7ba1\u7406\u548c\u5b58\u50a8\u6765\u81ea\u591a\u4e2a\u5f00\u53d1\u4eba\u5458\u7684\u4ee3\u7801\u8d21\u732e\uff0c\u6765\u5e2e\u52a9\u7ef4\u62a4\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u3002\u7531\u4e8e\u6e90\u4ee3\u7801\u53ef\u80fd\u5305\u542b\u4e00\u4e9b\u7ec4\u7ec7\u6700\u6709\u4ef7\u503c\u7684\u8d44\u4ea7\uff0c\u56e0\u6b64\u6b63\u786e\u9a8c\u8bc1\u548c\u7ba1\u7406 Git \u5b58\u50a8\u5e93\u7684\u8bbf\u95ee\u6743\u9650\u81f3\u5173\u91cd\u8981\u3002</p>"},{"location":"chap5/5jenkins_secrets/#2","title":"2. \u57fa\u7840\u8bbe\u65bd\u8fde\u63a5","text":"<p>CI/CD \u6d41\u6c34\u7ebf\u901a\u5e38\u7531\u5728\u591a\u4e2a\u4e3b\u673a\u4e0a\u7684\u4e0d\u540c\u670d\u52a1\u7ec4\u6210\uff0c\u8fd9\u4e9b\u4e3b\u673a\u5206\u5e03\u5728\u4e0d\u540c\u7684\u57fa\u7840\u8bbe\u65bd\u4e0a\u3002</p> <p>\u968f\u7740\u8fd9\u4e9b\u4e3b\u673a\u4e0d\u65ad\u5730\u76f8\u4e92\u901a\u4fe1\uff0c\u901a\u8fc7 API \u8c03\u7528\u4e0e\u670d\u52a1\u901a\u4fe1\uff0c\u4ece\u800c\u5b9e\u73b0\u6240\u9700\u7684\u5e94\u7528\u7a0b\u5e8f\u529f\u80fd\u3002</p> <p>API \u5bc6\u94a5\u548c\u7cfb\u7edf\u5230\u7cfb\u7edf\uff08system-to-system\uff09\u5bc6\u7801\u7b49 secrets \u80fd\u591f\u652f\u6301\u5728\u57fa\u7840\u8bbe\u65bd\u4e4b\u95f4\u5efa\u7acb\u5b89\u5168\u7684\u8fde\u63a5\uff0c\u4ece\u800c\u8fde\u63a5\u591a\u79df\u6237\u548c\u591a\u4e91 CI/CD \u6d41\u6c34\u7ebf\u3002</p>"},{"location":"chap5/5jenkins_secrets/#3","title":"3. \u8de8\u56e2\u961f\u534f\u4f5c","text":"<p>CI/CD \u6d41\u6c34\u7ebf\u5305\u542b\u8de8\u591a\u4e2a\u5f00\u53d1\u3001\u8fd0\u8425\u548c\u8d28\u91cf\u4fdd\u8bc1\u73af\u5883\u7684\u534f\u4f5c\u6d3b\u52a8\u3002\u8fd9\u4e9b\u56e2\u961f\u4f9d\u9760\u591a\u79cd\u5de5\u5177\u548c\u6846\u67b6\u6765\u534f\u4f5c\u548c\u5171\u4eab\u4fe1\u606f\u3002\u4f7f\u7528 secrets \u8fdb\u884c\u534f\u4f5c\u6709\u52a9\u4e8e\u56e2\u961f\u786e\u4fdd\u5b89\u5168\u901a\u4fe1\u5e76\u5728\u53cc\u65b9\u4e4b\u95f4\u63d0\u4f9b\u4e00\u5c42\u4fe1\u4efb\u548c\u5b89\u5168\u4fdd\u969c\u3002</p>"},{"location":"chap5/5jenkins_secrets/#4","title":"4. \u9a8c\u8bc1","text":"<p>\u8eab\u4efd\u9a8c\u8bc1\u662f CI/CD \u548c\u5e94\u7528\u7a0b\u5e8f\u5b89\u5168\u7684\u5173\u952e\u8981\u7d20\u3002\u901a\u8fc7\u5c06\u5e94\u7528\u7a0b\u5e8f\u8fde\u63a5\u5230\u8eab\u4efd\u548c\u8bbf\u95ee\u7ba1\u7406 \uff08IAM\uff09\u89e3\u51b3\u65b9\u6848\uff0csecrets \u7528\u4e8e\u786e\u4fdd CI/CD \u6d41\u6c34\u7ebf\u7684\u5b89\u5168\u6027\u548c\u9690\u79c1\u6027\u3002\u8fd9\u4e9b\u89e3\u51b3\u65b9\u6848\u63d0\u4f9b\u4e86\u7528\u6237\u89d2\u8272\u548c\u6743\u9650\u7684\u5916\u90e8\u6570\u636e\u5e93\uff0c\u8ba9\u7528\u6237\u65e0\u9700\u5728 CI/CD \u6d41\u6c34\u7ebf\u4e2d\u66b4\u9732\u5176\u51ed\u636e\u5373\u53ef\u767b\u5f55\u5e94\u7528\u7a0b\u5e8f\u3002</p>"},{"location":"chap5/5jenkins_secrets/#cicd-secrets_2","title":"CI/CD \u4e2d\u7684 Secrets \u4f7f\u7528\u793a\u4f8b","text":"<p>\u8981\u4e3a\u6539\u8fdb\u673a\u5bc6\u7ba1\u7406\u5960\u5b9a\u57fa\u7840\uff0c\u4e86\u89e3\u4e00\u4e9b\u7b80\u5355\u7684\u7528\u4f8b\u4f1a\u5f88\u6709\u5e2e\u52a9\u3002</p>"},{"location":"chap5/5jenkins_secrets/#1-aws","title":"1. AWS \u51ed\u8bc1","text":"<p>\u4f5c\u4e3a\u9886\u5148\u7684\u4e91 SaaS \u5e73\u53f0\u4e4b\u4e00\uff0cAWS \u662f\u5927\u591a\u6570\u57fa\u4e8e\u4e91\u7684\u57fa\u7840\u8bbe\u65bd\u7684\u5e38\u89c1\u9009\u62e9\u3002\u4e0e AWS API \u4ea4\u4e92\u4ee5\u9884\u7f6e\u548c\u67e5\u8be2\u8d44\u6e90\u901a\u5e38\u9700\u8981\u4f7f\u7528\u5bc6\u94a5/\u8bbf\u95ee\u5bc6\u94a5\u51ed\u8bc1\u3002\u4fdd\u62a4\u8fd9\u4e9b\u51ed\u8bc1\u5bf9\u4e8e\u7ef4\u62a4 AWS \u8d26\u6237\u7684\u5b89\u5168\u81f3\u5173\u91cd\u8981\u3002</p>"},{"location":"chap5/5jenkins_secrets/#2-iac","title":"2. \u57fa\u7840\u67b6\u6784\u5373\u4ee3\u7801 (IaC)","text":"<p>\u73b0\u4ee3\u5e94\u7528\u7a0b\u5e8f\u67b6\u6784\u901a\u5e38\u4f9d\u8d56\u4e8e\u57fa\u7840\u67b6\u6784\u5373\u4ee3\u7801 (IaC) \u6765\u90e8\u7f72\u8fd0\u884c\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5e95\u5c42\u7cfb\u7edf\u3002\u5bf9\u8fd9\u79cd\u914d\u7f6e\u8fdb\u884c\u7f16\u7801\u80fd\u591f\u66f4\u8f7b\u677e\u5730\u5bf9\u53ef\u91cd\u590d\u3001\u53ef\u6269\u5c55\u548c\u5b89\u5168\u7684\u57fa\u7840\u67b6\u6784\u8fdb\u884c\u7ef4\u62a4\u3002\u5728\u914d\u7f6e\u6b64\u57fa\u7840\u67b6\u6784\u7684\u8fc7\u7a0b\u4e2d\uff0c\u901a\u5e38\u9700\u8981\u5c06\u654f\u611f\u4fe1\u606f\uff08\u4f8b\u5982 SSH \u5bc6\u94a5\u548c API \u51ed\u8bc1\uff09\u90e8\u7f72\u5230\u8282\u70b9\u3002</p> <p>\u901a\u8fc7 IaC \u548c CI/CD \u81ea\u52a8\u914d\u7f6e\u57fa\u7840\u8bbe\u65bd\u662f\u4e00\u79cd\u5e38\u89c1\u6a21\u5f0f\uff0c\u7ba1\u7406\u673a\u5bc6\u662f\u8be5\u5de5\u4f5c\u6d41\u7a0b\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002</p>"},{"location":"chap5/5jenkins_secrets/#3_1","title":"3. \u73af\u5883\u53d8\u91cf","text":"<p>\u73af\u5883\u53d8\u91cf\u5728\u5927\u591a\u6570 CI/CD \u6d41\u6c34\u7ebf\u4e2d\u90fd\u6709\u4e00\u81f4\u7684\u7528\u6cd5\u3002\u5728\u5904\u7406 CI/CD \u5de5\u4f5c\u6d41\u65f6\uff0c\u9700\u8981\u52a8\u6001\u8bbe\u7f6e\u503c\u5e76\u4fdd\u7559\u8fd9\u4e9b\u6570\u636e\uff0c\u4ee5\u4f9b\u5176\u4ed6\u8fdb\u7a0b\u548c\u811a\u672c\u4f7f\u7528\u3002\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u654f\u611f\u503c\u9700\u8981\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u4f20\u9012\uff0c\u8fd9\u4e5f\u518d\u6b21\u5f3a\u8c03\u4e86\u6709\u6548\u673a\u5bc6\u7ba1\u7406\u7684\u5fc5\u8981\u6027</p>"},{"location":"chap5/5jenkins_secrets/#3-jenkins-secrets","title":"3 \u4fdd\u62a4 Jenkins \u5185\u90e8\u7684 secrets","text":"<p>Jenkins \u9700\u8981\u8bbf\u95ee\u5927\u91cf\u51ed\u636e\u624d\u80fd\u4e0e\u6784\u6210\u5b8c\u6574 CI/CD \u6d41\u6c34\u7ebf\u7684\u6240\u6709\u5e73\u53f0\u548c\u5e94\u7528\u7a0b\u5e8f\u4ea4\u4e92\u3002Jenkins \u9644\u5e26\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u7684\u51ed\u8bc1\u63d2\u4ef6\uff0c\u5176\u63d0\u4f9b\u4e00\u4e2a\u5185\u7f6e\u7684\u673a\u5bc6\u5b58\u50a8\u3002\u8fd8\u5e26\u6709\u51ed\u636e\u7ed1\u5b9a\u63d2\u4ef6\uff0c\u53ef\u4ee5\u5c06\u51ed\u636e\u7ed1\u5b9a\u5230\u73af\u5883\u53d8\u91cf\u3002</p> <p>\u5c06\u673a\u5bc6\u5b58\u50a8\u5728 Jenkins \u63a7\u5236\u5668\u4e2d\u4f7f\u6d41\u6c34\u7ebf\u4e2d\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5373\u4f7f\u8fd9\u4e9b\u673a\u5bc6\u4ec5\u88ab\u521b\u5efa\u4e00\u6b21\u4ecd\u7136\u80fd\u591f\u88ab\u591a\u6b21\u5f15\u7528\u3002\u867d\u7136 Jenkins \u51ed\u636e\u63d2\u4ef6\u63d0\u4f9b\u4e86\u4e00\u79cd\u5b58\u50a8\u548c\u7ba1\u7406\u673a\u5bc6\u7684\u7b80\u5355\u65b9\u6cd5\uff0c\u4f46\u4efb\u4f55 Jenkins \u7ba1\u7406\u5458\u548c\u6d41\u6c34\u7ebf\u4f5c\u8005\u90fd\u53ef\u4ee5\u8bbf\u95ee\u5b83\u4eec\u3002\u56e0\u6b64\uff0cDevOps \u56e2\u961f\u5e94\u786e\u4fdd\u6b63\u786e\u914d\u7f6e\u8bbf\u95ee\u6743\u9650\uff0c\u4ee5\u786e\u4fdd CI/CD \u6d41\u6c34\u7ebf\u7684\u5b89\u5168\u3002</p>"},{"location":"chap5/5jenkins_secrets/#4-jenkins-secret","title":"4 Jenkins \u652f\u6301\u7684 secret \u7c7b\u578b","text":"<p>Jenkins \u673a\u5bc6\u63d2\u4ef6\u652f\u6301\u7684\u51ed\u8bc1\u5305\u62ec\uff1a\u673a\u5bc6\u6587\u672c\u3001\u7528\u6237\u540d/\u5bc6\u7801\u5bf9\u3001\u673a\u5bc6\u6587\u4ef6\u3001SSH \u7528\u6237\u540d\u548c\u8bc1\u4e66\u3002\u5bf9\u4e8e\u6570\u91cf\u6709\u9650\u7684\u673a\u5bc6\uff0c\u53ef\u4ee5\u5355\u72ec\u5b58\u50a8\uff0c\u800c\u5927\u91cf\u673a\u5bc6\u901a\u5e38\u6700\u597d\u4f7f\u7528\u51ed\u8bc1\u6587\u4ef6\u8fdb\u884c\u7ba1\u7406\u3002</p>"},{"location":"chap5/5jenkins_secrets/#jenkins-secret","title":"\u5728 Jenkins \u4e2d\u7ba1\u7406 secret","text":"<p>\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u8ba8\u8bba\u5728 Jenkins \u4e2d\u4fdd\u62a4 secret \u7684\u4e00\u4e9b\u53ef\u7528\u9009\u9879\u3002\u4e00\u8d77\u6765\u770b\u770b\u5c06 secrets \u5b89\u5168\u5730\u6ce8\u5165 Jenkins \u6d41\u6c34\u7ebf\u7684\u4e00\u4e9b\u6700\u4f73\u5b9e\u8df5\u3002</p>"},{"location":"chap5/5jenkins_secrets/#1-otp","title":"1. \u4e00\u6b21\u6027\u5bc6\u7801 (OTP)","text":"<p>\u4e00\u6b21\u6027\u5bc6\u7801\u901a\u8fc7\u786e\u4fdd\u7528\u6237\u540d-\u5bc6\u7801\u7ec4\u5408\u4e0d\u80fd\u591a\u6b21\u4f7f\u7528\u6765\u5e2e\u52a9\u9632\u6b62\u7528\u6237\u5e10\u6237\u88ab\u76d7\u7528\u3002\u867d\u7136\u8be5\u5e10\u6237\u59cb\u7ec8\u4fdd\u7559\u7528\u6237\u540d\uff0c\u4f46\u7528\u6237\u6bcf\u6b21\u767b\u5f55\u65f6\u90fd\u4f1a\u6536\u5230\u4e00\u4e2a OTP\u3002\u8fd9\u53ef\u4ee5\u4fdd\u8bc1 Jenkins \u7ba1\u7406\u5458\u548c\u7528\u6237\u5e10\u6237\u7684\u5b89\u5168\uff0c\u9632\u6b62\u673a\u5bc6\u4fe1\u606f\u6cc4\u9732\u3002</p>"},{"location":"chap5/5jenkins_secrets/#2_1","title":"2. \u907f\u514d\u786c\u7f16\u7801\u673a\u5bc6","text":"<p>\u5220\u9664\u5df2\u786c\u7f16\u7801\u5230 CI/CD \u914d\u7f6e\u548c Jenkinsfiles \u4e2d\u7684\u673a\u5bc6\u3002\u8fd9\u6837\u80fd\u591f\u8ba9\u654f\u611f\u51ed\u8bc1\u4fe1\u606f\u4e0d\u51fa\u73b0\u5728\u6d41\u6c34\u7ebf\u4e2d\uff0c\u907f\u514d\u6076\u610f\u884c\u4e3a\u8005\u8bbf\u95ee\u548c\u5229\u7528\u3002</p>"},{"location":"chap5/5jenkins_secrets/#3-jenkins","title":"3. \u5c06\u673a\u5bc6\u5b58\u50a8\u5728\u591a\u4e2a Jenkins \u6587\u4ef6","text":"<p>\u5c06\u673a\u5bc6\u5b58\u50a8\u5728\u591a\u4e2a\u6587\u4ef6\u4e2d\u6709\u52a9\u4e8e\u5b9e\u65bd\u51ed\u636e\u6700\u5c11\u66b4\u9732\u539f\u5219\u3002\u8fd9\u6837\u53ef\u4ee5\u8ba9\u51ed\u636e\u7528\u4e8e\u5c3d\u53ef\u80fd\u5c11\u7684\u5e94\u7528\u7a0b\u5e8f\u548c\u7528\u6237\u3002</p>"},{"location":"chap5/5jenkins_secrets/#4_1","title":"4. \u4f7f\u7528\u6388\u6743\u63a7\u5236\u6765\u7ba1\u7406\u673a\u5bc6\u6743\u9650","text":"<p>\u5f00\u53d1\u56e2\u961f\u5e94\u914d\u7f6e\u5b89\u5168\u68c0\u67e5\uff0c\u4ee5\u786e\u4fdd\u8bf7\u6c42\u8d44\u6e90\u8bbf\u95ee\u7684\u5e94\u7528\u7a0b\u5e8f\u5177\u6709\u6709\u6548\u5e94\u7528\u7a0b\u5e8f\u7684\u5c5e\u6027\u3002\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u6839\u636e RBAC \uff08Role-based Access Control\uff09\u7b56\u7565\u4e2d\u5206\u914d\u7684\u6743\u9650\u8bbf\u95ee\u5404\u79cd\u8d44\u6e90\u3002</p>"},{"location":"chap5/5jenkins_secrets/#5","title":"5. \u9075\u5faa\u6700\u5c0f\u6743\u9650\u539f\u5219","text":"<p>\u4ec5\u5c06\u6743\u9650\u6388\u4e88\u9700\u8981\u8bbf\u95ee\u6d41\u6c34\u7ebf\u5185\u673a\u5bc6\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u56e2\u961f\u5e94\u59cb\u7ec8\u5982\u4e00\u5730\u5ba1\u6838\u6743\u9650\uff0c\u786e\u4fdd\u5728\u6d41\u6c34\u7ebf\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u4e2d\u6700\u5c0f\u6743\u9650\u539f\u5219\u5f97\u4ee5\u5b9e\u65bd\u548c\u7ef4\u62a4</p>"},{"location":"chap5/5jenkins_secrets/#_1","title":"\u7ed3  \u8bba","text":"<p>\u7531\u4e8e\u5b89\u5168\u6027\u662f CI/CD \u6d41\u6c34\u7ebf\u7684\u9996\u8981\u8003\u8651\u56e0\u7d20\uff0c\u56e0\u6b64\u5728 Jenkins \u4e2d\u4f7f\u7528\u673a\u5bc6\u65f6\u9075\u5faa\u6700\u4f73\u5b9e\u8df5\u975e\u5e38\u91cd\u8981\u3002Jenkins \u6d41\u6c34\u7ebf\u4f9d\u8d56\u673a\u5bc6\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u3001\u534f\u4f5c\u548c\u57fa\u7840\u8bbe\u65bd\u7ba1\u7406\u3002CI/CD \u673a\u5bc6\u7ba1\u7406\u5bf9\u5927\u591a\u6570\u56e2\u961f\u6765\u8bf4\u90fd\u662f\u4e00\u4e2a\u6311\u6218\uff0c\u56e0\u4e3a\u5728\u7ec6\u8282\u4e0a\u5b9e\u65bd\u8bbf\u95ee\u63a7\u5236\u975e\u5e38\u56f0\u96be\u548c\u590d\u6742\u3002</p> <p>\u800c\u901a\u8fc7\u673a\u5bc6\u7ba1\u7406\u5de5\u5177\uff0cJenkins \u7528\u6237\u53ef\u4ee5\u83b7\u5f97\u66f4\u52a0\u96c6\u4e2d\u4e14\u5b89\u5168\u7684\u8d44\u6e90\u6765\u7ba1\u7406\u8fd0\u884c CI/CD \u6d41\u6c34\u7ebf\u6240\u9700\u7684\u5305\u542b\u654f\u611f\u4fe1\u606f\u7684\u51ed\u636e\uff0c\u52a0\u901f DevOps \u5de5\u4f5c\u6d41\u7a0b\u3002\u540c\u65f6\uff0c\u5b89\u5168\u56e2\u961f\u4e5f\u80fd\u591f\u5168\u9762\u4e86\u89e3\u673a\u5bc6\u7684\u4f4d\u7f6e\u548c\u4f7f\u7528\u65b9\u5f0f\u3002\u501f\u52a9\u81ea\u52a8\u5316\u6d41\u7a0b\u548c\u96c6\u4e2d\u8bbf\u95ee\u7b56\u7565\uff0c\u673a\u5bc6\u7ba1\u7406\u5e73\u53f0\u8fd8\u53ef\u4ee5\u5e2e\u52a9\u5b89\u5168\u56e2\u961f\u5e94\u5bf9\u5b89\u5168\u76f8\u5173\u7684\u6cd5\u5f8b\u548c\u5408\u89c4\u95ee\u9898\u3002</p>"},{"location":"chap6/1chap6_ldap/","title":"\u7b2c\u4e00\u8282 Ldap \u7528\u6237\u8ba4\u8bc1\u96c6\u6210","text":""},{"location":"chap6/1chap6_ldap/#1ldap-ldap","title":"1\u3001\u5b89\u88c5Ldap\u670d\u52a1 &amp; \u5b89\u88c5Ldap\u63a7\u5236\u53f0","text":""},{"location":"chap6/1chap6_ldap/#docker","title":"\u901a\u8fc7<code>docker</code> \u5b89\u88c5","text":"<ul> <li>docker openldap</li> <li>docker phpldapadmin</li> </ul>"},{"location":"chap6/1chap6_ldap/#quick-start","title":"Quick start","text":"<p><code>start.sh</code></p> <pre><code>#!/bin/bash -e\ndocker run -p 389:389 -p 636:636 --name ldap-service --hostname ldap-service --detach osixia/openldap:1.4.0\ndocker run --name phpldapadmin-service --hostname phpldapadmin-service -p 6443:443 --link ldap-service:ldap-host --env PHPLDAPADMIN_LDAP_HOSTS=ldap-host --detach osixia/phpldapadmin:0.9.0\n\nPHPLDAP_IP=$(docker inspect -f \"{{ .NetworkSettings.IPAddress }}\" phpldapadmin-service)\n\necho \"Go to: https://$PHPLDAP_IP\"\necho \"Login DN: cn=admin,dc=example,dc=org\"\n</code></pre> <p><code>source start.sh</code></p> <pre><code>Go to: https://172.17.0.5\nLogin DN: cn=admin,dc=example,dc=org\nPassword: admin\n</code></pre> <ul> <li>https://192.168.33.11:6443/</li> </ul> <pre><code>$ curl --insecure -I https://172.17.0.5\nHTTP/1.1 200 OK\nDate: Mon, 13 Jul 2020 17:09:45 GMT\nServer: Apache\nExpires: Thu, 19 Nov 1981 08:52:00 GMT\nPragma: no-cache\nCache-control: private\nSet-Cookie: 5d89dac18813e15aa2f75788275e3588=lnfqfhbuvl0lqsgfmee2mqvhho; path=/\nStrict-Transport-Security: max-age=15768000\nUpgrade: h2,h2c\nConnection: Upgrade\nX-Content-Type-Options: nosniff\nX-XSS-Protection: 1; mode=block\nX-Frame-Options: SAMEORIGIN\nVary: User-Agent\nContent-Type: text/html; charset=\"UTF-8\"\n</code></pre> <pre><code>$ curl ldap://192.168.33.11:389\nDN: \n        objectClass: top\n        objectClass: OpenLDAProotDSE\n</code></pre>"},{"location":"chap6/1chap6_ldap/#2ou","title":"2\u3001\u521b\u5efaOU\u7ec4\u7ec7\u7528\u6237\u6570\u636e","text":""},{"location":"chap6/1chap6_ldap/#2-1-ou","title":"2-1 \u521b\u5efaOU","text":"<p>\u9009\u62e9<code>Organisational unit</code> \u7ec4\u7ec7\u5355\u5143</p> <p></p> <p>\u8f93\u5165OU\u540d\u79f0(jenkins)</p> <p></p> <p>\u63d0\u4ea4\u4fe1\u606f</p> <p></p>"},{"location":"chap6/1chap6_ldap/#2-2","title":"2-2 \u521b\u5efa\u4eba\u5458","text":"<ul> <li>\u9009\u62e9<code>OU</code>-&gt;\u9009\u62e9\u65b0\u5efa\u5b50\u6761\u76ee</li> </ul> <p>\u9009\u62e9\u9ed8\u8ba4\u6a21\u677f</p> <p></p> <p>\u9009\u62e9inetorgperson</p> <p></p> <p>\u586b\u5199\u5e76\u63d0\u4ea4\u4fe1\u606f</p> <p></p> <ul> <li>user\uff1a test01</li> <li>password: 12345</li> </ul> <p></p> <p>\u7528\u6237\u521b\u5efa\u5b8c\u6210</p> <p></p>"},{"location":"chap6/1chap6_ldap/#3jenkinsldap","title":"3\u3001Jenkins\u96c6\u6210Ldap","text":""},{"location":"chap6/1chap6_ldap/#3-1","title":"3-1 \u5148\u51b3\u6761\u4ef6","text":"<ol> <li>\u5907\u4e00\u4e2a<code>adminDN</code>\u8d26\u53f7\u7528\u4e8e\u67e5\u8be2\u7528\u6237\u3002 <code>cn=admin,dc=example,dc=org</code></li> <li>\u5c06\u8bbf\u95ee<code>Jenkins</code>\u7684\u7528\u6237\u653e\u5230\u4e00\u4e2aOU\u4e2d\u3002 <code>ou=jenkins,dc=example,dc=org</code></li> <li>\u63d0\u4f9b<code>ldap</code>\u670d\u52a1\u5668\u5730\u5740\u3002 <code>ldap://192.168.33.11:389</code></li> </ol>"},{"location":"chap6/1chap6_ldap/#3-2-jenkins","title":"3-2 Jenkins\u914d\u7f6e","text":"<ul> <li>\u5b89\u88c5ldap\u63d2\u4ef6</li> <li>\u5168\u5c40\u5b89\u5168\u914d\u7f6e</li> </ul> <p><code>http://192.168.33.11:8080/configureSecurity/</code></p> <p></p> <p>\u9009\u62e9\u8d26\u53f7\u6d4b\u8bd5\uff0c\u51fa\u73b0\u4e00\u4e0b\u4fe1\u606f\u96c6\u6210\u5b8c\u6bd5</p> <ul> <li>user\uff1a test01</li> <li>password: 12345</li> </ul> <p></p> <p>\u91cd\u65b0\u767b\u5f55</p> <p></p> <p><code>role-strategy/assign-roles</code></p> <p>Assign \u65b0\u7684 Roles \u4f8b\u5982 admin</p> <p></p>"},{"location":"chap6/2chap6_gitlab/","title":"\u7b2c\u4e8c\u8282 Jenkins\u96c6\u6210<code>Gitlab SSO</code>\u5355\u70b9\u767b\u5f55","text":""},{"location":"chap6/2chap6_gitlab/#1gitlab","title":"1\u3001Gitlab\u5b89\u88c5","text":""},{"location":"chap6/2chap6_gitlab/#gitlab","title":"\u5b89\u88c5 Gitlab","text":"<ol> <li>\u5728 Kubernetes \u4e0a\u5b89\u88c5 Gitlab \uff08New)</li> </ol>"},{"location":"chap6/2chap6_gitlab/#gitlab-service-from-clusterip-to-nodeport","title":"\u6539\u53d8<code>gitlab service</code> from <code>ClusterIP</code> to <code>nodePort</code>","text":"<pre><code>...\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: gitlab\n  namespace: kube-ops\n  labels:\n    name: gitlab\nspec:\n  ports:\n    - name: http\n      port: 80\n      targetPort: http\n      nodePort: 30088\n    - name: ssh\n      port: 22\n      targetPort: ssh\n      nodePort: 30022\n  type: NodePort\n  selector:\n    name: gitlab\n</code></pre> <p>curl from vm machine</p> <pre><code>$ curl http://192.168.33.1:30088\n&lt;html&gt;&lt;body&gt;You are being &lt;a href=\"http://192.168.33.1:30088/users/sign_in\"&gt;redirected&lt;/a&gt;.&lt;/body&gt;&lt;/html&gt;\n</code></pre> <p>\u767b\u5f55</p> <ul> <li>root</li> <li>admin321</li> </ul>"},{"location":"chap6/2chap6_gitlab/#2gitlab","title":"2\u3001Gitlab\u914d\u7f6e","text":"<ul> <li>\u5b89\u88c5<code>Jenkins Gitlab Authentication</code> \u63d2\u4ef6</li> <li>\u5e94\u7528\u7ba1\u7406-&gt;\u521b\u5efa\u5e94\u7528-&gt;\u914d\u7f6e\u91cd\u5b9a\u5411url </li> <li>Application</li> </ul> <ul> <li>Callback URL: http://192.168.33.11:8080/securityRealm/finishLogin</li> <li>Application ID: 33895718cb9554a8525d06b357ad54dfaa7f5de1ec6867bad98a6fa77e7fd506</li> <li>secret: cb06c366988e88a0c0328d5a9c0f8add3b803032b5c93943b8e2cfa61963cbc2</li> <li>http://192.168.33.11:8080/securityRealm/finishLogin</li> </ul>"},{"location":"chap6/2chap6_gitlab/#3jenkins","title":"3\u3001Jenkins\u914d\u7f6e","text":""},{"location":"chap6/2chap6_gitlab/#3-1-configure-global-security","title":"3-1 Configure Global Security","text":""},{"location":"chap6/2chap6_gitlab/#3-2-configuration","title":"3-2 configuration","text":"<p>Jenkins Location</p> <p></p>"},{"location":"chap6/2chap6_gitlab/#3-3","title":"3-3 \u91cd\u65b0\u767b\u5f55","text":"<p>\u6700\u540e\u5b9e\u73b0\u7684\u6548\u679c\u662f\u7528\u6237\u5728gitlab\u767b\u5f55\u4e4b\u540e\uff0c\u8f93\u5165jenkins\u57df\u540d\u4f1a\u76f4\u63a5\u8fdb\u5165jenkins\u3002</p> <p></p> <p> 2chap6_gitlab.md</p>"},{"location":"chap6/3chap6_github/","title":"\u7b2c\u4e09\u8282 Jenkins\u96c6\u6210<code>Github SSO</code>\u5355\u70b9\u767b\u5f55","text":""},{"location":"chap6/3chap6_github/#1github","title":"1\u3001Github\u914d\u7f6e","text":"<ul> <li>\u5b89\u88c5\u63d2\u4ef6<code>GitHub Authentication plugin</code></li> <li><code>Settings -&gt; devloper settings -&gt; OAuth Apps -&gt; Register a new OAuth application</code></li> </ul> <ul> <li><code>http://192.168.33.11:8080/securityRealm/finishLogin</code></li> <li><code>http://192.168.33.11:8080/</code></li> </ul>"},{"location":"chap6/3chap6_github/#2jenkins","title":"2\u3001Jenkins\u914d\u7f6e","text":""},{"location":"chap6/3chap6_github/#2-1-configure-global-security","title":"2-1 Configure Global Security","text":""},{"location":"chap6/3chap6_github/#2-2","title":"2-2 \u91cd\u65b0\u767b\u5f55","text":"<p>\u6700\u540e\u5b9e\u73b0\u7684\u6548\u679c\u662f\u7528\u6237\u5728github\u767b\u5f55\u4e4b\u540e\uff0c\u8f93\u5165jenkins\u57df\u540d\u4f1a\u76f4\u63a5\u8fdb\u5165jenkins\u3002</p> <p></p> <p></p> <p></p>"},{"location":"chap7/1chap7_gitlab_connect/","title":"\u7b2c\u4e00\u8282 Gitlab \u2013 Jenkins Integration","text":""},{"location":"chap7/1chap7_gitlab_connect/#1gitlab-jenkins-integration","title":"1\u3001<code>Gitlab \u2013 Jenkins</code> Integration \u9700\u6c42","text":"<ul> <li>Jenkins GitLab Plugin</li> <li>Jenkins Git Plugin</li> <li>Jenkins GitLab Hook plugin</li> </ul> <p>First, we must create a user that Jenkins will use to interact via the GitLab API. You should set this user as global admin or add as a member to related Group/Project. In order to report build status, developer permission required.</p> <p>First open GitLab and go to Profile Settings</p>"},{"location":"chap7/1chap7_gitlab_connect/#2gitlab","title":"2\u3001Gitlab\u914d\u7f6e","text":"<p><code>profile -&gt; Settings -&gt; Access Token -&gt;  Jenkins API Token.</code></p> <p></p> <p></p> <p></p>"},{"location":"chap7/1chap7_gitlab_connect/#3jenkins","title":"3\u3001Jenkins\u914d\u7f6e","text":""},{"location":"chap7/1chap7_gitlab_connect/#3-1-configure-jenkins-token","title":"3-1 Configure  Jenkins Token","text":""},{"location":"chap7/1chap7_gitlab_connect/#3-2-gitlab-connection","title":"3-2 Gitlab Connection","text":"<p>Manage Jenkins -&gt; Configure System</p> <ul> <li>Connection name   </li> <li>Gitlab host URL   </li> <li>Credentials   </li> </ul> <p></p> <p>Finally click \u201cTest\u201d and see the \u201cSuccess\u201d message.</p>"},{"location":"chap7/2chap7_gitlab_pipeline/","title":"\u7b2c\u4e8c\u8282 Gitlab-Jenkins \u7248\u672c\u63a7\u5236","text":""},{"location":"chap7/2chap7_gitlab_pipeline/#1","title":"1\u3001\u9879\u76ee\u51c6\u5907\u4e0e\u6d41\u6c34\u7ebf\u8c03\u8bd5","text":""},{"location":"chap7/2chap7_gitlab_pipeline/#1-1","title":"1-1 \u51c6\u5907\u4ee3\u7801","text":"<ol> <li>https://github.com/zeyangli/simple-java-maven-app</li> <li>\u521b\u5efa\u672c\u5730Gitlab\u9879\u76ee <code>demo-maven-service</code></li> <li>Push \u4ee3\u7801\u5230 Gitlab\u9879\u76ee <code>demo-maven-service</code></li> </ol> <ul> <li>SSH: <code>ssh://git@192.168.33.1:30022/root/demo-maven-service.git</code></li> <li>HTTP: <code>http://192.168.33.1:30088/root/demo-maven-service.git</code></li> </ul>"},{"location":"chap7/2chap7_gitlab_pipeline/#gitlab-auto-devops","title":"\u5173\u95ed\u539f\u6709\u7684<code>Gitlab Auto DevOps</code>","text":""},{"location":"chap7/2chap7_gitlab_pipeline/#1-2-pipeline","title":"1-2 \u51c6\u5907<code>pipeline</code>\u4ee3\u7801","text":"<p><code>1ci.jenkinsfile</code></p> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n                } \n            }\n        }   \n    }\n }\n</code></pre> <ul> <li> <p><code>@Library('jenkinslib@master') _</code> :  <code>sharedlib</code> \u6765\u81ea Github: <code>JenkinslibTest/src/org/devops/buildtools.groovy</code></p> </li> <li> <p><code>Push</code> \u5230 local <code>gitlab-jenkinsfiles</code> \u4ee3\u7801\u5e93</p> <ul> <li><code>ssh://git@192.168.33.1:30022/root/gitlab-jenkinsfiles.git</code></li> <li><code>http://192.168.33.1:30088/root/gitlab-jenkinsfiles.git</code></li> </ul> </li> </ul> <p></p>"},{"location":"chap7/2chap7_gitlab_pipeline/#1-3-pipeline-job","title":"1-3 \u521b\u5efa<code>pipeline job</code>","text":""},{"location":"chap7/2chap7_gitlab_pipeline/#1-3-1-gitlab-secret-gitlab-admin-user","title":"1-3-1 \u52a0\u5165<code>gitlab secret</code>: <code>gitlab-admin-user</code>","text":"<p><code>demo-maven-service-PUSH</code></p> <ul> <li><code>http://192.168.33.1:30088/root/gitlab-jenkinsfiles.git</code></li> <li><code>Credentials</code>:  <code>gitlab-admin-user</code></li> <li><code>*/master</code></li> <li><code>chap7/1ci.jenkinsfile</code></li> </ul>"},{"location":"chap7/2chap7_gitlab_pipeline/#1-3-2-console-output","title":"1-3-2 Console output","text":"<pre><code>Obtained chap7/1ci.jenkinsfile from git http://192.168.33.1:30088/root/gitlab-jenkinsfiles.git\nRunning in Durability level: MAX_SURVIVABILITY\nLoading library jenkinslib@master\nExamining Chao-Xi/JenkinslibTest\nAttempting to resolve master as a branch\nResolved master as branch master at revision 956a0fa8daa1a53b06ca142bb48555425b977f67\nusing credential GitHub\n &gt; git rev-parse --is-inside-work-tree # timeout=10\nFetching changes from the remote Git repository\n &gt; git config remote.origin.url https://github.com/Chao-Xi/JenkinslibTest.git # timeout=10\nFetching without tags\nFetching upstream changes from https://github.com/Chao-Xi/JenkinslibTest.git\n &gt; git --version # timeout=10\nusing GIT_ASKPASS to set credentials Github credential\n &gt; git fetch --no-tags --progress -- https://github.com/Chao-Xi/JenkinslibTest.git +refs/heads/master:refs/remotes/origin/master # timeout=10\nChecking out Revision 956a0fa8daa1a53b06ca142bb48555425b977f67 (master)\n &gt; git config core.sparsecheckout # timeout=10\n &gt; git checkout -f 956a0fa8daa1a53b06ca142bb48555425b977f67 # timeout=10\nCommit message: \"Update deploy.groovy\"\n &gt; git rev-list --no-walk 956a0fa8daa1a53b06ca142bb48555425b977f67 # timeout=10\n[Pipeline] Start of Pipeline\n[Pipeline] node\nRunning on hostmachine in /home/vagrant/workspace/workspace/demo-maven-service-PUSH\n...\n</code></pre>"},{"location":"chap7/2chap7_gitlab_pipeline/#2-gitlab-generic-webhook-trigger","title":"2\u3001\u914d\u7f6e GitLab \u63d0\u4ea4\u89e6\u53d1\u6d41\u6c34\u7ebf (<code>Generic Webhook Trigger</code>)","text":""},{"location":"chap7/2chap7_gitlab_pipeline/#2-1-jenkins-pipelinewebhook-trigger","title":"2-1 <code>Jenkins pipeline</code>\u6dfb\u52a0\u89e6\u53d1<code>Webhook Trigger</code>","text":"<pre><code>triggers { \n        GenericTrigger(\n            genericRequestVariables: [\n                [key: 'runOpts', regexpFilter: '']\n            ],\n            token: 'demo-maven-service-PUSH',\n            silentResponse: false,\n            printContributedVariables: true,\n            printPostContent: true,\n        )\n    }\n</code></pre> <p>\u5b8c\u6574\u4ee3\u7801</p> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n\n    triggers { \n        GenericTrigger(\n            genericRequestVariables: [\n                [key: 'runOpts', regexpFilter: '']\n            ],\n            token: 'demo-maven-service-PUSH',\n            silentResponse: false,\n            printContributedVariables: true,\n            printPostContent: true,\n        )\n    }\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n                } \n            }\n        }   \n    }\n }\n</code></pre> <p></p> <p></p>"},{"location":"chap7/2chap7_gitlab_pipeline/#2-2-gitlab-webhook-trigger","title":"2-2  <code>Gitlab</code> \u6dfb\u52a0\u89e6\u53d1<code>Webhook Trigger</code>\u914d\u7f6e","text":"<p>Enable outbound requests</p> <p>Admin area -&gt; Outbound requests -&gt; Expand</p> <p></p> <ul> <li> <p><code>demo-maven-services</code>: <code>settings -&gt; integration</code>: <code>webhook</code></p> </li> <li> <p>URL: </p> </li> </ul> <pre><code>http://192.168.33.11:8080/generic-webhook-trigger/invoke?token=demo-maven-service-PUSH&amp;runOpts=Gitlabpush\n</code></pre> <p></p> <p>Test push events</p> <p></p> <p></p>"},{"location":"chap7/2chap7_gitlab_pipeline/#2-3-console-output","title":"2-3 <code>Console Output</code>","text":"<pre><code>Generic Cause\nGenericWebhookEnvironmentContributor\n Received: {\n    \"object_kind\": \"push\",\n    \"event_name\": \"push\",\n    \"before\": \"9078a6cd451c051b541c151a6c4624a2a0e3d3ba\",\n    \"after\": \"cedb7e38d4352031c4412cf91a467d0da6bb0bc5\",\n    \"ref\": \"refs/heads/master\",\n    \"checkout_sha\": \"cedb7e38d4352031c4412cf91a467d0da6bb0bc5\",\n    \"message\": null,\n    \"user_id\": 1,\n    \"user_name\": \"Administrator\",\n    \"user_username\": \"root\",\n    \"user_email\": \"\",\n    \"user_avatar\": \"https://www.gravatar.com/avatar/e820bb4aba5ad74c5a6ff1aca16641f6?s=80\\u0026d=identicon\",\n    \"project_id\": 7,\n    \"project\": {\n        \"id\": 7,\n        \"name\": \"demo-maven-service\",\n        \"description\": \"\",\n        \"web_url\": \"http://localhost:30088/root/demo-maven-service\",\n        \"avatar_url\": null,\n        \"git_ssh_url\": \"ssh://git@localhost:30088:30022/root/demo-maven-service.git\",\n        \"git_http_url\": \"http://localhost:30088/root/demo-maven-service.git\",\n        \"namespace\": \"Administrator\",\n        \"visibility_level\": 0,\n        \"path_with_namespace\": \"root/demo-maven-service\",\n        \"default_branch\": \"master\",\n        \"ci_config_path\": null,\n        \"homepage\": \"http://localhost:30088/root/demo-maven-service\",\n        \"url\": \"ssh://git@localhost:30088:30022/root/demo-maven-service.git\",\n        \"ssh_url\": \"ssh://git@localhost:30088:30022/root/demo-maven-service.git\",\n        \"http_url\": \"http://localhost:30088/root/demo-maven-service.git\"\n    },\n    \"commits\": [\n        {\n            \"id\": \"cedb7e38d4352031c4412cf91a467d0da6bb0bc5\",\n            \"message\": \"bug fix\\n\",\n            \"title\": \"bug fix\",\n            \"timestamp\": \"2020-07-17T18:16:44+08:00\",\n            \"url\": \"http://localhost:30088/root/demo-maven-service/-/commit/cedb7e38d4352031c4412cf91a467d0da6bb0bc5\",\n            \"author\": {\n                \"name\": \"...\",\n                \"email\": \"jacob.xi@sap,com\"\n            },\n            \"added\": [],\n            \"modified\": [\n                \"ci.jenkinsfile\"\n            ],\n            \"removed\": []\n        },\n        {\n            \"id\": \"ee4c2ad6b94fea12e3d260500864f6f59a43a8d8\",\n            \"message\": \"add  ci.jenkinsfile\\n\",\n            \"title\": \"add  ci.jenkinsfile\",\n            \"timestamp\": \"2020-07-17T18:11:40+08:00\",\n            \"url\": \"http://localhost:30088/root/demo-maven-service/-/commit/ee4c2ad6b94fea12e3d260500864f6f59a43a8d8\",\n            \"author\": {\n                \"name\": \"...\",\n                \"email\": \"jacob.xi@sap,com\"\n            },\n            \"added\": [\n                \"ci.jenkinsfile\"\n            ],\n            \"modified\": [],\n            \"removed\": []\n        },\n        {\n            \"id\": \"9078a6cd451c051b541c151a6c4624a2a0e3d3ba\",\n            \"message\": \"init project\\n\",\n            \"title\": \"init project\",\n            \"timestamp\": \"2020-07-17T15:56:21+08:00\",\n            \"url\": \"http://localhost:30088/root/demo-maven-service/-/commit/9078a6cd451c051b541c151a6c4624a2a0e3d3ba\",\n            \"author\": {\n                \"name\": \"...\",\n                \"email\": \"jacob.xi@sap,com\"\n            },\n            \"added\": [\n                \"Jenkinsfile\",\n                \"README.md\",\n                \"jenkins/Jenkinsfile\",\n                \"jenkins/scripts/deliver.sh\",\n                \"pom.xml\",\n                \"src/main/java/com/mycompany/app/App.java\",\n                \"src/test/java/com/mycompany/app/AppTest.java\"\n            ],\n            \"modified\": [],\n            \"removed\": []\n        }\n    ],\n    \"total_commits_count\": 3,\n    \"push_options\": {},\n    \"repository\": {\n        \"name\": \"demo-maven-service\",\n        \"url\": \"ssh://git@localhost:30088:30022/root/demo-maven-service.git\",\n        \"description\": \"\",\n        \"homepage\": \"http://localhost:30088/root/demo-maven-service\",\n        \"git_http_url\": \"http://localhost:30088/root/demo-maven-service.git\",\n        \"git_ssh_url\": \"ssh://git@localhost:30088:30022/root/demo-maven-service.git\",\n        \"visibility_level\": 0\n    }\n}\n\n\nContributing variables:\n\n    runOpts = Gitlabpush\n    runOpts_0 = Gitlabpush\n</code></pre> <p><code>\"ref\": \"refs/heads/master\"</code> is branch name</p>"},{"location":"chap7/2chap7_gitlab_pipeline/#3","title":"3\u3001\u5206\u652f\u81ea\u52a8\u5339\u914d","text":""},{"location":"chap7/2chap7_gitlab_pipeline/#3-1","title":"3-1 \u5206\u652f\u81ea\u52a8\u66ff\u6362\u6210\u63d0\u4ea4\u7684\u5206\u652f","text":"<pre><code>...\ngenericVariables: [ \n                [key: 'branch', value: '$.ref'] \n            ], \n...\n</code></pre>"},{"location":"chap7/2chap7_gitlab_pipeline/#3-2-hook","title":"3-2 \u589e\u52a0\u83b7\u53d6<code>hook</code>\u53c2\u6570\u5206\u652f\u540d\u79f0","text":"<p>\u901a\u8fc7<code>push</code>\u4ee3\u7801\u5230<code>simple-java-maven-app</code>\u89e6\u53d1<code>jenkins pipeline</code>, \u6ce8\u610f\u5206\u652f\u662f\u901a\u8fc7<code>git lab webhook</code>\u53d1\u9001\u8fc7\u6765</p> <p>Console output</p> <pre><code>...\nContributing variables:\n\n    branch = refs/heads/master\n    runOpts = Gitlabpush\n    runOpts_0 = Gitlabpush\n...\n</code></pre> <p>\u83b7\u53d6\u6b63\u786e\u7684<code>branchName</code>:</p> <pre><code>String branchName = \"${env.branchName}\"\n...\nstage('Checkout') {\n            steps {\n                script {   \n                    if (\"${runOpts}\" == \"Gitlabpush\"){\n                        println (\"$branch\")\n                        def reg = \"refs/heads/\"\n                        branchName = \"$branch\" - reg\n                    }\n\n                    println(\"${branchName}\")\n                ....\n</code></pre> <p>\u6700\u7ec8\u7684<code>ci.jenkinsfile</code>\u6587\u4ef6\u5982\u4e0b</p> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\nString branchName = \"${env.branchName}\"\n\n#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\nString branchName = \"${env.branchName}\"\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        // choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n\n\n    triggers { \n        GenericTrigger(\n            genericVariables: [ \n                [key: 'branch', value: '$.ref'] \n            ], \n            genericRequestVariables: [\n                [key: 'runOpts', regexpFilter: '']\n            ],\n            token: 'demo-maven-service-PUSH',\n            silentResponse: false,\n            printContributedVariables: true,\n            printPostContent: true,\n        )\n    }\n    stages{\n        stage('Checkout') {\n            steps {\n                script {   \n\n                    if (\"${runOpts}\" == \"Gitlabpush\"){\n                        println (\"$branch\")\n                        def reg = \"refs/heads/\"\n                        branchName = \"$branch\" - reg\n                        // branchName = \"${branch}\" \n                    }\n\n                    println(\"${branchName}\")\n\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n                } \n            }\n        }   \n    }\n }\n</code></pre> <ul> <li>Build job \u4e0d\u9700\u8981<code>Manul Build Now</code> </li> <li>\u4efb\u4e00\u4e00\u4e2a<code>Branch</code> \u7684 <code>push</code> \u90fd\u4f1a\u5bfc\u81f4<code>JenkinsPipeline</code>\u88ab\u89e6\u53d1</li> </ul> <p>\u4f8b\u5982push\u5230master</p> <pre><code>...\n\nContributing variables:\n\n    branch = refs/heads/master\n    runOpts = Gitlabpush\n    runOpts_0 = Gitlabpush\n...\n[Pipeline] { (Checkout)\n[Pipeline] script\n[Pipeline] {\n[Pipeline] echo\nrefs/heads/master\n[Pipeline] echo\nmaster\n...\n &gt; git rev-parse origin/master^{commit} # timeout=10\n</code></pre> <p>\u4f8b\u5982push\u53e6\u5916\u7684\u5206\u652f</p> <p></p> <pre><code>...\nContributing variables:\n\n    branch = refs/heads/root-master-patch-82590\n    runOpts = Gitlabpush\n    runOpts_0 = Gitlabpush\n...\nrefs/heads/root-master-patch-82590\n[Pipeline] echo\nroot-master-patch-82590\n[Pipeline] checkout\n...\n</code></pre>"},{"location":"chap7/2chap7_gitlab_pipeline/#4-commit","title":"4\u3001\u53d8\u66f4 Commit \u72b6\u6001","text":""},{"location":"chap7/2chap7_gitlab_pipeline/#4-1","title":"4-1 \u589e\u52a0\u6784\u5efa\u63cf\u8ff0\u4fe1\u606f","text":"<pre><code>triggers { \n        GenericTrigger(\n            genericVariables: [ \n                [key: 'branch', value: '$.ref'], \n                [key: 'userName', value: '$.user_username'],   \n                ...\n</code></pre> <ul> <li><code>[key: 'userName', value: '$.user_username'],</code> : \u6dfb\u52a0\u6784\u5efa\u4eba\u4fe1\u606f</li> </ul> <ul> <li>\u53d8\u91cf\u540d\u79f0\uff1a<code>currentBuild.description</code></li> </ul> <pre><code>stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    if (\"${runOpts}\" == \"Gitlabpush\"){\n                    println (\"$branch\")\n                    def reg = \"refs/heads/\"\n                    branchName = \"$branch\" - reg\n                    currentBuild.description = \"Trigger by ${userName} ${branch}\"\n                ...\n</code></pre> <ul> <li><code>currentBuild.description = \"Trigger by ${userName} ${branch}\"</code>  \u663e\u793a\u6784\u5efa\u4fe1\u606f</li> </ul> <p>\u4fee\u6539\u4e0d\u540c\u5206\u652f\u4e0b\u7684\u6587\u4ef6\uff0c\u6765\u89e6\u53d1<code>pipelinejob</code></p> <p></p>"},{"location":"chap7/2chap7_gitlab_pipeline/#4-2-commit-gitlabcommit","title":"4-2 \u53d8\u66f4 Commit \u72b6\u6001\u8fd4\u56de\u5230<code>gitlab</code>\u7684<code>commit</code>\u4fe1\u606f","text":"<ul> <li><code>gitlab pipeline</code> \u63a5\u53e3API \u4fe1\u606f: https://docs.gitlab.com/ee/api/commits.html#post-the-build-status-to-a-commit<ul> <li>\u72b6\u6001\uff1a<code>[pending, running, success, failed, canceled]</code></li> <li>API: <code>projects/${projectId}/statuses/${commitSha}?state=</code></li> </ul> </li> </ul>"},{"location":"chap7/2chap7_gitlab_pipeline/#4-2-1-gitlab-sharedlibrary-function","title":"4-2-1 \u589e\u52a0<code>gitlab sharedlibrary function</code>","text":"<p><code>src/org/devops/gitlab.groovy</code></p> <pre><code>package org.devops\n\n//\u5c01\u88c5HTTP\u8bf7\u6c42\ndef HttpReq(reqType,reqUrl,reqBody){\n    def gitServer = \"http://192.168.33.1:30088/api/v4\"\n    withCredentials([string(credentialsId: 'gitlab-token', variable: 'gitlabToken')]) {\n      result = httpRequest customHeaders: [[maskValue: true, name: 'PRIVATE-TOKEN', value: \"${gitlabToken}\"]], \n                httpMode: reqType, \n                contentType: \"APPLICATION_JSON\",\n                consoleLogResponseBody: true,\n                ignoreSslErrors: true, \n                requestBody: reqBody,\n                url: \"${gitServer}/${reqUrl}\"\n                //quiet: true\n    }\n    return result\n}\n\n//\u66f4\u6539\u63d0\u4ea4\u72b6\u6001\ndef ChangeCommitStatus(projectId,commitSha,status){\n    commitApi = \"projects/${projectId}/statuses/${commitSha}?state=${status}\"\n    response = HttpReq('POST',commitApi,'')\n    println(response)\n    return response\n}\n</code></pre> <ul> <li><code>gitServer</code>: \u4e3a<code>girlab server</code>\u53ef\u4ee5\u63d0\u4f9b\u7684<code>api</code>\u8bbf\u95ee\u5730\u5740<code>http://gitlab-url/api/v4</code></li> <li><code>credentialsId: 'gitlab-token'</code>: \u6ce8\u610f\u8fd9\u91cc\u6709\u4e00\u4e2a<code>bug</code>, <code>gitlab-token</code> \u662f\u6ce8\u518c\u5728<code>Jenkins Manage Credentials</code>\u91cc\u9762\u7684<code>gitlab Personal Access Tokens</code>, \u4ea7\u751f\u5730\u5740\uff1a</li> </ul> <p><code>gitlab -&gt; profile -&gt; personal_access_tokens: JenkinsAPIToken: KePsbG32TCHUGd63v8RR</code></p> <p></p> <p>\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u4e2a<code>token</code>\u6dfb\u52a0\u5230<code>jenkins</code>\u4e2d\uff0c \u5f53\u6211\u4eec\u5b89\u88c5\u5230<code>gitlab plungin</code> \u6211\u4eec\u53ef\u4ee5\u5728\u76f4\u63a5\u6dfb\u52a0<code>Gitlab API token</code></p> <p></p> <p>\u4f46\u662f\u6211\u4eec\u5728\u540e\u8c03\u7528\u8fd9\u4e2a<code>token</code>\u7684\u65f6\u5019\u4f1a\u62a5\u9519</p> <pre><code>Error when executing failure post condition:\norg.jenkinsci.plugins.credentialsbinding.impl.CredentialNotFoundException: Credentials 'gitlab-token' is of type 'GitLab Personal Access Token' where 'org.jenkinsci.plugins.plaincredentials.StringCredentials' was expected\n    at \n...\n</code></pre> <p>\u5728\u591a\u65b9\u67e5\u8be2\u8fc7\u540e\uff0c\u672c\u4eba\u53d1\u73b0\u8fd9\u5176\u5b9e\u662f<code>gitlab plugin</code> \u5728\u5904\u7406<code>Credential</code>\u65f6\u5019\u7684\u4e00\u4e2a<code>bug</code>\uff0c\u81f3\u4eca\u65e0\u4eba\u4fee\u590d\uff0c Feature: Support Jenkins Credentials for \"Secret Token\" #494\uff0c \u6240\u4ee5\u6839\u636e<code>ticket</code>\u4e2d\u7684\u63cf\u8ff0\uff0c <code>workaround</code> \u7684\u65b9\u6cd5\u662f,\u5c06\u8fd9\u4e2a<code>token</code>\u6dfb\u52a0\u4e3a\u7b80\u5355\u7684<code>jenkins secret tesxt</code>, that will works</p> <p></p> <p></p>"},{"location":"chap7/2chap7_gitlab_pipeline/#4-2-2-jenkinsfilessharedlibrary","title":"4-2-2 <code>Jenkinsfiles</code>\u8c03\u7528<code>sharedlibrary</code>","text":"<pre><code>def gitlab = new org.devops.gitlab()\n</code></pre>"},{"location":"chap7/2chap7_gitlab_pipeline/#4-2-3-projectid-commitsha","title":"4-2-3 \u63d0\u53d6\u6784\u5efa\u4fe1\u606f<code>projectId</code> \u548c <code>commitSha</code>","text":"<pre><code>...\ntriggers { \n        GenericTrigger(\n            genericVariables: [ \n                [key: 'branch', value: '$.ref'], \n                [key: 'userName', value: '$.user_username'],\n                [key: 'projectId', value: '$.project.id'],\n                [key: 'commitSha', value: '$.checkout_sha']\n\n            ], \n...\n</code></pre>"},{"location":"chap7/2chap7_gitlab_pipeline/#4-2-4-gitlab","title":"4-2-4 \u8fd4\u56de\u6784\u5efa\u4fe1\u606f\u5230<code>gitlab</code>","text":"<pre><code>stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    if (\"${runOpts}\" == \"Gitlabpush\"){\n                    println (\"$branch\")\n                    def reg = \"refs/heads/\"\n                    branchName = \"$branch\" - reg\n                    currentBuild.description = \"Trigger by ${userName} ${branch}\"\n                    gitlab.ChangeCommitStatus(projectId,commitSha,\"running\")\n                }\n...\n\npost { \n        always { \n            script{\n                println(\"always\")\n            }\n        }\n\n        success { \n            script{\n                println(\"succcess\")\n                gitlab.ChangeCommitStatus(projectId,commitSha,\"success\")\n            }\n        }\n\n        failure { \n            script{\n                println(\"failure\")\n                gitlab.ChangeCommitStatus(projectId,commitSha,\"failed\")\n            }\n        }\n\n        aborted { \n            script{\n                println(\"aborted\")\n                gitlab.ChangeCommitStatus(projectId,commitSha,\"canceled\")\n            }\n        }\n    }\n</code></pre> <ul> <li><code>gitlab.ChangeCommitStatus(projectId,commitSha,\"running\")</code></li> </ul> <p>\u6700\u7ec8\u7684<code>jenkinsfile</code></p> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\ndef gitlab = new org.devops.gitlab()\n\nString branchName = \"${env.branchName}\"\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        // choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n\n\n    triggers { \n        GenericTrigger(\n            genericVariables: [ \n                [key: 'branch', value: '$.ref'], \n                [key: 'userName', value: '$.user_username'],\n                [key: 'projectId', value: '$.project.id'],\n                [key: 'commitSha', value: '$.checkout_sha']\n\n            ], \n            genericRequestVariables: [\n                [key: 'runOpts', regexpFilter: '']\n            ],\n            token: 'demo-maven-service-PUSH',\n            silentResponse: false,\n            printContributedVariables: true,\n            printPostContent: true,\n        )\n    }\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    if (\"${runOpts}\" == \"Gitlabpush\"){\n                    println (\"$branch\")\n                    def reg = \"refs/heads/\"\n                    branchName = \"$branch\" - reg\n                    currentBuild.description = \"Trigger by ${userName} ${branch}\"\n                    gitlab.ChangeCommitStatus(projectId,commitSha,\"running\")\n                }\n\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n                } \n            }\n        }   \n    }\n\n    post { \n        always { \n            script{\n                println(\"always\")\n            }\n        }\n\n        success { \n            script{\n                println(\"succcess\")\n                gitlab.ChangeCommitStatus(projectId,commitSha,\"success\")\n            }\n        }\n\n        failure { \n            script{\n                println(\"failure\")\n                gitlab.ChangeCommitStatus(projectId,commitSha,\"failed\")\n            }\n        }\n\n        aborted { \n            script{\n                println(\"aborted\")\n                gitlab.ChangeCommitStatus(projectId,commitSha,\"canceled\")\n            }\n        }\n    }\n }\n</code></pre>"},{"location":"chap7/2chap7_gitlab_pipeline/#4-2-5","title":"4-2-5 \u89e6\u53d1\u6548\u679c","text":"<p>Console Output</p> <pre><code>...\n\nContributing variables:\n\n    branch = refs/heads/master\n    commitSha = 595e88dfb0ae35ae7cf4c4892aae8adba96b4986\n    projectId = 7\n    runOpts = Gitlabpush\n    runOpts_0 = Gitlabpush\n    userName = root\n...\nalways\n[Pipeline] }\n[Pipeline] // script\n[Pipeline] script\n[Pipeline] {\n[Pipeline] echo\nsucccess\n[Pipeline] withCredentials\nMasking supported pattern matches of $gitlabToken\n[Pipeline] {\n[Pipeline] httpRequest\nHttpMethod: POST\nURL: http://192.168.33.1:30088/api/v4/projects/7/statuses/595e88dfb0ae35ae7cf4c4892aae8adba96b4986?state=success\nContent-Type: application/json\nPRIVATE-TOKEN: *****\nSending request to url: http://192.168.33.1:30088/api/v4/projects/7/statuses/595e88dfb0ae35ae7cf4c4892aae8adba96b4986?state=success\nResponse Code: HTTP/1.1 201 Created\nResponse: \n{\"id\":18,\"sha\":\"595e88dfb0ae35ae7cf4c4892aae8adba96b4986\",\"ref\":\"master\",\"status\":\"success\",\"name\":\"default\",\"target_url\":null,\"description\":null,\"created_at\":\"2020-07-24T09:57:22.315Z\",\"started_at\":\"2020-07-24T09:57:22.337Z\",\"finished_at\":\"2020-07-24T09:57:41.393Z\",\"allow_failure\":false,\"coverage\":null,\"author\":{\"id\":1,\"name\":\"Administrator\",\"username\":\"root\",\"state\":\"active\",\"avatar_url\":\"https://www.gravatar.com/avatar/e820bb4aba5ad74c5a6ff1aca16641f6?s=80\\u0026d=identicon\",\"web_url\":\"http://localhost:30088/root\"}}\nSuccess code from [100\u2025399]\n[Pipeline] }\n[Pipeline] // withCredentials\n[Pipeline] echo\nStatus: 201\n</code></pre> <p>gliab commit message: running-&gt;success</p> <p></p> <p></p>"},{"location":"chap7/2chap7_gitlab_pipeline/#5-push","title":"5\u3001\u8fc7\u6ee4\u7279\u6b8a push \u8bf7\u6c42","text":"<p>\u521b\u5efa\u65b0\u7684\u5206\u652f\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u7279\u6b8a\u7684<code>Push</code>\u8bf7\u6c42\uff0c\u4f1a\u89e6\u53d1\u4e00\u6b21<code>Pipeline Job</code>, \u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u67d0\u4e9b\u9650\u5236\u65b9\u5f0f\u6765\u7981\u6b62\u8fd9\u4e2ajob \u88ab\u89e6\u53d1</p> <p>\u4f8b\u5982\u65b0\u5efa\u7684<code>branch</code>\u6240\u4ea7\u751f\u7684<code>push</code>\u4fe1\u606f\u5982\u4e0b\uff0c\u4f1a\u6709\u4e00\u4e2a40\u4e2a0\u7684\u4fe1\u606f</p> <pre><code>{\n   \"object_kind\":\"push\",\n   \"event_name\":\"push\",\n   \"before\":\"0000000000000000000000000000000000000000\",  #40\u4e2a0\n   \"after\":\"595e88dfb0ae35ae7cf4c4892aae8adba96b4986\",\n   \"ref\":\"refs/heads/test-push01\",\n    ....\nContributing variables\":\n\n    branch = refs/heads/test-push01\n    commitSha = 595e88dfb0ae35ae7cf4c4892aae8adba96b4986\n    projectId = 7\n    runOpts = Gitlabpush\n    runOpts_0 = Gitlabpush\n    userName = root\n</code></pre> <ul> <li>https://github.com/jenkinsci/generic-webhook-trigger-plugin/tree/master/src/test/resources/org/jenkinsci/plugins/gwt/bdd</li> <li>https://github.com/jenkinsci/generic-webhook-trigger-plugin/blob/master/src/test/resources/org/jenkinsci/plugins/gwt/bdd/gitlab/gitlab-push-ignore-create-remove-branch.feature</li> </ul> <p></p> <ul> <li>Given filter is configured with text: <code>$object_kind $before $after</code></li> <li>Given filter is configured with expression: <code>^push\\s(?!0{40}).{40}\\s(?!0{40}).{40}$</code></li> </ul> <pre><code>triggers { \n        GenericTrigger(\n            genericVariables: [ \n                [key: 'branch', value: '$.ref'], \n                [key: 'userName', value: '$.user_username'],\n                [key: 'projectId', value: '$.project.id'],\n                [key: 'commitSha', value: '$.checkout_sha'],\n                [key: 'before', value: '$.before'],\n                [key: 'after', value: '$.after'],\n                [key: 'object_kind', value: '$.object_kind']\n            ], \n            genericRequestVariables: [\n                [key: 'runOpts', regexpFilter: '']\n            ],\n            token: 'demo-maven-service-PUSH',\n            silentResponse: false,\n            printContributedVariables: true,\n            printPostContent: true,\n\n            regexpFilterText: '$object_kind $before $after',\n            regexpFilterExpression: '^push\\\\s(?!0{40}).{40}\\\\s(?!0{40}).{40}$'\n        )\n    }\n</code></pre> <ul> <li><code>'^push\\\\s(?!0{40}).{40}\\\\s(?!0{40}).{40}$'</code></li> </ul> <p></p> <p>\u4ece\u6b64\u65b0\u5efa\u7684<code>branch</code>\u5c06\u4e0d\u4f1a\u89e6\u53d1\u65b0\u7684<code>pipeline</code></p> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\ndef gitlab = new org.devops.gitlab()\n\nString branchName = \"${env.branchName}\"\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        // choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n\n\n    triggers { \n        GenericTrigger(\n            genericVariables: [ \n                [key: 'branch', value: '$.ref'], \n                [key: 'userName', value: '$.user_username'],\n                [key: 'projectId', value: '$.project.id'],\n                [key: 'commitSha', value: '$.checkout_sha'],\n                [key: 'before', value: '$.before'],\n                [key: 'after', value: '$.after'],\n                [key: 'object_kind', value: '$.object_kind']\n            ], \n            genericRequestVariables: [\n                [key: 'runOpts', regexpFilter: '']\n            ],\n            token: 'demo-maven-service-PUSH',\n            silentResponse: false,\n            printContributedVariables: true,\n            printPostContent: true,\n\n            regexpFilterText: '$object_kind $before $after',\n            regexpFilterExpression: '^push\\\\s(?!0{40}).{40}\\\\s(?!0{40}).{40}$'\n        )\n    }\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    if (\"${runOpts}\" == \"Gitlabpush\"){\n                    println (\"$branch\")\n                    def reg = \"refs/heads/\"\n                    branchName = \"$branch\" - reg\n                    currentBuild.description = \"Trigger by ${userName} ${branch}\"\n                    gitlab.ChangeCommitStatus(projectId,commitSha,\"running\")\n                }\n\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n                } \n            }\n        }   \n    }\n\n    post { \n        always { \n            script{\n                println(\"always\")\n            }\n        }\n\n        success { \n            script{\n                println(\"succcess\")\n                gitlab.ChangeCommitStatus(projectId,commitSha,\"success\")\n            }\n        }\n\n        failure { \n            script{\n                println(\"failure\")\n                gitlab.ChangeCommitStatus(projectId,commitSha,\"failed\")\n            }\n        }\n\n        aborted { \n            script{\n                println(\"aborted\")\n                gitlab.ChangeCommitStatus(projectId,commitSha,\"canceled\")\n            }\n        }\n    }\n }\n</code></pre>"},{"location":"chap7/3chap7_gitlab_pipeline_extra/","title":"\u7b2c\u4e09\u8282 Gitlab-Jenkins \u7248\u672c\u63a7\u5236\uff08\u8865\u5145\uff09","text":""},{"location":"chap7/3chap7_gitlab_pipeline_extra/#1","title":"1\u3001\u6784\u5efa\u90ae\u4ef6\u901a\u77e5","text":"<ul> <li>Email Extension: <code>email-ext</code> \u5b89\u88c5</li> </ul>"},{"location":"chap7/3chap7_gitlab_pipeline_extra/#1-1-sharedlibrary","title":"1-1 \u6dfb\u52a0\u90ae\u4ef6\u53d1\u9001\u6a21\u677f\u5230<code>sharedlibrary</code>","text":"<p><code>src/org/devops/toemail.groovy</code></p> <pre><code>package org.devops\n\n//\u5b9a\u4e49\u90ae\u4ef6\u5185\u5bb9\ndef Email(status,emailUser){\n    emailext body: \"\"\"\n            &lt;!DOCTYPE html&gt; \n            &lt;html&gt; \n            &lt;head&gt; \n            &lt;meta charset=\"UTF-8\"&gt; \n            &lt;/head&gt; \n            &lt;body leftmargin=\"8\" marginwidth=\"0\" topmargin=\"8\" marginheight=\"4\" offset=\"0\"&gt; \n                &lt;img src=\"http://192.168.33.1:30088/root/static/-/blob/master/images/headshot.png\"&gt;\n                &lt;table width=\"95%\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 11pt; font-family: Tahoma, Arial, Helvetica, sans-serif\"&gt;   \n                    &lt;tr&gt; \n                        &lt;td&gt;&lt;br /&gt; \n                            &lt;b&gt;&lt;font color=\"#0B610B\"&gt;Build Information&lt;/font&gt;&lt;/b&gt; \n                        &lt;/td&gt; \n                    &lt;/tr&gt; \n                    &lt;tr&gt; \n                        &lt;td&gt; \n                            &lt;ul&gt; \n                                &lt;li&gt;Job Name:${JOB_NAME}&lt;/li&gt;         \n                                &lt;li&gt;Build Id:${BUILD_ID}&lt;/li&gt; \n                                &lt;li&gt;Build Status: ${status} &lt;/li&gt;                         \n                                &lt;li&gt;Build URL:&lt;a href=\"${BUILD_URL}\"&gt;${BUILD_URL}&lt;/a&gt;&lt;/li&gt;    \n                                &lt;li&gt;Build Log:&lt;a href=\"${BUILD_URL}console\"&gt;${BUILD_URL}console&lt;/a&gt;&lt;/li&gt; \n                            &lt;/ul&gt; \n                        &lt;/td&gt; \n                    &lt;/tr&gt; \n                    &lt;tr&gt;  \n                &lt;/table&gt; \n            &lt;/body&gt; \n            &lt;/html&gt;  \"\"\",\n            subject: \"Jenkins-${JOB_NAME}Build Information \",\n            to: emailUser\n\n}\n</code></pre>"},{"location":"chap7/3chap7_gitlab_pipeline_extra/#1-2-gitlab","title":"1-2 \u6dfb\u52a0\u7528\u6237\u90ae\u4ef6\u5730\u5740\u5230<code>Gitlab</code>","text":"<ul> <li><code>Admin area -&gt; users -&gt; (username) -&gt; Add User Email</code></li> <li>Update User profile settings</li> </ul>"},{"location":"chap7/3chap7_gitlab_pipeline_extra/#1-3-trigger","title":"1-3 \u6dfb\u52a0\u65b0\u7684<code>Trigger</code>\u53d8\u91cf","text":"<pre><code>triggers { \n        GenericTrigger(\n            genericVariables: [ \n                [key: 'branch', value: '$.ref'], \n                [key: 'userName', value: '$.user_username'],\n                [key: 'projectId', value: '$.project.id'],\n                [key: 'commitSha', value: '$.checkout_sha'],\n                [key: 'before', value: '$.before'],\n                [key: 'after', value: '$.after'],\n                [key: 'object_kind', value: '$.object_kind'],\n                [key: 'userEmail', value: '$.user_email']\n            ], \n            ...\n</code></pre> <p>Console Output</p> <pre><code>{\n   \"object_kind\":\"push\",\n   \"event_name\":\"push\",\n   \"before\":\"c3c7ced66b6c50f472d1c681156e7c16fb41b12c\",\n   \"after\":\"2bb50eebe62e9cfc401905f4dd47981fc2f8b78e\",\n   \"ref\":\"refs/heads/master\",\n   \"checkout_sha\":\"2bb50eebe62e9cfc401905f4dd47981fc2f8b78e\",\n   \"message\":null,\n   \"user_id\":1,\n   \"user_name\":\"Administrator\",\n   \"user_username\":\"root\",\n   \"user_email\":\"xichao2015@outlook.com\",\n   \"user_avatar\":\"https://www.gravatar.com/avatar/d86ea488c14556309b0c2773c1e1dd6a?s=80\\u0026d=identicon\",\n   ...\n   \"commits\":[\n      {\n         \"id\":\"2bb50eebe62e9cfc401905f4dd47981fc2f8b78e\",\n         \"message\":\"Update README.md\",\n         \"title\":\"Update README.md\",\n         \"timestamp\":\"2020-07-25T19:35:34+08:00\",\n         \"url\":\"http://localhost:30088/root/demo-maven-service/-/commit/2bb50eebe62e9cfc401905f4dd47981fc2f8b78e\",\n         \"author\":{\n            \"name\":\"Administrator\",\n            \"email\":\"xichao2015@outlook.com\"\n         },\n         ...\n}\n\nContributing variables:\n\n    after = 2bb50eebe62e9cfc401905f4dd47981fc2f8b78e\n    before = c3c7ced66b6c50f472d1c681156e7c16fb41b12c\n    branch = refs/heads/master\n    commitSha = 2bb50eebe62e9cfc401905f4dd47981fc2f8b78e\n    object_kind = push\n    projectId = 7\n    runOpts = Gitlabpush\n    runOpts_0 = Gitlabpush\n    userEmail = xichao2015@outlook.com\n    userName = root\n</code></pre>"},{"location":"chap7/3chap7_gitlab_pipeline_extra/#1-4-pipeline","title":"1-4 \u5728<code>pipeline</code>\u4e2d\u8c03\u7528\u90ae\u4ef6\u53d1\u9001\u65b9\u6cd5","text":"<pre><code>#!groovy\n@Library('jenkinslib@master') _\n\n...\ndef toemail = new org.devops.toemail()\n...\npost { \n        always { \n            script{\n                println(\"always\")\n            }\n        }\n\n        success { \n            script{\n                println(\"succcess\")\n                gitlab.ChangeCommitStatus(projectId,commitSha,\"success\")\n                toemail.Email(\"Build Success!...\",userEmail)\n            }\n        }\n\n        failure { \n            script{\n                println(\"failure\")\n                gitlab.ChangeCommitStatus(projectId,commitSha,\"failed\")\n                toemail.Email(\"Build failed!...\",userEmail)\n            }\n        }\n\n        aborted { \n            script{\n                println(\"aborted\")\n                gitlab.ChangeCommitStatus(projectId,commitSha,\"canceled\")\n                toemail.Email(\"Build Canceled!...\",userEmail)\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"chap7/3chap7_gitlab_pipeline_extra/#1-4-jenkinssmtp","title":"1-4 \u5728<code>Jenkins</code>\u4e2d\u6dfb\u52a0<code>SMTP</code>\u4fe1\u606f","text":""},{"location":"chap7/3chap7_gitlab_pipeline_extra/#1-5-job","title":"1-5 \u89e6\u53d1<code>job</code>","text":"<p>\u6700\u7ec8pipeline script</p> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\ndef gitlab = new org.devops.gitlab()\ndef toemail = new org.devops.toemail()\n\nString branchName = \"${env.branchName}\"\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        // choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n\n\n    triggers { \n        GenericTrigger(\n            genericVariables: [ \n                [key: 'branch', value: '$.ref'], \n                [key: 'userName', value: '$.user_username'],\n                [key: 'projectId', value: '$.project.id'],\n                [key: 'commitSha', value: '$.checkout_sha'],\n                [key: 'before', value: '$.before'],\n                [key: 'after', value: '$.after'],\n                [key: 'object_kind', value: '$.object_kind'],\n                [key: 'userEmail', value: '$.user_email']\n            ], \n            genericRequestVariables: [\n                [key: 'runOpts', regexpFilter: '']\n            ],\n            token: 'demo-maven-service-PUSH',\n            silentResponse: false,\n            printContributedVariables: true,\n            printPostContent: true,\n\n            regexpFilterText: '$object_kind $before $after',\n            regexpFilterExpression: '^push\\\\s(?!0{40}).{40}\\\\s(?!0{40}).{40}$'\n        )\n    }\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    if (\"${runOpts}\" == \"Gitlabpush\"){\n                    println (\"$branch\")\n                    def reg = \"refs/heads/\"\n                    branchName = \"$branch\" - reg\n                    currentBuild.description = \"Trigger by ${userName} ${branch}\"\n                    gitlab.ChangeCommitStatus(projectId,commitSha,\"running\")\n                }\n\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n                } \n            }\n        }   \n    }\n\n    post { \n        always { \n            script{\n                println(\"always\")\n            }\n        }\n\n        success { \n            script{\n                println(\"succcess\")\n                gitlab.ChangeCommitStatus(projectId,commitSha,\"success\")\n                toemail.Email(\"Build Success!...\",userEmail)\n            }\n        }\n\n        failure { \n            script{\n                println(\"failure\")\n                gitlab.ChangeCommitStatus(projectId,commitSha,\"failed\")\n                toemail.Email(\"Build failed!...\",userEmail)\n            }\n        }\n\n        aborted { \n            script{\n                println(\"aborted\")\n                gitlab.ChangeCommitStatus(projectId,commitSha,\"canceled\")\n                toemail.Email(\"Build Canceled!...\",userEmail)\n            }\n        }\n    }\n }\n</code></pre> <p>Console Output</p> <pre><code>Contributing variables:\n\n    after = 2bb50eebe62e9cfc401905f4dd47981fc2f8b78e\n    before = c3c7ced66b6c50f472d1c681156e7c16fb41b12c\n    branch = refs/heads/master\n    commitSha = 2bb50eebe62e9cfc401905f4dd47981fc2f8b78e\n    object_kind = push\n    projectId = 7\n    runOpts = Gitlabpush\n    runOpts_0 = Gitlabpush\n    userEmail = xichao2015@outlook.com\n    userName = root\n\n...\nSending email to: xichao2015@outlook.com\n</code></pre> <p></p>"},{"location":"chap7/3chap7_gitlab_pipeline_extra/#2-gitlab","title":"2\u3001\u914d\u7f6e GitLab \u5408\u5e76\u6d41\u6c34\u7ebf","text":"<ul> <li>Email Extension: <code>gitlab-merge-request-jenkins</code> \u5b89\u88c5</li> </ul> <p>\u5f53\u6d41\u6c34\u7ebf\u6210\u529f\u540e\u5408\u5e76\u5206\u652f</p> <p><code>settings -&gt; general -&gt; Merge requests</code></p> <p>Merge Checks -&gt; Pipeline must success</p> <p></p> <p></p>"},{"location":"chap7/4gitops_cicd/","title":"\u200b\u7b2c\u56db\u8282 GitOps\u6a21\u5f0f\u4e0b\u5fae\u670d\u52a1CI/CD\u5b9e\u8df5","text":"<p>\u5355\u5e94\u7528\u4e0e\u73af\u5883\u6d41\u7a0b\u8bbe\u8ba1\uff1a</p> <p></p> <p>\u591a\u5e94\u7528\u4e0e\u73af\u5883\u6d41\u7a0b\u8bbe\u8ba1\uff1a</p> <p></p>"},{"location":"chap7/4gitops_cicd/#ci","title":"CI\u6301\u7eed\u96c6\u6210","text":"<p>\u9996\u5148\u51c6\u5907\u4e00\u4e2a\u4ee3\u7801\u5e93\uff1ahttps://github.com/DevOpsCICDCourse/microservicescicd/blob/main/microservice-demo-service-master.zip</p> <p>\u6211\u4eec\u6765\u68b3\u7406\u4e00\u4e0bCI\u6d41\u6c34\u7ebf\u7684\u6b65\u9aa4\uff1a</p> <p></p> <ul> <li>\u7531\u4e8e\u6b64\u6b21\u5b9e\u73b0\u7684\u4ee3\u7801\u4ed3\u5e93\u7c7b\u578b\u4e3a\u5355\u4e00\u5b58\u50a8\u5e93\uff0c\u5373\u4e00\u4e2a\u5b58\u50a8\u5e93\u5b58\u653e\u591a\u4e2a\u670d\u52a1\u6a21\u5757\u4ee3\u7801\uff0c\u6bcf\u4e2a\u5b50\u76ee\u5f55\u4e3a\u4e00\u4e2a\u670d\u52a1\u6a21\u5757\u3002</li> <li>\u9996\u5148\uff0c\u6211\u4eec\u7684\u6301\u7eed\u96c6\u6210\u6d41\u6c34\u7ebf\u9700\u8981\u80fd\u591f\u6b63\u786e\u83b7\u53d6\uff0c\u5f53\u524d\u7684commit\u662f\u54ea\u4e2a\u670d\u52a1\u7684\u4ee3\u7801\u3002</li> <li>\u786e\u5b9a\u597d\u670d\u52a1\uff0c\u7136\u540e\u4e0b\u8f7d\u8be5\u670d\u52a1\u7684\u4ee3\u7801\uff0c\u8fdb\u884c\u7f16\u8bd1\u6253\u5305\u3001\u5355\u5143\u6d4b\u8bd5\u3001\u4ee3\u7801\u626b\u63cf\u548c\u6784\u5efa\u955c\u50cf\u7b49\u6b65\u9aa4\u3002</li> </ul> <p>\u5982\u4f55\u83b7\u53d6commit\u7684\u670d\u52a1\u4fe1\u606f\uff1f\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528GitLab WebHook\u529f\u80fd\u548cJenkins \u7684job \u6784\u5efa\u89e6\u53d1\u5668\u5bf9\u63a5\u6765\u5b9e\u73b0\u3002</p> <p></p> <p>\u5de5\u4f5c\u6d41\u7a0b\u662f\uff1a</p> <p>\u5f53\u6211\u5728Gitlab\u63d0\u4ea4\u4e86\u4ee3\u7801\uff0c\u4f1a\u901a\u8fc7GitLab webhook \u89e6\u53d1Jenkins Scheduler \u4f5c\u4e1a\uff0c \u4f1a\u5c06\u6b64\u6b21\u63d0\u4ea4\u4ee3\u7801\u6240\u4ea7\u751f\u7684hook data\u6570\u636e\u4fe1\u606f\u4ee5POST\u7684\u65b9\u5f0f\u4f20\u7ed9Jenkins Job\u3002</p> <p>\u6b64\u65f6Jenkins job\u53ef\u4ee5\u7f16\u5199\u4f7f\u7528Generic Hook\u63d2\u4ef6\u83b7\u53d6\u6b64\u6b21POST\u8bf7\u6c42\u4f20\u8f93\u8fc7\u6765\u7684\u8bf7\u6c42\u4f53Body\u4fe1\u606f\u3002</p> <p>\u662f\u4e00\u6bb5JSON\u6570\u636e\uff0c \u8be5job\u8fd0\u884c\u540e\u7f16\u5199Pipeline \u89e3\u6790JSON\u4e2d\u7684\u6570\u636e\u62ff\u5230\u6240\u53d8\u66f4\u7684\u670d\u52a1\u6a21\u5757\u4fe1\u606f\u3002\u6700\u540e\u89e6\u53d1\u5bf9\u5e94\u670d\u52a1\u7684CI\u4f5c\u4e1a\u8fdb\u884c\u6784\u5efa\u3002</p>"},{"location":"chap7/4gitops_cicd/#ci-scheduler","title":"CI-Scheduler \u4f5c\u4e1a","text":"<p>\u6b64\u4f5c\u4e1a\u53ea\u9700\u8981\u5f00\u542fwebhook\uff0c \u914d\u7f6e\u89e6\u53d1token\uff08\u552f\u4e00\u6027\uff09\u3002\u751f\u6210hookurl\uff1ahttp://jenkins.idevops.site/generic-webhook-trigger/invoke?token=microservicecicd-scheduler-CI</p> <p></p> <p>Jenkinsfile</p> <pre><code>pipeline {\n agent any \n\n stages{\n\n  stage(\"GetData\"){\n   steps{\n    script {\n     echo \"${webHookData}\"\n\n     data = readJSON  text: \"${webHookData}\"\n\n     println(data)\n\n     env.branchName = data.ref - \"refs/heads/\"\n     env.commitId = data.checkout_sha\n     env.projectId = data.project_id\n     commits = data[\"commits\"]\n\n     println(\"${env.branchName}\")\n     println(\"${env.commitID}\")\n     println(\"${env.projectId}\")\n\n     //env.moduleName = \"service01\"\n     changeServices = []\n                    for(commit in commits) {\n                        println(commit.id)\n\n                        //added\n                        for (add in commit.added) {\n                            s = add.split(\"/\") as List\n                            if (s.size() &gt; 1){\n                                if (changeServices.indexOf(s[0]) == -1){\n                                    changeServices.add(s[0])\n                                }\n                            }\n                        }\n\n                        //modified\n                        for (m in commit.modified) {\n                            s = m.split(\"/\") as List\n                            // println s\n                            // println s.size()\n                            // println s[0]\n                            if (s.size() &gt; 1){\n                                // println changeServices.indexOf(s[0])\n                                if (changeServices.indexOf(s[0]) == -1){\n                                    changeServices.add(s[0])\n                                }\n                            }\n                        }\n\n                        //removed\n                        for (r in commit.removed) {\n                            s = r.split(\"/\") as List\n                            println s\n                            if (s.size() &gt; 1){\n                                if (changeServices.indexOf(s[0]) == -1){\n                                    changeServices.add(s[0])\n                                }\n                            }\n                        }\n                    }\n\n                    println(changeServices)\n                    //currentBuild.description = \" Trigger by  ${eventType} ${changeServices} \n    }\n   }\n  }\n\n  stage('DefineService') {\n            steps {\n                script{\n                    println(changeServices)\n                    //\u670d\u52a1\u6784\u5efa\u987a\u5e8f\u63a7\u5236\n                    services = ['service02', 'service01']\n                    for (service in services){\n                        if (changeServices.indexOf(service) != -1){\n                            jobName = 'microservicecicd-'+service+'-service-CI'\n                            build job: jobName, wait: false,  parameters: [string(name: 'branchName', value: \"${env.branchName}\" ),\n                                                                           string(name: 'commitId',   value: \"${env.commitId}\" ), \n                                                                           string(name: 'projectId',  value: \"${env.projectId}\" )]\n                        }\n                    }\n                }\n            }\n        }\n }\n}\n</code></pre> <p>GitLab \u914d\u7f6eWebHook</p> <p>\u5f00\u542fwebhook\uff0c\u914d\u7f6ehookurl\uff1ahttp://jenkins.idevops.site/generic-webhook-trigger/invoke?token=microservicecicd-scheduler-CI</p> <p></p> <p>CI\u6d41\u6c34\u7ebf-CI\u4f5c\u4e1a</p> <p>\u6bcf\u4e2a\u5fae\u670d\u52a1\u521b\u5efa\u4e00\u4e2aCI\u4f5c\u4e1a\uff0c\u5177\u6709\u4e09\u4e2a\u5b57\u7b26\u4e32\u53c2\u6570\uff1a\u5206\u652f\u540d\u79f0\u3001commitID\u3001\u9879\u76eeID\u3002</p> <p></p> <p>Jenkinsfile</p> <pre><code>String branchName = \"${env.branchName}\"\nString moduleName = \"${JOB_NAME}\".split(\"/\")[1].split(\"-\")[1]\nString srcUrl = \"http://gitlab.idevops.site/microservicecicd/microservicecicd-demo-service.git\"\nString commitId = \"${env.commitId}\"\nString projectId = \"${env.projectId}\"\n\npipeline {\n    agent { node { label \"build\" } }\n\n    stages {\n        stage('GetCode') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', \n                            branches: [[name: \"${branchName}\"]], \n                            doGenerateSubmoduleConfigurations: false,\n                            extensions: [[$class: 'SparseCheckoutPaths', \n                                        sparseCheckoutPaths: [[path: \"${moduleName}\"],[path: 'Dockerfile']]]], \n                            submoduleCfg: [], \n                            userRemoteConfigs: [[credentialsId: 'gitlab-admin-user',\n                                                url: \"${srcUrl}\"]]])\n                }\n\n            }\n        }\n\n        stage(\"Build&amp;Test\"){\n            steps{\n                script{\n                    echo \"Build...........\"\n\n                    sh \"\"\"\n                    cd ${moduleName} \n                    mvn clean package\n\n                    \"\"\"\n                }\n            }\n            post {\n                always {\n                    junit \"${moduleName}/target/surefire-reports/*.xml\"\n                }\n            }\n        }\n\n        stage(\"SonarScan\"){\n            steps{\n                script{\n\n                    def sonarDate = sh returnStdout: true, script: 'date  +%Y%m%d%H%M%S'\n                    sonarDate = sonarDate - \"\\n\"\n\n                    withCredentials([string(credentialsId: 'sonar-admin-user', variable: 'sonartoken'),\n                                    string(credentialsId: 'gitlab-user-token', variable: 'gitlabtoken')]) {\n                        // some block\n                        sh \"\"\"\n                        cd ${moduleName} \n                        sonar-scanner \\\n                        -Dsonar.projectKey=${JOB_NAME} \\\n                        -Dsonar.projectName=${JOB_NAME} \\\n                        -Dsonar.projectVersion=${sonarDate} \\\n                        -Dsonar.ws.timeout=30 \\\n                        -Dsonar.projectDescription=\"xxxxxxx\" \\\n                        -Dsonar.links.homepage=http://www.baidu.com \\\n                        -Dsonar.sources=src \\\n                        -Dsonar.sourceEncoding=UTF-8 \\\n                        -Dsonar.java.binaries=target/classes \\\n                        -Dsonar.java.test.binaries=target/test-classes \\\n                        -Dsonar.java.surefire.report=target/surefire-reports \\\n                        -Dsonar.host.url=\"http://sonar.idevops.site\" \\\n                        -Dsonar.login=${sonartoken} \\\n                        -Dsonar.gitlab.commit_sha=${commitId} \\\n                        -Dsonar.gitlab.ref_name=${branchName} \\\n                        -Dsonar.gitlab.project_id=${projectId} \\\n                        -Dsonar.dynamicAnalysis=reuseReports \\\n                        -Dsonar.gitlab.failure_notification_mode=commit-status \\\n                        -Dsonar.gitlab.url=http://gitlab.idevops.site \\\n                        -Dsonar.gitlab.user_token=${gitlabtoken} \\\n                        -Dsonar.gitlab.api_version=v4\n\n                        \"\"\"\n\n                    }\n\n                }\n            }\n        }\n\n        stage(\"BuildImage\"){\n            steps{\n                script{\n\n                     withCredentials([usernamePassword(credentialsId: 'aliyun-registry-admin', passwordVariable: 'password', usernameVariable: 'username')]) {\n\n                         env.nowDate = sh  returnStdout: true, script: 'date  +%Y%m%d%H%M%S'\n                         env.nowDate = env.nowDate - \"\\n\"\n\n                         env.releaseVersion = \"${env.branchName}\"\n                         env.imageTag = \"${releaseVersion}-${nowDate}-${commitId}\"\n                         env.dockerImage = \"registry.cn-beijing.aliyuncs.com/microservicecicd/microservicecicd-${moduleName}-service:${env.imageTag}\"\n                         env.jarName = \"${moduleName}-${branchName}-${commitId}\"\n                         sh \"\"\"\n                             docker login -u ${username} -p ${password}  registry.cn-beijing.aliyuncs.com\n                             cd ${moduleName} &amp;&amp; docker build -t ${dockerImage} -f ../Dockerfile --build-arg SERVICE_NAME=${jarName} .\n                             sleep 1\n                             docker push ${dockerImage}\n                             sleep 1\n                             docker rmi ${dockerImage}\n                          \"\"\"\n                    }\n\n\n                }\n            }\n        }\n\n\n    }\n}\n</code></pre>"},{"location":"chap7/4gitops_cicd/#gitops-ci","title":"GitOps-CI\u6269\u5c55\u90e8\u5206","text":"<p>\u5728\u539f\u59cbCI\u4f5c\u4e1a\u7684\u6b65\u9aa4\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e86\u4e00\u4e2a\u66f4\u65b0\u73af\u5883\u7684\u6b65\u9aa4\u3002GitOps\u5b9e\u8df5\u4f1a\u5c06\u5f53\u524d\u7684\u57fa\u7840\u73af\u5883\u90e8\u7f72\u6587\u4ef6\u5b58\u653e\u5230\u4e00\u4e2aGit\u4ed3\u5e93\u4e2d\u3002</p> <p>\u6211\u4eec\u7684CI\u4f5c\u4e1a\u5728\u5b8c\u6210\u955c\u50cf\u4e0a\u4f20\u540e\uff0c\u540c\u65f6\u66f4\u65b0\u73af\u5883\u90e8\u7f72\u6587\u4ef6\u4e2d\u7684\u955c\u50cf\u6807\u7b7e\u4fe1\u606f\u3002\uff08\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5148\u83b7\u53d6\u8be5\u73af\u5883\u6587\u4ef6\u5e76\u66f4\u65b0\u4e0a\u4f20\uff09</p> <p></p> <pre><code>stage(\"PushFile\"){\n          // when {\n          //   expression { \"${env.branchName}\".contains(\"RELEASE-\") }\n          // }\n          steps{\n            script{\n              if (\"${env.branchName}\".contains(\"RELEASE-\")){\n                println(\"branchName = branchName\")\n                env.branchName = \"master\"\n\n              } else {\n                env.branchName = \"feature\"\n              }\n\n                for (i = 0; i &lt; 3; i++) {\n                    //\u4e0b\u8f7d\u7248\u672c\u5e93\u6587\u4ef6 \n                    response = GetRepoFile(40,\"${moduleName}%2fvalues.yaml\", \"${env.branchName}\")\n                    //println(response)\n\n                    //\u66ff\u6362\u6587\u4ef6\u4e2d\u5185\u5bb9\n                    yamlData = readYaml text: \"\"\"${response}\"\"\"\n\n                    println(yamlData.image.version)\n                    println(yamlData.image.commit)\n                    yamlData.image.version = \"${releaseVersion}-${env.nowDate}\"\n                    yamlData.image.commit  = \"${commitId}\"\n\n                    println(yamlData.toString())\n\n                    sh \"rm -fr test.yaml\"\n                    writeYaml charset: 'UTF-8', data: yamlData, file: 'test.yaml'\n                    newYaml = sh returnStdout: true, script: 'cat test.yaml'\n\n                    println(newYaml)\n                    //\u66f4\u65b0gitlab\u6587\u4ef6\u5185\u5bb9\n                    base64Content = newYaml.bytes.encodeBase64().toString()\n\n                    // \u4f1a\u6709\u5e76\u884c\u95ee\u9898\uff0c\u540c\u65f6\u66f4\u65b0\u62a5\u9519\n                    try {\n                      UpdateRepoFile(40,\"${moduleName}%2fvalues.yaml\",base64Content, \"${env.branchName}\")\n                      break;\n                    } catch(e){\n                      sh \"sleep 2\"\n                      continue;\n                    }\n                }\n            }\n          }\n        }\n\n //\u5c01\u88c5HTTP\u8bf7\u6c42\ndef HttpReq(reqType,reqUrl,reqBody){\n    def gitServer = \"http://gitlab.idevops.site/api/v4\"\n    withCredentials([string(credentialsId: 'gitlab-token', variable: 'gitlabToken')]) {\n      result = httpRequest customHeaders: [[maskValue: true, name: 'PRIVATE-TOKEN', value: \"${gitlabToken}\"]], \n                httpMode: reqType, \n                contentType: \"APPLICATION_JSON\",\n                consoleLogResponseBody: true,\n                ignoreSslErrors: true, \n                requestBody: reqBody,\n                url: \"${gitServer}/${reqUrl}\"\n                //quiet: true\n    }\n    return result\n}\n\n\n//\u83b7\u53d6\u6587\u4ef6\u5185\u5bb9\ndef GetRepoFile(projectId,filePath,branchName){\n    apiUrl = \"projects/${projectId}/repository/files/${filePath}/raw?ref=${branchName}\"\n    response = HttpReq('GET',apiUrl,'')\n    return response.content\n}\n\n//\u66f4\u65b0\u6587\u4ef6\u5185\u5bb9\ndef UpdateRepoFile(projectId,filePath,fileContent, branchName){\n    apiUrl = \"projects/${projectId}/repository/files/${filePath}\"\n    reqBody = \"\"\"{\"branch\": \"${branchName}\",\"encoding\":\"base64\", \"content\": \"${fileContent}\", \"commit_message\": \"update a new file\"}\"\"\"\n    response = HttpReq('PUT',apiUrl,reqBody)\n    println(response)\n\n}\n</code></pre> <p></p>"},{"location":"chap7/4gitops_cicd/#gitops-cd","title":"GitOps-CD\u90e8\u5206","text":"<p>CD-Scheduler\u4f5c\u4e1a</p> <p>\u6b64\u4f5c\u4e1a\u5176\u5b9e\u4e5f\u662f\u63a5\u6536GitLab\u7684webhook\u8bf7\u6c42\uff0c \u4e0eCI-scheduler\u4f5c\u4e1a\u7c7b\u4f3c\u3002\u4e0d\u540c\u7684\u662f\u8fd9\u4e2aCD-scheduler\u4f5c\u4e1a\u662f\u7528\u6765\u63a5\u6536\u73af\u5883\u4ed3\u5e93\u7684\u4ee3\u7801\u53d8\u66f4\u3002\u5f00\u542fwebhook\uff0c \u914d\u7f6e\u89e6\u53d1token\u3002</p> <p>\u751f\u6210hookurl\uff1ahttp://jenkins.idevops.site/generic-webhook-trigger/invoke?token=microservicecicd-scheduler-CD</p> <p></p> <p>Jenkinsfile</p> <pre><code>pipeline {\n    agent any\n\n    stages {\n        stage('GetCommitService') {\n            steps {\n                script{\n                    echo 'Hello World'\n                    echo \"${WebHookData}\"\n\n                    // Git Info\n                    webhookdata = readJSON text: \"\"\"${WebHookData}\"\"\"\n                    eventType = webhookdata[\"object_kind\"]\n                    commits = webhookdata[\"commits\"]\n                    branchName = webhookdata[\"ref\"] - \"refs/heads/\"\n                    projectID = webhookdata[\"project_id\"]\n                    commitID = webhookdata[\"checkout_sha\"]\n\n\n                    changeServices = []\n                    for(commit in commits) {\n                        println(commit.id)\n\n                        //added\n                        for (add in commit.added) {\n                            s = add.split(\"/\") as List\n                            if (s.size() &gt; 1){\n                                if (changeServices.indexOf(s[0]) == -1){\n                                    changeServices.add(s[0])\n                                }\n                            }\n                        }\n\n                        //modified\n                        for (m in commit.modified) {\n                            s = m.split(\"/\") as List\n                            // println s\n                            // println s.size()\n                            // println s[0]\n                            if (s.size() &gt; 1){\n                                // println changeServices.indexOf(s[0])\n                                if (changeServices.indexOf(s[0]) == -1){\n                                    changeServices.add(s[0])\n                                }\n                            }\n                        }\n\n                        //removed\n                        for (r in commit.removed) {\n                            s = r.split(\"/\") as List\n                            println s\n                            if (s.size() &gt; 1){\n                                if (changeServices.indexOf(s[0]) == -1){\n                                    changeServices.add(s[0])\n                                }\n                            }\n                        }\n                    }\n\n                    println(changeServices)\n                    currentBuild.description = \" Trigger by  ${eventType} ${changeServices} \"\n                }\n            }\n        }\n\n        stage('DefineService') {\n            steps {\n                script{\n                    println(changeServices)\n                    //\u670d\u52a1\u6784\u5efa\u987a\u5e8f\u63a7\u5236\n                    services = ['service02', 'service01']\n                    for (service in services){\n                        if (changeServices.indexOf(service) != -1){\n                            jobName = 'microservicecicd-'+service+'-service-CD'\n                            build job: jobName, wait: false,  parameters: [string(name: 'branchName', value: \"${branchName}\" )]\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre> <p>\u73af\u5883\u5e93\u914d\u7f6ewebhook</p> <p>\u5f00\u542fwebhook\uff0c\u914d\u7f6ehookurl\uff1ahttp://jenkins.idevops.site/generic-webhook-trigger/invoke?token=microservicecicd-scheduler-CD</p> <p></p> <p>CD\u6d41\u6c34\u7ebf-CD\u4f5c\u4e1a</p> <p></p> <p>Jenkinsfile</p> <pre><code>String serviceName =\"${JOB_NAME}\".split(\"-\")[1]\nString nameSpace = \"${JOB_NAME}\".split(\"-\")[0].split(\"/\")[-1]\n\n\n//pipeline\npipeline{\n    agent { node { label \"k8s\"}}\n\n    stages{\n\n       stage(\"GetCode\"){\n            steps{\n                script{\n                    println(\"${branchName}\")\n                    println(\"${env.branchName}\".contains(\"RELEASE-\"))\n                    println \"\u83b7\u53d6\u4ee3\u7801\"\n                    checkout([$class: 'GitSCM', branches: [[name: \"${env.branchName}\"]], \n                                      doGenerateSubmoduleConfigurations: false, \n                                      extensions: [[$class: 'SparseCheckoutPaths', \n                                                    sparseCheckoutPaths: [[path: \"${serviceName}\"]]]], \n                                      submoduleCfg: [], \n                                      userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"http://gitlab.idevops.site/microservicecicd/microservicecicd-env.git\"]]])\n                }\n            }\n        }\n\n        stage(\"HelmDeploy\"){\n            steps{\n                script{\n                  sh \"\"\"\n                      kubectl create ns \"${nameSpace}-uat\"  || echo false\n\n                      helm install \"${serviceName}\" --namespace \"${nameSpace}-uat\" ./\"${serviceName}\" ||  helm upgrade \"${serviceName}\" --namespace \"${nameSpace}-uat\" ./\"${serviceName}\"\n\n                      helm list --namespace \"${nameSpace}-uat\"\n                      helm history \"${serviceName}\" --namespace \"${nameSpace}-uat\"\n\n                  \"\"\"\n                }\n            }\n        }\n    }\n}\n</code></pre> <p></p>"},{"location":"chap8/1chap8_code_quality/","title":"\u7b2c\u4e00\u8282 \u4ee3\u7801\u8d28\u91cf","text":""},{"location":"chap8/1chap8_code_quality/#1","title":"1\u3001\u9759\u6001\u4ee3\u7801\u5206\u6790","text":"<p>\u9759\u6001\u4ee3\u7801\u5206\u6790\u662f\u6307\u5728\u4e0d\u8fd0\u884c\u7a0b\u5e8f\u7684\u524d\u63d0\u4e0b\uff0c\u5bf9\u6e90\u4ee3\u7801\u8fdb\u884c\u5206\u6790\u6216\u68c0\u67e5\uff0c\u8303\u56f4\u5305\u62ec\u4ee3\u7801\u98ce\u683c\u53ef\u80fd\u51fa\u73b0\u7684\u7a7a\u6307\u9488\u3001\u4ee3\u7801\u5757\u5927\u5c0f\u3001\u91cd\u590d\u7684\u4ee3\u7801\u3002 </p> <p>\u6ca1\u6709\u901a\u8fc7\u7f16\u8bd1\uff0c\u9759\u6001\u4ee3\u7801\u5206\u6790\u5c31\u6ca1\u6709\u610f\u4e49\u3002 \u6240\u4ee5\u5728\u6574\u4e2a<code>pipeline</code>\u4e2d\uff0c\u9759\u6001\u4ee3\u7801\u5206\u6790\u901a\u5e38\u88ab\u7f16\u6392\u7f16\u8bd1\u9636\u6bb5\u4e4b\u540e\uff0c\u975e\u7f16\u8bd1\u578b\u8bed\u8a00\u5c31\u53e6\u5f53\u522b\u8bba\u4e86\u3002 </p>"},{"location":"chap8/1chap8_code_quality/#1-1","title":"1-1 \u4ee3\u7801\u89c4\u8303\u68c0\u67e5","text":"<ul> <li>\u963f\u91cc\u5df4\u5df4Java\u5f00\u53d1\u624b\u518c </li> <li>pom.xml</li> </ul>"},{"location":"chap8/1chap8_code_quality/#1-2-pmd","title":"1-2 \u4f7f\u7528PMD\u8fdb\u884c\u4ee3\u7801\u89c4\u8303\u68c0\u67e5","text":"<p>PMD(<code>https://pmd.github.io/</code>) \u662f\u4e00\u6b3e\u53ef\u6269\u5c55\u7684\u9759\u6001\u4ee3\u7801\u5206\u6790\u5668\uff0c\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u5bf9\u4ee3\u7801\u98ce\u683c\u8fdb\u884c\u68c0\u67e5\uff0c\u8fd8\u53ef\u4ee5\u68c0\u67e5\u8bbe\u8ba1\u3001 \u591a\u7ebf\u7a0b\u3001 \u6027\u80fd\u7b49\u65b9\u9762\u7684\u95ee\u9898\u3002 </p> <p>Maven\u7684<code>PMD</code>\u63d2\u4ef6 (<code>https://pmd.github.io/</code>\uff09\u4f7f\u6211\u4eec\u80fd\u5728<code>Maven</code>\u4e0a\u4f7f\u7528<code>PMD</code>. </p> <p>\u4f7f\u7528\u6b65\u9aa4\u5982\u4e0b\uff1a </p> <ul> <li>(1)\u5728<code>Maven</code>\u9879\u76ee\u7684<code>pom.xml</code>\u4e2d\u52a0\u5165<code>PMD</code>\u63d2\u4ef6\u3002 </li> </ul> <pre><code>      &lt;plugin&gt;\n        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n        &lt;artifactId&gt;maven-pmd-plugin&lt;/artifactId&gt;\n        &lt;version&gt;3.11.0&lt;/version&gt;\n        &lt;configuration&gt;\n          &lt;sourceEncoding&gt;${project.build.sourceEncoding}&lt;/sourceEncoding&gt;\n          &lt;targetJdk&gt;${maven.compiler.target}&lt;/targetJdk&gt;\n          &lt;printFailingErrors&gt;true&lt;/printFailingErrors&gt;\n          &lt;rulesets&gt;\n            &lt;ruleset&gt;rulesets/java/ali-comment.xml&lt;/ruleset&gt;\n            &lt;ruleset&gt;rulesets/java/ali-concurrent.xml&lt;/ruleset&gt;\n            &lt;ruleset&gt;rulesets/java/ali-constant.xml&lt;/ruleset&gt;\n            &lt;ruleset&gt;rulesets/java/ali-exception.xml&lt;/ruleset&gt;\n            &lt;ruleset&gt;rulesets/java/ali-flowcontrol.xml&lt;/ruleset&gt;\n            &lt;ruleset&gt;rulesets/java/ali-naming.xml&lt;/ruleset&gt;\n            &lt;ruleset&gt;rulesets/java/ali-oop.xml&lt;/ruleset&gt;\n            &lt;ruleset&gt;rulesets/java/ali-orm.xml&lt;/ruleset&gt;\n            &lt;ruleset&gt;rulesets/java/ali-other.xml&lt;/ruleset&gt;\n            &lt;ruleset&gt;rulesets/java/ali-set.xml&lt;/ruleset&gt;\n          &lt;/rulesets&gt;\n          &lt;excludes&gt;\n            &lt;exclude&gt;**/FixClassTypeResolver.java&lt;/exclude&gt;\n          &lt;/excludes&gt;\n        &lt;/configuration&gt;\n        &lt;executions&gt;\n          &lt;execution&gt;\n            &lt;phase&gt;verify&lt;/phase&gt;\n            &lt;goals&gt;\n              &lt;goal&gt;check&lt;/goal&gt;\n            &lt;/goals&gt;\n          &lt;/execution&gt;\n        &lt;/executions&gt;\n        &lt;dependencies&gt;\n          &lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba.p3c&lt;/groupId&gt;\n            &lt;artifactId&gt;p3c-pmd&lt;/artifactId&gt;\n            &lt;version&gt;2.0.1&lt;/version&gt;\n          &lt;/dependency&gt;\n        &lt;/dependencies&gt;\n      &lt;/plugin&gt;\n</code></pre> <p><code>maven-pmd-plugin</code>\u63d2\u4ef6\u5e76\u4e0d\u4f1a\u81ea\u52a8\u4f7f\u7528<code>p3c-pmd</code>\u9700\u8981\u5728\u5f15\u5165<code>dependencies</code> <code>p3c-pmd</code>\u4f9d\u8d56\u7136\u540e\u5728<code>rulesets</code>\u5c5e\u6027\u4e2d\u5f15\u5165<code>p3c</code>\u7684\u89c4\u5219 </p> <ul> <li>(2)\u5b89\u88c5<code>Jenkins PMD</code>\u63d2\u4ef6</li> </ul> <p><code>Jenkins PMD</code>\u63d2\u4ef6\u7684\u4f5c\u7528\u662f\u5c06<code>PMD</code>\u62a5\u544a\u5448\u73b0\u5728\u4efb\u52a1\u8be6\u6e05\u9875\u4e2d\u30fb </p> <ul> <li>(3\uff09\u5728<code>Jenkinsfile</code>\u52a0\u4ebapmd\u6b65\u9aa4 </li> </ul> <pre><code>pipeline { \n    agent { node { label \"hostmachine\" }}\n    stages { \n        stage('pmd') { \n            steps { \n                script{\n                mvnHome = tool \"m2\"\n                sh \"${mvnHome}/bin/mvn pmd:pmd\"\n                }\n            } \n        } \n    } \n    post { \n        always{ \n            pmd(canRunOnFailed: true, pattern: '**/target/pmd.xml') \n        } \n    } \n} \n</code></pre> <ul> <li>(3\uff09\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u52a0\u5165<code>Jenkinsfile</code>\u52a0\u4ebapmd\u6b65\u9aa4 </li> </ul> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        choice(name: 'branchName', choices: 'pmd\\nmaster\\ndev\\nstage', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n                } \n            }\n        }\n\n        stage('pmd') { \n            steps { \n                script{\n                mvnHome = tool \"m2\"\n                sh \"${mvnHome}/bin/mvn pmd:pmd\"\n                }\n            } \n        }  \n    }\n    post { \n        always{ \n            pmd(canRunOnFailed: true, pattern: '**/target/pmd.xml') \n        } \n    } \n }\n</code></pre> <p>\u6267\u884c\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5728\u4efb\u52a1\u8be6\u60c5\u9875\u770b\u5230PMD\u62a5\u544a\u7684\u94fe\u63a5 </p> <p></p> <p>\u5355\u51fb\u94fe\u63a5\u8fdb\u5165\u62a5\u544a\u9875\u9762\uff0c\u53ef\u4ee5\u770b\u5230\u66f4\u8be6\u7ec6\u7684\u4fe1\u606f\uff0c</p> <p></p>"},{"location":"chap8/1chap8_code_quality/#1-3","title":"1-3 \u5404\u9759\u6001\u4ee3\u7801\u5206\u6790\u5668\u4e4b\u95f4\u7684\u533a\u522b","text":"<p>\u76ee\u524d\u6bcf\u79cd\u8bed\u8a00\u57fa\u672c\u4e0a\u90fd\u6709\u81ea\u5df1\u7684\u9759\u6001\u4ee3\u7801\u5206\u6790\u5668\uff0c\u6bd4\u5982Java\u8bed\u8a00\uff0c\u9664<code>PMD</code>\u5916\uff0c\u8fd8\u6709<code>Checkstyle</code>\u3001 <code>FindBugs</code>\u7b49\u3002\u4f46\u662f\u6ca1\u6709\u4e00\u6b3e\u80fd\u201c\u5927\u4e00\u7edf\u201d\uff0c\u5b9e\u73b0\u5bf9\u6240\u6709\u8bed\u8a00\u3001\u6240\u6709\u573a\u666f\u7684\u652f\u6301\u3002 </p> <p>\u53e6\u5916\uff0c\u540c\u4e00\u79cd\u8bed\u8a00\u4e0b\u7684\u4e0d\u540c\u5206\u6790\u5668\uff0c\u5b83\u4eec\u5728\u529f\u80fd\u4e0a\u65e2\u6709\u533a\u522b\uff0c\u53c8\u6709\u91cd\u53e0\uff0c\u8bfb\u8005\u9700\u8981\u6839\u636e\u81ea\u5df1 \u56e2\u961f\u7684\u60c5\u51b5\u8fdb\u884c\u9009\u62e9\u3002\u4f46\u662f\u4e0d\u8bba\u9009\u62e9\u54ea\u6b3e\u5206\u6790\u5668\uff0c\u6240\u6709\u8fdb\u884c\u9759\u6001\u4ee3\u7801\u5206\u6790\u7684\u5730\u65b9\u90fd\u5fc5\u987b\u7edf\u4e00\u5206\u6790\u89c4\u5219\u3002\u6bd4\u5982\u6211\u4eec\u51b3\u5b9a\u4f7f\u7528\u963f\u91cc\u5df4\u5df4\u7684\u5f00\u53d1\u89c4\u8303\uff0c\u90a3\u4e48<code>Maven</code>\u63d2\u4ef6\u3001 <code>IDE</code>\u63d2\u4ef6\u4ee5\u53ca\u540e\u9762\u8bf4\u5230\u7684<code>SonarQube</code>\u90fd\u5fc5\u987b\u4f7f\u7528\uff1b\u5426\u5219\uff0c\u5206\u6790\u7ed3\u679c\u53ef\u80fd\u4f1a\u4e0d\u4e00\u81f4\uff0c\u8fdb\u800c\u5f71\u54cd\u5206\u6790\u7ed3\u679c\u7684\u53ef\u4fe1\u5ea6\u3002 </p>"},{"location":"chap8/1chap8_code_quality/#2","title":"2\u3001\u5355\u5143\u6d4b\u8bd5","text":"<p>\u6bcf\u79cd\u7f16\u7a0b\u8bed\u8a00\u90fd\u6709\u81ea\u5df1\u7684\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\u3002\u6267\u884c\u5355\u5143\u6d4b\u8bd5\u7684\u5de5\u4f5c\u4e00\u822c\u7531\u6784\u5efa\u5de5\u5177\u6765\u5b8c\u6210\u3002<code>Jenkins</code>\u505a\u7684\u53ea\u4e0d\u8fc7\u662f\u6267\u884c\u8fd9\u4e9b\u6784\u5efa\u5de5\u5177\u7684\u5355\u5143\u6d4b\u8bd5\u547d\u4ee4\uff0c\u7136\u540e\u5bf9\u6d4b\u8bd5\u62a5\u544a\u8fdb\u884c\u6536\u96c6\uff0c\u5e76\u5448\u73b0\u3002 Jenkins\u5e76\u4e0d\u4f1a\u81ea\u52a8\u5e2e\u6211\u4eec\u5199\u5355\u5143\u6d4b\u8bd5\uff0c\u5199\u5355\u5143\u6d4b\u8bd5\u8fd8\u662f\u8981\u9760\u4eba\u3002\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u8bf4\u5462\uff1f\u56e0\u4e3a\u7b14 \u8005\u53d1\u73b0\uff0c\u4e0d\u5c11\u4eba\u8ba4\u4e3aJenkins\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u662f\u6307Jenkins\u4ee3\u66ff\u4eba\u81ea\u52a8\u5199\u6d4b\u8bd5\u3002 </p>"},{"location":"chap8/1chap8_code_quality/#2-1-junit","title":"2-1 JUnit\u5355\u5143\u6d4b\u4e00\u8bd5\u62a5\u544a","text":"<p>JUnit\u662f\u4e00\u4e2aJava\u8bed\u8a00\u7684\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\uff0c\u7531<code>Kent Beck</code>\u548c<code>Erich Gamma</code>\u521b\u5efa\u3002\u5f53\u6267\u884c<code>maven test</code>  \u547d\u4ee4\u65f6\uff0c<code>Maven</code>\u4f1a\u6267\u884c\u6d4b\u8bd5\u9636\u6bb5\uff08\u5305\u62ec\u5355\u5143\u6d4b\u8bd5\uff09\uff0c\u7136\u540e\u751f\u6210\u6d4b\u8bd5\u62a5\u544a\u3002 </p> <p>\u6536\u96c6\u5e76\u5c55\u793aJUnit\u6d4b\u8bd5\u62a5\u544a\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a </p> <ul> <li>(1\uff09\u5b89\u88c5<code>Jenkins JUnit</code>\u63d2\u4ef6\uff08https://plugins.jenkins.io/junit\uff09</li> <li>(2\uff09\u5728<code>Jenkins</code>\u4e2d\u52a0\u5165junit\u6b65\u9aa4\uff1a\u901a\u5e38\u5c06<code>junit</code>\u6b65\u9aa4\u653e\u5728<code>post always</code>\u4e2d\uff0c\u56e0\u4e3a\u5f53\u6d4b\u8bd5\u4e0d  \u901a\u8fc7\u65f6\uff0c\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u6536\u96c6\u5230\u6d4b\u8bd5\u62a5\u544a\u3002\u5199\u6cd5\u5982\u4e0b\uff1a </li> </ul> <pre><code>post { \n    always{ \n        junit testResults: \"**/target/surefire-reports/*.xml\" \n    } \n} \n</code></pre> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        choice(name: 'branchName', choices: 'master\\npmd\\nstage', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n                } \n            }\n        }\n    }\n    post { \n       always{ \n        junit testResults: \"**/target/surefire-reports/*.xml\" \n        } \n    } \n }\n</code></pre> <p>\u5f53pipeline\u8fd0\u884c\u7ed3\u675f\u540e\uff0c\u5728\u6784\u5efa\u9875\u7684\u5de6\u8fb9\u83dc\u5355\u680f\u53ca\u53f3\u8fb9\u8be6\u60c5\u4e0b\u90fd\u4f1a\u591a\u51fa\u4e00\u4e2a\u94fe\u63a5\uff1aTest Result </p> <p></p> <p><code>junit</code>\u6b65\u9aa4\u7684<code>test Results</code>\u53c2\u6570\u652f\u6301<code>Ant</code>\u98ce\u683c\u8def\u5f84\u8868\u8fbe\u5f0f\u3002<code>**/target/surefire-reports/*.xml</code>\u8868\u793a\u53ea\u8981\u662f<code>/target/surefire-reports/</code>\u76ee\u5f55\u4e0b\u7684<code>XML</code>\u6587\u4ef6\u5c31\u4f1a\u88ab\u5f53\u4f5c<code>JUnit</code>\u6d4b\u8bd5\u62a5\u544a\u5904\u7406\uff0c\u800c\u4e0d\u8bba<code>target</code>\u5728\u54ea\u4e2a\u5c42\u7ea7\u7684\u65e5\u5f55\u4e0b\u3002 </p>"},{"location":"chap8/1chap8_code_quality/#2-2-jacoco","title":"2-2 JaCoCo \u5b9e\u73b0\u4ee3\u7801\u8986\u76d6\u7387","text":"<p>JUnit\u53ea\u662f\u65b9\u4fbf\u6211\u4eec\u5199\u5355\u5143\u6d4b\u8bd5\u7684\u4e00\u4e2a\u6846\u67b6\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u544a\u8bc9\u6211\u4eec\u6709\u591a\u5c11\u4ee3\u7801\u88ab\u6d4b\u8bd5\u8986\u76d6\u5230 \u4e86\u3002\u800cJaCoCo\u586b\u8865\u4e86\u8fd9\u4e00\u7a7a\u767d\u3002JaCoCo \u662f\u4e00\u4e2a\u514d\u8d39\u7684Java\u4ee3\u7801\u8986\u76d6\u7387\u7684\u5e93\uff0c\u80fd\u5e2e\u52a9\u6211\u4eec\u68c0\u6d4b\u51fa\u4ee3\u7801\u8986\u76d6\u7387\uff0c\u5e76\u8f93\u51fa\u641c\u76d6\u7387\u62a5\u544a\u3002 </p> <p>JaCoCo \u63d0\u4f9b\u4e86\u4ee5\u4e0b\u51e0\u4e2a\u7ef4\u5ea6\u7684\u8986\u76d6\u7387\u5206\u6790\u3002</p> <ul> <li>\u6307\u4ee4\u8986\u76d6\u7387\uff08Instruction Coverage) </li> <li>\u5206\u652f\u8986\u76d6\u7387\uff08Branch Coverage) </li> <li>\u5708\u590d\u6742\u5ea6\u8986\u76d6\u7387\uff08Cyclomatic Complexity Coverage) </li> <li>\u884c\u8986\u76d6\u7387\uff08Line Coverage) </li> <li>\u65b9\u6cd5\u8986\u76d6\u7387\uff08Method Coverage) </li> <li>\u7c7b\u8986\u76d6\u7387\uff08Class Coverage) </li> </ul> <p>\u4ee5\u4e0b\u662fJaCoCo\u63d2\u4ef6\u7684\u4f7f\u7528\u6b65\u9aa4\u3002 </p> <ul> <li>(1\uff09\u5b89\u88c5JaCoCo\u63d2\u4ef6\uff08https://plugins.jenkins.io/jacoco\uff09</li> <li>(2\uff09\u5728Maven\u9879\u76ee\u4e2d\u5f15\u4ebaJaCoCo\u63d2\u4ef6\uff0c\u6267\u884cmaven jacoco\u751f\u6210\u4ee3\u7801\u8986\u76d6\u7387\u62a5\u544a\u3002 </li> </ul> <pre><code>&lt;plugin&gt;\n        &lt;groupId&gt;org.jacoco&lt;/groupId&gt;\n        &lt;artifactId&gt;jacoco-maven-plugin&lt;/artifactId&gt;\n        &lt;version&gt;0.82&lt;/version&gt;\n        &lt;executions&gt;\n            &lt;execution&gt;\n                &lt;goals&gt;\n                    &lt;goal&gt;prepare-agent&lt;/goal&gt;\n                &lt;/goals&gt;\n            &lt;/execution&gt;\n            &lt;execution&gt;\n                &lt;id&gt;report&lt;/id&gt;\n                &lt;phase&gt;prepare-pakcage&lt;/phase&gt;\n                &lt;goals&gt;\n                    &lt;goal&gt;report&lt;/goal&gt;\n                &lt;/goals&gt;\n            &lt;/execution&gt;\n            &lt;execution&gt;\n                &lt;id&gt;post-unit-test&lt;/id&gt;\n                &lt;phase&gt;test&lt;/phase&gt;\n                &lt;goals&gt;\n                    &lt;goal&gt;report&lt;/goal&gt;\n                &lt;/goals&gt;\n                &lt;configuration&gt;\n                &lt;!-- jacoco \u6267\u884c\u6570\u636e\u7684\u6587\u4ef6\u8def\u5f84 --&gt;\n                &lt;dataFile&gt;target/jacoco.exec&lt;/dataFile&gt;\n                &lt;!-- \u8f93\u51fa\u62a5\u544a\u7684\u8def\u5f84 --&gt;\n                &lt;outputDirectory&gt;target/jacoco-ut&lt;/outputDirectory&gt;\n                &lt;/configuration&gt;\n            &lt;/execution&gt;\n        &lt;/executions&gt;\n        &lt;configuration&gt;\n          &lt;systemPropertyVariables&gt;\n            &lt;jacoco-agent.destfile&gt;target/jacoco.exec&lt;/jacoco-agent.destfile&gt;\n          &lt;/systemPropertyVariables&gt;\n        &lt;/configuration&gt;\n        &lt;/plugin&gt;\n\n</code></pre> <ul> <li>(3\uff09\u4f7f\u7528<code>jacoco</code>,<code>jacoco</code>\u6b65\u9aa4\u5728<code>mvn</code>\u547d\u4ee4\u4e4b\u540e\u6267\u884c\uff0c\u5199\u6cd5\u5982\u4e0b</li> </ul> <pre><code>steps {\n    sh \"mvn clean install\"\n    jacoco(\n        // \u4ee3\u7801\u8986\u76d6\u7387\u7edf\u8ba1\u6587\u4ef6\u4f4d\u7f6e\uff0cAnt \u98ce\u683c\u8def\u5f84\u8868\u8fbe\u5f0f\n        execPattern: 'target/**/*.exec',\n        // classes \u6587\u4ef6\u4f4d\u7f6e\uff0cAnt \u98ce\u683c\u8def\u5f84\u8868\u8fbe\u5f0f\n        classPattern: 'target/classes',\n        //\u6e90\u7801\u6587\u4ef6\u4f4d\u7f6e\uff0cAnt \u98ce\u683c\u8def\u5f84\u8868\u8fbe\u5f0f\n        sourcePattern: 'src/main/java',\n        //\u6392\u9664\u5206\u6790\u7684\u4f4d\u7f6e\uff0cAnt \u98ce\u683c\u8def\u5f84\u8868\u8fbe\u5f0f\n        exclusionPattern: 'src/test*',\n        //\u662f\u5426\u7981\u7528\u6bcf\u884c\u8986\u76d6\u7387\u7684\u6e90\u6587\u4ef6\u663e\u793a\n        skipCopyOfSrcFiles: false,\n        // \u5982\u679c\u4e3a true\uff0c\u5219\u5bf9\u5404\u7ef4\u5ea6\u7684\u8986\u76d6\u7387\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u7ef4\u5ea6\u7684\u5f53\u524d\u8986\u76d6\u7387\u5c0f\u4e8e\u6700\u5c0f\u8986\u76d6\u7387\u9608\u503c\uff0c\u5219\u6784\u5efa\u72b6\u6001\u4e3a\u5931\u8d25;\n        // \u5982\u679c\u5f53\u524d\u8986\u76d6\u7387\u5728\u6700\u5927\u9608\u503c\u548c\u6700\u5c0f\u9608\u503c\u4e4b\u95f4\uff0c\u5219\u5f53\u524d\u6784\u5efa\u72b6\u6001\u4e3a\u4e0d\u7a33\u5b9a\uff1b\n        // \u5982\u679c\u5f53\u524d\u8986\u76d6\u7387\u5927\u4e8e\u6700\u5927\u9608\u503c\uff0c\u5219\u6784\u5efa\u6210\u529f\uff1b\n        changeBuildStatus: true,\n        // \u5b57\u8282\u7801\u6307\u4ee4\u8986\u76d6\u7387\n        minimumInstructionCoverage: '30', maximumInstructionCoverage: '70',\n        // \u884c\u8986\u76d6\u7387\n        minimumLineCoverage: '30', maximumLineCoverage: '70',\n        // \u5708\u590d\u6742\u5ea6\u8986\u76d6\u7387\n        minimumComplexityCoverage: '30', maximumComplexityCoverage: '70',\n        // \u65b9\u6cd5\u8986\u76d6\u7387\n        minimumMethodCoverage: '30', maximumMethodCoverage: '70',\n        // \u7c7b\u8986\u76d6\u7387\n        minimumClassCoverage: '30', maximumClassCoverage: '70',\n        // \u5206\u652f\u8986\u76d6\u7387\n        minimumBranchCoverage: '30', maximumBranchCoverage: '70',\n        // \u5982\u679c\u4e3a true, \u5219\u53ea\u6709\u6240\u6709\u7ef4\u5ea6\u7684\u8986\u76d6\u7387\u53d8\u5316\u91cf\u7684\u7edd\u5bf9\u503c\u5c0f\u4e8e\u76f8\u5e94\u7684\u53d8\u5316\u91cf\u9608\u503c\u65f6\uff0c\u6784\u5efa\u7ed3\u679c\u624d\u4e3a\u6210\u529f\n        buildOverBuild: true,\n        // \u4ee5\u4e0b\u662f\u5404\u4e2a\u7ef4\u5ea6\u8986\u76d6\u7387\u7684\u53d8\u5316\u91cf\u9608\u503c\n        deltaInstructionCoverage: '80', deltaLineCoverage: '80',\n        deltaMethodCoverage: '80', deltaClassCoverage: '80',\n        deltaComplexityCoverage: '80', deltaBranchCoverage: '80'\n    )\n}\n</code></pre> <p>pipeline \u8fd0\u884c\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4efb\u52a1\u8be6\u60c5\u9875\u7684\u4e0b\u65b9\u770b\u5230\u62a5\u544a\uff1b</p> <p><code>buildOverBuild</code> \u548c <code>changeBuildStatus</code> \u53c2\u6570\u90fd\u80fd\u5f71\u54cd <code>Jenkins</code> \u4efb\u52a1\u7684\u7ed3\u679c\u72b6\u6001\uff0c\u90a3\u4e48\u5f53\u8fd9\u4e24\u4e2a\u53c2\u6570\u7684\u503c\u90fd\u4e3a true \u65f6\uff0c\u7ed3\u679c\u662f\u4ec0\u4e48\u5462\uff1f\u7531\u5176\u5171\u540c\u51b3\u5b9a\u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u7684\u5224\u65ad\u903b\u8f91\u3002</p> <p>\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3<code>jacoco</code>\u6b65\u9aa4\u7684\u53c2\u6570\uff0c\u6211\u4eec\u770b\u770b<code>JaCoCo</code>\u63d2\u4ef6\u5728\u81ea\u7531\u98ce\u683c\u9879\u76ee\u4e2d\u7684UI</p> <p></p> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        choice(name: 'branchName', choices: 'jacoco\\nmaster\\ndev\\npmd', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                sh \"/opt/maven/bin/mvn ${buildShell}\"\n                jacoco(\n                    // \u4ee3\u7801\u8986\u76d6\u7387\u7edf\u8ba1\u6587\u4ef6\u4f4d\u7f6e\uff0cAnt \u98ce\u683c\u8def\u5f84\u8868\u8fbe\u5f0f\n                    execPattern: 'target/**/*.exec',\n                    // classes \u6587\u4ef6\u4f4d\u7f6e\uff0cAnt \u98ce\u683c\u8def\u5f84\u8868\u8fbe\u5f0f\n                    classPattern: 'target/classes',\n                    //\u6e90\u7801\u6587\u4ef6\u4f4d\u7f6e\uff0cAnt \u98ce\u683c\u8def\u5f84\u8868\u8fbe\u5f0f\n                    sourcePattern: 'src/main/java',\n                    //\u6392\u9664\u5206\u6790\u7684\u4f4d\u7f6e\uff0cAnt \u98ce\u683c\u8def\u5f84\u8868\u8fbe\u5f0f\n                    exclusionPattern: 'src/test*',\n                    //\u662f\u5426\u7981\u7528\u6bcf\u884c\u8986\u76d6\u7387\u7684\u6e90\u6587\u4ef6\u663e\u793a\n                    skipCopyOfSrcFiles: false,\n                    // \u5982\u679c\u4e3a true\uff0c\u5219\u5bf9\u5404\u7ef4\u5ea6\u7684\u8986\u76d6\u7387\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u7ef4\u5ea6\u7684\u5f53\u524d\u8986\u76d6\u7387\u5c0f\u4e8e\u6700\u5c0f\u8986\u76d6\u7387\u9608\u503c\uff0c\u5219\u6784\u5efa\u72b6\u6001\u4e3a\u5931\u8d25;\n                    // \u5982\u679c\u5f53\u524d\u8986\u76d6\u7387\u5728\u6700\u5927\u9608\u503c\u548c\u6700\u5c0f\u9608\u503c\u4e4b\u95f4\uff0c\u5219\u5f53\u524d\u6784\u5efa\u72b6\u6001\u4e3a\u4e0d\u7a33\u5b9a\uff1b\n                    // \u5982\u679c\u5f53\u524d\u8986\u76d6\u7387\u5927\u4e8e\u6700\u5927\u9608\u503c\uff0c\u5219\u6784\u5efa\u6210\u529f\uff1b\n                    changeBuildStatus: true,\n                    // \u5b57\u8282\u7801\u6307\u4ee4\u8986\u76d6\u7387\n                    minimumInstructionCoverage: '30', maximumInstructionCoverage: '70',\n                    // \u884c\u8986\u76d6\u7387\n                    minimumLineCoverage: '30', maximumLineCoverage: '70',\n                    // \u5708\u590d\u6742\u5ea6\u8986\u76d6\u7387\n                    minimumComplexityCoverage: '30', maximumComplexityCoverage: '70',\n                    // \u65b9\u6cd5\u8986\u76d6\u7387\n                    minimumMethodCoverage: '30', maximumMethodCoverage: '70',\n                    // \u7c7b\u8986\u76d6\u7387\n                    minimumClassCoverage: '30', maximumClassCoverage: '70',\n                    // \u5206\u652f\u8986\u76d6\u7387\n                    minimumBranchCoverage: '30', maximumBranchCoverage: '70',\n                    // \u5982\u679c\u4e3a true, \u5219\u53ea\u6709\u6240\u6709\u7ef4\u5ea6\u7684\u8986\u76d6\u7387\u53d8\u5316\u91cf\u7684\u7edd\u5bf9\u503c\u5c0f\u4e8e\u76f8\u5e94\u7684\u53d8\u5316\u91cf\u9608\u503c\u65f6\uff0c\u6784\u5efa\u7ed3\u679c\u624d\u4e3a\u6210\u529f\n                    buildOverBuild: true,\n                    // \u4ee5\u4e0b\u662f\u5404\u4e2a\u7ef4\u5ea6\u8986\u76d6\u7387\u7684\u53d8\u5316\u91cf\u9608\u503c\n                    deltaInstructionCoverage: '80', deltaLineCoverage: '80',\n                    deltaMethodCoverage: '80', deltaClassCoverage: '80',\n                    deltaComplexityCoverage: '80', deltaBranchCoverage: '80'\n                )\n            }\n        }\n    }\n }\n</code></pre> <p><code>pipeline</code>\u8fd0\u884c\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4efb\u52a1\u8be6\u60c5\u9875\u7684\u4e0b\u65b9\u770b\u5230\u62a5\u544a\uff0c</p> <p><code>buildOverBuild</code>\u548c<code>changeBuildStatus</code>\u53c2\u6570\u90fd\u80fd\u5f71\u54cd<code>Jenkins</code>\u4efb\u52a1\u7684\u7ed3\u679c\u72b6\u6001\uff0c\u90a3\u4e48\u5f53\u8fd9\u4e24\u4e2a\u53c2\u6570\u7684\u503c\u90fd\u4e3a<code>true</code>\u65f6\uff0c\u7ed3\u679c\u662f\u4ec0\u4e48\u5462\uff1f\u7531\u5176\u5171\u540c\u51b3\u5b9a\u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u7684\u5224\u65ad\u903b\u8f91\u3002 </p> <pre><code>*   Success AND Success = Success\n*   Unstable AND Unstable = Unstable\n*   Failure AND Failure = Failure\n*   X AND Failure = Failure, Failure AND X = Failure,   X = Success/Unstable/Failure\n*   Y AND Unstable = Unstable, Unstable AND Y = Unstable, Y = Success/Unstable\n</code></pre> <p></p> <p>\u6700\u540e\uff0c\u5404\u4e2a\u7ef4\u5ea6\u7684\u8986\u76d6\u7387\u5e94\u8be5\u8bbe\u7f6e\u591a\u5c11\u5462\uff1f\u6ca1\u6709\u6807\u51c6\u7684\u7b54\u6848\u3002</p> <p>\u7b14\u8005\u7684\u7ecf\u9a8c\u662f\u5148\u8981\u786e\u5b9a\u9879\u76ee\u662f\u9057\u7559\u7684\u8fd8\u662f\u65b0\u5efa\u7684\u3002\u9057\u7559\u7684\u65e7\u4ee5\u5f53\u524d\u8986\u76d6\u7387\u4e3a\u57fa\u7ebf\uff0c\u65b0\u5efa\u7684\u5219\u8bbe\u7f6e\u76f8\u5bf9\u9ad8\u4e00\u4e9b\u7684\u8981\u6c42\u3002\u518d\u770b\u9879\u76ee\u7684\u7d27\u6025\u7a0b\u5ea6\uff0c\u5982\u679c\u975e\u5e38\u7d27\u6025\u7684\u8bdd\uff0c\u5219\u53ef\u4ee5\u8003\u8651\u653e\u4f4e\u8981\u6c42\u3002\u6700\u540e\u770b\u9879\u76ee\u7684\u91cd\u8981\u7a0b\u5ea6\u3002\u5982\u679c\u6574\u4e2a\u9879\u76ee\u5728\u6574\u4e2a\u67b6\u6784\u4e2d\u8d77\u7740\u975e\u5e38\u91cd\u8981\u7684\u4f5c\u7528\uff0c\u90a3\u4e48\u8986\u76d6\u7387\u8981\u6c42\u4f1a\u9ad8\u4e00\u4e9b\u3002</p>"},{"location":"chap8/1chap8_code_quality/#2-3","title":"2-3  \u4ee3\u7801\u8986\u76d6\u7387\u8d8a\u9ad8\uff0c\u8f6f\u4ef6\u7684\u8d28\u91cf\u5c31\u8d8a\u9ad8\u5417\uff1f","text":"<p>\u4ee3\u7801\u8986\u76d6\u7387\u8d8a\u9ad8\uff0c\u8f6f\u4ef6\u7684\u8d28\u91cf\u5c31\u8d8a\u9ad8\u5417\uff1f\u6211\u4eec\u6765\u770b\u770b\u300a\u8f6f\u4ef6\u4e4b\u9053\uff1a\u8f6f\u4ef6\u5f00\u53d1\u4e89\u8bae\u95ee\u9898\u5256\u6790\u300b\u4e2d\u662f\u600e\u4e48\u8bf4\u7684\uff1a</p> <p>\u4e3a\u4e86\u627e\u5230\u4e24\u8005\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u628a Windows Visa\uff084000 \u591a\u4e07\u884c\u4ee3\u7801\uff0c\u51e0\u5343\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u6570\u5343\u540d\u5de5\u7a0b\u5e08\uff09\u7684\u5206\u652f\u8986\u76d6\u7387\uff08Branch Coverage\uff09\u4e0e\u5757\u8986\u76d6\u7387\uff08Block Coverage\uff09 \u548c\u5176\u53d1\u5e03\u516d\u4e2a\u6708\u5185\u7684\u73b0\u573a\u7f3a\u9677\u5bf9\u5e94\u8d77\u6765\u3002\u6211\u4eec\u89c2\u5bdf\u5230\u8986\u76d6\u7387\u548c\u8d28\u91cf\u4e4b\u95f4\u6709\u5f31\u6b63\u76f8\u5173\u6027\uff0c\u9884\u6d4b\u67e5\u51c6\u7387\u548c\u67e5\u5168\u7387\u8f83\u5dee\uff08\u67e5\u51c6\u7387\u4e3a 83.8%\uff0c\u67e5\u5168\u7387\u4e3a 54.8%\uff09</p> <p>\u4e66\u4e2d\u6700\u7ec8\u7ed9\u51fa\u7684\u7b54\u6848\u662f\uff1a</p> <p>\u4ee3\u7801\u8986\u76d6\u7387\u6700\u597d\u4e0d\u8981\u5355\u72ec\u4f7f\u7528\uff0c\u800c\u662f\u9700\u8981\u4e0e\u5176\u5b83\u6307\u6807\uff0c\u5982\u4ee3\u7801\u53d8\u52a8\u7387\uff0c\u590d\u6742\u5ea6\u7b49\u4e00\u5e76\u8003\u8651\u3002</p> <p>\u6240\u4ee5\uff0c\u5982\u679c\u8003\u8651\u5c06\u4ee3\u7801\u8986\u76d6\u7387\u4f5c\u4e3a\u56e2\u961f\u5f00\u53d1\u4eba\u5458\u7684 KPI\uff0c\u8bf7\u614e\u91cd\u3002</p>"},{"location":"chap8/1chap8_code_quality/#3","title":"3\u3001\u6027\u80fd\u6d4b\u8bd5","text":"<p>Taurus \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u81ea\u52a8\u5316\u6846\u67b6\u7528\u4e8e\u8fd0\u884c\u5404\u79cd\u5f00\u6e90\u8d1f\u8f7d\u6d4b\u8bd5\u5de5\u5177\u548c\u529f\u80fd\u6d4b\u8bd5\u5de5\u5177\u3002\u5176\u652f\u6301\u6700\u6d41\u884c\u7684\u5f00\u6e90\u8d1f\u8f7d\u6d4b\u8bd5\u5de5\u5177 Apache JMeter\uff0cSelenium\uff0cGatling, The Grinder \u7b49\u3002Taurus \u7684\u5173\u952e\u7279\u6027\u6709\uff1a</p> <ul> <li>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 YAML \u6216 JSON \u6765\u63cf\u8ff0\u6027\u80fd\u6d4b\u8bd5\u3002\u8fd9\u4e5f\u6b63\u662f\u6211\u4eec\u60f3\u8981\u7684 test as code\u3002</li> <li>\u5b83\u4f1a\u6839\u636e\u6211\u4eec\u9009\u62e9\u7684\u6027\u80fd\u6d4b\u8bd5\u7c7b\u578b\u81ea\u52a8\u4e0b\u8f7d\u76f8\u5e94\u7684\u5de5\u5177\u3002\u6bd4\u5982\u5728\u4e0b\u4f8b\u4e2d\u4f1a\u4f7f\u7528 <code>JMeter</code>\uff0c\u90a3\u4e48 <code>Taurus</code> \u4f1a\u81ea\u52a8\u4e0b\u8f7d <code>JMeter</code>\u5e76\u5b89\u88c5\u3002</li> </ul> <p>Jenkins \u7684 Performance \u63d2\u4ef6\u5c31\u662f\u4f7f\u7528 Taurus \u6765\u8fdb\u884c\u6027\u80fd\u6d4b\u8bd5\u7684\u3002\u5728\u8fdb\u884c\u6027\u80fd\u6d4b\u8bd5\u4e4b\u524d\uff0c\u9996\u5148\u9700\u8981\u51c6\u5907\u73af\u5883\u3002</p>"},{"location":"chap8/1chap8_code_quality/#3-1","title":"3-1 \u51c6\u5907\u6027\u80fd\u6d4b\u8bd5\u73af\u5883","text":"<ul> <li>\u5728\u8fd0\u884c\u6027\u80fd\u6d4b\u8bd5\u73af\u5883\u7684\u673a\u5668\u4e0a\uff0c\u51c6\u5907 Python \u73af\u5883\u3002</li> <li>\u5b89\u88c5 Performance \u63d2\u4ef6\uff08https://plugins.jenkins.io/performance\uff09.</li> <li>\u5b89\u88c5 Taurus\uff1f\u4e0d\u9700\u8981\u81ea\u884c\u5b89\u88c5\uff0cPerformance \u63d2\u4ef6\u5982\u679c\u53d1\u73b0\u673a\u5668\u4e0a\u6ca1\u6709\u5b89\u88c5 Taurus\uff0c\u5b83\u4f1a\u81ea\u52a8\u8fd0\u884c pip install bzt \u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\u3002</li> </ul>"},{"location":"chap8/1chap8_code_quality/#3-2-jmeter","title":"3-2 \u8fd0\u884c JMeter \u6d4b\u8bd5","text":"<p>\u5047\u8bbe\u4f60\u5e73\u65f6\u90fd\u662f\u624b\u52a8\u6267\u884c JMeter \u6d4b\u8bd5\u7684\uff0c\u73b0\u5728\u5e0c\u671b\u5c06\u5b83\u81ea\u52a8\u5316\u3002\u7740\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u4e24\u6b65\u3002</p> <p>\u5728\u73b0\u6709\u7684\u9879\u76ee\u4e2d\u52a0\u5165 Jenkinsfile\u3002</p> <pre><code>pipeline {\n    agent any\n    stages {\n        stage('performance test') {\n            steps {\n                bzt params: 'blaze_exist_jmeter_config.yml'\n            }\n        }\n    }\n}\n</code></pre> <p>\u5728\u9879\u76ee\u4e2d\u52a0\u5165 <code>blaz_exist_jmeter_config.yml</code> \u6587\u4ef6</p> <pre><code>execution:\n    - scenario: simple\n\necenarios:\n    simple:\n        script: SimpleTestPlan.jmx\n\nmodules:\n    jmeter:\n        # \u6ce8\u610f\uff0c\u4e0b\u8f7d\u6587\u4ef6\u5fc5\u987b\u4f7f\u7528 .zip \u540e\u7f00\n        download-link: https://mirrors.tuna.tsinghua.edu.cn/apache/jmeter/binaries/apache-jmeter-{version}.zip\n        version: 5.2\n</code></pre> <p><code>blaz_exist_jmeter_config.yml</code>\u662f <code>Taurus</code> \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u7528\u4e8e\u63cf\u8ff0\u5982\u4f55\u8fdb\u884c\u6027\u80fd\u6d4b\u8bd5\u3002\u4ee5\u4e0a\u914d\u7f6e\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u6267\u884c\u4e00\u4e2a\u540d\u4e3a simple \u7684\u573a\u666f\uff08scenario\uff09\uff0c\u8fd9\u4e2a\u573a\u666f\u5c31\u662f\u6267\u884c\u73b0\u6709\u7684 JMeter \u811a\u672c\u3002modules \u914d\u7f6e\u4e86 JMeter \u7684\u4e0b\u8f7d\u5730\u5740\u4ee5\u53ca\u7248\u672c\u3002\u4e0a\u4f8b\u4e2d\u6211\u4eec\u6307\u5b9a\u4e86\u56fd\u5185\u7684\u4e0b\u8f7d\u94fe\u63a5\uff0c\u907f\u514d\u4ece\u56fd\u5916\u4e0b\u8f7d\u3002</p> <ul> <li><code>params</code>:\u5b57\u7b26\u4e32\u7c7b\u578b\uff0cTaurus \u914d\u7f6e\u6587\u4ef6\u7684\u8def\u5f84\u3002</li> <li><code>alwaysUseVirtualenv</code>: \u5e03\u5c14\u7c7b\u578b\uff0c\u5982\u679c\u4e3a false\uff0c\u5219\u4e0d\u4f7f\u7528 virtualenv \u8fdb\u884c\u73af\u5883\u9694\u79bb\u3002\u9ed8\u8ba4\u503c\u4e3a true\u3002</li> <li><code>bztVersion</code>: \u5b57\u7b26\u4e32\u7c7b\u578b\uff0cbzt \u7684\u7248\u672c</li> <li><code>generatePerformanceTrend</code>\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u662f\u5426\u5728 Jenkins \u9879\u76ee\u8be6\u60c5\u9875\u751f\u6210\u6027\u80fd\u8d8b\u52bf\u56fe\u3002\u9ed8\u8ba4\u503c\u4e3a true\u3002</li> <li><code>useBztExitCode</code>: \u5e03\u5c14\u7c7b\u578b\uff0c\u662f\u5426\u4f7f\u7528 bzt \u6b65\u9aa4\u7684\u9000\u51fa\u7801\u4f5c\u4e3a Jenkins \u9879\u76ee\u7684\u6784\u5efa\u7ed3\u679c\u3002\u9ed8\u8ba4\u503c\u4e3a true\u3002</li> <li><code>useSystemSitePackages</code>: \u5e03\u5c14\u7c7b\u578b\uff0c\u662f\u5426\u4e3a virtualenv \u52a0\u4e0a \u201d\u2013system-site-packages\u201c \u53c2\u6570\u3002\u9ed8\u8ba4\u503c\u4e3a true\u3002</li> <li><code>workingDirectory</code>: \u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u6307\u5b9a bzt \u7684\u5de5\u4f5c\u76ee\u5f55\u3002</li> <li><code>workspace:</code> \u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u5df2\u7ecf\u5e9f\u5f03\u4eec\u8bf7\u4f7f\u7528 workingDirectory\u3002</li> </ul> <p>\u53ea\u6709 params \u53c2\u6570\u662f\u5fc5\u987b\u7684\uff0c\u5176\u4ed6\u53c2\u6570\u90fd\u662f\u53ef\u9009\u3002</p> <p>\u81f3\u6b64\uff0c\u4ee5\u4e0a\u7528\u6cd5\u53ef\u4ee5\u6ee1\u8db3\u5927\u90e8\u5206\u4eba\u5728 <code>Jenkins</code> \u4e0a\u4f7f\u7528 <code>JMeter</code> \u7684\u9700\u6c42\u3002\u5173\u4e8e <code>Taurus</code> \u914d\u7f6e\u6587\u4ef6\u7684\u66f4\u591a\u8bed\u6cd5\uff0c\u53ef\u4ee5\u524d\u5f80 Taurus \u5b98\u7f51\u5b66\u4e60</p> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        choice(name: 'branchName', choices: 'jmeter\\njacoco\\nmaster\\npmd', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('performance test') {\n            steps {\n                bzt params: 'blaze_exist_jmeter_config.yml'\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"chap8/2chap8_code_quality_sonarqube/","title":"\u7b2c\u4e8c\u8282 SonarQube\uff1a\u6301\u7eed\u4ee3\u7801\u8d28\u91cf\u68c0\u67e5","text":"<p><code>SonarQube</code>\u662f\u4e00\u4e2a\u4ee3\u7801\u8d28\u91cf\u7ba1\u7406\u5de5\u5177\uff0c\u80fd\u5bf920\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u6e90\u7801\u8fdb\u884c\u4ee3\u7801\u5473\u9053\uff08Code Smells)\u3001Bugs \u3001\u5b89\u5168\u6f0f\u6d1e\u65b9\u9762\u7684\u9759\u6001\u5206\u6790\u3002SonarQube\u67094\u4e2a\u7248\u672c\uff1a\u5f00\u6e90\u7248\u3001\u5f00\u53d1\u8005\u7248\u3001\u4f01\u4e1a\u7248\u3001\u6570\u636e\u4e2d\u5fc3\u7248\uff08Data Center Edition\uff09\u3002  </p> <p>https://www.sonarsource.com/plans-and-pricing/</p> <p></p>"},{"location":"chap8/2chap8_code_quality_sonarqube/#1sonarqube-helm","title":"1\u3001\u5b89\u88c5<code>sonarqube</code> (helm)","text":"<ul> <li>https://hub.helm.sh/charts/oteemo/sonarqube</li> </ul> <pre><code>$ kuebctl create ns sonarqube\n\n$ helm repo add oteemocharts https://oteemo.github.io/charts\n\"oteemocharts\" has been added to your repositories\n\n\n$ helm install sonarqube  oteemocharts/sonarqube -n sonarqube -f values.yaml\nNAME: sonarqube\nLAST DEPLOYED: Thu Jul 30 13:33:06 2020\nNAMESPACE: sonarqube\nSTATUS: deployed\nREVISION: 1\nNOTES:\n1. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace sonarqube -l \"app=sonarqube,release=sonarqube\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:8080 to use your application\"\n  kubectl port-forward $POD_NAME 8080:9000\n\n\n$ kubectl port-forward svc/sonarqube-sonarqube 9000:9000 -n sonarqube \nForwarding from 127.0.0.1:9000 -&gt; 9000\nForwarding from [::1]:9000 -&gt; 9000\nHandling connection for 9000\n\n\nadmin\nadmin\n</code></pre> <p>values.yaml</p> <ul> <li>https://github.com/helm/charts/blob/master/stable/sonarqube/values.yaml</li> </ul> <pre><code>service:\n  type: NodePort\n</code></pre> <pre><code>$ helm upgrade sonarqube  oteemocharts/sonarqube -n sonarqube -f values.yaml\nRelease \"sonarqube\" has been upgraded. Happy Helming!\nNAME: sonarqube\nLAST DEPLOYED: Fri Jul 31 14:09:20 2020\nNAMESPACE: sonarqube\nSTATUS: deployed\nREVISION: 4\nNOTES:\n1. Get the application URL by running these commands:\n  export NODE_PORT=$(kubectl get --namespace sonarqube -o jsonpath=\"{.spec.ports[0].nodePort}\" services sonarqube-sonarqube)\n  export NODE_IP=$(kubectl get nodes --namespace sonarqube -o jsonpath=\"{.items[0].status.addresses[0].address}\")\n  echo http://$NODE_IP:$NODE_PORT\n</code></pre> <pre><code>$ kubectl get svc -n sonarqube \nNAME                            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE\nsonarqube-postgresql            ClusterIP   10.106.235.197   &lt;none&gt;        5432/TCP         22h\nsonarqube-postgresql-headless   ClusterIP   None             &lt;none&gt;        5432/TCP         22h\nsonarqube-sonarqube             NodePort    10.101.144.173   &lt;none&gt;        9000:32314/TCP   22h\n</code></pre> <p></p>"},{"location":"chap8/2chap8_code_quality_sonarqube/#2mavensonarqube","title":"2\u3001Maven\u4e0eSonarQube\u96c6\u6210","text":""},{"location":"chap8/2chap8_code_quality_sonarqube/#2-1-mavensonarqube","title":"2-1 Maven\u4e0eSonarQube\u96c6\u6210","text":"<pre><code>&lt;plugin&gt; \n      &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt; \n      &lt;artifactId&gt;sonar\u2014maven\u2014plugin&lt;/artifactId&gt; \n      &lt;version&gt;3.4.1.1168&lt;/version&gt; \n &lt;/plugin&gt; \n</code></pre> <p>\u6267\u884c\u547d\u4ee4</p> <pre><code>mvn clean org.sonarsource.scanner.maven:sonar-maven-plugin:3.4.1.1168:sonar -Dsonar.host.url=http://192.168.33.1:32324\n</code></pre> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        choice(name: 'branchName', choices: 'sonarqube\\nmaster', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('sonarqube test') {\n            steps {\n                script{\n                mvnHome = tool \"m2\"\n                sh \"${mvnHome}/bin/mvn clean org.sonarsource.scanner.maven:sonar-maven-plugin:3.4.1.1168:sonar -Dsonar.host.url=http://192.168.33.1:32314\"\n                }\n            }\n        }\n    }\n}\n</code></pre> <p><code>sonar.host.ur</code>\u53c2\u6570\u7528\u4e8e\u6307\u5b9a<code>SonarQube</code>\u670d\u52a1\u7684\u5730\u5740\u8fd9\u65f6\uff0c\u5c31\u53ef\u4ee5\u5728<code>SonarQube</code>\u7684<code>Projects</code>\u4e2d\u770b\u5230\u7ed3\u679c</p> <p></p> <pre><code>+ /opt/maven/bin/mvn clean org.sonarsource.scanner.maven:sonar-maven-plugin:3.4.1.1168:sonar -Dsonar.host.url=http://192.168.33.1:32314\n[INFO] Scanning for projects...\nDownloading from central: \n...\n[INFO] User cache: /home/vagrant/.sonar/cache\n[INFO] SonarQube version: 8.2.0\n[INFO] Default locale: \"en_US\", source code encoding: \"UTF-8\" (analysis is platform dependent)\n[WARNING] SonarScanner will require Java 11 to run starting in SonarQube 8.x\n[INFO] Load global settings\n[INFO] Load global settings (done) | time=165ms\n[INFO] Server id: EA8D9556-AXOeledPvj9r7r4MIG91\n[INFO] User cache: /home/vagrant/.sonar/cache\n[INFO] Load/download plugins\n[INFO] Load plugins index\n[INFO] Load plugins index (done) | time=62ms\n...\n</code></pre> <p><code>SonarQube</code>\u670d\u52a1\u9ed8\u8ba4\u5141\u8bb8\u4efb\u4f55\u4eba\u6267\u884c\u6e90\u7801\u5206\u6790\uff0c\u56e0\u6b64\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\u4f1a\u6709\u5b89\u5168\u9690\u60a3\u3002\u4ee5\u4e0b\u51e0\u6b65\u53ef\u4ee5\u63d0\u9ad8\u5176\u5b89\u5168\u6027\uff1a </p> <ul> <li>(1\uff09\u8bbe\u7f6eSonarQube\u7981\u6b62\u975e\u767b\u5f55\u7528\u6237\u4f7f\u7528</li> </ul> <p></p> <ul> <li>(2\uff09\u4e3a\u7528\u6237\u751f\u6210<code>Token</code>, <code>Jenkins</code>\u53ea\u80fd\u901a\u8fc7<code>Token</code>\u4e0e<code>SonarQube</code>\u96c6\u6210\u3002\u767b\u5f55<code>SonarQube</code>\uff0c\u8fdb\u5165\u4e2a\u4eba\u8bbe\u7f6e\u9875\u800c\u4e2d\u7684<code>Security tab</code>\u9875  <code>/account/security/</code></li> </ul> <p></p> <ul> <li> <p><code>10e7097178d25c86c1056d33024870caf5f01bc9</code></p> </li> <li> <p>(3\uff09\u5728\u6267\u884cmvn\u547d\u4ee4\u65f6\u52a0\u5165\u76f8\u5e94\u7684<code>sonar.login</code>\u53c2\u6570\u3002 </p> </li> </ul> <pre><code>mvn clean org.sonarsource.scanner.maven:sonar-maven-plugin:3.4.1.1168:sonar -Dsonar.host.url=http://192.168.33.1:32314 -Dsonar.login=10e7097178d25c86c1056d33024870caf5f01bc9\n</code></pre>"},{"location":"chap8/2chap8_code_quality_sonarqube/#22-jenkinssonarqube","title":"2.2 Jenkins\u4e0eSonarQube\u96c6\u6210","text":"<p>\u6211\u4eec\u5c06<code>Maven</code>\u4e0e<code>SonarQube</code>\u96c6\u6210\u3002\u8fd9\u65f6\uff0c<code>SonarQube</code>\u5bf9\u4e8e<code>Jenkins</code>\u6765\u8bf4\u8fd8\u662f\u5f88\u660e\u786e\u7684\uff0c<code>Jenkins</code>\u5e76\u4e0d\u77e5\u9053\u4ee3\u7801\u8d28\u91cf\u5982\u4f55\u3002\u672c\u8282\u6211\u4eec\u5c06\u96c6\u6210<code>Jenkins</code>\u4e0e<code>SonarQube</code>,\u4ee5\u5b9e\u73b0\u5f53\u4ee3\u7801 \u91cf\u4e0d\u5408\u683c\u65f6\uff0c<code>Jenkins pipeline</code>\u5931\u8d25\u3002</p> <p>\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ul> <li> <p>(1)<code>Jenkins</code>\uff1a\u5b89\u88c5SonarQube Scanner\u63d2\u4ef6\uff08https://plugins.jenkins.io/sonar)</p> </li> <li> <p>(2)<code>Jenkins</code>\uff1a\u914d\u7f6e<code>SonarQube Scanner</code>\u63d2\u4ef6\uff0c</p> </li> </ul> <p></p> <ul> <li>(3)<code>SonarQube</code>\uff1a\u8bbe\u7f6e<code>Webhooks</code>\u3002\u4e0d\u540c\u4ee3\u7801\u89c4\u6a21\u7684\u6e90\u5988\u5206\u6790\u8fc7\u7a0b\u7684\u8017\u65f6\u662f\u4e0d\u4e00\u6837\u7684\u3002\u6240\u4ee5 \u5f53\u5206\u6790\u5b8c\u621011\u5bf8\u7531<code>SonarQube</code>\u4e3b\u52a8\u901a\u77e5<code>Jenkins</code>\u8bbe\u7f6e\u65b9\u6cd5\u5c31\u662f\u8fdb\u4eba<code>SonarQube</code>\u7684<code>Adminstration -&gt; Configuration -&gt; Webhooks</code>\u9875\u52a0\u4eba<code>\uff1cJenkins\u7684\u5730\u5740\uff1e/sonarqube-webhook</code></li> </ul> <p></p> <ul> <li><code>https://192.168.33.11:8080/sonarqube-webhook</code></li> </ul> <p><code>&lt;Jenkins\u7684\u5730\u5740\uff1e/sonarqube-webhook/\u63a5\u53e3\u7531 Jenkiins SonaQube</code>\u63d2\u4ef6\u63d0\u4f9b</p> <ul> <li>(4\uff09\u5728<code>JerkrnsfiIe</code>\u4e2d\u52a0\u5165<code>SonarQube</code>\u7684<code>stage</code></li> </ul> <pre><code>stage('sonarqube test') {\n            steps {\n                withSonarQubeEnv('sonarqube') {\n                script{\n                    mvnHome = tool \"m2\"\n                    sh \"${mvnHome}/bin/mvn clean org.sonarsource.scanner.maven:sonar-maven-plugin:3.4.1.1168:sonar -Dsonar.host.url=http://192.168.33.1:32314\" \n                    }\n                }  \n            }\n        }\n\n        stage('Quality Gate') {\n            steps {\n                timeout(time: 1, unit: 'HOURS') {\n                    waitForQualityGate abortPipeline: true\n                }\n            }\n        }\n</code></pre> <ul> <li> <p><code>withSonarQubeEnv</code>\u662f\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\u5305\u88c5\u5668\uff0c\u8bfb\u53d6\u7684\u662f\u6211\u4eec\u5728\u6240\u914d\u7f6e\u7684\u53d8\u91cf\u3002\u5728\u5b83\u7684\u95ed\u5305\u5185\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u53d8\u91cf\u3002</p> </li> <li> <p><code>SONAR_HOST_URL</code>:<code>SonarQube</code>\u670d\u52a1\u7684\u5730\u5740\u3002 </p> </li> <li><code>SONAR_AUTH_TOKEN</code>: <code>SonarQube</code>\u8ba4\u8bc1\u6240\u9700\u8981\u7684<code>Token</code> </li> </ul> <p></p> <p><code>waitForQualityGate</code>\u6b65\u9aa4\u544a\u8bc9<code>Jenkins</code>\u7b49\u5f85<code>SonarQube</code>\u8fd4\u56de\u7684\u5206\u6790\u7ed3\u679c\u3002\u5f53\u5b83\u7684 <code>abortPipeline</code>\u53c2\u6570\u4e3a<code>true</code>\u65f6\uff0c\u4ee3\u8868\u5f53\u8d28\u91cf\u4e0d\u5408\u683c\u65f6\uff0c\u5c06<code>pipeline\u7684</code>\u72b6\u6001\u8bbe\u7f6e\u4e3a<code>UNSTABLE</code> </p> <p>\u6211\u4eec\u540c\u65f6\u4f7f\u7528\u4e86<code>timeout</code>\u5305\u88c5\u5668\u6765\u8bbe\u7f6e<code>waitForQualityGate</code>\u6b65\u9aa4\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u907f\u514d\u5f53\u7f51\u7edc\u51fa\u95ee\u9898\u65f6\uff0c<code>Jenkins</code>\u4efb\u52a1\u4e00\u76f4\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u3002</p> <ul> <li>(5\uff09\u8bbe\u7f6e<code>Quality Gates\uff08\u8d28\u91cf\u9608\u503c\uff09</code>\u3002\u5728<code>SonarQube</code>\u7684<code>\u201cQuality Gates\u201d</code>\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7cfb\u7edf\u81ea\u5e26\u7684\u8d28\u91cf\uff0c\u9608\u503c\u3002\u53ef\u4ee5\u770b\u51fa\u5b83\u662f\u9488\u5bf9\u65b0\u4ee3\u7801\u7684\u3002\u6240\u4ee5\uff0c\u5728\u521d\u6b21\u53ca\u6ca1\u6709\u65b0\u4ee3\u7801\u52a0\u5165\u7684\u60c5\u51b5\u4e0b\uff0c\u6267\u884c\u4ee3\u7801\u5206\u6790\u662f\u4e0d\u4f1a\u62a5\u51fa\u6784\u5efa\u5931\u8d25\u7684\u3002 </li> </ul> <p></p>"},{"location":"chap8/2chap8_code_quality_sonarqube/#3-sonarqube-scanner","title":"3 \u4f7f\u7528<code>SonarQube Scanner</code>\u5b9e\u73b0\u4ee3\u7801\u626b\u63cf","text":"<p>\u4e0a\u6587\u4e2d\uff0c\u6211\u4eec\u662f\u4f7f\u7528<code>Maven</code>\u63d2\u4ef6\u5b9e\u73b0\u4ee3\u7801\u626b\u63cf\u7684\uff0c\u4e5f\u5c31\u662f\u5229\u7528\u6784\u5efa\u5de5\u5177\u672c\u8eab\u63d0\u4f9b\u7684\u63d2\u4ef6\u6765\u5b9e\u73b0\u3002\u5728\u6784\u5efa\u5de5\u5177\u672c\u8eab\u4e0d\u652f\u6301\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f7f\u7528<code>SonarQube</code>\u672c\u8eab\u63d0\u4f9b\u7684\u626b\u63cf\u5de5\u5177\uff08<code>Scanner</code>\uff09\u8fdb\u884c\u4ee3\u7801\u626b\u63cf\u3002 </p> <p>\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a </p> <ul> <li>(1)\u5728\u5b89\u88c5<code>SonarQube Scanner</code>\uff1a\u63d2\u4ef6\u540e\uff0c\u8bbe\u7f6e\u626b\u63cf\u5de5\u5177\u81ea\u52a8\u4e0b\u8f7d\u5e76\u5b89\u88c5\uff08\u63a8\u8350)\u3002<code>configureTools -&gt; SonarQube Scanner</code>)</li> </ul> <p></p> <p>\u8bf7\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684<code>Name</code>\u503c\u4e0e\u6240\u8bbe\u7f6e\u7684\u503c\u662f\u4e24\u7801\u4e8b\u3002\u6b64\u5904\u8bbe\u7f6e\u7684\u662f<code>SonarScanner</code>\u5de5\u5177\u672c\u8eab\u7684\u540d\u79f0\u4e0e\u8def\u5f84 </p> <ul> <li>(2\uff09\u5728\u4ee3\u7801\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u653e\u4eba<code>sonar-project.properties</code>\u6587\u4ef6<code>sonar-scanner</code>\u4f1a\u8bfb\u53d6\u5176\u914d\u7f6e\u5185\u5bb9\u5982\u4e0b\uff1a </li> </ul> <pre><code># must be unique in a given SonarQube instance \nsonar.projectKey=my:project\n# this is the name and version displayed in the SonarQube UI. Was mandatory prior to SonarQube 6.1. \nsonar.projectName=My project\nsonar.projectVersion=1.0\n\n# This property is optional if Sonar.modules is set. \nsonar.sources=.\n\n# Encoding of the source code. Default is default system encoding \n# sonar.sourceEncoding=UTE\u20148 \n</code></pre> <ul> <li>(3)<code>pipeline</code>\u90e8\u5206\u4ee3\u7801\u5982\u4e0b </li> </ul> <pre><code>script{ \n    def sonarHome = tool name: 'sonarqube4.2.0', type: 'hudson.plusinS.sonar.SonarRunnerInstallation' \n    withSomarQubeEnv('sonar') { \n        sh \"${sonarHome}/bin/sonar\u2014scanner \u2014Dsonar.host.url=${SONAR_HOST_URL} \u2014Dsonar.login=${SONAR_AUTH_TOKEN}\"\n    }\n}\n</code></pre>"},{"location":"chap8/2chap8_code_quality_sonarqube/#4-gitlab","title":"4 \u5c06\u5206\u6790\u62a5\u544a\u63a8\u9001\u5230GitLab","text":"<p>\u5982\u679c\u5e0c\u671b\u5bf9\u6bcf\u4e00\u6b21\u4ee3\u7801\u7684<code>commit</code>\u90fd\u8fdb\u884c\u5206\u6790\uff0c\u5e76\u5c06\u5206\u6790\u7ed3\u679c\u4e0e\u8be5<code>commit</code>\u5173\u8054\u8d77\u6765\uff0c\u90a3\u4e48<code>SonarQube</code>\u7684<code>GitLab</code>\u63d2\u4ef6\u5c31\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002<code>SonarQube GitLab</code>\u63d2\u4ef6\u7684\u529f\u80fd\u5c31\u662f\u5c06<code>SonarQube</code> \u7684\u5206\u6790\u7ed3\u679c\u63a8\u9001\u5230GitLab</p> <ul> <li>(1\uff09\u5728<code>SonarQube</code>\u4e0a\u5b89\u88c5<code>GitLab</code>\u63d2\u4ef6 </li> </ul> <p>https://github.com/helm/charts/blob/master/stable/sonarqube/values.yaml</p> <pre><code>image:\n  repository: sonarqube\n  tag: 8.4.1-community\nservice:\n  type: NodePort\nplugins:\n  intsalls:\n    - https://github.com/gabrie-allaigre/sonar-gitlab-plugin/releases/download/4.1.0-SNAPSHOT/sonar-gitlab-plugin-4.1.0-SNAPSHOT.jar\n</code></pre> <pre><code>$ helm upgrade sonarqube  oteemocharts/sonarqube -n sonarqube -f values.yaml\n</code></pre> <p><code>admin/settings?category=almintegration</code></p> <p></p> <p>gitlab part</p> <p>admin/applications</p> <ul> <li>http://localhost:32314/oauth2/callback/gitlab</li> <li>Application ID: 706e48d74eabfb7330beaf747732182833ceb79fa43ac180e248a4b77f55cfed</li> <li>Secret: 646b3c54b4244d0fc5ccf8cf906728c2818a60e285675186dd731b21a189c0c8</li> </ul> <p></p> <p>\u914d\u7f6e\u597d<code>sonarQube GitLab</code>\u63d2\u4ef6\u540e\uff0c\u9700\u8981\u4e3a<code>sonar-scanner</code>\u6dfb\u52a0\u51e0\u4e2a\u53c2\u6570\uff0c\u4ee5\u544a\u8bc9<code>SonarQube</code>  \u5c06\u5206\u6790\u7ed3\u679c\u5173\u8054<code>GitLab</code>\u7684\u76f8\u5e94<code>commit</code>\u4e0a\u3002 </p> <pre><code>script{ \n\n    def sonarHome = tool name: 'sonarqube3.2.0', type: 'hudson.plugins.sonar.SonarRunnerInstallation' \n    def GIT_COMMIT_ID = sh( \n        script: \"git rev\u2014parse \u2014\u2014short=10 HEAD\", \n        returnStdout: true \n)\n\nsh \"${sonarHome}/bin/sonar\u2014scanner \u2014Dsonar.host.url=${SONAR_HOST_URL} \u2014Dsonar.analysis.mode=preview \u2014Dsonar.gitlab.ref_name=master-Dsonar.gitlab.project_id=jenkins\u2014book/sonarqube \u2014Dsonar.projectName=jenkins\u2014book\u2014Dsonar.gitlab.commit_sha=${GIT_COMMIT_ID} \u2014Dsonar.login=${SONAR_AUTH_TOKEN}\" \n} \n</code></pre> <p>\u9996\u5148\u901a\u8fc7<code>sh</code>\u6b65\u9aa4\u83b7\u53d6\u4ee3\u7801\u7684<code>commitID</code>\uff0c\u7136\u540e\u5728\u6267\u884c\u626b\u63cf\u65f6\u52a0\u4eba\u5982\u4e0b\u53c2\u6570.</p> <ul> <li><code>-Dsonar.analysis.mode</code>\uff1a\u5206\u6790\u62a5\u544a\u6a21\u5f0f\uff0c\u503c\u4e3a<code>preview</code>\uff0c\u4ee3\u8868\u5c06\u7ed3\u679c\u63a8\u9001\u5230<code>GitLab</code>\u3002\u6b64\u53c2\u6570\u867d \u7136\u5b98\u65b9\u6807\u6ce8<code>SonarQube 6.6\u540e</code>\u88ab\u5e9f\u5f03. </li> <li><code>-Dsonar.gitlab.ref_name</code>\uff1a\u5206\u652f\u540d\u79f0\u3002 </li> <li><code>-Dsonar.gitlab.project_id</code>: <code>GitLab</code>\u5bf9\u4e00\u5e94\u7684\u9879\u76ee\u8def\u5f84\u3002 </li> <li><code>Dsonar.projectName</code>\uff1a\u5bf9\u5e94<code>SonarQube</code>\u4e0a\u7684\u9879\u76ee\u540d\u79f0\u3002 </li> <li><code>-Dsonar.gitlab.comit_sha</code>\uff1a\u4ee3\u7801\u7684commitID </li> </ul> <p>\u5f53<code>SonarQube</code>\u5206\u6790\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728<code>GitLab</code>\u7684\u76f8\u5e94<code>Commit</code>\u9875\u9762\u4e0a\u7684\u4ee3\u7801\u884c\u5185\u6216<code>commit</code>\u8bc4\u8bba\u533a\u770b\u5230\u5206\u6790\u7ed3\u679c\u4e86</p>"},{"location":"chap8/3chap8_code_quality_allure/","title":"\u7b2c\u4e09\u8282 Allure\u6d4b\u8bd5\u62a5\u544a\uff1a\u66f4\u7f8e\u89c2\u7684\u6d4b\u8bd5\u62a5\u544a","text":""},{"location":"chap8/3chap8_code_quality_allure/#1-allure","title":"1. Allure\u6d4b\u8bd5\u62a5\u544a\u4ecb\u7ecd","text":"<p>\u662f\u4e0d\u662f\u89c9\u5f97<code>JUnit</code>\u8f93\u51fa\u7684\u6d4b\u8bd5\u62a5\u544a\u4e0d\u7f8e\u89c2\u3002 \u4e0d\u53ea\u662f<code>JUnit</code>\u5f88\u591a\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u7684\u6d4b\u8bd5\u6846\u67b6\u7684\u6d4b\u8bd5\u62a5\u544a\u4e5f\u5dee\u4e0d\u591a\u3002<code>Allure</code>\u6d4b\u8bd5\u62a5\u544a\u662f\u4e00\u4e2a\u6846\u67b6, \u80fd\u5c06\u5404\u79cd\u6d4b\u8bd5\u62a5\u544a\u66f4\u7f8e\u89c2\u5730\u5448\u73b0\u51fa\u6765\u3002 </p>"},{"location":"chap8/3chap8_code_quality_allure/#2-alluremavenjenkins","title":"2. \u96c6\u6210Allure\u3001Maven\u3001Jenkins","text":"<p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06<code>Allure</code>\u3001 <code>Mavens</code> <code>Jenkins</code>\u96c6\u6210\u3002<code>Allure</code>\u4e0e\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u53ca\u6784\u5efa\u5de5\u5177\u7684\u96c6\u6210\u4e0e \u6b64\u7c7b\u4f3c\u3002 \u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ul> <li>(1\uff09\u5b89\u88c5<code>Allure Jenkin</code>s\u63d2\u4ef6\uff0c\u8fdb\u4ebaJenkins\u7684<code>Manage Jenkins -&gt; Global Tool Configuration - Allure Commandline</code>\u9875\uff0c\u914d\u7f6e<code>Allure</code>\u81ea\u52a8\u4e0b\u8f7d\u5e76 \u88c5\u7684\u7248\u672c</li> </ul> <p></p> <ul> <li> <p>(2)\u5728<code>pom.xml</code>\u6587\u4ef6\u4e2d\u52a0\u5165\u4f9d\u8d56\u3002 </p> </li> <li> <p>(3\uff09\u5728<code>pom.xml</code>\u6587\u4ef6\u4e2d\u52a0\u5165<code>Allure</code>\u63d2\u4ef6\uff08<code>https://github.com/allure-framework/allure-maven</code> )\u3002 </p> </li> </ul> <pre><code>&lt;dependency&gt;\n        &lt;groupId&gt;io.qameta.allure&lt;/groupId&gt;\n        &lt;artifactId&gt;allure-junit4&lt;/artifactId&gt;\n        &lt;version&gt;2.6.0&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <pre><code>&lt;plugin&gt; \n        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n        &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt; \n        &lt;version&gt;2.19.1&lt;/version&gt; \n        &lt;configuration&gt; \n        &lt;argLine&gt; \n             - javaagent:\" ${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar\"\n        &lt;/argLine&gt;\n        &lt;properties&gt; \n        &lt;property&gt; \n        &lt;name&gt;listener&lt;/name&gt; \n        &lt;value&gt;io.qameta.allure.junit4/AllureJunit4&lt;/value&gt; \n      &lt;/property&gt; \n    &lt;/properties&gt; \n    &lt;systemProperties&gt; \n      &lt;property&gt; \n        &lt;name&gt;allure.results.directory&lt;/name&gt; \n        &lt;value&gt;${project.build.directory}/allure-results&lt;/value&gt; \n      &lt;/property&gt; \n      &lt;property&gt;  \n        &lt;name&gt;allure.link.issue.pattern&lt;/name&gt; \n        &lt;value&gt;https://example.org/issue/{}&lt;/value&gt; \n      &lt;/property&gt; \n    &lt;/systemProperties&gt; \n    &lt;/configuration&gt; \n    &lt;dependencies&gt;\n      &lt;dependency&gt; \n      &lt;groupId&gt;org.aspectj&lt;/groupId&gt; \n      &lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;\n      &lt;version&gt;${aspectj.version}&lt;/version&gt; \n      &lt;/dependency&gt;\n    &lt;/dependencies&gt; \n  &lt;/plugin&gt;\n  &lt;plugin&gt;\n    &lt;groupId&gt;io.qameta.allure&lt;/groupId&gt; \n    &lt;artifactId&gt;allure-maven&lt;/artifactId&gt; \n    &lt;version&gt;2.8&lt;/version&gt; \n  &lt;/plugin&gt;\n</code></pre> <p>(4\uff09\u5728<code>Jenkinsfile</code>\u4e2d\u7684<code>post</code> \u9636\u6bb5\u52a0\u5165<code>allure</code>\u6b65\u9aa4\u3002 </p> <pre><code>script { \n    allure([ \n        includeProperties: false, \n        jdk: '', \n        properties: [], \n        reportBuildPolicy: 'ALWAYS', \n        results: [[path: 'target/allure-results']]\n    ]) \n} \n</code></pre> <p></p>"},{"location":"chap8/4chap8_code_quality_integration/","title":"\u7b2c\u56db\u5b63 \u4ee3\u7801\u8d28\u91cf\u5e73\u53f0\u96c6\u6210(SonarQube Final Edition)","text":""},{"location":"chap8/4chap8_code_quality_integration/#1-sonarqube","title":"1\u3001 SonarQube \u5e73\u53f0\u7b80\u4ecb\u4e0e\u914d\u7f6e","text":"<ol> <li> <p>\u4e00\u53f0SonarQube Server\u542f\u52a83\u4e2a\u4e3b\u8981\u8fc7\u7a0b\uff1a </p> <ol> <li>Web\u670d\u52a1\u5668\uff0c\u4f9b\u5f00\u53d1\u4eba\u5458\uff0c\u7ba1\u7406\u4eba\u5458\u6d4f\u89c8\u9ad8\u8d28\u91cf\u7684\u5feb\u7167\u5e76\u914d\u7f6eSonarQube\u5b9e\u4f8b </li> <li>\u57fa\u4e8e<code>Elasticsearch</code>\u7684<code>Search Server</code>\u4ece<code>UI</code>\u8fdb\u884c\u540e\u9000\u641c\u7d22 </li> <li><code>Compute Engine</code>\u670d\u52a1\u5668\uff0c\u8d1f\u8d23\u5904\u7406\u4ee3\u7801\u5206\u6790\u62a5\u544a\u5e76\u5c06\u5176\u4fdd\u5b58\u5728<code>SonarQube</code>\u6570\u636e\u5e93\u4e2d </li> </ol> </li> <li> <p>\u4e00\u4e2aSonarQube\u6570\u636e\u5e93\u8981\u5b58\u50a8\uff1a </p> <ol> <li>SonarQube\u5b9e\u4f8b\u7684\u914d\u7f6e\uff08\u5b89\u5168\u6027\uff0c\u63d2\u4ef6\u8bbe\u7f6e\u7b49\uff09 </li> <li>\u9879\u76ee\uff0c\u89c6\u56fe\u7b49\u7684\u8d28\u91cf\u8bc0\u7167\u3002 </li> </ol> </li> <li>\u670d\u52a1\u5668\u4e0a\u5b89\u88c5\u4e86\u591a\u4e2a<code>SonarQube</code>\u63d2\u4ef6\uff0c\u53ef\u80fd\u5305\u62ec\u8bed\u8a00\uff0cSCM\uff0c\u96c6\u6210\uff0c\u8eab\u4efd\u9a8c\u8bc1\u548c\u7ba1\u7406\u63d2\u4ef6 </li> <li>\u5728\u6784\u5efa\uff0f\u6301\u7eed\u96c6\u6210\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u4e00\u4e2a\u6216\u591a\u4e2a<code>SonarScanner</code>\uff0c\u4ee5\u5206\u6790\u9879\u76ee </li> </ol> <p>\u7ec4\u4ef6\u7ec4\u6210</p> <ol> <li>sonarqube server \uff1a \u4ed6\u6709\u4e09\u4e2a\u7a0b\u5e8f\u5206\u522b\u662f <code>webserver</code>\uff08\u914d\u7f6e\u548c\u7ba1\u7406sonar\uff09 <code>searchserver</code>\uff08\u641c\u7d22\u7ed3\u679c\u8fd4\u56de\u7ed9<code>sonarUI</code>\uff09  <code>ComplateEngineserver</code>\uff08\u8ba1\u7b97\u670d\u52a1 \u5c06\u5206\u6790\u7ed3\u679c\u5165\u5e93\uff09\u3002</li> <li><code>sonarqube db</code> : \u6570\u636e\u5e93 \u5b58\u653e\u914d\u7f6e\u3002</li> <li><code>sonarqube plugins</code>\uff1a \u63d2\u4ef6\u589e\u52a0\u529f\u80fd\u3002</li> <li><code>sonar-scanner</code> \uff1a \u4ee3\u7801\u626b\u63cf\u5de5\u5177\u53ef\u4ee5\u6709\u591a\u4e2a\u3002</li> </ol> <p></p>"},{"location":"chap8/4chap8_code_quality_integration/#1-1","title":"1-1 \u5de5\u4f5c\u6d41\u7a0b","text":"<p>\u4e0b\u9762\u7684\u6a21\u5f0f\u5c55\u793a\u4e86SonarQube\u5982\u4f55\u4e0e\u5176\u4ed6ALM\u5de5\u5177\u96c6\u6210\uff0c\u4ee5\u53ca\u4f7f\u7528SONARQUE\u7684\u5404\u79cd\u7ec4\u4ef6\u3002</p> <ul> <li>\u5f00\u53d1\u4eba\u5458\u5728IDE\u4e2d\u7f16\u5199\u4ee3\u7801\uff0c\u5e76\u4f7f\u7528SONARLILT\u6765\u8fd0\u884c\u672c\u5730\u5206\u6790</li> <li>\u5f00\u53d1\u4eba\u5458\u5c06\u4ed6\u4eec\u7684\u4ee3\u7801\u63a8\u5230\u4ed6\u4eec\u6700\u559c\u6b22\u7684SCM\uff1aGit\uff0cSvn\uff0cTFVC\uff0c\u2026</li> <li>\u8fde\u7eed\u96c6\u6210\u670d\u52a1\u5668\u89e6\u53d1\u81ea\u52a8\u6784\u5efa\uff0c\u6267\u884cSONARQUE\u626b\u63cf\u5668\u9700\u8981\u8fd0\u884cSONARQUE\u5206\u6790\u3002</li> <li>\u5206\u6790\u62a5\u544a\u88ab\u53d1\u9001\u5230SONARQUE\u670d\u52a1\u5668\u8fdb\u884c\u5904\u7406\u3002</li> <li>SONARQUE\u670d\u52a1\u5668\u5728SONARQUE\u6570\u636e\u5e93\u4e2d\u5904\u7406\u548c\u5b58\u50a8\u5206\u6790\u62a5\u544a\u7ed3\u679c\uff0c\u5e76\u5c06\u7ed3\u679c\u663e\u793a\u5728UI\u4e2d\u3002</li> <li>\u5f00\u53d1\u4eba\u5458\u5ba1\u67e5\u3001\u8bc4\u8bba\u3001\u6311\u6218\u4ed6\u4eec\u7684\u95ee\u9898\uff0c\u901a\u8fc7SONARQUE UI\u7ba1\u7406\u548c\u51cf\u5c11\u4ed6\u4eec\u7684\u6280\u672f\u503a\u52a1\u3002</li> <li>\u7ba1\u7406\u8005\u4ece\u5206\u6790\u4e2d\u5f97\u5230\u62a5\u544a\u3002</li> <li><code>OPS</code>\u4f7f\u7528API\u6765\u81ea\u52a8\u914d\u7f6e\u5e76\u4ece<code>SONARQUE</code>\u4e2d\u63d0\u53d6\u6570\u636e\u3002</li> <li><code>OPS</code>\u4f7f\u7528JMX\u76d1\u63a7SONARQUBE\u670d\u52a1\u5668</li> </ul>"},{"location":"chap8/4chap8_code_quality_integration/#1-2-sonarqube","title":"1-2 SonarQube\u5b89\u88c5","text":"<p>On server</p> <ul> <li>\u8fd0\u884c<code>SonarQube</code>\u7684\u552f\u4e00\u524d\u63d0\u6761\u4ef6\u662f\u5728\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5Java (Oracle JRE 11\u6216OpenJDK 11) </li> <li>\u5b9e\u4f8b\u81f3\u5c11\u9700\u8981<code>2GB</code>\u7684<code>RAM</code>\u624d\u80fd\u6709\u6548\u8fd0\u884c\uff0c\u800c<code>OS</code>\u5219\u9700\u8981<code>1GB</code>\u7684\u53ef\u7528<code>RAM</code> </li> <li>\u6bcf\u4e2a\u8282\u70b9\u5206\u914d<code>50Gb</code>\u7684\u9a71\u52a8\u5668\u7a7a\u95f4 </li> <li>\u5b89\u88c5\u5728\u5177\u6709\u51fa\u8272\u8bfb\u5199\u6027\u80fd\u7684\u786c\u76d8\u9a71\u52a8\u5668\u4e0a\uff08\u201c\u6570\u636e\u201d\u6587\u4ef6\u5939\u4e2d\u5305\u542b<code>Elasticsearch</code>\u7d22\u5f15\uff0c\u5f53\u670d\u52a1\u5668\u542f\u52a8\u5e76\u8fd0\u884c\u65f6\uff0c\u5c06\u5728\u8be5\u7d22\u5f15\u4e0a\u8fdb\u884c\u5927\u91cf\u7684I/O) </li> <li><code>SonarQube</code>\u5728\u670d\u52a1\u5668\u7aef\u4e0d\u652f\u6301<code>32</code>\u4f4d\u7cfb\u7edf\u3002\u4f46\u662f\uff0c<code>SonarQube</code>\u786e\u5b9e\u5728\u626b\u63cf\u4eea\u4fa7\u652f\u6301<code>32</code>\u4f4d\u7cfb\u7edf\u3002 </li> </ul> <p>\u652f\u6301\u5e73\u53f0</p> <ul> <li>\u8fd0\u884c<code>SonarQube</code>\u7684\u552f\u4e00\u524d\u63d0\u6761\u4ef6\u662f\u5728\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5<code>Java (Oracle JRE 11</code>\u6216<code>Open.JDK 11</code>) </li> </ul> <p></p> <pre><code>sysctl -w vm.max_ma_count=262144 \nsysctl -w fs.file-max=65536\nulimit -n 65536 \nulimit -u 4096 \n</code></pre> <p>Install For Docker</p> <pre><code>docker run --rm -d --name sonarqube \\ \n-p 9000:9000 \\ \n-v ${LOCALDIR}/sonar/sonarqube_conf:/opt/sonarqube/conf \\\n-v ${LOCALDIR}/sonar/sonarqube_extensions:/opt/sonarqube/extensions \\ \n-v ${LOCALDIR}/sonar/sonarqube_logs:/opt/sonarqube/logs \\ \n-v ${LOCALDIR}/sonar/sonarqube data:/opt/sonarqube/data \\ \nsonarqube:8.4.1-community \n</code></pre>"},{"location":"chap8/4chap8_code_quality_integration/#1-3","title":"1-3 \u670d\u52a1\u96c6\u6210","text":"<p>LDAPS</p> <p></p> <pre><code>vim sonarqube_conf/sonar.properties\n\n\n#LDAP sesttings \n#admin \n\nsonar.security.realm=LDAP \nldap.url=ldap://192.168.1.200:389 \nldap.bindDn=cn=admin,dc=devops,dc=com \nldap.bindPassword=ldap123 \n\n# users\nldap.user.baseDn=ou=jenkins,dc=devops,dc=com \nldap.user.request= (&amp;(objectClass=inetOrgPerson)(cn={login})) \nldap.user.realNameAttribute=cn \nldap.user.emailAttribute=mail\n</code></pre> <p>gitlab integration</p> <ul> <li>gitlab part</li> </ul> <p><code>admin/applications</code></p> <ul> <li>http://localhost:32314/oauth2/callback/gitlab</li> <li>Application ID: 706e48d74eabfb7330beaf747732182833ceb79fa43ac180e248a4b77f55cfed</li> <li>Secret: 646b3c54b4244d0fc5ccf8cf906728c2818a60e285675186dd731b21a189c0c8</li> </ul> <p></p> <ul> <li><code>admin/settings?category=almintegration</code></li> </ul> <p></p>"},{"location":"chap8/4chap8_code_quality_integration/#2sonarqube","title":"2\u3001<code>SonarQube</code> \u626b\u63cf\u4eea\u914d\u7f6e","text":"<p>https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner  </p>"},{"location":"chap8/4chap8_code_quality_integration/#3sonarqube","title":"3\u3001<code>SonarQube</code> \u672c\u5730\u4f7f\u7528\u626b\u63cf\u4eea\u9879\u76ee\u5206\u6790\u914d\u7f6e","text":""},{"location":"chap8/4chap8_code_quality_integration/#3-1-maven","title":"3-1 \u4e0b\u8f7d\u4e00\u4e2a\u7b80\u5355\u7684<code>maven</code>\u9879\u76ee\u5230\u672c\u5730","text":"<pre><code>$ git clone https://github.com/zeyangli/simple-java-maven-app\n$ cd simple-java-maven-app\n$ mv simple-java-maven-app demo-maven-service\n$ mvn clean package\n\n[INFO] Scanning for projects...\n[INFO] \n[INFO] ----------------------&lt; com.mycompany.app:my-app &gt;----------------------\n[INFO] Building my-app 1.1-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ my-app ---\n[INFO] \n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ my-app ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /home/vagrant/test/simple-java-maven-app/src/main/resources\n[INFO] \n[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ my-app ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /home/vagrant/test/simple-java-maven-app/target/classes\n[INFO] \n[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ my-app ---\n[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] skip non existing resourceDirectory /home/vagrant/test/simple-java-maven-app/src/test/resources\n[INFO] \n[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ my-app ---\n[INFO] Changes detected - recompiling the module!\n[WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent!\n[INFO] Compiling 1 source file to /home/vagrant/test/simple-java-maven-app/target/test-classes\n[INFO] \n[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ my-app ---\n[INFO] Surefire report directory: /home/vagrant/test/simple-java-maven-app/target/surefire-reports\n\n-------------------------------------------------------\n T E S T S\n-------------------------------------------------------\nRunning com.mycompany.app.AppTest\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.075 sec\n\nResults :\n\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0\n\n[INFO] \n[INFO] --- maven-jar-plugin:3.0.2:jar (default-jar) @ my-app ---\n[INFO] Building jar: /home/vagrant/test/simple-java-maven-app/target/my-app-1.1-SNAPSHOT.jar\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  5.512 s\n[INFO] Finished at: 2020-08-01T06:10:01Z\n[INFO] ------------------------------------------------------------------------\n</code></pre> <pre><code>$ tree target/\ntarget/\n\u251c\u2500\u2500 classes\n\u2502   \u2514\u2500\u2500 com\n\u2502       \u2514\u2500\u2500 mycompany\n\u2502           \u2514\u2500\u2500 app\n\u2502               \u2514\u2500\u2500 App.class\n\u251c\u2500\u2500 maven-archiver\n\u2502   \u2514\u2500\u2500 pom.properties\n\u251c\u2500\u2500 maven-status\n\u2502   \u2514\u2500\u2500 maven-compiler-plugin\n\u2502       \u251c\u2500\u2500 compile\n\u2502       \u2502   \u2514\u2500\u2500 default-compile\n\u2502       \u2502       \u251c\u2500\u2500 createdFiles.lst\n\u2502       \u2502       \u2514\u2500\u2500 inputFiles.lst\n\u2502       \u2514\u2500\u2500 testCompile\n\u2502           \u2514\u2500\u2500 default-testCompile\n\u2502               \u251c\u2500\u2500 createdFiles.lst\n\u2502               \u2514\u2500\u2500 inputFiles.lst\n\u251c\u2500\u2500 my-app-1.1-SNAPSHOT.jar\n\u251c\u2500\u2500 surefire-reports\n\u2502   \u251c\u2500\u2500 com.mycompany.app.AppTest.txt\n\u2502   \u2514\u2500\u2500 TEST-com.mycompany.app.AppTest.xml\n\u2514\u2500\u2500 test-classes\n    \u2514\u2500\u2500 com\n        \u2514\u2500\u2500 mycompany\n            \u2514\u2500\u2500 app\n                \u2514\u2500\u2500 AppTest.class\n\n16 directories, 10 files\n</code></pre>"},{"location":"chap8/4chap8_code_quality_integration/#3-2-run-sonarscanner-from-the-docker-image","title":"3-2  Run SonarScanner from the Docker image","text":"<pre><code>docker run \\\n    --rm \\\n    -e SONAR_HOST_URL=\"http://192.168.33.1:32314\" \\\n    -e SONAR_LOGIN=\"admin\" \\\n    -e SONAR_PASSWORD=\"admin\" \\\n    -v \"/home/vagrant/tools/sonar:/usr/src\" \\\n    sonarsource/sonar-scanner-cli -Dsonar.projectKey=demo-maven-service\n</code></pre> <pre><code>docker run \\\n    --rm \\\n    -e SONAR_HOST_URL=\"http://${SONARQUBE_URL}\" \\\n    -v \"${YOUR_REPO}:/usr/src\" \\\n    sonarsource/sonar-scanner-cli\n</code></pre> <pre><code>$ docker run \\\n&gt;     --rm \\\n&gt;     -e SONAR_HOST_URL=\"http://192.168.33.1:32314\" \\\n&gt;     -e SONAR_LOGIN=\"admin\" \\\n&gt;     -e SONAR_PASSWORD=\"admin\" \\\n&gt;     -v \"/home/vagrant/tools/sonar:/usr/src\" \\\n&gt;     sonarsource/sonar-scanner-cli -Dsonar.projectKey=demo-maven-service\nINFO: Scanner configuration file: /opt/sonar-scanner/conf/sonar-scanner.properties\nINFO: Project root configuration file: NONE\nINFO: SonarScanner 4.4.0.2170\nINFO: Java 11.0.6 AdoptOpenJDK (64-bit)\nINFO: Linux 3.10.0-957.12.2.el7.x86_64 amd64\nINFO: User cache: /opt/sonar-scanner/.sonar/cache\nINFO: Scanner configuration file: /opt/sonar-scanner/conf/sonar-scanner.properties\nINFO: Project root configuration file: NONE\nINFO: Analyzing on SonarQube server 8.4.1\nINFO: Default locale: \"en_US\", source code encoding: \"UTF-8\" (analysis is platform dependent)\nINFO: Load global settings\nINFO: Load global settings (done) | time=376ms\nINFO: Server id: EA8D9556-AXOeledPvj9r7r4MIG91\nINFO: User cache: /opt/sonar-scanner/.sonar/cache\nINFO: Load/download plugins\nINFO: Load plugins index\nINFO: Load plugins index (done) | time=341ms\nINFO: Load/download plugins (done) | time=8919ms\nINFO: Process project properties\nINFO: Process project properties (done) | time=1ms\nINFO: Execute project builders\nINFO: Execute project builders (done) | time=7ms\nINFO: Project key: demo-maven-service\nINFO: Base dir: /usr/src\nINFO: Working dir: /usr/src/.scannerwork\nINFO: Load project settings for component key: 'demo-maven-service'\nINFO: Load quality profiles\nINFO: Load quality profiles (done) | time=754ms\nINFO: Load active rules\nINFO: Load active rules (done) | time=6033ms\nWARN: SCM provider autodetection failed. Please use \"sonar.scm.provider\" to define SCM of your project, or disable the SCM Sensor in the project settings.\nINFO: Indexing files...\nINFO: Project configuration:\nINFO: 1 file indexed\nINFO: ------------- Run sensors on module demo-maven-service\nINFO: Load metrics repository\nINFO: Load metrics repository (done) | time=365ms\nWARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by net.sf.cglib.core.ReflectUtils$1 (file:/opt/sonar-scanner/.sonar/cache/52f5340dd05620cd162e2b9a45a57124/sonar-javascript-plugin.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)\nWARNING: Please consider reporting this to the maintainers of net.sf.cglib.core.ReflectUtils$1\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\nINFO: Sensor SonarCSS Rules [cssfamily]\nINFO: No CSS, PHP, HTML or VueJS files are found in the project. CSS analysis is skipped.\nINFO: Sensor SonarCSS Rules [cssfamily] (done) | time=1ms\nINFO: Sensor JaCoCo XML Report Importer [jacoco]\nINFO: 'sonar.coverage.jacoco.xmlReportPaths' is not defined. Using default locations: target/site/jacoco/jacoco.xml,target/site/jacoco-it/jacoco.xml,build/reports/jacoco/test/jacocoTestReport.xml\nINFO: No report imported, no coverage information will be imported by JaCoCo XML Report Importer\nINFO: Sensor JaCoCo XML Report Importer [jacoco] (done) | time=2ms\nINFO: Sensor JavaXmlSensor [java]\nINFO: Sensor JavaXmlSensor [java] (done) | time=0ms\nINFO: Sensor HTML [web]\nINFO: Sensor HTML [web] (done) | time=8ms\nINFO: ------------- Run sensors on project\nINFO: Sensor Zero Coverage Sensor\nINFO: Sensor Zero Coverage Sensor (done) | time=9ms\nINFO: SCM Publisher No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.\nINFO: CPD Executor Calculating CPD for 0 files\nINFO: CPD Executor CPD calculation finished (done) | time=0ms\nINFO: Analysis report generated in 202ms, dir size=79 KB\nINFO: Analysis report compressed in 39ms, zip size=10 KB\nINFO: Analysis report uploaded in 623ms\nINFO: ANALYSIS SUCCESSFUL, you can browse http://192.168.33.1:32314/dashboard?id=demo-maven-service\nINFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report\nINFO: More about the report processing at http://192.168.33.1:32314/api/ce/task?id=AXOztIcYdI8p8GdhXo8N\nINFO: Analysis total time: 13.094 s\nINFO: ------------------------------------------------------------------------\nINFO: EXECUTION SUCCESS\nINFO: ------------------------------------------------------------------------\nINFO: Total time: 25.064s\nINFO: Final Memory: 6M/37M\nINFO: ------------------------------------------------------------------------\n</code></pre>"},{"location":"chap8/4chap8_code_quality_integration/#3-3-run-sonarscanner-on-linux-server","title":"3-3  Run SonarScanner on Linux server","text":"<pre><code>cd /usr/local/\nsudo wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.4.0.2170-linux.zip\nunzip sonar-scanner-cli-4.4.0.2170-linux.zip\nmv sonar-scanner-cli-4.4.0.2170-linux sonar-scanner\n\ncd /usr/local/sonar-scanner\n$ tree bin/\nbin/\n\u251c\u2500\u2500 sonar-scanner\n\u2514\u2500\u2500 sonar-scanner-debug\n\n0 directories, 2 files\n\n$ tree conf/\nconf/\n\u2514\u2500\u2500 sonar-scanner.properties\n\n0 directories, 1 file\n\nsudo vim /usr/local/sonar-scanner/conf/sonar-scanner.properties\n\n...\nsonar.host.url=http://192.168.33.1:32314\n</code></pre> <p>sudo vim /etc/profile.d/scanner.sh</p> <p>export SONAR_HOME=/usr/local/sonar-scanner/ export PATH=$PATH:$SONAR_HOME/bin</p> <pre><code>cd demo-maven-service\nvim sonarqube.sh\n\n# can run the command in script\nsonar-scanner -Dsonar.host.url=http://192.168.33.1:32314 \\\n-Dsonar.projectKey=demomavenservice \\\n-Dsonar.projectName=demomavenservice \\\n--define sonar.login=admin \\\n--define sonar.password=admin \\\n--define sonar.projectVersion=1.0 \\\n--define sonar.ws.timeout=30 \\\n--define sonar.projectDescription=\"my first project\" \\\n--define sonar.links.homepage=http://www.baidu.com  \\\n--define sonar.sources=src \\\n--define sonar.sourceEncoding=UTF-8 \\\n--define sonar.java.binaries=target/classes \\\n--define sonar.java.test.binaries=target/test\u2014classes \\\n--define sonar.java.surefire.report=target/surefire\u2014reports\n</code></pre> <p>Run the script</p> <pre><code>source sonarqube.sh\nINFO: Scanner configuration file: /usr/local/sonar-scanner/conf/sonar-scanner.properties\nINFO: Project root configuration file: NONE\nINFO: SonarScanner 4.4.0.2170\nINFO: Java 11.0.3 AdoptOpenJDK (64-bit)\nINFO: Linux 3.10.0-957.12.2.el7.x86_64 amd64\nINFO: User cache: /home/vagrant/.sonar/cache\nINFO: Scanner configuration file: /usr/local/sonar-scanner/conf/sonar-scanner.properties\nINFO: Project root configuration file: NONE\nINFO: Analyzing on SonarQube server 8.4.1\nINFO: Default locale: \"en_US\", source code encoding: \"UTF-8\"\nINFO: Load global settings\nINFO: Load global settings (done) | time=377ms\nINFO: Server id: EA8D9556-AXOeledPvj9r7r4MIG91\nINFO: User cache: /home/vagrant/.sonar/cache\n...\nINFO: Analysis report compressed in 71ms, zip size=14 KB\nINFO: Analysis report uploaded in 378ms\nINFO: ANALYSIS SUCCESSFUL, you can browse http://192.168.33.1:32314/dashboard?id=demomavenservice\nINFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report\nINFO: More about the report processing at http://192.168.33.1:32314/api/ce/task?id=AXO4OmSidI8p8GdhXo8b\nINFO: Analysis total time: 14.196 s\nINFO: ------------------------------------------------------------------------\nINFO: EXECUTION SUCCESS\nINFO: ------------------------------------------------------------------------\nINFO: Total time: 16.430s\nINFO: Final Memory: 16M/61M\nINFO: ------------------------------------------------------------------------\n</code></pre> <p></p>"},{"location":"chap8/4chap8_code_quality_integration/#4","title":"4\u3001\u4f7f\u7528\u6d41\u6c34\u7ebf\u8fdb\u884c\u81ea\u52a8\u5316\u4ee3\u7801\u626b\u63cf","text":""},{"location":"chap8/4chap8_code_quality_integration/#4-1-sonarqube-scanner-sharedlibrary","title":"4-1 \u586b\u5199<code>sonarqube scanner</code>\u5230 <code>sharedlibrary</code>","text":"<p><code>JenkinslibTest/src/org/devops/sonarqube.groovy</code></p> <pre><code>package org.devops\n\n//scan\ndef SonarScan(projectName,projectDesc,projectPath){\n    def scannerHome = \"/usr/local/sonar-scanner/\"\n    //\u5b9a\u4e49\u670d\u52a1\u5668\u5217\u8868\n    def sonarServers = \"http://192.168.33.1:32314\"\n    def sonarDate = sh  returnStdout: true, script: 'date  +%Y%m%d%H%M%S'\n    sonarDate = sonarDate - \"\\n\"\n\n    sh \"\"\" \n         ${scannerHome}/bin/sonar-scanner -Dsonar.host.url=${sonarServers} \\\n        -Dsonar.projectKey=${projectName} \\\n        -Dsonar.projectName=${projectName} \\\n        --define sonar.login=admin \\\n        --define sonar.password=admin \\\n        --define sonar.projectVersion=${sonarDate} \\\n        --define sonar.ws.timeout=30 \\\n        --define sonar.projectDescription=${projectDesc} \\\n        --define sonar.links.homepage=http://www.baidu.com  \\\n        --define sonar.sources=${projectPath} \\\n        --define sonar.sourceEncoding=UTF-8 \\\n        --define sonar.java.binaries=target/classes \\\n        --define sonar.java.test.binaries=target/test\u2014classes \\\n        --define sonar.java.surefire.report=target/surefire\u2014reports\n    \"\"\"\n}\n</code></pre>"},{"location":"chap8/4chap8_code_quality_integration/#4-2-pipeline-sharedlibrary","title":"4-2 <code>Pipeline</code>\u8c03\u7528 <code>sharedlibrary</code>","text":"<pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\ndef sonar = new org.devops.sonarqube()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n                } \n            }\n        }\n\n        stage('Qa') {\n            steps {\n                script {\n                    sonar.SonarScan(\"${JOB_NAME}\",\"${JOB_NAME}\",\"src\" )\n                } \n            }\n        }    \n    }\n }\n</code></pre> <pre><code>stage('Qa') {\n    steps {\n        script {\n            sonar.SonarScan(\"${JOB_NAME}\",\"${JOB_NAME}\",\"src\" )\n        } \n    }\n}\n</code></pre>"},{"location":"chap8/4chap8_code_quality_integration/#4-3-console-output","title":"4-3 Console Output","text":"<pre><code>...\n[Pipeline] sh\n+ date +%Y%m%d%H%M%S\n[Pipeline] sh\n+ /usr/local/sonar-scanner//bin/sonar-scanner -Dsonar.host.url=http://192.168.33.1:32314 -Dsonar.projectKey=sq4scanner -Dsonar.projectName=sq4scanner --define sonar.login=admin --define sonar.password=admin --define sonar.projectVersion=20200801135329 --define sonar.ws.timeout=30 --define sonar.projectDescription=sq4scanner --define sonar.links.homepage=http://www.baidu.com --define sonar.sources=src --define sonar.sourceEncoding=UTF-8 --define sonar.java.binaries=target/classes --define sonar.java.test.binaries=target/test\u2014classes --define sonar.java.surefire.report=target/surefire\u2014reports\nINFO: Scanner configuration file: /usr/local/sonar-scanner/conf/sonar-scanner.properties\nINFO: Project root configuration file: NONE\nINFO: SonarScanner 4.4.0.2170\n...\nINFO: ANALYSIS SUCCESSFUL, you can browse http://192.168.33.1:32314/dashboard?id=sq4scanner\nINFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report\nINFO: More about the report processing at http://192.168.33.1:32314/api/ce/task?id=AXO4zE_WdI8p8GdhXo8n\nINFO: Analysis total time: 17.732 s\nINFO: ------------------------------------------------------------------------\nINFO: EXECUTION SUCCESS\nINFO: ------------------------------------------------------------------------\nINFO: Total time: 20.804s\nINFO: Final Memory: 16M/62M\n</code></pre>"},{"location":"chap8/4chap8_code_quality_integration/#5-sonar","title":"5\u3001\u4f7f\u7528 Sonar \u63d2\u4ef6\u5b8c\u6210\u4ee3\u7801\u626b\u63cf","text":"<p>SonarScanner for Jenkins</p> <p>Jenkins\u4e0eSonarQube\u96c6\u6210</p> <p><code>JenkinslibTest/src/org/devops/sonarqubeadv.groovy</code></p> <pre><code>package org.devops\n\n\n//scan\ndef SonarScan(projectName,projectDesc,projectPath){\n\n    withSonarQubeEnv(\"sonarqube\"){\n        def scannerHome = \"/usr/local/sonar-scanner/\"\n        def sonarServers = \"http://192.168.33.1:32314\"\n        def sonarDate = sh  returnStdout: true, script: 'date  +%Y%m%d%H%M%S'\n        sonarDate = sonarDate - \"\\n\"\n\n\n        sh \"\"\" \n            ${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=${projectName} \\\n            -Dsonar.projectName=${projectName} \\\n            --define sonar.projectVersion=${sonarDate} \\\n            --define sonar.ws.timeout=30 \\\n            --define sonar.projectDescription=${projectDesc} \\\n            --define sonar.links.homepage=http://www.baidu.com \\\n            --define sonar.sources=${projectPath} \\\n            --define sonar.sourceEncoding=UTF-8 \\\n            --define sonar.java.binaries=target/classes \\\n            --define sonar.java.test.binaries=target/test-classes \\\n            --define sonar.java.surefire.report=target/surefire-reports\n        \"\"\"\n    }\n}\n\n</code></pre> <pre><code> withSonarQubeEnv(\"sonarqube\"){\n\n }\n</code></pre> <ul> <li><code>withSonarQubeEnv(\"sonarqube\")</code> \u914d\u7f6e\u5728Jenkins\u4e2d</li> </ul> <p></p> <p><code>pipeline.groovy</code></p> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\ndef sonar = new org.devops.sonarqube()\ndef sonaradv = new org.devops.sonarqubeadv()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n                } \n            }\n        }\n\n        stage('Qa') {\n            steps {\n                script {\n                    sonaradv.SonarScan(\"${JOB_NAME}\",\"${JOB_NAME}\",\"src\" )\n                } \n            }\n        }    \n    }\n }\n</code></pre> <ul> <li><code>def sonaradv = new org.devops.sonarqubeadv()</code></li> </ul> <pre><code>stage('Qa') {\n            steps {\n                script {\n                    sonaradv.SonarScan(\"${JOB_NAME}\",\"${JOB_NAME}\",\"src\" )\n                } \n            }\n        }\n</code></pre> <p></p> <ul> <li>\u70b9\u51fb<code>sonarqube tab</code></li> </ul> <p></p>"},{"location":"chap8/4chap8_code_quality_integration/#5sonarqube","title":"5\u3001SonarQube \u9879\u76ee\u7ba1\u7406","text":""},{"location":"chap8/4chap8_code_quality_integration/#5-1-sonarqube-quality-profiles","title":"5-1 SonarQube - \u521b\u5efa\u65b0\u7684<code>Quality Profiles</code>","text":"<ul> <li>Name: demo</li> <li>Language: java</li> </ul>"},{"location":"chap8/4chap8_code_quality_integration/#5-1-1-activate-more-rules-for-demo-profiles","title":"5-1-1 Activate more rules for <code>demo</code> Profiles","text":""},{"location":"chap8/4chap8_code_quality_integration/#5-1-2-add-demo-profiles-to-the-projects","title":"5-1-2 Add <code>demo</code> Profiles to the projects","text":""},{"location":"chap8/4chap8_code_quality_integration/#5-2-sonarqube-quality-gates","title":"5-2 SonarQube - \u521b\u5efa\u65b0\u7684<code>Quality Gates</code>","text":""},{"location":"chap8/4chap8_code_quality_integration/#5-2-1-add-condition-to-the-quality-gates-for-projects","title":"5-2-1 Add condition to the Quality Gates for projects","text":"<p>Add more condition</p> <p></p> <p></p>"},{"location":"chap8/4chap8_code_quality_integration/#5-2-2-run-failed-becuase-of-condition","title":"5-2-2 Run failed becuase of condition","text":""},{"location":"chap8/4chap8_code_quality_integration/#5-3-jenkins-pipeline-sonarqube-sonarqube-plugin-function","title":"5-3 \u5728<code>jenkins pipeline</code>\u83b7\u53d6 <code>SonarQube</code> \u68c0\u6d4b\u7ed3\u679c (SonarQube plugin function\uff09","text":"<p><code>JenkinslibTest/src/org/devops/sonarqubeadv.groovy</code></p> <pre><code>package org.devops\n\n\n//scan\ndef SonarScan(projectName,projectDesc,projectPath){\n\n    withSonarQubeEnv(\"sonarqube\"){\n        def scannerHome = \"/usr/local/sonar-scanner/\"\n        def sonarServers = \"http://192.168.33.1:32314\"\n        def sonarDate = sh  returnStdout: true, script: 'date  +%Y%m%d%H%M%S'\n        sonarDate = sonarDate - \"\\n\"\n\n\n        sh \"\"\" \n            ${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=${projectName} \\\n            -Dsonar.projectName=${projectName} \\\n            --define sonar.projectVersion=${sonarDate} \\\n            --define sonar.ws.timeout=30 \\\n            --define sonar.projectDescription=${projectDesc} \\\n            --define sonar.links.homepage=http://www.baidu.com \\\n            --define sonar.sources=${projectPath} \\\n            --define sonar.sourceEncoding=UTF-8 \\\n            --define sonar.java.binaries=target/classes \\\n            --define sonar.java.test.binaries=target/test-classes \\\n            --define sonar.java.surefire.report=target/surefire-reports\n        \"\"\"\n    }\n\n    def qg = waitForQualityGate()\n    if (qg.status != 'OK') {\n        error \"Pipeline aborted due to quality gate failure: ${qg.status}\"\n    }\n}\n</code></pre> <pre><code>def qg = waitForQualityGate()\n    if (qg.status != 'OK') {\n        error \"Pipeline aborted due to quality gate failure: ${qg.status}\"\n    }\n</code></pre> <ul> <li>waitForQualityGate</li> <li>waitForQualityGate: Wait for SonarQube analysis to be completed and return quality gate status</li> </ul> <p>Pipeline script</p> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\ndef sonar = new org.devops.sonarqube()\ndef sonaradv = new org.devops.sonarqubeadv()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n                } \n            }\n        }\n\n        stage('Qa') {\n            steps {\n                script {\n                    sonaradv.SonarScan(\"${JOB_NAME}\",\"${JOB_NAME}\",\"src\" )\n                } \n            }\n        }    \n    }\n }\n</code></pre> <p>Console output</p> <pre><code>...\n[Pipeline] // withSonarQubeEnv\n[Pipeline] waitForQualityGate\nChecking status of SonarQube task 'AXO9Z_O3dI8p8GdhXo9M' on server 'sonarqube'\nSonarQube task 'AXO9Z_O3dI8p8GdhXo9M' status is 'PENDING'\nSonarQube task 'AXO9Z_O3dI8p8GdhXo9M' status is 'SUCCESS'\nSonarQube task 'AXO9Z_O3dI8p8GdhXo9M' completed. Quality gate is 'ERROR'\n[Pipeline] error\n</code></pre> <p><code>SonarQube</code> \u7684 <code>error</code> \u4f1a\u5bfc\u81f4 <code>pipeline</code> \u7684\u5931\u8d25</p> <p></p>"},{"location":"chap8/4chap8_code_quality_integration/#5-4-jenkins-pipeline-sonarqube-sonarqube-api","title":"5-4 \u5728<code>jenkins pipeline</code>\u83b7\u53d6 <code>SonarQube</code> \u68c0\u6d4b\u7ed3\u679c (SonarQube API\uff09","text":""},{"location":"chap8/4chap8_code_quality_integration/#5-4-1-sonarqube-credentials-jenkins","title":"5-4-1 \u6dfb\u52a0 <code>SonarQube credentials</code>\u5230  <code>Jenkins</code>\u4e2d","text":"<ul> <li><code>sonar-admin-user</code></li> </ul> <ul> <li>\u67e5\u770b <code>SonarQube API</code>\u7684\u8fd4\u56de</li> </ul> <pre><code> http://192.168.33.1:32314/api/qualitygates/project_status?projectKey=sq5scanner\n\n{\n   \"projectStatus\":{\n      \"status\":\"ERROR\",\n      \"conditions\":[\n         {\n            \"status\":\"OK\",\n            \"metricKey\":\"coverage\",\n            \"comparator\":\"LT\",\n            \"errorThreshold\":\"0\",\n            \"actualValue\":\"0.0\"\n         },\n         {\n            \"status\":\"ERROR\",\n            \"metricKey\":\"code_smells\",\n            \"comparator\":\"GT\",\n            \"errorThreshold\":\"1\",\n            \"actualValue\":\"3\"\n         }\n      ],\n      \"periods\":[\n         {\n            \"index\":1,\n            \"mode\":\"PREVIOUS_VERSION\",\n            \"date\":\"2020-08-01T19:51:35+0000\",\n            \"parameter\":\"20200801195129\"\n         }\n      ],\n      \"ignoredConditions\":false\n   }\n}\n</code></pre>"},{"location":"chap8/4chap8_code_quality_integration/#5-4-2-jenkinslibtestsrcorgdevopssonarapigroovy","title":"5-4-2 <code>JenkinslibTest/src/org/devops/sonarapi.groovy</code>","text":"<pre><code>package org.devops\n\n\n//\u5c01\u88c5HTTP\n\ndef HttpReq(reqType,reqUrl,reqBody){\n    def sonarServer = \"http://192.168.33.1:32314/api\"\n\n    result = httpRequest authentication: 'sonar-admin-user',\n            httpMode: reqType, \n            contentType: \"APPLICATION_JSON\",\n            consoleLogResponseBody: true,\n            ignoreSslErrors: true, \n            requestBody: reqBody,\n            url: \"${sonarServer}/${reqUrl}\"\n            //quiet: true\n\n    return result\n}\n\n//\u83b7\u53d6Sonar\u8d28\u91cf\u9608\u72b6\u6001\ndef GetProjectStatus(projectName){\n    apiUrl = \"project_branches/list?project=${projectName}\"\n    response = HttpReq(\"GET\",apiUrl,'')\n\n    response = readJSON text: \"\"\"${response.content}\"\"\"\n    result = response[\"branches\"][0][\"status\"][\"qualityGateStatus\"]\n\n    //println(response)\n\n   return result\n}\n</code></pre>"},{"location":"chap8/4chap8_code_quality_integration/#5-4-4-pipeline-sonar-api","title":"5-4-4  <code>Pipeline</code> \u8c03\u7528<code>sonar api</code>","text":"<pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\ndef sonar = new org.devops.sonarqube()\ndef sonaradv = new org.devops.sonarqubeadv()\ndef sonarapi = new org.devops.sonarapi()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n                } \n            }\n        }\n\n        stage('Qa') {\n            steps {\n                script {\n                    sonaradv.SonarScan(\"${JOB_NAME}\",\"${JOB_NAME}\",\"src\" )\n\n                    result = sonarapi.GetProjectStatus(\"${JOB_NAME}\")\n                        println(result)\n                    if(result.toString().contains(\"ERROR\")){\n                        error \"Qaulit gate failed, please re-check ur code!\"\n                    }else{\n                        println(result)\n                    }\n                } \n            }\n        }    \n    }\n }\n ```\n\n ```\nscript {\n        sonaradv.SonarScan(\"${JOB_NAME}\",\"${JOB_NAME}\",\"src\" )\n\n        result = sonarapi.GetProjectStatus(\"${JOB_NAME}\")\n            println(result)\n        if(result.toString().contains(\"ERROR\")){\n            error \"Qaulit gate failed, please re-check ur code!\"\n        }else{\n            println(result)\n        }\n } \n</code></pre> <p>Console Output</p> <pre><code>...\n[Pipeline] httpRequest\nHttpMethod: GET\nURL: http://192.168.33.1:32314/api/project_branches/list?project=sq6scanner\nContent-Type: application/json\nUsing authentication: sonar-admin-user\nSending request to url: http://192.168.33.1:32314/api/project_branches/list?project=sq6scanner\nResponse Code: HTTP/1.1 200 \nResponse: \n{\"branches\":[{\"name\":\"master\",\"isMain\":true,\"type\":\"BRANCH\",\"status\":{\"qualityGateStatus\":\"OK\"},\"analysisDate\":\"2020-08-01T21:28:00+0000\",\"excludedFromPurge\":true}]}\nSuccess code from [100\u2025399]\n[Pipeline] readJSON\n[Pipeline] echo\nOK\n[Pipeline] echo\nOK\n...\n</code></pre>"},{"location":"chap8/4chap8_code_quality_integration/#6-sonarqube-api-way","title":"6\u3001 SonarQube \u641c\u7d22\u4e0e\u65b0\u5efa\u9879\u76ee(API WAY)","text":"<p>http://192.168.33.1:32314/web_api/api</p>"},{"location":"chap8/4chap8_code_quality_integration/#6-1","title":"6-1 \u67e5\u627e\u9879\u76ee","text":"<pre><code>api/projects/search?projects=${projectName}\" \n</code></pre> <pre><code>//\u641c\u7d22Sonar\u9879\u76ee\ndef SerarchProject(projectName){\n    apiUrl = \"projects/search?projects=${projectName}\"\n    response = HttpReq(\"GET\",apiUrl,'')\n\n    response = readJSON text: \"\"\"${response.content}\"\"\"\n    result = response[\"paging\"][\"total\"]\n\n    if(result.toString() == \"0\"){\n       return \"false\"\n    } else {\n       return \"true\"\n    }\n}\n</code></pre>"},{"location":"chap8/4chap8_code_quality_integration/#6-2","title":"6-2 \u521b\u5efa\u65b0\u9879\u76ee","text":"<pre><code>api/projects/create?name=${projectName} &amp;project=$ {projectName} \" \n</code></pre> <pre><code>//\u521b\u5efaSonar\u9879\u76ee\ndef CreateProject(projectName){\n    apiUrl =  \"projects/create?name=${projectName}&amp;project=${projectName}\"\n    response = HttpReq(\"POST\",apiUrl,'')\n    println(response)\n}\n</code></pre>"},{"location":"chap8/4chap8_code_quality_integration/#6-2-pipeline","title":"6-2  \u641c\u7d22\u4e0e\u65b0\u5efa\u9879\u76ee\u5728<code>Pipeline</code>","text":"<pre><code>stage('Qa') {\n            steps {\n                script {\n\n                    result = sonarapi.SearchProject(\"${JOB_NAME}\")\n                    println(result)\n\n                    if(result == \"false\"){\n                       println(\"${JOB_NAME} ---- The project doesn't exist ----- ${JOB_NAME}!\") \n                       sonarapi.CreateProject(\"${JOB_NAME}\")\n                    } else {\n                       println(\"${JOB_NAME} ---- The project already exist!\")\n                    }\n\n                    sonaradv.SonarScan(\"${JOB_NAME}\",\"${JOB_NAME}\",\"src\" )\n\n                    result = sonarapi.GetProjectStatus(\"${JOB_NAME}\")\n                    println(result)\n\n                    if(result.toString().contains(\"ERROR\")){\n                        error \"Quality gate failed, please re-check ur code!\"\n                    }else{\n                        println(result)\n                    }\n                } \n            }\n        } \n</code></pre> <pre><code> result = sonarapi.SearchProject(\"${JOB_NAME}\")\n                    println(result)\n\n                    if(result == \"false\"){\n                       println(\"${JOB_NAME} ---- The project doesn't exist ----- ${JOB_NAME}!\") \n                       sonarapi.CreateProject(\"${JOB_NAME}\")\n                    } else {\n                       println(\"${JOB_NAME} ---- The project already exist!\")\n                    }\n</code></pre> <p>Console output</p> <pre><code>...\n[Pipeline] { (Qa)\n[Pipeline] script\n[Pipeline] {\n[Pipeline] httpRequest\nHttpMethod: GET\nURL: http://192.168.33.1:32314/api/projects/search?projects=sq7scanner\nContent-Type: application/json\nUsing authentication: sonar-admin-user\nSending request to url: http://192.168.33.1:32314/api/projects/search?projects=sq7scanner\nResponse Code: HTTP/1.1 200 \nResponse: \n{\"paging\":{\"pageIndex\":1,\"pageSize\":100,\"total\":0},\"components\":[]}\nSuccess code from [100\u2025399]\n[Pipeline] readJSON\n[Pipeline] echo\nfalse\n[Pipeline] echo\nsq7scanner ---- The project doesn't exist ----- sq7scanner!\n[Pipeline] httpRequest\nHttpMethod: POST\nURL: http://192.168.33.1:32314/api/projects/create?name=sq7scanner&amp;project=sq7scanner\nContent-Type: application/json\nUsing authentication: sonar-admin-user\nSending request to url: http://192.168.33.1:32314/api/projects/create?name=sq7scanner&amp;project=sq7scanner\nResponse Code: HTTP/1.1 200 \nResponse: \n{\"project\":{\"key\":\"sq7scanner\",\"name\":\"sq7scanner\",\"qualifier\":\"TRK\",\"visibility\":\"public\"}}\nSuccess code from [100\u2025399]\n[Pipeline] echo\nStatus: 200\n[Pipeline] withSonarQubeEnv\nInjecting SonarQube environment variables using the configuration: sonarqube\n[Pipeline] {\n[Pipeline] sh\n+ date +%Y%m%d%H%M%S\n...\n</code></pre> <p></p>"},{"location":"chap8/4chap8_code_quality_integration/#7","title":"7 \u914d\u7f6e\u8d28\u91cf\u89c4\u5219\u4e0e\u8d28\u91cf\u9608","text":""},{"location":"chap8/4chap8_code_quality_integration/#7-1","title":"7-1 \u914d\u7f6e\u9879\u76ee\u8d28\u91cf\u89c4\u5219","text":"<p>\u786e\u4fdd\u8d28\u91cf\u9608\u5df2\u7ecf\u88ab\u521b\u5efa\uff1a java -&gt; demo</p> <p></p> <pre><code>api/qualityprofiles/add_project?language=${language}&amp;qualityProfile=${qualityProfile}&amp;project=${projectName}\"\n</code></pre> <pre><code>//\u914d\u7f6e\u9879\u76ee\u8d28\u91cf\u89c4\u5219\n\ndef ConfigQualityProfiles(projectName,lang,qpname){\n    apiUrl = \"qualityprofiles/add_project?language=${lang}&amp;project=${projectName}&amp;qualityProfile=${qpname}\"\n    response = HttpReq(\"POST\",apiUrl,'')\n    println(response)\n}\n</code></pre> <pre><code>stage('Qa') {\n            steps {\n                script {\n\n                    result = sonarapi.SearchProject(\"${JOB_NAME}\")\n                    println(result)\n\n                    if(result == \"false\"){\n                       println(\"${JOB_NAME} ---- The project doesn't exist ----- ${JOB_NAME}!\") \n                       sonarapi.CreateProject(\"${JOB_NAME}\")\n                    } else {\n                       println(\"${JOB_NAME} ---- The project already exist!\")\n                    }\n\n                    qpName = \"${JOB_NAME}\".split(\"-\")[0]\n                    sonarapi.ConfigQualityProfiles(\"${JOB_NAME}\",\"java\",qpName)\n\n                    sonaradv.SonarScan(\"${JOB_NAME}\",\"${JOB_NAME}\",\"src\" )\n\n                    result = sonarapi.GetProjectStatus(\"${JOB_NAME}\")\n                    println(result)\n\n                    if(result.toString().contains(\"ERROR\")){\n                        error \"Quality gate failed, please re-check ur code!\"\n                    }else{\n                        println(result)\n                    }\n                } \n            }\n        }\n</code></pre> <p></p> <pre><code>qpName = \"${JOB_NAME}\".split(\"-\")[0]\nsonarapi.ConfigQualityProfiles(\"${JOB_NAME}\",\"java\",qpName)\n</code></pre> <ul> <li>job name: <code>demo-sq8-scanner</code></li> </ul> <p>console output</p> <pre><code>[Pipeline] httpRequest\nHttpMethod: POST\nURL: http://192.168.33.1:32314/api/qualityprofiles/add_project?language=java&amp;project=demo-sq8-scanner&amp;qualityProfile=demo\nContent-Type: application/json\nUsing authentication: sonar-admin-user\nSending request to url: http://192.168.33.1:32314/api/qualityprofiles/add_project?language=java&amp;project=demo-sq8-scanner&amp;qualityProfile=demo\nResponse Code: HTTP/1.1 204 \nResponse: \nnull\nSuccess code from [100\u2025399]\n[Pipeline] echo\nStatus: 204\n</code></pre> <p></p>"},{"location":"chap8/4chap8_code_quality_integration/#7-2","title":"7-2 \u914d\u7f6e\u9879\u76ee\u8d28\u91cf\u9608","text":"<pre><code>//\u9879\u76ee\u6388\u6743\napi/permissions/apply_template?projectKey=${projecttKey}&amp;templateName=${templateName}\" \n\n//\u83b7\u53d6\u8d28\u91cf\u9608ID\napi/qualitygates/show?name=${gateName}\n\n//\u66f4\u65b0\u8d28\u91cf\u9608\u503c\napi/qualitygates/select?projectKey=${projectKey}&amp;gateId=${gateId}\" \n</code></pre> <p><code>JenkinslibTest/src/org/devops/sonarqube.groovy</code></p> <pre><code>//\u83b7\u53d6\u8d28\u91cf\u9608ID\ndef GetQualtyGateId(gateName){\n    apiUrl= \"qualitygates/show?name=${gateName}\"\n    response = HttpReq(\"GET\",apiUrl,'')\n    response = readJSON text: \"\"\"${response.content}\"\"\"\n    result = response[\"id\"]\n\n    return result\n}\n\n//\u914d\u7f6e\u9879\u76ee\u8d28\u91cf\u9608\n\ndef ConfigQualityGates(projectName,gateName){\n    gateId = GetQualtyGateId(gateName)\n    apiUrl = \"qualitygates/select?gateId=${gateId}&amp;projectKey=${projectName}\"\n    response = HttpReq(\"POST\",apiUrl,'')\n    println(response)println(response)\n}\n</code></pre> <pre><code>sonarapi.ConfigQualityGates(\"${JOB_NAME}\",qpName)\n</code></pre> <p></p>"},{"location":"chap8/4chap8_code_quality_integration/#7-3-default-qualitygatesdefault-qualityfiles","title":"7-3 \u4f7f\u7528<code>default QualityGates</code>\u6216\u8005<code>default Qualityfiles</code>","text":"<pre><code>sonarapi.ConfigQualityProfiles(\"${JOB_NAME}\",\"java\",\"Sonar%20way\")\n</code></pre>"},{"location":"chap8/4chap8_code_quality_integration/#7-4-sharedlib-and-pipeline","title":"7-4 \u6700\u7ec8\u7248\u672c(sharedlib and pipeline)","text":"<p><code>JenkinslibTest/src/org/devops/sonarapi.groovy</code></p> <pre><code>package org.devops\n\n\n//\u5c01\u88c5HTTP\n\ndef HttpReq(reqType,reqUrl,reqBody){\n    def sonarServer = \"http://192.168.33.1:32314/api\"\n\n    result = httpRequest authentication: 'sonar-admin-user',\n            httpMode: reqType, \n            contentType: \"APPLICATION_JSON\",\n            consoleLogResponseBody: true,\n            ignoreSslErrors: true, \n            requestBody: reqBody,\n            url: \"${sonarServer}/${reqUrl}\"\n            //quiet: true\n\n    return result\n}\n\n\n//\u83b7\u53d6Sonar\u8d28\u91cf\u9608\u72b6\u6001\ndef GetProjectStatus(projectName){\n    apiUrl = \"project_branches/list?project=${projectName}\"\n    response = HttpReq(\"GET\",apiUrl,'')\n\n    response = readJSON text: \"\"\"${response.content}\"\"\"\n    result = response[\"branches\"][0][\"status\"][\"qualityGateStatus\"]\n\n    //println(response)\n\n   return result\n}\n\n//\u83b7\u53d6Sonar\u8d28\u91cf\u9608\u72b6\u6001(\u591a\u5206\u652f)\ndef GetProjectStatus(projectName,branchName){\n    apiUrl = \"qualitygates/project_status?projectKey=${projectName}&amp;branch=${branchName}\"\n    response = HttpReq(\"GET\",apiUrl,'')\n\n    response = readJSON text: \"\"\"${response.content}\"\"\"\n    result = response[\"projectStatus\"][\"status\"]\n\n    //println(response)\n\n   return result\n}\n\n//\u641c\u7d22Sonar\u9879\u76ee\ndef SearchProject(projectName){\n    apiUrl = \"projects/search?projects=${projectName}\"\n    response = HttpReq(\"GET\",apiUrl,'')\n\n    response = readJSON text: \"\"\"${response.content}\"\"\"\n    result = response[\"paging\"][\"total\"]\n\n    if(result.toString() == \"0\"){\n       return \"false\"\n    } else {\n       return \"true\"\n    }\n}\n\n//\u521b\u5efaSonar\u9879\u76ee\ndef CreateProject(projectName){\n    apiUrl =  \"projects/create?name=${projectName}&amp;project=${projectName}\"\n    response = HttpReq(\"POST\",apiUrl,'')\n    println(response)\n}\n\n//\u914d\u7f6e\u9879\u76ee\u8d28\u91cf\u89c4\u5219\n\ndef ConfigQualityProfiles(projectName,lang,qpname){\n    apiUrl = \"qualityprofiles/add_project?language=${lang}&amp;project=${projectName}&amp;qualityProfile=${qpname}\"\n    response = HttpReq(\"POST\",apiUrl,'')\n    println(response)\n}\n\n\n//\u83b7\u53d6\u8d28\u91cf\u9608ID\ndef GetQualtyGateId(gateName){\n    apiUrl= \"qualitygates/show?name=${gateName}\"\n    response = HttpReq(\"GET\",apiUrl,'')\n    response = readJSON text: \"\"\"${response.content}\"\"\"\n    result = response[\"id\"]\n\n    return result\n}\n\n//\u914d\u7f6e\u9879\u76ee\u8d28\u91cf\u9608\n\ndef ConfigQualityGates(projectName,gateName){\n    gateId = GetQualtyGateId(gateName)\n    apiUrl = \"qualitygates/select?gateId=${gateId}&amp;projectKey=${projectName}\"\n    response = HttpReq(\"POST\",apiUrl,'')\n    println(response)println(response)\n}\n</code></pre> <p>pipeline</p> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\ndef sonar = new org.devops.sonarqube()\ndef sonaradv = new org.devops.sonarqubeadv()\ndef sonarapi = new org.devops.sonarapi()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n                } \n            }\n        }\n\n        stage('Qa') {\n            steps {\n                script {\n\n                    result = sonarapi.SearchProject(\"${JOB_NAME}\")\n                    println(result)\n\n                    if(result == \"false\"){\n                       println(\"${JOB_NAME} ---- The project doesn't exist ----- ${JOB_NAME}!\") \n                       sonarapi.CreateProject(\"${JOB_NAME}\")\n                    } else {\n                       println(\"${JOB_NAME} ---- The project already exist!\")\n                    }\n\n                    qpName = \"${JOB_NAME}\".split(\"-\")[0]\n                    sonarapi.ConfigQualityProfiles(\"${JOB_NAME}\",\"java\",qpName)\n\n                    sonarapi.ConfigQualityGates(\"${JOB_NAME}\",qpName)\n\n                    sonaradv.SonarScan(\"${JOB_NAME}\",\"${JOB_NAME}\",\"src\" )\n\n                    result = sonarapi.GetProjectStatus(\"${JOB_NAME}\")\n                    println(result)\n\n                    if(result.toString().contains(\"ERROR\")){\n                        error \"Quality gate failed, please re-check ur code!\"\n                    }else{\n                        println(result)\n                    }\n                } \n            }\n        }    \n    }\n }\n</code></pre> <p></p>"},{"location":"chap8/4chap8_code_quality_integration/#8-sonar","title":"8 Sonar \u914d\u7f6e\u9879\u76ee\u591a\u5206\u652f\u6a21\u5f0f","text":"<p>https://github.com/mc1arke/sonarqube-community-branch-plugin</p> <ul> <li> <p>\u5c06\u63d2\u4ef6\u653e\u5230\u4e24\u4e2a\u76ee\u5f55\u4e2d\uff0c\u7136\u540e\u91cd\u542fsonar</p> <ul> <li><code>/opt/sonarqube/extensions/plugins</code></li> <li><code>/opt/sonarqube/lib/common</code></li> </ul> </li> <li> <p>\u626b\u63cf\u6dfb\u52a0 <code>--define sonar.branch.name=${branchName}-X</code></p> </li> </ul> <p></p>"},{"location":"chap9/chap9_5nexus_2023/","title":"\u7b2c\u4e94\u8282 Jenkins\u6d41\u6c34\u7ebf\u5c06\u5236\u54c1\u53d1\u5e03\u5230Nexus\u5b58\u50a8\u5e93","text":"<p>\u672c\u6307\u5357\u7684\u76ee\u7684\u662f\u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u6d41\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8be5\u5de5\u4f5c\u6d41\u4e2d\u901a\u8fc7Maven\u548cCI\u670d\u52a1\u5668\u6765\u6784\u5efa\uff0c\u5b58\u50a8\uff0c\u7ba1\u7406\u548c\u76d1\u89c6\u5df2\u7f16\u8bd1\u7684\u5236\u54c1\u3002</p> <p>\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u7ecf\u542f\u52a8\u5e76\u8fd0\u884c\u4e86Jenkins\u3002\u5982\u679c\u60a8\u5c1a\u672a\u8bbe\u7f6eJenkins\uff0c\u8bf7\u590d\u5236\u4ee5\u4e0b\u547d\u4ee4\u5e76\u5728\u542f\u7528Docker\u7684\u4e3b\u673a\u4e0a\u8fd0\u884c\u5b83\u3002</p> <pre><code>docker run -d --name jenkins-ci -p 8080:8080 jenkins/jenkins:lts\n</code></pre> <p>\u5728\u672c\u5730/\u8fdc\u7a0b\u8ba1\u7b97\u673a\u4e0a\u914d\u7f6e\u4e86Jenkins\u5bb9\u5668\u540e\uff0c\u8bf7\u6d4f\u89c8\u5668\u6253\u5f00URL\u3002</p> <pre><code>http:///your-ip-addr:8080\n</code></pre> <p>\u5728\u9996\u9875\uff0cJenkins\u5c06\u8be2\u95ee\u60a8\u7ba1\u7406\u5458\u5bc6\u7801\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u63d0\u5230\u7684\u547d\u4ee4\u6765\u627e\u5230\u8be5\u5bc6\u7801\u3002</p> <pre><code>\ndocker exec -i jenkins-ci cat /var/jenkins_home/secrets/initialAdminPassword\n\nb5102c8d9fa245dbb0b8da03f504d3a5\n</code></pre> <p>\u8bf7\u6309\u7167\u6307\u5bfc\u7684\u6b65\u9aa4\u5b8c\u6210\u914d\u7f6e\u3002\u5b89\u5168\u4fdd\u5b58\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u4ee5\u5907\u5c06\u6765\u4f7f\u7528\u3002</p>"},{"location":"chap9/chap9_5nexus_2023/#nexus","title":"\u5b89\u88c5Nexus\u5236\u54c1\u5e93","text":"<p>Nexus\u662f\u4e00\u4e2a\u5b58\u50a8\u5e93\u7ba1\u7406\u5668\uff0c\u53ef\u8ba9\u60a8\u5b58\u50a8\u548c\u68c0\u7d22\u5de5\u4ef6\u3002\u5b83\u4f7f\u60a8\u80fd\u591f\u5c06\u6784\u5efa\u7684\u5de5\u4ef6\u6258\u7ba1\u5728\u79c1\u6709\u4e14\u5b89\u5168\u7684\u5b58\u50a8\u5e93\u4e2d\u3002</p> <p>\u60a8\u59cb\u7ec8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u83b7\u53d6Nexus Docker\u6620\u50cf\uff1a</p> <pre><code>\n$ docker pull sonatype/nexus3\n\nUsing default tag: latest\nlatest: Pulling from sonatype/nexus3\ncb3c77f9bdd8: Pull complete \nfd8daf2668d1: Pull complete \nfd1ff82b00e8: Pull complete \n2a05f7b573af: Pull complete \nDigest: sha256:6570855dfbc3eb094fe5cbbacec87aa8b91d16394dab627177e1deeebb5ac8ee\nStatus: Downloaded newer image for sonatype/nexus3:latest\ndocker.io/sonatype/nexus3:latest\n</code></pre> <p>\u5728\u9ed8\u8ba4\u7aef\u53e38081\u4e0a\u8fd0\u884c sonatype/nexus\u3002\u8bf7\u9075\u5faa\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <pre><code>$ docker run -d --name nexus_repo -p 8081:8081 sonatype/nexus3\n</code></pre> <p>\u5728\u65b0\u521b\u5efa\u7684Docker\u5bb9\u5668\u4e2d\u542f\u52a8Nexus\u670d\u52a1\u901a\u5e38\u9700\u89811-2\u5206\u949f\u3002\u5982\u679c\u60a8\u5e0c\u671b\u6309\u7167\u65e5\u5fd7\u67e5\u770bNexus\u662f\u5426\u5df2\u542f\u52a8\u5e76\u51c6\u5907\u5c31\u7eea\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <pre><code>$ docker logs nexus_repo -f\n</code></pre> <p>\u5728\u65e5\u5fd7\u4e2d\uff0c\u60a8\u4f1a\u770b\u5230\u4e00\u6761\u6d88\u606f\uff1aStarted Sonatype Nexus OSS 3.20.1-01\u8fd9\u610f\u5473\u7740\u60a8\u7684Nexus Repository Manager\u53ef\u4ee5\u4f7f\u7528\u4e86\u3002\u73b0\u5728\u8f6c\u5230\u6d4f\u89c8\u5668\u5e76\u6253\u5f00</p> <pre><code>http://your-ip-addr:8081\n</code></pre> <p>\u627e\u5230\u201c \u767b\u5f55\u201d \u9009\u9879\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p> <p>\u9ed8\u8ba4\u7528\u6237\u540d\u662fadmin\uff0c\u60a8\u9700\u8981\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u83b7\u53d6\u5bc6\u7801\uff1a</p> <pre><code>\n$ docker exec -i nexus_repo cat /nexus-data/admin.password\n502ace93-5450-4f0d-97d2-9b3b3a88d149\n</code></pre> <p>\u5c31\u662f\u8fd9\u6837\u3002\u60a8\u7684Nexus Repository Manager\u53ef\u4ee5\u968f\u65f6\u4f7f\u7528\u3002\u4e0b\u4e00\u6b65\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b58\u50a8\u5e93\u3002</p>"},{"location":"chap9/chap9_5nexus_2023/#nexus_1","title":"\u5728Nexus\u4e2d\u521b\u5efa\u5b58\u50a8\u5e93","text":"<p>\u5728\u8fd9\u4e00\u6b65\u4e2d\uff0c\u60a8\u5c06\u5728Nexus\u4e2d\u521b\u5efa\u4e00\u4e2aMaven\u6258\u7ba1\u5b58\u50a8\u5e93\uff0c\u60a8\u7684Jenkins\u5c06\u5728\u5176\u4e2d\u4e0a\u8f7d\u201c\u6784\u5efa\u201d\u5de5\u4ef6\u3002</p> <p>\u6b65\u9aa41\uff1a\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u521b\u5efa\u6258\u7ba1\u5b58\u50a8\u5e93\uff0c\u5e76\u5c06\u5176\u547d\u540d maven-nexus-repo\uff0c\u5c06\u5728\u672c\u6307\u5357\u4e2d\u4f7f\u7528\u3002</p> <p></p> <p>\u4ece\u5217\u8868\u4e2d\u9009\u62e9 maven2\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p> <p>\u6b65\u9aa42\uff1a\u5728\u201c \u521b\u5efa\u5b58\u50a8\u5e93\u201d\u9875\u9762\u4e0a</p> <ul> <li>\u8f93\u5165\u540d\u79f0\u4e3a <code>maven-nexus-repo</code></li> <li>\u5728\u7248\u672c\u7b56\u7565\u4e2d\uff0c\u9009\u62e9\u5de5\u4ef6\u7684\u7c7b\u578b\u3002</li> <li>\u5728\u201c \u6258\u7ba1\u201d \u90e8\u5206 \u4e0b\u7684\u201c \u90e8\u7f72\u7b56\u7565\u201d\u4e2d\uff0c\u9009\u62e9\u201c \u5141\u8bb8\u91cd\u65b0\u90e8\u7f72\u201d\u3002\u5b83\u5c06\u5141\u8bb8\u60a8\u591a\u6b21\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\u3002</li> </ul> <p></p> <p>\u6b65\u9aa43\uff1a\u8981\u521b\u5efa\u65b0\u7528\u6237\uff0c\u8bf7\u8f6c\u5230 \u4fe1\u606f\u4e2d\u5fc3&gt;\u670d\u52a1\u5668\u7ba1\u7406\u5458\u548c\u914d\u7f6e&gt;\u7528\u6237&gt;\u521b\u5efa\u7528\u6237\u3002\u9009\u62e9  \u6070\u597d\u662f\u9ed8\u8ba4\u9886\u57df\u7684\u672c\u5730\u7528\u6237\u7c7b\u578b\uff1a</p> <p></p> <p>\u5728\u201c \u521b\u5efa\u7528\u6237\u201d\u9875\u9762\u4e2d</p> <ol> <li>ID\uff1a\u8f93\u5165\u6240\u9700\u7684ID\uff1b\u5728\u6211\u4eec\u7684\u6848\u4f8b\u4e2d\uff0c\u5b83\u662fJenkins\u7528\u6237\u3002</li> <li>\u540d\u5b57\uff1a\u8f93\u5165\u6240\u9700\u7684\u540d\u5b57\uff1b\u5c31\u6211\u4eec\u800c\u8a00\uff0c\u5c31\u662fJenkins\u3002</li> <li>\u59d3\uff1a\u8f93\u5165\u6240\u9700\u7684\u540d\u5b57\uff1b\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u662f\u7528\u6237\u3002</li> <li>\u7535\u5b50\u90ae\u4ef6\uff1a\u8f93\u5165\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002</li> <li>\u72b6\u6001\uff1a\u4ece\u4e0b\u62c9\u83dc\u5355\u4e2d\u9009\u62e9 \u6709\u6548\u3002</li> <li>\u89d2\u8272\uff1a\u786e\u4fdd\u5c06<code>nx-admin</code> \u89d2\u8272\u6388\u4e88 \u7528\u6237\u3002</li> </ol> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u5b8c\u6210\u4e86Nexus Repository Manager\u7684\u8bbe\u7f6e\u90e8\u5206\u3002\u8ba9\u6211\u4eec\u8f6c\u5230Jenkins\u5728\u6b64\u5904\u8bbe\u7f6eNexus\u3002</p>"},{"location":"chap9/chap9_5nexus_2023/#jenkinsnexus_1","title":"\u5728Jenkins\u4e2d\u5b89\u88c5\u548c\u914d\u7f6eNexus\u63d2\u4ef6","text":"<p>\u5728\u8fd9\u91cc\uff0c\u60a8\u5c06\u4e3aJenkins\u4e2d\u7684Nexus\u5b89\u88c5\u5e76\u914d\u7f6e\u4e00\u4e9b\u63d2\u4ef6\u3002\u4e3a\u6b64\uff0c\u8bf7\u8f6c\u5230Jenkins\uff0c\u7136\u540e\u8f6c\u5230 \u4fe1\u606f\u4e2d\u5fc3&gt;\u7ba1\u7406Jenkins&gt;\u7ba1\u7406\u63d2\u4ef6&gt;\u53ef\u7528\uff0c \u7136\u540e\u641c\u7d22\u5e76\u5b89\u88c5 Nexus Artifact Uploader \u63d2\u4ef6\u3002</p> <p>\u5728Jenkins\u4e2d\u6dfb\u52a0Nexus Repository Manager\u7684\u7528\u6237\u51ed\u636e\u3002\u8f6c\u5230 \u4eea\u8868\u677f&gt;\u51ed\u8bc1&gt;\u7cfb\u7edf&gt;\u5168\u5c40\u51ed\u8bc1\uff08\u4e0d\u53d7\u9650\u5236\uff09\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p> <p>\u63a5\u4e0b\u6765\uff0c\u5c06Maven\u8bbe\u7f6e\u4e3a\u6258\u7ba1\u5de5\u5177\u3002\u8f6c\u5230 \u4eea\u8868\u677f&gt;\u7ba1\u7406Jenkins&gt;\u5168\u5c40\u5de5\u5177\u914d\u7f6e\uff0c \u7136\u540e\u627e\u5230 Maven\u3002\u5728\u6b64\u90e8\u5206\u4e0b\uff0c\u5355\u51fb\u201c Maven\u5b89\u88c5\u201d \u6309\u94ae\u5e76\u6dfb\u52a0 Maven\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p> <p>\u53e6\u5916\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5c06Maven\u4e8c\u8fdb\u5236\u6587\u4ef6\u76f4\u63a5\u5b89\u88c5\u5230/var/jenkins_home\u76ee\u5f55\u4e2d\u7684\u5bb9\u5668\u4e2d\u3002</p> <p>\u521b\u5efa\u4e00\u6761Jenkins\u6d41\u6c34\u7ebf</p> <pre><code>pipeline {\n    agent {\n        label \"master\"\n    }\n    tools {\n        maven \"Maven\"\n    }\n    environment {\n        NEXUS_VERSION = \"nexus3\"\n        NEXUS_PROTOCOL = \"http\"\n        NEXUS_URL = \"you-ip-addr-here:8081\"\n        NEXUS_REPOSITORY = \"maven-nexus-repo\"\n        NEXUS_CREDENTIAL_ID = \"nexus-user-credentials\"\n    }\n    stages {\n        stage(\"Clone code from VCS\") {\n            steps {\n                script {\n                    git 'https://github.com/javaee/cargotracker.git';\n                }\n            }\n        }\n        stage(\"Maven Build\") {\n            steps {\n                script {\n                    sh \"mvn package -DskipTests=true\"\n                }\n            }\n        }\n        stage(\"Publish to Nexus Repository Manager\") {\n            steps {\n                script {\n                    pom = readMavenPom file: \"pom.xml\";\n                    filesByGlob = findFiles(glob: \"target/*.${pom.packaging}\");\n                    echo \"${filesByGlob[0].name} ${filesByGlob[0].path} ${filesByGlob[0].directory} ${filesByGlob[0].length} ${filesByGlob[0].lastModified}\"\n                    artifactPath = filesByGlob[0].path;\n                    artifactExists = fileExists artifactPath;\n                    if(artifactExists) {\n                        echo \"*** File: ${artifactPath}, group: ${pom.groupId}, packaging: ${pom.packaging}, version ${pom.version}\";\n                        nexusArtifactUploader(\n                            nexusVersion: NEXUS_VERSION,\n                            protocol: NEXUS_PROTOCOL,\n                            nexusUrl: NEXUS_URL,\n                            groupId: pom.groupId,\n                            version: pom.version,\n                            repository: NEXUS_REPOSITORY,\n                            credentialsId: NEXUS_CREDENTIAL_ID,\n                            artifacts: [\n                                [artifactId: pom.artifactId,\n                                classifier: '',\n                                file: artifactPath,\n                                type: pom.packaging],\n                                [artifactId: pom.artifactId,\n                                classifier: '',\n                                file: \"pom.xml\",\n                                type: \"pom\"]\n                            ]\n                        );\n                    } else {\n                        error \"*** File: ${artifactPath}, could not be found\";\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre> <p>\u8ba9\u6211\u4eec\u9010\u4e00\u5206\u89e3\u4e0a\u8ff0\u53c2\u6570\uff1a</p> <ul> <li><code>NEXUS_VERSION</code>\uff1a\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5fc5\u987b\u63d0\u53caNexus\u7684\u786e\u5207\u7248\u672c\uff0c\u53ef\u4ee5\u662fnexus2\u6216nexus3\u3002\u5728\u6211\u4eec\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u662f\u7684\u6700\u65b0\u7248\u672cnexus3\u3002</li> <li><code>NEXUS_PROTOCOL</code>\uff1a\u5bf9\u4e8e\u672c\u6307\u5357\uff0c\u6211\u4eec\u4f7f\u7528\u4e86HTTP\u534f\u8bae\uff0c\u4f46\u662f\uff0c\u5728\u6b63\u5f0f\u751f\u4ea7\u7684\u60c5\u51b5\u4e0b\uff0c\u60a8\u5c06\u5fc5\u987b\u4f7f\u7528HTTPS\u3002</li> <li><code>NEXUS_URL</code>\uff1a\u6dfb\u52a0\u60a8\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u53f7\uff0c\u4ee5\u8fd0\u884cNexus\u3002\u786e\u4fdd\u60a8\u6dfb\u52a0\u7684Nexus\u5b9e\u4f8b\u8be6\u7ec6\u4fe1\u606f\u6ca1\u6709\u63d0\u53ca\u534f\u8bae\uff0c\u4f8b\u5982https\u6216http\u3002</li> <li><code>NEXUS_CREDENTIAL_ID</code>\uff1a\u8f93\u5165\u60a8\u5148\u524d\u5728Jenkins\u4e2d\u521b\u5efa\u7684\u7528\u6237ID\uff0c\u5728\u672c\u4f8b\u4e2d\u4e3a <code>nexus-user-credentials</code>\u3002</li> <li>Git\u9879\u76ee\uff1a\u5728\u9636\u6bb5\u9636\u6bb5\uff0c\u6211\u4eec\u4f7f\u7528\u4e86https://github.com/javaee/cargotracker</li> </ul> <p>\u5728\u5b8c\u6210\u7ba1\u9053\u8bbe\u7f6e\u7684\u8fc7\u7a0b\u4e2d\uff0c\u662f\u65f6\u5019\u5f00\u59cbBuild\u6211\u4eec\u7684\u9879\u76ee\u4e86\u3002\u8f6c\u5230JenkinsNexus\u9879\u76ee\u4f5c\u4e1a\u9875\u9762\uff0c\u7136\u540e\u5355\u51fb\u7acb\u5373\u6784\u5efa\u3002\u7531\u4e8e\u8fd9\u662f\u60a8\u7684\u7b2c\u4e00\u4e2a\u6784\u5efa\uff0c\u56e0\u6b64\u5c06\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u3002</p> <p>\u4e00\u65e6\u6784\u5efa\u6210\u529f\uff0c\u5728Jenkins\u63a7\u5236\u53f0\u8f93\u51fa\u4e2d\uff0c\u60a8\u5c06\u770b\u5230\u7c7b\u4f3c\u4ee5\u4e0b\u5185\u5bb9</p> <p></p> <p>\u800c\u5728Nexus Repository Manager\u4e2d\uff0c\u60a8\u4f1a\u770b\u5230\u7c7b\u4f3c\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> <p></p> <p>\u5bf9\u4e8e\u4efb\u4f55\u7ec4\u7ec7\u800c\u8a00\uff0c\u4e00\u79cd\u7cfb\u7edf\u5730\u5206\u53d1\u9879\u76ee\u5de5\u4ef6\u7684\u65b9\u6cd5\u90fd\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u501f\u52a9Jenkins Pipeline\u548cNexus Repository Manager\uff0c\u60a8\u53ef\u4ee5\u96c6\u4e2d\u7ba1\u7406\u5236\u54c1\uff0c\u4ece\u800c\u6700\u7ec8\u51cf\u5c11\u4e86\u91cd\u65b0\u751f\u6210\u6784\u5efa\u65f6\u95f4\u4ee5\u53ca\u5207\u6362CI\u5de5\u5177\u7684\u5de5\u4f5c\u3002</p> <p>Nexus\u8fd8\u53ef\u4ee5\u914d\u7f6e\u6709AWS S3\u548cGoogle Cloud Storage\u7b49\u4e91\u5b58\u50a8\u670d\u52a1\uff0c\u4ece\u800c\u4e3a\u60a8\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u81ea\u7531\u5ea6\u548c\u4ea4\u4ed8\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u65e0\u4efb\u4f55\u5b58\u50a8\u9ebb\u70e6\u3002</p>"},{"location":"chap9/chap9_artifact0/","title":"\u7b2c\u4e00\u8282 Sonatype Nexus \u57fa\u672c\u4ecb\u7ecd\u4e0e\u5b89\u88c5","text":""},{"location":"chap9/chap9_artifact0/#1nexus","title":"1\u3001Nexus \u57fa\u672c\u6982\u5ff5\u4e0e\u4ed3\u5e93\u7ba1\u7406","text":""},{"location":"chap9/chap9_artifact0/#1-1-nexus","title":"1-1 Nexus\u5de5\u80fd\u4ecb\u7ecd","text":"<ul> <li>\u79c1\u670d\u4ed3\u5e93\uff1a\u672c\u5730maven\u79c1\u670d\u52a0\u5feb\u6784\u5efa\u901f\u5ea6 </li> <li>\u4ee3\u7406\u4ed3\u5e93\uff1a\u5c06\u516c\u7f51\u7b49\u7b2c\u4e09\u65b9\u63d0\u4f9b\u7684\u4ed3\u5e93\u4ee3\u7406\u5230\u672c\u5730 </li> </ul>"},{"location":"chap9/chap9_artifact0/#1-2-components-","title":"1-2 Components - \u7ec4\u4ef6","text":"<ul> <li>\u7ec4\u4ef6\u662f\u4e00\u79cd\u8d44\u6e90\uff0c\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d\u9700\u8981\u4f9d\u8d56\u3002\u5b83\u53ef\u4ee5\u662f\u6574 \u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u662f\u9759\u6001\u8d44\u6e90\uff08\u4f8b\u5982\u56fe\u7247\uff09\u3002 </li> <li>\u901a\u5e38\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u662f\u5404\u79cd\u6587\u4ef6\u7684\u5b58\u6863\uff0c\u5305\u62ec\uff1a <ul> <li>\u7c7b\u6587\u4ef6\u4e2d\u7684Java\u5b57\u8282\u7801 </li> <li>C\u5bf9\u8c61\u6587\u4ef6</li> <li>\u6587\u672c\u6587\u4ef6\uff0c\u4f8b\u5982\u5c5e\u6027\u6587\u4ef6\uff0cXML\u6587\u4ef6\uff0cJavaScript\u4ee3\u7801\uff0cHTML, CSS </li> <li>\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f8b\u5982\u56fe\u50cf\uff0cPDF\u6587\u4ef6\uff0c\u58f0\u97f3\u6587\u4ef6 </li> </ul> </li> <li>\u7ec4\u4ef6\u7684\u591a\u79cd\u683c\u5f0f\uff0c\u4f8b\u5982 <ul> <li>Java JAR, WAR, EAR\u683c\u5f0f </li> <li>\u666e\u901aZIP\u6216\uff0etar. gz\u6587\u4ef6 </li> <li>\u5176\u4ed6\u8f6f\u4ef6\u5305\u683c\u5f0f\uff0c\u4f8b\u5982NuGet\u8f6f\u4ef6\u5305\uff0cRuby gems, NPM\u8f6f\u4ef6\u5305 </li> <li>\u53ef\u6267\u884c\u6587\u4ef6\u683c\u5f0f\uff0c\u4f8b\u5982<code>.exe</code>\u6216<code>.sh</code>\u6587\u4ef6\uff0c<code>Android APK</code>\u6587\u4ef6\uff0c\u5404\u79cd\u5b89\u88c5\u7a0b\u5e8f\u683c\u5f0f </li> </ul> </li> </ul> <ul> <li>\u7ec4\u4ef6\u53ef\u4ee5\u7531\u591a\u4e2a\u5d4c\u5957\u7ec4\u4ef6\u672c\u8eab\u7ec4\u6210\u3002 </li> <li>\u7ec4\u4ef6\u63d0\u4f9b\u4e86\u6240\u6709\u6784\u5efa\u5757\u548c\u529f\u80fd\u3002 <ul> <li>\u53ef\u4ee5\u901a\u8fc7\u7ec4\u88c5\u5e76\u6dfb\u52a0\u81ea\u5df1\u7684\u4e1a\u52a1\u76f8\u5173\u7ec4\u4ef6\u6765\u521b\u5efa\u529f\u80fd\u5f3a\u5927\u7684\u5b8c\u6574\u5e94\u7528\u7a0b\u5e8f\u3002 </li> </ul> </li> <li>\u5728\u4e0d\u540c\u7684\u5de5\u5177\u94fe\u4e2d\uff0c\u7ec4\u4ef6\u79f0\u4e3a\u5de5\u4ef6\uff0c\u7a0b\u5e8f\u5305\uff0c\u6346\u7ed1\u5305\uff0c\u5f52\u6863\u548c\u5176\u4ed6\u672f\u8bed\u3002</li> <li>\u6982\u5ff5\u548c\u60f3\u6cd5\u4fdd\u6301\u4e0d\u53d8\uff0c\u7ec4\u4ef6\u7528\u4f5c\u901a\u7528\u672f\u8bed\u3002 \u7ec4\u4ef6\u7531\u4e00\u7ec4\u7279\u5b9a\u503c\uff08\u5750\u6807\uff09\u6807\u8bc6\u3002\u8fd9\u4e9b\u5750\u6807\u7684\u901a\u7528\u96c6\u662f\u7ec4\uff0c\u540d\u79f0\u548c\u7248\u672c\u7684\u7528\u6cd5\u3002\u8fd9\u4e9b\u5750\u6807\u7684\u540d\u79f0\u548c\u7528\u6cd5\u968f\u6240\u4f7f\u7528\u7684\u5de5\u5177\u94fe\u800c\u53d8\u5316\u3002\u7ec4\u4ef6\u4e5f\u53ef\u4ee5\u6210\u4e3a\u5176\u4ed6 \u5143\u6570\u636e\u7684\u57fa\u7840\u3002</li> </ul>"},{"location":"chap9/chap9_artifact0/#1-3-components-","title":"1-3 Components - \u7ec4\u4ef6","text":"<ul> <li>\u4f8b\u5982<code>Maven</code>\u9879\u76ee\u4e2d\u7684<code>pom</code>\u6587\u4ef6\u7b97\u662f\u8d44\u4ea7\u4e00\u90e8\u5206\uff0c\u5305\u542b\u5143\u6570\u636e\u7684\u91cd\u8981\u5b57\u8865\u5145\u3002 </li> <li>\u5b9e\u9645\u7684\u5b58\u6863\u6587\u4ef6\uff08<code>pom. xml</code>\uff09\u662f\u4e0e\u7ec4\u4ef6\uff08<code>jar/war</code>\u5305\uff09\u5173\u8054 \u7ea6\u8d44\u4ea7\u3002 </li> <li>\u4f46\u662f\uff0c\u66f4\u590d\u6742\u7684\u683c\u5f0f\u5177\u6709\u4e0e\u7ec4\u4ef6\uff08jar\u5305\uff09\u5173\u8054\u7684\u4f17\u591a\u8d44\u4ea7 (<code>pom</code>)\u3002\u4f8b\u5982\uff0c<code>Maven</code>\u5b58\u50a8\u5e93\u4e2d\u7684\u5178\u578b<code>JAR</code>\u7ec4\u4ef6\u81f3\u5c11\u7531<code>POM</code>\u548c<code>JAR</code>\u6587\u4ef6\u5b9a\u4e49\u4e00\u4e24\u8005\u5747\u6784\u6210\u5c5e\u793a\u540c\u4e00\u7ec4\u4ef6\u7684\u5355\u72ec\u8d44\u4ea7\u3002\u5176\u4ed6\u6587\u4ef6\uff08\u4f8b\u5982<code>JavaDoc</code>\u6216<code>Sources JAR</code>\u6587\u4ef6\uff09\u662f\u5c5e\u4e8e\u540c\u4e00\u7ec4\u4ef6\u7684\u8d44\u4ea7\u3002 </li> <li>\u53e6\u4e00\u65b9\u9762\uff0c<code>Docker</code>\u683c\u5f0f\u4e3a\u8d44\u4ea7\u63d0\u4f9b\u552f\u4e00\u7684\u6807\u8bc6\u7b26\uff0c\u5e76\u5c06\u5176\u79f0\u4e3a<code>Docker</code>\u5c42\u3002\u8fd9\u4e9b\u8d44\u4ea7\u53ef\u7528\u4e8e\u4e0d\u540c\u7684\u7ec4\u4ef6\u4e00<code>Docker</code>\u6620\u50cf\u3002 \u4f8b\u5982\uff0c\u4e00\u4e2a<code>Docker</code>\u5c42\u53ef\u4ee5\u662f\u591a\u4e2a<code>Docker</code>\u6620\u50cf\u5f15\u7528\u7ea6\u7279\u5b9a\u64cd\u4f5c\u7cfb\u7edf\u3002 </li> </ul>"},{"location":"chap9/chap9_artifact0/#1-4","title":"1-4 \u4ed3\u5e93\u683c\u5f0f","text":"<ul> <li><code>Maven</code>\u683c\u5f0f\u5b58\u50a8\u5e93\u4e2d\u4e8c\u8fdb\u5236\u7ec4\u4ef6\u7684\u4e3b\u8981\u7c7b\u578b\u662f\u5305\u542b<code>Java</code>\u5b57\u8282\u7801\u7684<code>JAR</code>\u6587\u4ef6\u3002 </li> <li>\u6bcf\u4e2a\u8f6f\u4ef6\u7ec4\u4ef6\u5747\u7531\u79f0\u4e3a\u9879\u76ee\u5bf9\u8c61\u6a21\u578b\uff08<code>POM</code>\uff09\u7684<code>XML</code>\u6587\u6863\u63cf\u8ff0\u3002 </li> <li>\u8be5<code>POM</code>\u5305\u542b\u63cf\u8ff0\u9879\u76ee\u7684\u4fe1\u606f\uff0c\u5e76\u5217\u51fa\u9879\u76ee\u7684\u4f9d\u8d56\u9879\u4e00\u4e8c\u8fdb\u5236\u8f6f\u4ef6\u7ec4\u4ef6\uff0c\u7ed9\u5b9a\u7ec4\u4ef6\u6210\u529f\u8fdb\u884c\u7f16\u8bd1\u6216\u6267\u884c\u6240\u4f9d\u8d56\u7684\u7ec4\u4ef6\u3002 </li> </ul>"},{"location":"chap9/chap9_artifact0/#1-5","title":"1-5 \u4e0b\u8f7d\u673a\u5236","text":"<ul> <li>\u5f53<code>Maven</code>\u4ece\u5b58\u50a8\u5e93\u4e0b\u8f7d\u7ec4\u4ef6\uff08\u5982\u4f9d\u8d56\u9879\u6216\u63d2\u4ef6\uff09 \u65f6\uff0c\u5b83\u4e5f\u4f1a\u4e0b\u8f7d\u8be5\u7ec4\u4ef6\u7684<code>POM</code> </li> <li>\u7ed9\u5b9a\u7ec4\u4ef6\u7684<code>POM</code>, <code>Maven</code>\u7136\u540e\u6cb3\u4ee5\u4e0b\u8f7d\u8be5\u7ec4\u4ef6\u6240 \u9700\u7684\u4efb\u4f55\u5176\u4ed6\u7ec4\u4ef6\u3002 </li> <li><code>Maven</code>\u548c\u5176\u4ed6\u5de5\u5177\uff08\u4f8b\u5982<code>Ivy</code>\u6216<code>Gradle</code>\uff09\u4e0e<code>Maven</code>\u5b58\u50a8\u5e93\u8fdb\u884c\u4ea4\u4e92\u4ee5\u641c\u7d22\u4e8c\u8fdb\u5236\u8f6f\u4ef6\u7ec4\u4ef6\uff0c \u5bf9\u5b83\u4eec\u7ba1\u7406\u7684\u9879\u76ee\u8fdb\u884c\u5efa\u6a21\uff0c\u5e76\u4ece\u5b58\u50a8\u5e93\u6309\u9700\u68c0\u7d22\u8f6f\u4ef6\u7ec4\u4ef6\u3002 </li> </ul>"},{"location":"chap9/chap9_artifact0/#1-6","title":"1-6 \u4e2d\u592e\u4ed3\u5e93","text":"<ul> <li>\u5f53\u60a8\u4e0b\u8f7d\u5e76\u5b89\u88c5Maven\u800c\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55\u81ea\u5b9a\u4e49\u65f6\uff0c\u5b83\u5c06\u4ece\u4e2d\u592e\u5b58\u50a8\u5e93\u4e2d\u68c0\u7d22\u7ec4\u4ef6\u3002 </li> <li>\u4e2d\u592e\u5b58\u50a8\u5e93\u662f\u7528\u4e8eJava\u7684\u7ec4\u4ef6\u7684\u6700\u5927\u5b58\u50a8\u5e93\u3002\u4e5f\u53ef\u4ee5\u4ece\u5176\u4ed6\u6784\u5efa\u5de5\u5177\u8f7b\u677e\u4f7f\u7528\u5b83\u3002 </li> <li>\u4ee5\u4e0b\u662f\u53d1\u884c\u5b58\u50a8\u5e93\uff08\u4f8b\u5982\u4e2d\u592e\u5b58\u50a8\u5e93\uff09\u7684\u4e00\u4e9b\u5c5e\u6027\uff1a </li> <li>\u7ec4\u4ef6\u5143\u6570\u636e\uff1a\u6dfb\u52a0\u5230\u4e2d\u5934\u5b58\u50a8\u5e93\u7684\u6240\u6709\u8f6f\u4ef6\u7ec4\u4ef6\u90fd\u9700\u8981\u9002\u5f53\u7684\u5143\u6570\u636e\uff0c\u5305\u62ec\u6bcf\u4e2a\u7ec4\u4ef6\u7684\u9879\u76ee\u5bf9\u8c61\u6a21\u578b\uff08POM)\uff0c\u8fd9\u4e9b\u5bf9 \u8c61\u63cf\u8ff0\u7ec4\u4ef6\u672c\u8eab\u4ee5\u53ca\u8be5\u8f6f\u4ef6\u7ec4\u4ef6\u53ef\u80fd\u5177\u6709\u7684\u4efb\u4f55\u4f9d\u8d56\u5173\u7cfb\u3002 </li> <li>\u91ca\u653e\u7a33\u5b9a\u6027\uff1a\u4e00\u65e6\u53d1\u5e03\u5230\u4e2d\u592e\u5b58\u50a8\u5e93\uff0c\u7ec4\u4ef6\u548c\u63cf\u8ff0\u8be5\u7ec4\u4ef6\u7684\u5143\u6570\u636e\u5c31\u6c38\u8fdc\u4e0d\u4f1a\u6539\u53d8\u3002\u53d1\u884c\u7248\u5b58\u50a8\u5e93\uff08\u4f8b\u5982\u4e2d\u592e\u5b58\u50a8\u5e93\uff09 \u7684\u6b64\u5c5e\u6027\u53ef\u786e\u4fdd\u4f9d\u8d56\u53d1\u884c\u7248\u7684\u9879\u76ee\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5c06\u53ef\u91cd\u590d\u4e14\u7a33\u5b9a\u3002\u5728\u6bcf\u5929\u53d1\u5e03\u65b0\u8f6f\u4ef6\u7ec4\u4ef6\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u65e6\u5728\u4e2d\u592e\u5b58\u50a8 \u5e93\u4e2d\u4e3a\u7ec4\u4ef6\u5206\u914d\u4e86\u53d1\u884c\u53f7\uff0c\u5c31\u6709\u4e25\u683c\u7684\u653f\u7b56\u7981\u6b62\u5728\u53d1\u884c\u540e\u4fee\u6539\u8f6f\u4ef6\u7ec4\u4ef6\u7684\u5185\u5bb9\u3002 </li> <li>\u7ec4\u4ef6\u5b89\u5168\uff1a\u4e2d\u592e\u5b58\u50a8\u5e93\u5305\u542b\u52a0\u5bc6\u54c8\u5e0c\u548cPGI\uff0c\u7b7e\u540d\uff0c\u53ef\u7528\u4e8e\u9a8c\u8bc1\u6240\u63d0\u4f9b\u8f6f\u4ef6\u7ec4\u4ef6\u7684\u771f\u5b9e\u6027\u548c\u5b8c\u6574\u6027\uff0c\u5e76\u901a\u8fc7HTTPS\u4ee5\u5b89\u5168\u65b9 \u5f0f\u652f\u6301\u8fde\u63a5\u3002 </li> <li>\u6027\u80fd\uff1a\u4e2d\u592e\u5b58\u50a8\u5e93\u901a\u8fc7\u670d\u52a1\u5668\u7684\u9ad8\u6027\u80fd\u5185\u5bb9\u4ea4\u4ed8\u7f51\u7edc\u5411\u5168\u7403\u7528\u6237\u5f00\u653e\u3002 \u9664\u4e86\u4e2d\u592e\u5b58\u50a8\u5e93\u5916\uff0c\u8fd8\u6709\u8bb8\u591a\u4e3b\u8981\u7ec4\u7ec7\uff0c\u4f8b\u5982<code>Red Hat</code>,<code>Oracle</code>\u6216<code>Apache Software Foundation</code>\uff0c\u5b83\u4eec\u7ef4\u62a4\u7740\u5355\u72ec\u7684\u5176\u4ed6\u5b58\u50a8\u5e93\u3002 </li> </ul>"},{"location":"chap9/chap9_artifact0/#1-7","title":"1-7 \u7ec4\u4ef6\u5750\u6807","text":"<ul> <li>\u5236\u54c1\u5750\u6807\u4e3a\u6bcf\u4e2a\u5236\u54c1\u521b\u5efa\u552f\u4e00\u7684\u6807\u8bc6\u7b26</li> <li><code>Maven</code>\u5750\u6807\u4f7f\u7528\u4ee5\u4e0b\u503c\uff1a<code>groupId</code>, <code>artifactId</code>, <code>version</code>\u548c<code>packaging</code>\u3002\u8fd9\u7ec4\u5750\u6807\u901a\u5e38\u79f0\u4e3a<code>GAV</code>\u5750\u6807\uff0c\u5b83\u662f\u201c\u7ec4\u201d,\u201c\u5de5\u4ef6\u201d,\u201c\u7248\u672c\u201d\u5750\u6807\u7684\u7f29\u5199\u3002 </li> <li> <p><code>GAV</code>\u5750\u6807\u6807\u51c6\u662f<code>Maven</code>\u7ba1\u7406\u4f9d\u8d56\u5173\u7cfb\u7684\u57fa\u7840\u3002\u4e0b\u9762\u63cf\u8ff0\u4e86\u6b64\u5750\u6807\u7cfb\u7684\u56db\u4e2a\u5143\u7d22\uff1a</p> <ul> <li>groupld\uff1a\u7ec4\u6807\u8bc6\u7b26\u5c06\u4e00\u7ec4\u7ec4\u4ef6\u5206\u4e3a\u4e00\u4e2a\u903b\u8f91\u7ec4\u3002 </li> <li>\u901a\u5e38\u5c06\u7ec4\u8bbe\u8ba1\u4e3a\u53cd\u6620\u751f\u4ea7\u7279\u5b9a\u8f6f\u4ef6\u7ec4\u4ef6\u6240\u4f9d\u636e\u7684\u7ec4\u7ec7\u3002 </li> <li>\u4f8b\u5982\uff0c\u7531<code>Apache Software Foundation</code>\u7684<code>Maven</code>\u9879\u76ee\u751f\u4ea7\u7684\u8f6f\u4ef6\u7ec4\u4ef6\u53ef\u5728<code>groupId</code>\u4e0b\u83b7\u5f97<code>org. apache. maven</code></li> <li>artifactId\uff1aartifactId\u662f\u8f6f\u4ef6\u7ec4\u4ef6\u7684\u6807\u8bc6\u7b26\uff0c\u5e94\u4e3a\u63cf\u8ff0\u6027\u540d\u79f0\u3002 </li> <li><code>groupId</code>\u548c<code>artifactId</code>\u7684\u7ec4\u5408\u5bf9\u4e8e\u7279\u5b9a\u9879\u76ee\u5fc5\u987b\u662f\u552f\u4e00\u7684\u3002 </li> <li><code>version</code>:\u9879\u76ee\u7684\u7248\u672c\u7406\u60f3\u5730\u5e94\u8be5\u9075\u5faa\u5df2\u5efa\u7acb\u7684\u8bed\u4e49\u7248\u672c\u5de5\u4f5c\u7ba1\u7406\u60ef\u4f8b\u3002 </li> <li>\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u7684\u7b80\u4e98\u5e93\u7ec4\u4ef6\u5177\u6709\u7684\u4e3b\u53d1\u884c\u72481\uff0c\u6b21\u53d1\u884c\u72482\u548c\u53d1\u884c\u72483\uff0c\u5219\u60a8\u7684\u7248\u672c\u5c06\u662f<code>1.2.3</code>\u3002</li> <li>\u7248\u672c\u4e5f\u53ef\u4ee5\u5177\u6709\u5b57\u6bcd\u6570\u5b57\u9650\u5b9a\u7b26\uff0c\u901a\u5e38\u7528\u4e8e\u8868\u793a\u53d1\u884c\u72b6\u6001\u3002</li> <li>\u8fd9\u79cd\u9650\u5b9a\u7b26\u7684\u4e00\u4e2a\u793a\u4f8b\u662f\u7c7b\u4f3c<code>\u201c1.2.3-BETA\u201d</code>\u7684\u7248\u672c\uff0c\u5176\u4e2d<code>BETA</code>\u8868\u793a\u5bf9\u8f6f\u4ef6\u7ec4\u4ef6\u7684\u4f7f\u7528\u8005\u6709\u610f\u4e49\u7684\u6d4b\u8bd5\u9636\u6bb5\u3002 </li> <li>packaging: Maven\u6700\u521d\u662f\u4e3a\u4e86\u5904\u7406<code>JAR</code>\u6587\u4ef6\u800c\u521b\u5efa\u7684\uff0c\u4f46\u662f<code>Maven</code>\u5b58\u50a8\u5e93\u5b8c\u5168\u4e0d\u4e86\u89e3\u5176\u7ba1\u7406\u7684\u7ec4\u4ef6\u7c7b\u578b\u3002 </li> <li>packaging\u53ef\u4ee5\u662f\u63cf\u8ff0\u4efb\u4f55\u4e8c\u8fdb\u5236\u8f6f\u4ef6\u683c\u5f0f\u7684\u4efb\u4f55\u5185\u5bb9\uff0c\u5305\u62ec\uff1azip,nar,war,ear,sa\u548caar</li> </ul> </li> <li> <p>\u4e0e<code>Maven</code>\u5b58\u50a8\u5e93\u8fdb\u884c\u4ea4\u4e92\u7684\u5de5\u5177\u5c06\u7ec4\u4ef6\u5750\u6807\u8f6c\u6362\u4e3a\u4e0eMaven\u5b58\u50a8\u5e93\u4e2d\u7684\u4f4d\u7f6e\u76f8\u5bf9\u5e94\u7684URL</p> </li> <li>\u5982\u679c\u8bf8\u5982<code>Maven</code>\u4e4b\u7c7b\u7684\u5de5\u5177\u6b63\u5728\u8be5\u7ec4\u4e2d\u5bfb\u627e<code>JAR</code>\u7248\u672c<code>1.2.0</code>\uff0c\u5219\u6b64\u8bf7\u6c42\u5c06\u8f6c\u6362\u4e3a\uff1a<code>commons-langorg.apache.commons</code></li> </ul> <pre><code>&lt;repoURL&gt; /org/apache/commons/commons-lang/1.2.0/commons-lang-1.2.0.jar \n&lt;repoURL&gt; /org/apache/commons/commons-lang/1.2.0/commons-lang-1.2.0.pom \n</code></pre>"},{"location":"chap9/chap9_artifact0/#1-8-release-snapshot","title":"1-8 Release \u4e0e Snapshot","text":"<ul> <li> <p>Maven\u5b58\u50a8\u5e93\u5b58\u50a8\u4e24\u79cd\u7c7b\u578b\u7684\u7ec4\u4ef6\uff1a\u7248\u672c\u548c\u5feb\u7167\u3002 </p> <ul> <li>\u53d1\u5e03\u5b58\u50a8\u5e93\u7528\u4e8e\u7a33\u5b9a\u7684\u9759\u6001\u53d1\u5e03\u7ec4\u52a1 </li> <li>\u5feb\u7167\u5b58\u50a8\u5e93\u662f\u7ecf\u5e38\u66f4\u65b0\u7684\u5b58\u50a8\u5e93\uff0c\u7528\u4e8e\u5b58\u50a8\u4e0d\u65ad\u5f00\u53d1\u7684\u9879\u76ee\u4e2d\u7684\u4e8c\u8fdb\u5236\u8f6f\u4ef6\u7ec4\u4ef6\u3002 </li> </ul> </li> <li> <p>\u867d\u7136\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u540c\u65f6\u670d\u52a1\u4e8e\u53d1\u5e03\u548c\u5feb\u7167\u7ec4\u4ef6\u7684\u5b58\u50a8\u5e93\uff0c\u4f46\u901a\u5e38\u5c06\u5b58\u50a8\u5e93\u5206\u4e3a\u591a\u4e2a\u53d1\u5e03\u5e93\u6216\u5feb\u7167\u5b58\u50a8\u5e93\uff0c\u8fd9\u4e9b\u53d1\u5e03\u5e93\u6216\u5feb\u7167\u5b58\u50a8\u5e93\u670d\u52a1\u4e8e\u4e0d\u540c\u7684\u4f7f\u7528\u8005\u5e76\u7ef4\u62a4\u7528\u4e8e\u90e8\u7f72\u7ec4\u4ef6\u7684\u4e0d\u540c\u6807\u51c6\u548c\u8fc7\u7a0b\u3002\u5c31\u50cf\u7f51\u7edc\u4e4b\u95f4\u7684\u5dee\u5f02\u4e00\u6837\uff0c\u53d1\u5e03\u5b58\u50a8\u5e93\u88ab\u89c6\u4e3a\u751f\u4ea7\u7f51\u7edc\uff0c\u5feb\u7167\u5b58\u50a8\u5e93\u88ab\u89c6\u4e3a\u5f00\u53d1\u6216\u6d4b\u8bd5\u7f51\u7edc\u3002\u5c3d\u7ba1\u5b58\u5728\u4e0e\u90e8\u7f72\u5230\u53d1\u5e03\u5b58\u50a8\u5e93 \u76f8\u5173\u8054\u7684\u66f4\u9ad8\u7ea7\u522b\u7684\u8fc7\u7a0b\u548c\u4eea\u5f0f\uff0c\u4f46\u51b3\u7167\u7ec4\u4ef6\u53ef\u4ee5\u88ab\u987b\u7e41\u90e8\u7f72\u548c\u66f4\u6539\uff0c\u800c\u65e0\u9700\u8003\u8651\u7a33\u5b9a\u6027\u548c\u53ef\u91cd\u590d\u6027\u3002 </p> </li> <li>\u5b58\u50a8\u5e93\u7ba1\u7406\u4e00\u5668\u7ba1\u7406\u7684\u4e24\u79cd\u7c7b\u578b\u7684\u7ec4\u4ef6\u662f\uff1a <ul> <li>\u53d1\u5e03\uff1a\u53d1\u5e03\u7ec4\u4ef6\u662f\u7531\u7279\u5b9a\u7248\u672c\u7684\u53d1\u5e03\u521b\u5efa\u7684\u7ec4\u4ef6\u3002 </li> <li>\u4f8b\u5982\uff0c\u8003\u8651<code>1.2.0</code>\u91ca\u653e<code>commons-lang</code>\u5b58\u50a8\u5728\u4e2d\u592e\u5b58\u50a8\u5e93\u4e2d\u7684\u5e93\u3002 </li> <li>\u6b64\u53d1\u884c\u7ec4\u4ef6<code>commons-lang-1.2.0.pom</code>\u548c\u76f8\u5173\u7684<code>POM commons-lang-1.2.0.pom</code>\u662f\u9759\u6001\u6001\u5bf9\u8c61\uff0c\u5b83\u4eec\u5728\u4e2d\u592e\u5b58\u50a8\u5e93\u4e2d\u6c38\u8fdc\u4e0d\u4f1a\u66f4\u6539\u3002 </li> <li>\u91ca\u653e\u7684\u7ec4\u4ef6\u88ab\u8ba4\u4e3a\u662f\u575a\u56fa\uff0c\u7a33\u5b9a\u548c\u6c38\u4e45\u7684\uff0c\u4ee5\u786e\u4fdd\u4f9d\u8d56\u4e8e\u5b83\u4eec\u7684\u6784\u5efa\u968f\u7740\u65f6\u53e5\u7684\u63a8\u79fb\u53ef\u91cd\u590d\u3002</li> <li>\u5df2\u53d1\u5e03\u7684<code>JAR</code>\u7ec4\u4ef6\u4e0e<code>PGP</code>\u7b7e\u540d\uff0c<code>MD5</code>\u548c<code>SHA</code>\u6821\u9a8c\u548c\u76f8\u5173\u8054\uff0c\u53ef\u7528\u4e8e\u9a8c\u8bc1\u4e8c\u8fdb\u5236\u8f6f\u4ef6\u7ec4\u4ef6\u7684\u771f\u5b9e\u6027\u548c\u5b8c\u6574\u6027\u3002</li> <li>\u5feb\u7167\uff1a\u5feb\u7167\u7ec4\u4ef6\u662f\u5728\u8f6f\u4ef6\u9879\u76ee\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u751f\u6210\u7684\u7ec4\u4ef6\u3002 </li> <li><code>Snapsho</code>t\u7ec4\u4ef6\u7684\u540d\u79f0\u4e2d\u65e2\u5e26\u6709\u7248\u672c\u53f7\uff08\u4f8b\u5982<code>1.3.0</code>\u6216\uff09,<code>1.3</code>\u53c8\u5e26\u6709\u65f6\u95f4\u6233\u3002 </li> <li>\u4f8b\u5982\uff0c\u5feb\u7167\u7ec4\u4ef6<code>commons-lang 1.3.0</code>\u7684\u540d\u79f0\u53ef\u80fd<code>commons-lang-1.3.0.-20090314.182342-1.jar</code>\u4e0e\u5173\u8054\u7684<code>POM</code> <code>MD5</code>\u548c<code>SHA</code>\u54c8\u5e0c\u503c\u4e5f\u5177\u6709\u76f8\u4f3c\u7684\u540d\u79f0\u3002 </li> <li>\u4e3a\u4e86\u5728\u8f6f\u4ef6\u7ec4\u4ef6\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4fc3\u8fdb\u534f\u4f5c\uff0c<code>Maven</code>\u548c\u5176\u4ed6\u77e5\u9053\u5982\u4f55\u4ece\u5b58\u50a8\u5e93\u4f7f\u7528\u5feb\u7167\u7ec4\u4ef6\u7684\uff0e\u5ba2\u6237\u7aef\u4e5f\u77e5\u9053\u5982\u4f55\u67e5\u8be2\u4e0e<code>Snapshot</code>\u7ec4\u4ef6\u5173\u8054\u7684\u5143\u6570\u636e\uff0c\u4ee5\u4ece\u5b58\u50a8\u5e93\u68c0\u7d22\u5feb\u7167\u4f9d\u8d56\u5173\u7cfb\u7684\u6700\u65b0\u7248\u672c\u3002 </li> </ul> </li> <li>\u5904\u4e8e\u6d3b\u4ece\u5f00\u53d1\u4e2d\u7684\u9879\u76ee\u4f1a\u751f\u6210\u968f\u65f6\u95f4\u53d8\u5316\u7684\u5feb\u7167\u7ec4\u4ef6\u3002\u4e00\u4e2a\u53d1\u884c\u7248\u5305\u542b\u4e00\u4e9b\u7ec4\u4ef6\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u5c06\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u4fdd\u6301\u4e0d\u53d8\u3002 </li> </ul>"},{"location":"chap9/chap9_artifact0/#2-nexus-oss-on-kubernetes","title":"2\u3001\u5b89\u88c5 Nexus OSS On Kubernetes","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nexus\n  namespace: nexus\nspec:\n  selector:\n    matchLabels: \n      app: nexus-server\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: nexus-server\n    spec:\n      containers:\n        - name: nexus\n          image: sonatype/nexus3:latest\n          resources:\n            limits:\n              memory: \"2Gi\"\n              cpu: \"500m\"\n            requests:\n              memory: \"2Gi\"\n              cpu: \"500m\"\n          ports:\n            - containerPort: 8081\n            - containerPort: 5000\n          volumeMounts:\n            - name: nexus-data\n              mountPath: /nexus-data\n      volumes:\n        - name: nexus-data\n          emptyDir: {}\n</code></pre>"},{"location":"chap9/chap9_artifact0/#nexus-oss-svc","title":"\u5b89\u88c5 Nexus OSS SVC","text":"<pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: nexus-service\n  namespace: nexus\nspec:\n  selector: \n    app: nexus-server\n  type: NodePort  \n  ports:\n    - port: 8081\n      targetPort: 8081\n      nodePort: 32000\n      name: http\n    - port: 5000\n      targetPort: 5000\n      nodePort: 32500\n      name: docker\n\n</code></pre> <pre><code>$ kuebctl create ns nexus\n\n$ kubectl get pod -n nexus \nNAME                     READY   STATUS    RESTARTS   AGE\nnexus-54664bd559-hk892   1/1     Running   0          4m56s\n\n$ kubectl get svc -n nexus \nNAME            TYPE       CLUSTER-IP       EXTERNAL-IP   PORT(S)                         AGE\nnexus-service   NodePort   10.102.246.235   &lt;none&gt;        8081:32000/TCP,5000:32500/TCP   22h\n</code></pre> <ul> <li>admin</li> <li>password</li> </ul> <pre><code>$ kubectl exec -it nexus-84fcd99c46-5d5mk bash -n nexus\n$ cd /nexus-data\n$ cat admin.password\neffb42fe-3c17-459a-b489-e905ea1794d5\n</code></pre> <ul> <li>admin</li> <li>admin</li> </ul> <pre><code>http://127.0.0.1:32000/#admin/repository\n</code></pre>"},{"location":"chap9/chap9_artifact0/#3nexus","title":"3\u3001Nexus \u7cfb\u7edf\u914d\u7f6e\u7ba1\u7406","text":""},{"location":"chap9/chap9_artifact0/#3-1-ldap-","title":"3-1 LDAP\u8ba4\u8bc1-\u94fe\u63a5\u4fe1\u606f","text":""},{"location":"chap9/chap9_artifact0/#3-2-ldap-","title":"3-2 LDAP\u8ba4\u8bc1-\u7528\u6237/\u7ec4\u4fe1\u606f","text":""},{"location":"chap9/chap9_artifact0/#3-3","title":"3-3 \u90ae\u4ef6\u901a\u77e5","text":""},{"location":"chap9/chap9_artifact0/#3-4-webhook","title":"3-4 Webhook","text":""},{"location":"chap9/chap9_artifact1/","title":"\u7b2c\u4e8c\u8282 \u5236\u54c1\u7ba1\u7406","text":""},{"location":"chap9/chap9_artifact1/#1","title":"1\u3001 \u5236\u54c1\u662f\u4ec0\u4e48","text":"<p>\u6240\u8c13\u5236\u54c1\uff0c\u5230\u5e95\u662f\u4ec0\u4e48\u5462\uff1f</p> <p>An artifact is one of many kinds of tangible by-products produced during the development</p> <p>\u6362\u53e5\u8bdd\u8bf4\uff0c\u5236\u54c1\u662f\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u591a\u79cd\u6709\u5f62\u526f\u4ea7\u54c1\u4e4b\u4e00\u3002\u53e6\u5916\uff0c\u76f4\u8bd1artifact\uff0c\u662f\u4eba\u5de5\u5236\u54c1\u7684\u610f\u601d\u3002\u6240\u4ee5\uff0c\u5e7f\u4e49\u7684\u5236\u54c1\u8fd8\u5305\u62ec\u7528\u4f8b\u3001UML\u56fe\u3001\u8bbe\u8ba1\u6587\u6863\u7b49</p> <p>\u800c\u72ed\u4e49\u7684\u5236\u54c1\u5c31\u53ef\u4ee5\u7b80\u5355\u5730\u7406\u89e3\u4e3a\u4e8c\u8fdb\u5236\u5305\u3002\u867d\u7136\u6709\u4e9b\u4ee3\u7801\u662f\u4e0d\u9700\u8981\u7f16\u8bd1\u5c31\u53ef\u4ee5\u6267\u884c\u7684\uff0c\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u4e60\u60ef\u4e8e\u5c06\u8fd9\u4e9b\u53ef\u6267\u884c\u6587\u4ef6\u7684\u96c6\u5408\u79f0\u4e3a\u4e8c\u8fdb\u5236\u5305\u3002 </p> <p>\u672c\u7ae0\u8ba8\u8bba\u7684\u662f\u72ed\u4e49\u7684\u5236\u54c1\u3002\u884c\u4e1a\u5185\u6709\u65f6\u4e5f\u5c06\u5236\u54c1\u79f0\u4e3a\u4ea7\u51fa\u7269\u6216\u5de5\u4ef6\u3002 </p>"},{"location":"chap9/chap9_artifact1/#2","title":"2\u3001\u5236\u54c1\u7ba1\u7406\u4ed3\u5e93","text":"<p>\u6700\u7b80\u5355\u7684\u5236\u54c1\u7ba1\u7406\u4ed3\u5e93\u5c31\u662f\u5c06\u5236\u54c1\u7edf\u4e00\u653e\u5728\u4e00\u4e2a\u7cfb\u7edf\u76ee\u5f55\u7ed3\u6784\u4e0b\u3002\u4f46\u662f\u5f88\u5c11\u6709\u4eba\u8fd9\u6837\u505a\uff0c\u66f4\u591a\u7684\u505a\u6cd5\u662f\u4f7f\u7528\u73b0\u6210\u7684\u5236\u54c1\u5e93\u3002 </p> <p>\u5236\u54c1\u7ba1\u7406\u6d89\u53ca\u4e24\u4ef6\u4e8b\u60c5\uff1a</p> <ul> <li>\u4e00\u662f\u5982\u4f55\u5c06\u5236\u54c1\u653e\u5230\u5236\u54c1\u5e93\u4e2d\u3002</li> <li>\u4e8c\u662f\u5982\u4f55\u4ece\u5236\u54c1\u5e93\u4e2d\u53d6\u51fa\u5236\u54c1\u3002</li> </ul> <p>\u7531\u4e8e\u6bcf\u79cd\u5236\u54c1\u7684\u4f7f\u7528\u65b9\u5f0f\u4e0d\u4e00\u6837\uff0c\u56e0\u6b64\u4e0b\u9762\u6211\u4eec\u5206\u522b\u8fdb\u884c\u4ecb\u7ecd\u3002 \u76ee\u524d\u73b0\u6210\u7728\u5236\u54c1\u5e93\u6709\uff1aNexus\u3001Artifactory\u3002</p>"},{"location":"chap9/chap9_artifact1/#3","title":"3\u3001\u8fc7\u6e21\u5230\u5236\u54c1\u5e93","text":"<p>\u4ece\u624b\u5de5\u6253\u5305\u5230\u81ea\u52a8\u5316\u6253\u5305\uff0c\u518d\u5c06\u6253\u597d\u7684\u5305\u653e\u5230\u5236\u54c1\u5e93\u4e2d\u3002\u8fd9\u770b\u4f3c\u7b80\u5355\uff0c\u4f46\u662f\u8981\u5728\u56e2\u961f\u4e2d\u4ece\u65e0 \u5230\u6709\u5730\u843d\u5730\u5176\u5b9e\u662f\u4e00\u4e2a\u5f88\u6f2b\u957f\u7684\u8fc7\u7a0b\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u5b58\u5728\u5f88\u591a\u9057\u7559\u9879\u76ee\u7684\u56e2\u961f\u3002\u6bcf\u4e2a\u56e2\u961f\u90fd\u5e94\u8be5\u6309 \u7167\u81ea\u5df1\u5f53\u524d\u60c5\u51b5\u8fdb\u884c\u8c03\u6574\uff0c\u6709\u65f6\u7edf\u4e00\u7684\u89e3\u51b3\u65b9\u6848\u4e0d\u4e00\u5b9a\u9002\u5408\u4f60\u3002 </p> <p>\u66fe\u7ecf\uff0c\u7b14\u8005\u6240\u5728\u56e2\u961f\u5df2\u7ecf\u5c06\u90e8\u5206\u9879\u76ee\u7684\u7f16\u8bd1\u548c\u5355\u5143\u6d4b\u8bd5\u653e\u5230<code>Jenkins</code>\u4e0a\u6267\u884c\uff0c\u7136\u800c\u5e76\u6ca1\u6709\u4eba\u529b\u53ca\u80fd\u529b\u642d\u5efa<code>Nexus</code>\u3002\u4f46\u662f\u53c8\u671f\u671b\u80fd\u5c06\u81ea\u52a8\u6253\u5305\u597d\u7684<code>JAR</code>\u5305\u653e\u5230\u5404\u4e2a\u73af\u5883\u4e2d\u4f7f\u7528\uff0c\u4ee5\u9a6c\u4e0a\u4ece\u6301\u7eed\u96c6\u6210\u4e2d\u83b7\u76ca\uff0c\u600e\u4e48\u529e\uff1f \u8fd9\u65f6\uff0c<code>archiveArtifacts</code>\u6b65\u9aa4\uff08https://www.jenkins.io/doc/pipeline/steps/core/\uff09\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\u3002\u5b83\u80fd\u5bf9\u5236\u54c1\u8fdb\u884c\u5f52\u6863\uff0c\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u4ece<code>Jenkins</code>\u9875\u9762\u4e0a\u4e0b\u8f7d\u5236\u54c1\u4e86</p> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\ndef sonar = new org.devops.sonarqube()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n                } \n            }\n        }\n    }\n        post{\n            always{\n                archiveArtifacts artifacts: 'target/**/*.jar', fingerprint: true\n            }\n        }    \n }\n</code></pre> <pre><code>-------------------------------------------------------\nRunning com.mycompany.app.AppTest\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.094 sec\n\nResults :\n\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0\n\n[INFO] \n[INFO] --- maven-jar-plugin:3.0.2:jar (default-jar) @ my-app ---\n[INFO] Building jar: /home/vagrant/workspace/workspace/chap9_1/target/my-app-1.1-SNAPSHOT.jar\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  6.910 s\n[INFO] Finished at: 2020-08-02T18:18:44Z\n[INFO] ------------------------------------------------------------------------\n[Pipeline] }\n[Pipeline] // script\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] stage\n[Pipeline] { (Declarative: Post Actions)\n[Pipeline] archiveArtifacts\nArchiving artifacts\nRecording fingerprints\n</code></pre> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8be6\u7ec6\u4ecb\u7ecd\u51e0\u4e2a\u5e38\u7528\u7684<code>archiveArtifacts</code>\u7684\u53c2\u6570\u7528\u6cd5</p> <ul> <li><code>artifacts</code>\uff08\u5fc5\u586b\uff09\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u9700\u8981\u5f52\u6863\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u4f7f\u7528\u7684\u662f<code>Ant</code>\u98ce\u683c\u8def\u5f84\u8868\u8fbe\u5f0f\u3002 </li> <li><code>fingerprint</code>(\u53ef\u9009\uff09\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u662f\u5426\u5bf9\u5f52\u6863\u7684\u6587\u4ef6\u8fdb\u884c\u7b7e\u540d\u3002 </li> <li><code>excludes</code>\uff08\u53ef\u9009\uff09\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u9700\u8981\u6392\u9664\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u4f7f\u7528\u7684\u4e5f\u662f<code>Ant</code>\u98ce\u683c\u8def\u5f84\u8868\u8fbe\u5f0f\u3002</li> <li><code>caseSensitive</code>\uff08\u53ef\u9009\uff09\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u5bf9\u8def\u5f84\u5927\u5c0f\u5199\u662f\u5426\u654f\u611f\u3002 </li> <li><code>ontylfSuccessful</code>\uff08\u53ef\u9009\uff09\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u53ea\u5728\u6784\u5efa\u6210\u529f\u65f6\u8fdb\u884c\u5f52\u6863\u3002 </li> </ul> <p>\u503c\u5f97\u63d0\u7684\u662f\uff0c<code>archiveArtifacts</code>\u3002\u6b65\u9aa4\u5e76\u4e0d\u53ea\u7528\u4e8e\u5f52\u6863<code>JAR</code>\u5305\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u80fd\u5f52\u6863\u6240\u6709\u7c7b\u578b\u7684\u5236\u54c1 \u56e2\u961f\u521d\u671f\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u7ba1\u7406\u7b80\u5355\u7684\u5236\u54c1\u3002 </p> <p>console output</p> <p></p>"},{"location":"chap9/chap9_artifact1/#4java","title":"4\u3001\u7ba1\u7406Java\u6808\u5236\u54c1","text":"<p>\u76ee\u524d<code>Java</code>\u6808\u7684\u6784\u5efa\u5de5\u5177\u4ee5<code>Maven</code>\u53ca<code>Gradle</code>\u4e3a\u4e3b\u4e14<code>Maven</code>\u7684\u7528\u6237\u6700\u5e7f\u6cdb\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u4f7f \u7528Maven\u4f5c\u4e3a\u4e3b\u8981\u5de5\u5177\u6765\u8bb2\u89e3\u5236\u54c1\u7ba1\u7406\u3002 </p>"},{"location":"chap9/chap9_artifact1/#4-1-mavennexus","title":"4-1 \u4f7f\u7528Maven\u53d1\u5e03\u5236\u54c1\u5230<code>Nexus</code>\u4e2d","text":"<p>\u5f53<code>Nexus</code>\u642d\u5efa\u597d\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528<code>Maven Dep!oy</code>\u63d2\u4ef6\u4e0a\u4f20<code>JAR</code>\u6216<code>WAR</code>\u5305\u5230<code>Nexus</code>\u4e2d\u4e86<code>Deploy</code> \u63d2\u4ef6\u662f<code>Apache Maven</code>\u56e2\u961f\u63d0\u4f9b\u7684\u5b98\u65b9\u63d2\u4ef6\uff0c\u80fd\u5c06<code>JAR</code>\u5305\u53ca<code>POM</code>\u6587\u4ef6\u53d1\u5e03\u5230<code>Nexus</code>\u4e2d\u53e3\u76ee\u524d\u8be5\u63d2\u4ef6\u7684\u6700\u65b0\u7248\u672c\u662f<code>3.25.1</code>\u3002\u5728<code>POM</code>\u6587\u4ef6\u4e2d\u8fd9\u6837\u5b9a\u4e49\uff1a </p> <pre><code>&lt;plugins&gt; \n    &lt;plugin&gt; \n        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; \n        &lt;artifactId&gt;maven\u2014deploy\u2014plugin&lt;/artifactld&gt; \n        &lt;versSon&gt;3.25.1&lt;/version&gt; \n    &lt;plugin&gt; \n&lt;/plugins&gt; \n</code></pre> <p>\u5982\u679c\u4e0d\u9700\u8981\u81ea\u5b9a\u4e49<code>Deploy</code>\u63d2\u4ef6\u914d\u7f6e\uff0c\u5219\u4e0d\u9700\u8981\u5728<code>POM</code>\u6587\u4ef6\u4e2d\u5b9a\u4e49\u3002 </p> <p>\u4f7f\u7528Deploy\u63d2\u4ef6\u53d1\u5e03\u9700\u8981\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4 </p> <ul> <li>(1\uff09\u914d\u7f6e\u53d1\u5e03\u5730\u5740\u3002\u5728Maven\u9879\u76ee\u7684POM\u6587\u4ef6\u4e2d\u52a0\u4eba\uff1a </li> </ul> <pre><code>&lt;distributionManagement&gt; \n    &lt;snapshotRepository&gt; \n        &lt;id&gt;nexus-snapshot&lt;/id&gt; \n        &lt;name&gt;nexus snapshot&lt;/name&gt; \n        &lt;url&gt;http://&lt;Nexus\u7684\u5730\u5740&gt;/repository/maven\u2014snapshot&lt;/url&gt; \n    &lt;/snapshotRepository&gt; \n    &lt;repository&gt; \n        &lt;id&gt;nexus-release&lt;/id&gt; \n        &lt;name&gt;my nexus relesse&lt;/name&gt; \n        &lt;url&gt;http://&lt;Nexus\u7684\u5730\u5740&gt;/repository/maven\u2014releasese&lt;/url&gt; \n    &lt;/repository&gt; \n&lt;/distributionManagement&gt; \n</code></pre> <p>\u5b8c\u6210\u6b64\u6b65\u9aa4\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u6267\u884c<code>mvn clean deploy</code>\u8fdb\u884c\u53d1\u5e03\u4e86\u3002</p> <p><code>Deploy</code>\u63d2\u4ef6\u4f1a\u6839\u636e<code>Maven</code>\u9879\u76ee\u4e2d\u5b9a\u4e49\u7684<code>version</code>\u503c\u51b3\u5b9a\u662f\u4f7f\u7528<code>nexus-seapshot</code>\u4ed3\u5e93\u8fd8\u662f<code>nexus-release</code>\u4ed3\u5e93\u3002</p> <p>\u5f53<code>version</code>\u503c\u662f\u4ee5<code>-SNAPSHOT</code>\u540e\u7f00\u7ed3\u5c3e\u65f6\uff0c\u5219\u53d1\u5e03\u5230<code>nexus-seapshot</code>\u4ed3\u5e93 </p> <ul> <li>(2)\u914d\u7f6e\u8bbf\u95ee<code>Nexus</code>\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002\u5728<code>Nexus</code>\u4e2d\uff0c\u6211\u4eec\u914d\u7f6e\u4e86\u53ea\u6709\u6388\u6743\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u624d \u80fd\u53d1\u5e03\u5236\u54c1\u3002\u8fd9\u65f6\u9700\u8981\u5728<code>Maven</code>\u7684<code>settings.xml</code>\u4e2d\u52a0\u4eba\u914d\u7f6e\uff1a </li> </ul> <pre><code>&lt;servers&gt; \n    &lt;server&gt; \n        &lt;id&gt;nexus\u2014snapshot&lt;/id&gt; \n        &lt;username&gt;admin&lt;/username&gt; \n        &lt;password&gt;admin&lt;/password&gt; \n    &lt;/server&gt; \n    &lt;server&gt; \n        &lt;id&gt;nexus\u2014relesse&lt;/id&gt; \n        &lt;username&gt;admin&lt;/username&gt; \n        &lt;password&gt;admin&lt;/password&gt; \n    &lt;/server&gt; \n&lt;/servers&gt; \n</code></pre>"},{"location":"chap9/chap9_artifact1/#4-2-nexus","title":"4-2 \u4f7f\u7528<code>Nexus</code>\u63d2\u4ef6\u53d1\u5e03\u5236\u54c1","text":"<p>\u9664\u4e86\u53ef\u4ee5\u901a\u8fc7<code>Maven</code>\u53d1\u5e03<code>JAR</code>\u5305\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528<code>Nexus Platform</code>\u6765\u63d2\u4ef6\u5b9e\u73b0\u3002\u6700\u65b0\u7248\u672c\u7684<code>Nexus Platform</code>(<code>3.9.20200722-164144.e3a1be0</code>\uff09\u5df2\u7ecf\u540c\u65f6\u652f\u6301<code>Nexus 2.x</code>\u548c<code>Nexus 3.x</code>\uff0c\u53ea\u662f\u5b83\u7684\u6587\u6863\u66f4\u65b0\u4e0d\u53ca\u65f6\uff0c\u5927\u5bb6\u90fd\u4e0d\u77e5\u9053\u5b83\u652f\u63013.x\u7248\u672c\u4e86\u3002 </p> <p>\u5728\u5b89\u88c5\u597d<code>Nexus Platform</code>\u63d2\u4ef6\u540e\uff0c\u6839\u636e\u4ee5\u4e0b\u6b65\u9aa4\u6765\u4f7f\u7528\u3002 </p> <ul> <li>(1\uff09\u8fdb\u5165<code>Manage Jenkins - Configure System - Sonatype Nexus</code>\u9875\uff0c\u8bbe\u7f6e<code>Nexus 3.x</code>\u7684\u670d\u52a1\u5730\u5740</li> </ul> <p></p> <ul> <li>neuxs3</li> <li>http://192.168.33.1:32000/</li> </ul> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f: </p> <ul> <li>\u5728<code>Credentials</code>\u9009\u9879\u5904\u589e\u52a0\u4e86\u4e00\u4e2a\u5177\u6709\u53d1\u5e03\u5236\u54c1\u5230<code>Nexus</code>\u4e2d\u7684\u6743\u9650\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u51ed\u8bc1 </li> <li><code>Server ID</code>\u5b57\u6bb5\u7684\u503c\u8bbe\u7f6e\u5b8c\u6210\u540e\u5355\u51fb,\u5728<code>Jenkinsfile</code>\u4e2d\u4f1a\u5f15\u7528 </li> </ul> <p><code>Test connection</code>\u6309\u94ae\u6d4b\u8bd5\u8bbe\u7f6e\u662f\u5426\u6b63\u786e </p> <p></p> <ul> <li>(2\uff09\u5728<code>Jenkinsfile</code>\u4e2d\u52a0\u5165<code>nexusPublisher</code>\u6b65\u9aa4\u3002 </li> </ul> <pre><code>stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n                } \n                nexusPublisher( \n                        nexusInstanceId: 'nexus3', \n                        nexusRepositoryId: 'maven\u2014releases', \n                        packages: [ \n                            [ \n                            $class: 'MavenPackage',\n                            mavenAssetList: [\n                                [ classifier: '',\n                                    extension: '',\n                                    filePath: './target/my-app-1.1-SNAPSHOT.jar' \n                                ]\n                            ], //end of mavenAssetList\n                        mavenCoordinate: [ \n                            artifactId: 'my-app', \n                            groupId: 'com.mycompany.app', \n                            packaging: 'jar', version: '1.1-SNAPSHOT' ] \n                        ] // end of packages \n                    ])\n            }\n        }\n</code></pre> <p>\u4e0b\u9762\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b<code>nexusPublisher</code>\u7684\u53c2\u6570\u3002 </p> <ul> <li><code>nexusInstanceId</code>\uff1a\u5728<code>Jenkins</code>\u4e2d\u914d<code>\u7f6eNexus 3.x</code>\u65f6\u7684<code>Server ID</code> </li> <li><code>nexusRepositoryId</code>\uff1a\u53d1\u5e03\u5230<code>Nexus</code>\u670d\u52a1\u5668\u7684\u54ea\u4e2a\u4ed3\u5e93\u3002 </li> <li><code>mavenCoordinate</code>: Maven\u5305\u7684\u5750\u6807\uff0c<code>packaging</code>\u503c\u4e0e<code>Maven</code>\u4e2d\u7684<code>packaging</code>\u503c\u4e00\u81f4\uff0c\u53ef\u4ee5\u662f <code>jar</code>\u3001<code>war</code>\u3001<code>pom</code>\u3001<code>hpi</code>\u7b49\u3002 </li> <li><code>mavenAssetList</code>\uff1a\u8981\u53d1\u5e03\u7684\u6587\u4ef6\uff0c\u5982\u679c\u662f<code>pom.xml</code>\uff0c\u5219<code>extension</code>\u5fc5\u987b\u586b<code>\u201cxml\"</code>\u3002 </li> </ul> <p>\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u7b14\u8005\u5e76\u4e0d\u5e38\u4f7f\u7528\u6b64\u63d2\u4ef6\u3002\u539f\u56e0\u5982\u4e0b\uff1a </p> <ul> <li>\u6bcf\u4e2a<code>Maven</code>\u9879\u76ee\u90fd\u53ef\u80fd\u4e0d\u540c\uff0c\u5fc5\u987b\u4e3a\u6bcf\u4e2a<code>Maven</code>\u9879\u76ee\u5199<code>nexusPublisher</code>\u65b9\u6cd5\u3002 </li> <li>\u5bf9\u4e8e\u591a\u6a21\u5757\u7684<code>Maven</code>\u9879\u76ee\uff0c<code>nexusPublisher</code>\u7684\u53c2\u6570\u5199\u8d77\u6765\u5341\u5206\u9523\u5506\u3002 </li> </ul> <p>\u4f46\u662f\u4ecb\u7ecd\u8fd9\u4e2a\u63d2\u4ef6\u8fd8\u662f\u6709\u5fc5\u8981\u7684\uff0c\u4e00\u662f\u5927\u5bb6\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u9009\u62e9\uff1b\u4e8c\u662f\u53ef\u4ee5\u4e86\u89e3<code>Jenkins</code>\u4e0e<code>Nexus</code>\u7684\u96c6\u6210\u7a0b\u5ea6\u3002 </p>"},{"location":"chap9/chap9_artifact1/#5nexusdocker","title":"5\u3001\u4f7f\u7528Nexus\u7ba1\u7406Docker\u955c\u50cf","text":"<p>\u672c\u8282\u5047\u8bbe<code>Jenkins</code>\u673a\u5668\u4e0a\u5df2\u7ecf\u5b89\u88c5\u4e86<code>Docker CE</code>\u3002\u68c0\u67e5\u5728<code>Jenkins</code>\u4e0a\u80fd\u5426\u8fd0\u884c<code>Docker</code>\u7684\u65b9\u6cd5\u662f\uff1a\u5728<code>Jenkinsfile</code>\u4e2d\u52a0\u4eba<code>sh \"docker PS\"</code>\uff0c\u8bed\u53e5\uff0c\u5982\u679c\u6ca1\u6709\u62a5\u9519\uff0c\u5c31\u8bf4\u660e\u53ef\u4ee5\u8fd0\u884cDocker</p>"},{"location":"chap9/chap9_artifact1/#51-nexusdocker","title":"5.1 Nexus\uff1a\u521b\u5efa<code>Docker</code>\u79c1\u6709\u4ed3\u5e93","text":"<p>\u9996\u5148\u8fdb\u4ebaNexus\u7684\u4ed3\u5e93\u5217\u8868\u9875\uff1a<code>Administration -&gt; Repository -&gt; Repositories</code></p> <p></p> <p>\u5355\u51fb<code>\u201cdocker(hosted)\"</code>\uff0c\u8fdb\u4ebaDocker\uff1a\u79c1\u6709\u4ed3\u5e93\u521b\u5efa\u9875\uff0c </p> <p></p> <ul> <li>http://192.168.33.1:32000/repository/dockerrepo/</li> <li>dockerrepo</li> </ul> <pre><code>pipeline { \n    agent any \n    environment { \n        registry = \"http://192.168.33.1:32500\" \n        registryCredential = 'dockernexus' \n    } \n    stages { \n        stage('Build') { \n            steps { \n                withDockerRegistry([ \n                credentialsId: \"${registryCredential}\", \n                url: \"${registry}\" ]) { \n\n                sh \"docker build . -t ${registry}/hello:v2\"\n                sh \"docker push ${registry}/hello:v2\" \n                } \n            } \n        } \n    } \n} \n</code></pre>"},{"location":"chap9/chap9_artifact1/#6","title":"6\u3001\u7ba1\u7406\u539f\u59cb\u5236\u54c1","text":"<p><code>Nexus</code> \u63d0\u4f9b\u4e86\u5bf9<code>raw</code>\u4ed3\u5e93\u7684\u652f\u6301\u3002<code>raw</code>\u4ed3\u5e93\u53ef\u4ee5\u88ab\u7406\u89e3\u4e3a\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8be5\u4ed3\u5e93\u4e2d\u521b\u5efa\u76ee\u5f55\u3002 </p>"},{"location":"chap9/chap9_artifact1/#6-1-raw","title":"6-1 \u521b\u5efa<code>raw</code>\u4ed3\u5e93","text":"<p>\u8fdb\u5165<code>Administration -&gt; Repository -&gt; Repositories</code>\u9875\u3002 </p> <p>\u5355\u51fb<code>\u201craw(hosted)\"</code>\uff0c\u8fdb\u4eba<code>raw</code>\u4ed3\u5e93\u521b\u5efa\u9875\u3002 </p> <p></p> <p>\u8f93\u5165\u4ed3\u5e93\u540d\u79f0<code>raw-example</code>\uff0c\u5355\u51fb<code>\u201cCreate rcpository\u201d</code>\u6309\u94ae\uff0c\u786e\u8ba4\u540e\u521b\u5efa\u6210\u529f\u3002 </p> <p></p> <p>\u8be5\u4ed3\u5e93\u7684\u5730\u5740\u662f\uff1a<code>\uff1c\u4f60\u7684Nexus\u5730\u5740&gt;/repository/raw-example/</code>\u3002</p>"},{"location":"chap9/chap9_artifact1/#6-2","title":"6-2 \u4e0a\u4f20\u5236\u54c1\u83b7\u53d6\u5236\u54c1","text":"<p>\u4f7f\u7528<code>HTTP</code>\u5ba2\u6237\u7aef\u5c31\u53ef\u4ee5\u5c06\u5236\u54c1\u4e0a\u4f20\u5230raw\u4ed3\u5e93\u4e2d\u3002\u6211\u4eec\u4f7f\u7528<code>Linux curl</code>\u547d\u4ee4\u3002\u51e0\u4f53\u6b65\u9aa4\u5982\u4e0b </p> <ul> <li>(1)\u5728<code>Jenkins</code>\u4e0a\u6dfb\u52a0<code>Userame with password</code>\u51ed\u8bc1</li> <li>(2)\u5728<code>Jenkinsfile</code>\u4e2d\u52a0\u4eba\u4e0a\u4f20\u5236\u54c1\u7684\u6b65\u9aa4  </li> </ul> <pre><code>pipeline { \n    agent { node { label \"hostmachine\" }}\n    environment { \n        nexusRawUsernamePassword = credentials('nexus') \n    } \n    stages { \n        stage('Build') \n        { \n            steps { \n                sh \"curl --user '${nexusRawUsernamePassword}' -T ../../readme.md http://192.168.33.1:32000/repository/raw-example/${BUILD_NUMBER}/readme.md\" \n            } \n        } \n    }\n} \n</code></pre> <p>\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u76f4\u63a5\u4f7f\u7528\u6784\u5efa\u53f7\u4f5c\u4e3a\u76ee\u5f55\u540d\u79f0\u6765\u533a\u5206\u6bcf\u6b21\u4e0a\u4f20\u7684\u5236\u54c1\u3002curl\u547d\u4ee4\u7684\u683c\u5f0f\u4e3a\uff1a </p> <pre><code>curl --user '&lt;username:password&gt;' --upload-file &lt;\u5f85\u4e0a\u4f20\u5236\u54c1\u7684\u8def\u5f84&gt; &lt;\u5c06\u5236\u54c1\u4fdd\u5b58\u5230Nexus\u4e0a\u7684\u5168\u8def\u5f84&gt; \n</code></pre> <p></p> <p></p> <p>\u5c06\u5236\u54c1\u4fdd\u5b58\u5230Nexus\u4e0a\u7684\u5168\u8def\u5f84\uff1a\u5982\u679c\u76ee\u5f55\u4e0d\u5b58\u5728\uff0c<code>Nexus</code>\u5c06\u4f1a\u81ea\u52a8\u521b\u5efa\u3002 </p> <ul> <li>(3)\u5728Nexus\u4e2d\uff0c\u6211\u4eec\u770b\u5230<code>readme.md</code>\u6587\u4ef6\u5df2\u7ecf\u4e0a\u4f20\u6210\u529f\uff0c </li> </ul> <p>\u5728<code>Jenkins pipeline</code>\u4e2d\u83b7\u53d6\u539f\u59cb\u5236\u54c1\u65f6\uff0c\u6211\u4eec\u540c\u6837\u4f7f\u7528<code>curl</code>\u547d\u4ee4\u3002 </p> <pre><code>sh \"curl --user '${nexusRawUsernamePassword}' -o readme.md http://192.168.33.1:32000/repository/raw-example/2/readme.md\" \n</code></pre> <p></p>"},{"location":"chap9/chap9_artifact1/#7pipeline","title":"7\u3001\u4ece\u5176\u4ed6pipeline\u4e2d\u62f7\u8d1d\u5236\u54c1","text":"<p>\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u4ece\u53e6\u4e00\u4e2a<code>pipeline</code>\u4e2d\u62f7\u8d1d\u5236\u54c1\u3002<code>Copy Artifact</code>\u63d2\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5b9e\u73b0\u3002\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a </p> <pre><code>steps { \n    copyArtifacts( \n        projectName: \"core\", \n        selector: lastSuccessful(true) \n    ) \n} \n</code></pre> <ul> <li>\u4ece<code>core</code>\u9879\u76ee\u4e2d\u62ff\u5230\u6700\u540e\u4e00\u6b21\u6784\u5efa\u6210\u529f\u7684\u5236\u54c1\u3002 </li> </ul> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8be6\u7ec6\u4ecb\u7ecd<code>copyArtifacts</code>\u6b65\u9aa4\u7684\u53c2\u6570\u3002</p> <ul> <li><code>projectname</code>\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c<code>Jenkins job</code>\u6216<code>pipeline</code>\u540d\u79f0\u3002 </li> <li><code>selector</code>: <code>BuildSelector</code>\u7c7b\u578b\uff0c\u4ece\u53e6\u4e00\u4e2a<code>pipeline</code>\u4e2d\u62f7\u8d1d\u5236\u54c1\u7684\u9009\u62e9\u5668\uff0c\u9ed8\u8ba4\u62f7\u8d1d\u6700\u540e\u4e00\u4e2a\u5236\u54c1\u3002 </li> <li><code>parameters</code>\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u4f7f\u7528\u9017\u53f7\u5206\u9694\u7684\u952e\u503c\u5bf9\u5b57\u7b26\u4e32\uff08<code>name1=value1</code> ,<code>name2=value2</code>)\uff0c\u7528\u4e8e\u8fc7\u6ee4\u4ece\u54ea\u4e9b\u6784\u5efa\u4e2d\u62f7\u8d1d\u5236 </li> <li><code>filter</code>\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c<code>Ant</code>\u98ce\u683c\u8def\u5f84\u8868\u8fbe\u5f0f\uff0c\u7528\u4e8e\u8fc7\u6ee4\u9700\u8981\u62f7\u8d1d\u7684\u6587\u4ef6\u3002 </li> <li><code>excludes</code>\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c<code>Ant</code>\u98ce\u683c\u8def\u5f84\u8868\u8fbe\u5f0f\uff0c\u7528\u4e8e\u6392\u9664\u4e0d\u9700\u8981\u62f7\u8d1d\u7684\u6587\u4ef6\u3002 </li> <li><code>target</code>\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u62f7\u8d1d\u5236\u54c1\u7684\u76ee\u6807\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a\u5f53\u524d<code>pipeline</code>\u7684\u5de5\u4f5c\u76ee\u5f55\u3002 </li> <li><code>optional</code>\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u5982\u679c\u4e3a<code>true</code>\uff0c\u5219\u62f7\u8d1d\u5931\u8d25\uff0c\u4f46\u4e0d\u5f71\u54cd\u672c\u6b21\u6784\u5efa\u7ed3\u679c\u3002 </li> <li><code>fingerprintArtifacts</code>\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u662f\u5426\u5bf9\u5236\u54c1\u8fdb\u884c\u7b7e\u540d\uff0c\u9ed8\u8ba4\u503c\u4e3a<code>true</code> </li> <li><code>resultVariableSuffix</code>\uff1a\u4e0a\u4f8b\u4e2d\uff0c\u65e0\u6cd5\u5f97\u77e5\u6211\u4eec\u5230\u5e95\u62ff\u7684\u662fcore\u9879\u76ee\u7684\u54ea\u6b21\u6784\u5efa\u7684\u5236\u54c1\u3002<code>CopyArtifact</code>\u63d2\u4ef6\u7684\u8bbe\u8ba1\u662f\u5c06\u5176\u6784\u5efa\u6b21\u6570\u653e\u5230\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\u4e2d\u3002\u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\u540d\u5c31\u662f\u5728 <code>COPYARTIFACT_BUILD_NUMBER_</code>\u540e\u62fc\u4e0a<code>resultVariabiLeSuffix</code>\uff0c\u6bd4\u5982<code>resultVariableSuffix</code>\u503c\u4e3a<code>corejob</code>\uff0c\u90a3\u4e48\u5c31\u5728<code>pipeline</code>\u4e2d\u901a\u8fc7\u53d8\u91cf<code>COPYARTIFACT_BUILD_NUMBER_corejob</code>\u62ff\u5230\u6e90<code>pipeline</code>\u7684\u6784\u5efa\u6b21\u6570\u4e86\u3002</li> </ul> <p>\u9664<code>projectname</code>\u53c2\u6570\u662f\u5fc5\u586b\u7684\u5916\uff0c\u5176\u4ed6\u53c2\u6570\u90fd\u662f\u53ef\u9009\u7684\u3002 </p> <p>\u4e0b\u800c\u4ecb\u7ecd\u51e0\u79cd\u5e38\u7528\u7684\u83b7\u53d6\u9009\u62e9\u5668\u7684\u65b9\u6cd5\u3002 </p> <ul> <li><code>lastSuccesSful</code>\uff1a\u6700\u540e\u4e00\u6b21\u6784\u5efa\u6210\u529f\u7684\u5236\u54c1\u3002\u65b9\u6cd5\u7b7e\u540d\u4e3a<code>lastSuccessful(boolean stable</code>)\u3002<code>stable</code>\u4e3a<code>true</code>\u8868\u793a\u53ea\u53d6\u6784\u5efa\u6210\u529f\u7684\u5236\u54c1\uff0c\u4e3a<code>false</code>\u8868\u793a\u53ea\u8981\u6784\u5efa\u7ed3\u679c\u6bd4<code>UNSTABLE</code>\u597d\u5c31\u884c\u3002 </li> <li><code>specific</code>\uff1a\u6307\u5b9a\u67d0\u4e00\u6b21\u6784\u5efa\u7684\u5236\u54c1\u3002\u65b9\u6cd5\u7b7e\u540d\u4e3a<code>specific(String bulidNumber)</code>\u3002 <code>buildNumber</code>\u8868\u793a\u6307\u5b9a\u53d6\u7b2c<code>n</code>\u6b21\u6784\u5efa\u7684\u5236\u54c1\u3002 </li> <li><code>lastCompleted</code>\uff1a\u6700\u540e\u4e00\u6b21\u5b8c\u6210\u6784\u5efa\u7684\u5236\u54c1\uff0c\u4e0d\u8bba\u6784\u5efa\u7684\u6700\u7ec8\u72b6\u6001\u5982\u4f55\u3002\u65b9\u6cd5\u7b7e\u540d\u4e3a <code>lastCompleted()</code>\u3002 </li> <li><code>latestSavedBuild</code>\uff1a\u6700\u540e\u4e00\u6b21\u88ab\u6807\u8bb0\u4e3a<code>keep forever</code>\u7684\u6784\u5efa\u7684\u5236\u54c1\u3002\u65b9\u6cd5\u7b7e\u540d\u4e3a<code>latestSavedBuild()</code>\u3002</li> </ul>"},{"location":"chap9/chap9_artifact1/#8","title":"8\u3001\u7248\u672c\u53f7\u7ba1\u7406","text":"<p>\u8c08\u5230\u5236\u54c1\uff0c\u5c31\u5fc5\u987b\u8c08\u5230\u7248\u672c\u53f7\u7684\u7ba1\u7406\u3002\u7248\u672c\u53f7\u7684\u5236\u5b9a\u5e76\u6ca1\u6709\u6240\u8c13\u7684\u884c\u4e1a\u6807\u51c6\u3002\u6bd4\u5982\u8c37\u6b4c\u6d4f\u89c8 \u5668\u5f53\u524d\u7248\u672c\u53f7\u4e3a<code>70.0.3538.110;</code> Ubuntu\u64cd\u4f5c\u7cfb\u7edf\u5f53\u524d\u7248\u672c\u53f7\u4e3a<code>18.10;</code>\u7531\u7f8e\u56fd\u8ba1\u7b97\u673a\u6559\u6388\u9ad8\u5fb7\u7eb3 (<code>Donald Ervin Knut</code>h)\u7f16\u5199\u7684\u529f\u80fd\u5f3a\u5927\u7684\u6392\u7248\u8f6f\u4ef6TEX\u7cfb\u7edf\u7684\u7248\u672c\u53f7\u4e0d\u65ad\u8d8b\u8fd1\u4e8e<code>\u03c0</code>\uff0c\u7c7b\u4f3c\u4e8e\u8fd9\u6837\uff1a<code>3.1415926</code>\u3002 </p>"},{"location":"chap9/chap9_artifact1/#81","title":"8.1 \u8bed\u4e49\u5316\u7248\u672c","text":"<p>GitHub\u63d0\u51fa\u4e86\u4e00\u79cd\u5177\u6709\u6307\u5bfc\u610f\u4e49\u3001\u7edf\u4e00\u7684\u7248\u672c\u53f7\u8868\u793a\u89c4\u5219\uff0c\u79f0\u4e3a<code>Semantic Versioning</code>\uff08\u8bed\u4e49\u5316\u7248\u672c\u8868\u793a\uff09\u3002\u8fd9\u4e5f\u88ab\u4eba\u4eec\u79f0\u4e3a\u4e09\u6bb5\u5f0f\u7248\u672c\u53f7\u3002\u6709\u4e86\u8fd9\u5957\u89c4\u5219\uff0c\u7528\u6237\u4e00\u770b\u7248\u672c\u53f7\uff0c\u5c31\u5927\u6982\u80fd\u731c\u5230 \u4e00\u4e2a\u8f6f\u4ef6\u4e24\u4e2a\u7248\u672c\u4e4b\u95f4\u7684\u53ef\u80fd\u53d8\u5316\u3002 </p> <p>\u8bed\u4e49\u5316\u7248\u672c\u683c\u5f0f\u4e3a\uff1a\u4e3b\u7248\u672c\u53f7\u3001\u6b21\u7248\u672c\u53f7\u3001\u4fee\u6c40\u53f7\u3002</p> <p>\u7248\u672c\u53f7\u9012\u589e\u89c4\u5219\u5982\u4e0b\uff1a</p> <ul> <li>\u4e3b\u7248\u672c\u53f7\uff1a\u5f53\u4f5c\u4e86\u4e0d\u517c\u5bb9\u7684API\u4fee\u6539\u65f6\u3002 </li> <li>\u6b21\u7248\u672c\u53f7\uff1a\u5f53\u4f5c\u4e86\u5411\u4e0b\u517c\u5bb9\u7684\u529f\u80fd\u6027\u65b0\u589e\u65f6\u3002 </li> <li>\u4fee\u8ba2\u53f7\uff1a\u5f53\u4f5c\u4e86\u5411\u4e0b\u517c\u5bb9\u7684\u95ee\u9898\u4fee\u6b63\u65f6\u3002 </li> </ul> <p>\u5148\u884c\u7248\u672c\u53f7\u53ca\u7248\u672c\u7f16\u8bd1\u5143\u6570\u636e\u53ef\u4ee5\u52a0\u5230\u4e3b\u7248\u672c\u53f7\u3001\u6b21\u7248\u672c\u53f7\u3001\u4fee\u8ba2\u53f7\u201d\u7684\u540e\u9762\uff0c\u4f5c\u4e3a\u5ef6\u4f38\u3002 \u4ee5\u4e0b\u662f\u5e38\u7528\u7684\u4fee\u9970\u8bcd\u3002 </p> <ul> <li>alpha: \u5185\u90e8\u7248\u672c\u3002 </li> <li>beta: \u6d4b\u8bd5\u7248\u672c\u3002</li> <li>rc: \u5373\u5c06\u4f5c\u4e3a\u6b63\u5f0f\u7248\u672c\u53d1\u5e03\u3002</li> <li>lts: \u957f\u671f\u7ef4\u62a4\u3002 </li> </ul>"},{"location":"chap9/chap9_artifact1/#82-version-number","title":"8.2 \u65b9\u4fbf\u751f\u6210\u7248\u672c\u53f7\u7684<code>Version Number</code>\u63d2\u4ef6","text":"<p><code>VersionNumber</code> (https://plugins.jenkins.io/versionnumber/\uff09\u662f\u4e00\u6b3e\u7528\u4e8e\u751f\u6210\u7248\u672c\u53f7\u7684\u63d2\u4ef6\uff0c\u5b83  \u63d0\u4f9b\u4e86<code>VersionNumber</code>\u6b65\u9aa4\u3002\u5177\u4f53\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a </p> <pre><code>script { \n    def version = VersionNumber versionPrefix: ${JOB_NAME}-\", versionNumberString: 'v1.1.1.${BUILDS_ALL_TIME}' \n    echo \"${version}\" \n}\n</code></pre> <p>\u6ce8\u610f\uff1a<code>BUILDS_ALL_TIME</code>\u53ea\u662f\u5360\u4f4d\u7b26\uff0c\u5e76\u4e0d\u662f<code>Jenkins</code>\u6216<code>Version Number</code>\u63d2\u4ef6\u63d0\u4f9b\u7684\u73af\u5883\u53d8\u91cf\u3002 </p> <p><code>VersionNumber</code>\u6b65\u9aa4\u652f\u6301\u4ee5\u4e0b\u53c2\u6570\u3002 </p> <ul> <li><code>versionNumberString</code>\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u7248\u672c\u53f7\u683c\u5f0f\uff0c\u7528\u4e8e\u751f\u6210\u7248\u672c\u53f7\u3002\u53ea\u80fd\u4f7f\u7528\u5355\u5f15\u53f7\uff0c\u4ee5\u9632\u683c\u5f0f\u4e2d\u7684\u5360\u4f4d\u7b26\u88ab\u8f6c\u4e49\u3002\u7248\u672c\u53f7\u683c\u5f0f\u652f\u6301\u591a\u79cd\u5360\u4f4d\u7b26\uff0c\u7a0d\u540e\u4ecb\u7ecd\u3002 </li> <li><code>versionPrefix</code>\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u7248\u672c\u53f7\u7684\u524d\u7f00\u3002 </li> <li><code>projectStartDate</code>\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u9879\u76ee\u5f00\u59cb\u65f6\u95f4\uff0c\u683c\u5f0f\u4e3a<code>yyyy-MM-dd</code>\uff0c\u7528\u4e8e\u8ba1\u7b97\u9879\u76ee\u5f00\u59cb\u540e\u7684\u6708\u6570\u548c\u5e74\u6570\u3002 </li> <li><code>worstResultForIncrement</code>\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u5982\u679c\u672c\u6b21\u6784\u5efa\u72b6\u6001\u6bd4\u4e0a\u4e00\u6b21\u6784\u5efa\u72b6\u6001\u66f4\u7cdf\u7cd5\uff0c\u5219 <code>BUILDS_TODAY</code>\u3001<code>BUILDS_THIS_WEEK</code>\u3001<code>BUILDS_THIS_MONTH</code>\u3001<code>BUILDS_THIS_YEAR</code> \u5360\u4f4d\u7b26\u7684\u503c\u4e0d\u4f1a\u589e\u52a0\u3002<code>worstResultForIncrement</code>\u53ef\u4ee5\u8bbe\u7f6e\u7684\u503c\u6709<code>SUCCESS</code>\u3001<code>UNSTABLE</code>\u3001 <code>FAILURE</code>\u3001<code>ABORTED</code>\u3001<code>NOT_BUILT</code>\uff08\u9ed8\u8ba4\uff09\u3002\u6b64\u53c2\u6570\u8f83\u5c11\u4f7f\u7528\u3002 </li> </ul> <p><code>versionNumberString</code>\u53c2\u6570\u4f7f\u7528\u5360\u4f4d\u7b26\u751f\u6210\u7248\u672c\u53f7\u3002\u90e8\u5206\u5360\u4f4d\u7b26\u672c\u8eab\u652f\u6301\u53c2\u6570\u5316\u3002\u63a5\u4e0b\u6765\u5206\u522b\u4ecb\u7ecd\u5b83\u4eec\u3002 </p> <ul> <li><code>BUILD_DATE_FORMATTED</code>\uff1a\u683c\u5f0f\u5316\u7684\u6784\u5efa\u65e5\u671f\uff0c\u652f\u6301\u53c2\u6570\u5316\uff0c\u5982<code>${BUILD_DATE_FORMATTED,\"yyyy-MM-dd\"}</code>\u3002</li> <li><code>BUILD_DAY</code>\uff1a\u6784\u5efa\u65e5\u671f\uff0c\u652f\u6301<code>x</code>\u548c<code>xx</code>\u53c2\u6570\u3002\u6bd4\u5982\u662f12\u67082\u65e5\uff0c<code>${BUILD_DAY\uff5d</code>\u5c06\u8fd4\u56de2, <code>${BUILD_DAY,X}</code>\u5c06\u8fd4\u56de2,<code>${BUILD_DAY,XX}</code>\u5c06\u8fd4\u56de03\u3002 </li> <li><code>BUILD_WEEK</code>\uff1a\u4eca\u5e74\u6784\u5efa\u7684\u661f\u671f\u6570\uff0c\u652f\u6301<code>x</code>\u548c<code>xx</code>\u53c2\u6570\u3002 </li> <li><code>BUILD_MONTH</code>\uff1a\u4eca\u5e74\u6784\u5efa\u7684\u6708\u6570\uff0c\u652f\u6301<code>x</code>\u548c<code>xx</code>\u53c2\u6570\u3002 </li> <li><code>BUILD_YEAR</code>\uff1a\u4eca\u5e74\u6784\u5efa\u7684\u5e74\u4efd\u3002</li> </ul> <p>\u6bd4\u5982\u6784\u5efa\u7684\u65f6\u95f4\u4e3a<code>2018-12-02</code>\uff0c\u90a3\u4e48<code>BUILD_DAY</code>\u7684\u503c\u4e3a<code>2</code>, <code>BUILD_WEEK</code>\u7684\u503c\u4e3a<code>49</code>,<code>BUILD_MONTH</code>\u7684\u503c\u4e3a<code>12</code>, <code>BUILD_YEAR</code>\u7684\u503c\u4e3a<code>2018</code>\u3002 </p> <p>\u63a5\u4e0b\u6765\u662f\u4e00\u7ec4\u548c\u6784\u5efa\u6570\u76f8\u5173\u7684\u5360\u4f4d\u7b26\uff1a<code>BUILDS_TODAY</code>\u3001 <code>BUILDS_THIS_WEEK</code>  \u3001<code>BUILDS_THIS_MONTH</code>\u3001 <code>BUILDS_THIS_YEAR</code>\uff0c\u5b83\u4eec\u5206\u522b\u8868\u793a\u5f53\u5929\u3001\u672c\u661f\u671f\u3001\u672c\u6708\u3001\u672c\u5e74\u5b8c\u6210\u7684\u6784\u5efa\u6570\u3002<code>BUILDS_ALL_TIME</code>\u8868\u793a\u81ea\u4ece\u9879\u76ee\u5f00\u59cb\u540e\u5b8c\u6210\u7684\u603b\u6784\u5efa\u6570\u3002</p> <p><code>MONTHS_S\u5de5NCE_PROJECT_START</code>\u548c<code>YEARS_SINCE_PROJECT_START</code>\u5206\u522b\u8868\u793a\u81ea\u9879\u76ee\u5f00\u59cb\u65e5\u671f\u8d77\u5df2\u8fc7\u53bb\u7684\u65e5\u5386\u6708\u6570\u548c\u5e74\u6570\u3002 </p>"},{"location":"chap9/chap9_artifact2/","title":"\u7b2c\u4e09\u8282 Nexus \u5236\u54c1\u4e0a\u4f20","text":""},{"location":"chap9/chap9_artifact2/#1mvn-deploy","title":"1\u3001\u4f7f\u7528mvn  deploy\u4e0a\u4f20\u5236\u54c1","text":"<ul> <li>\u521b\u5efa\u4ed3\u5e93<code>maven-release</code>(\u5df2\u521b\u5efa)</li> <li>\u914d\u7f6e<code>maven-release</code>\u8ba4\u8bc1<ul> <li>\u5728<code>settings.xml server</code></li> <li>\u6ce8\u610f<code>server.id == respository.id</code></li> </ul> </li> <li>\u4f7f\u7528<code>mvn deploy</code>\u53d1\u5e03</li> </ul>"},{"location":"chap9/chap9_artifact2/#1-1-maven-release","title":"1-1 \u914d\u7f6e<code>maven-release</code>\u8ba4\u8bc1","text":"<pre><code>cd /opt/apache-maven-3.6.3/conf\nsudo vim settings.xml\n\n&lt;server&gt;\n     &lt;id&gt;maven-releases&lt;/id&gt;\n     &lt;username&gt;admin&lt;/username&gt;\n     &lt;password&gt;admin&lt;/password&gt;\n&lt;/server&gt;\n&lt;server&gt;\n     &lt;id&gt;maven-hosted&lt;/id&gt;\n     &lt;username&gt;admin&lt;/username&gt;\n     &lt;password&gt;admin&lt;/password&gt;\n&lt;/server&gt;\n</code></pre>"},{"location":"chap9/chap9_artifact2/#1-2-mvn-deploy","title":"1-2 \u4f7f\u7528<code>mvn deploy</code>\u53d1\u5e03","text":"<pre><code>def pom =readMavenPom file: 'pom.xml'\n                    pomVersion = \"${pom.version}\"\n                    pomArtifact = \"${pom.artifactId}\"\n                    pomPackaging = \"${pom.packaging}\"\n                    pomGroupId = \"${pom.groupId}\"\n\n                    println(\"${pomGroupId}-${pomArtifact}-${pomVersion}-${pomPackaging}\")\n\n                    def mvnHome = tool \"m2\"\n                    sh \"\"\"\n                        cd target/\n                        ${mvnHome}/bin/mvn deploy:deploy-file -Dmaven.test.skip=true -Dfile=${jarName} -DgroupId=${pomGroupId} -DartifactId=${pomArtifact} -Dversion=${pomVersion} -Dpackaging=${pomPackaging} -DrepositoryId=maven-releases -Durl=http://192.168.33.1:32000/repository/maven-releases/\n                    \"\"\"\n</code></pre> <p>Error: 400 repository version policy: release does not allow version</p> <p>\u4fee\u6539<code>pom.xml</code>\u91cc\u9762\u7684<code>version</code>\u4fe1\u606f</p> <p><code>&lt;version&gt;1.1-SNAPSHOT&lt;/version&gt;</code> =&gt; <code>`&lt;version&gt;1.1&lt;/version&gt;</code></p> <pre><code>stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n\n                    def jarName = sh returnStdout: true, script: \"cd target; ls *.jar\"\n                    jarName = jarName - \"\\n\"\n\n                    def pom =readMavenPom file: 'pom.xml'\n                    pomVersion = \"${pom.version}\"\n                    pomArtifact = \"${pom.artifactId}\"\n                    pomPackaging = \"${pom.packaging}\"\n                    pomGroupId = \"${pom.groupId}\"\n\n                    println(\"${pomGroupId}-${pomArtifact}-${pomVersion}-${pomPackaging}\")\n\n                    def mvnHome = tool \"m2\"\n                    sh \"\"\"\n                        cd target/\n                        ${mvnHome}/bin/mvn deploy:deploy-file -Dmaven.test.skip=true -Dfile=${jarName} -DgroupId=${pomGroupId} -DartifactId=${pomArtifact} -Dversion=${pomVersion} -Dpackaging=${pomPackaging} -DrepositoryId=maven-releases -Durl=http://192.168.33.1:32000/repository/maven-releases/\n                    \"\"\"\n                } \n            }\n        }\n</code></pre>"},{"location":"chap9/chap9_artifact2/#1-3-console-output","title":"1-3 Console output","text":"<pre><code>....\n+ cd target/\n+ /opt/maven/bin/mvn deploy:deploy-file -Dmaven.test.skip=true -Dfile=my-app-1.1.jar -DgroupId=com.mycompany.app -DartifactId=my-app -Dversion=1.1 -Dpackaging=jar -DrepositoryId=maven-releases -Durl=http://192.168.33.1:32000/repository/maven-releases/\n[INFO] Scanning for projects...\n[INFO] \n[INFO] ------------------&lt; org.apache.maven:standalone-pom &gt;-------------------\n[INFO] Building Maven Stub Project (No POM) 1\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO] \n[INFO] --- maven-deploy-plugin:2.7:deploy-file (default-cli) @ standalone-pom ---\nUploading to maven-releases: http://192.168.33.1:32000/repository/maven-releases/com/mycompany/app/my-app/1.1/my-app-1.1.jar\nProgress (1): 2.6 kB\n\nUploaded to maven-releases: http://192.168.33.1:32000/repository/maven-releases/com/mycompany/app/my-app/1.1/my-app-1.1.jar (2.6 kB at 3.4 kB/s)\nUploading to maven-releases: http://192.168.33.1:32000/repository/maven-releases/com/mycompany/app/my-app/1.1/my-app-1.1.pom\nProgress (1): 395 B\n\nUploaded to maven-releases: http://192.168.33.1:32000/repository/maven-releases/com/mycompany/app/my-app/1.1/my-app-1.1.pom (395 B at 914 B/s)\nDownloading from maven-releases: http://192.168.33.1:32000/repository/maven-releases/com/mycompany/app/my-app/maven-metadata.xml\nUploading to maven-releases: http://192.168.33.1:32000/repository/maven-releases/com/mycompany/app/my-app/maven-metadata.xml\nProgress (1): 299 B\n\nUploaded to maven-releases: http://192.168.33.1:32000/repository/maven-releases/com/mycompany/app/my-app/maven-metadata.xml (299 B at 466 B/s)\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  3.295 s\n[INFO] Finished at: 2020-08-04T09:49:11Z\n[INFO] ------------------------------------------------------------------------\n...\n</code></pre>"},{"location":"chap9/chap9_artifact2/#1-4-mixedmaven-hosted-repository","title":"1-4 \u65b9\u6cd5\u4e8c\uff1a \u5efa\u7acb\u65b0\u7684<code>mixed</code>\u7c7b\u578b\u7684<code>maven-hosted</code> repository","text":"<pre><code>def mvnHome = tool \"m2\"\nsh \"\"\"\n    cd target/\n    ${mvnHome}/bin/mvn deploy:deploy-file -Dmaven.test.skip=true -Dfile=${jarName} -DgroupId=${pomGroupId} -DartifactId=${pomArtifact} -Dversion=${pomVersion} -Dpackaging=${pomPackaging} -DrepositoryId=maven-releases -Durl=http://192.168.33.1:32000/repository/maven-hosted/\n \"\"\"\n</code></pre>"},{"location":"chap9/chap9_artifact2/#2-jenkins","title":"2\u3001\u4f7f\u7528 Jenkins \u63d2\u4ef6\u4e0a\u4f20\u5236\u54c1","text":"<ul> <li>\u5b89\u88c5<code>nexus artifact uploader</code>\u63d2\u4ef6 nexus artifact uploader</li> <li>\u4f7f\u7528\u7247\u6bb5\u751f\u6210\u5668\u751f\u6210DSL </li> </ul> <pre><code>nexusArtifactUploader artifacts: [[artifactId: \"${pomArtifact}\", \n                                        classifier: '', \n                                        file: \"${filePath}\", \n                                        type: \"${pomPackaging}\"]], \n                            credentialsId: 'nexus', \n                            groupId: \"${pomGroupId}\", \n                            nexusUrl: '192.168.33.1:32000', \n                            nexusVersion: 'nexus3', \n                            protocol: 'http', \n                            repository: \"${repoName}\", \n                            version: \"${pomVersion}\"\n</code></pre> <p>Console Output</p> <pre><code>[Pipeline] nexusArtifactUploader\nUploading artifact my-app-1.1-SNAPSHOT.jar started....\nGroupId: com.mycompany.app\nArtifactId: com.mycompany.app\nClassifier: \nType: jar\nVersion: 1.1-SNAPSHOT\nFile: my-app-1.1-SNAPSHOT.jar\nRepository:maven-hosted\nDownloading: http://192.168.33.1:32000/repository/maven-hosted/com/mycompany/app/my-app/1.1-SNAPSHOT/maven-metadata.xml\n100 % completed (767 B / 767 B).\nDownloaded: http://192.168.33.1:32000/repository/maven-hosted/com/mycompany/app/my-app/1.1-SNAPSHOT/maven-metadata.xml (767 B at 666 B/s)\nUploading: http://192.168.33.1:32000/repository/maven-hosted/com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.192037-2.jar\n</code></pre>"},{"location":"chap9/chap9_artifact2/#2-1-nexus-sharedlibrary","title":"2-1 Nexus\u65b9\u6cd5\u7f6e\u4e8e SharedLibrary","text":"<p><code>JenkinslibTest/src/org/devops/nexus.groovy</code></p> <pre><code>pakcage org.devops\n\n\n//\u83b7\u53d6POM\u4e2d\u7684\u5750\u6807\ndef GetGav(){\n   //\u4e0a\u4f20\u5236\u54c1\n    def jarName = sh returnStdout: true, script: \"cd target;ls *.jar\"\n    env.jarName = jarName - \"\\n\"\n\n    def pom = readMavenPom file: 'pom.xml'\n    env.pomVersion = \"${pom.version}\"\n    env.pomArtifact = \"${pom.artifactId}\"\n    env.pomPackaging = \"${pom.packaging}\"\n    env.pomGroupId = \"${pom.groupId}\"\n\n    println(\"${pomGroupId}-${pomArtifact}-${pomVersion}-${pomPackaging}\")\n\n    return [\"${pomGroupId}\",\"${pomArtifact}\",\"${pomVersion}\",\"${pomPackaging}\"]\n}\n\n\n//Nexus plugin deploy\ndef NexusUpload(){\n    //use nexus plugin\n    nexusArtifactUploader artifacts: [[artifactId: \"${pomArtifact}\", \n                                        classifier: '', \n                                        file: \"${filePath}\", \n                                        type: \"${pomPackaging}\"]], \n                            credentialsId: 'nexus', \n                            groupId: \"${pomGroupId}\", \n                            nexusUrl: '192.168.33.1:32000', \n                            nexusVersion: 'nexus3', \n                            protocol: 'http', \n                            repository: \"${repoName}\", \n                            version: \"${pomVersion}\"\n}\n\n//mvn deploy\ndef MavenUpload(){          \n    def mvnHome = tool \"m2\"\n    sh  \"\"\" \n        cd target/\n        ${mvnHome}/bin/mvn deploy:deploy-file -Dmaven.test.skip=true  \\\n                                -Dfile=${jarName} -DgroupId=${pomGroupId} \\\n                                -DartifactId=${pomArtifact} -Dversion=${pomVersion}  \\\n                                -Dpackaging=${pomPackaging} -DrepositoryId=maven-hosted \\\n                                -Durl=http://192.168.33.1:32000/repository/maven-hosted \n        \"\"\"\n}\n\n\ndef main(uploadType){\n    GetGav()\n    if (\"${uploadType}\" == \"maven\"){\n        MavenUpload()\n    } else if (\"${uploadType}\" == \"nexus\") {\n        env.repoName = \"maven-hosted\"\n        env.filePath = \"target/${jarName}\"\n        NexusUpload()\n    }\n}\n</code></pre> <ul> <li> <p>\u4e09\u4e2a\u65b9\u6cd5\uff1a</p> <ul> <li><code>GetGav()</code>\uff1a \u83b7\u53d6POM\u4e2d\u7684\u5750\u6807</li> <li><code>NexusUpload()</code>: Nexus plugin deploy</li> <li><code>MavenUpload()</code> mvn deploy</li> </ul> </li> <li> <p>\u66f4\u65b0<code>pom.xml</code>\u7684<code>version</code>\u7248\u672c</p> </li> </ul> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\ndef sonar = new org.devops.sonarqube()\ndef nexus = new org.devops.nexus()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n                    nexus.main(\"maven\")\n                    &lt;!--nexus.main(\"nexus\")--&gt;\n                } \n            }\n        }\n    }\n }\n</code></pre> <ul> <li><code>def nexus = new org.devops.nexus()</code></li> <li><code>nexus.main(\"maven\")</code> or <code>nexus.main(\"nexus\")</code></li> </ul> <p>Console output maven</p> <pre><code>+ cd target/\n+ /opt/maven/bin/mvn deploy:deploy-file -Dmaven.test.skip=true -Dfile=my-app-1.1-RELEASE.jar -DgroupId=com.mycompany.app -DartifactId=my-app -Dversion=1.1-RELEASE -Dpackaging=jar -DrepositoryId=hosted -Durl=http://192.168.33.1:32000/repository/maven-hosted\n[INFO] Scanning for projects...\n[INFO] \n[INFO] ------------------&lt; org.apache.maven:standalone-pom &gt;-------------------\n[INFO] Building Maven Stub Project (No POM) 1\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO] \n[INFO] --- maven-deploy-plugin:2.7:deploy-file (default-cli) @ standalone-pom ---\nUploading to maven-releases: http://192.168.33.1:32000/repository/maven-releases/com/mycompany/app/my-app/1.1-RELEASE/my-app-1.1-RELEASE.jar\nProgress (1): 2.6 kB\n...\n</code></pre>"},{"location":"chap9/chap9_artifact2/#3-nexus","title":"3\u3001\u4f7f\u7528 Nexus \u63d2\u4ef6\u4e0a\u4f20\u5236\u54c1","text":"<ul> <li> <p>\u5b89\u88c5<code>Nexus</code>\u63d2\u4ef6\u4e0a\u4f20\u5236\u54c1 https://plugins.jenkins.io/nexus-artifact-uploader/</p> </li> <li> <p>Name: <code>artifactUrl</code></p> </li> <li>Nexus Server URL: <code>http://192.168.33.1:32000</code></li> <li>RepositoryId: <code>maven-hosted</code></li> <li>GroupId: <code>com.mycompany.app</code></li> <li>ArtifactId: <code>my-app</code></li> <li> <p>Packaging: <code>jar</code></p> </li> <li> <p>http://192.168.33.1:32000/repository/maven-hosted/com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.192037-2.jar</p> </li> <li>http://192.168.33.1:32000/repository/maven-hosted/com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.190212-1.jar</li> </ul> <p></p> <pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\ndef sonar = new org.devops.sonarqube()\ndef nexus = new org.devops.nexus()\n\n\nString artifactUrl = \"${env.artifactUrl}\"\n\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    build.Build(buildType,buildShell)\n\n                    // Upload artifact\n                    // nexus.main(\"nexus\")\n\n                    // Release artifact\n                    sh \"wget ${artifactUrl} &amp;&amp; ls\"\n\n                } \n            }\n        }\n    }\n }\n</code></pre> <p></p> <p>Console output</p> <pre><code>+ wget http://192.168.33.1:32000/repository/maven-hosted/com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.190212-1.jar\n--2020-08-13 19:25:39--  http://192.168.33.1:32000/repository/maven-hosted/com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.190212-1.jar\nConnecting to 192.168.33.1:32000... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 2626 (2.6K) [application/java-archive]\nSaving to: \u2018my-app-1.1-20200813.190212-1.jar\u2019\n\n     0K ..                                                    100%  286M=0s\n\n2020-08-13 19:25:39 (286 MB/s) - \u2018my-app-1.1-20200813.190212-1.jar\u2019 saved [2626/2626]\n\n+ ls\nci.jenkinsfile\njenkins\nJenkinsfile\nmy-app-1.1-20200813.190212-1.jar\nmy-app-1.1.jar\npom.xml\nREADME.md\nsrc\n</code></pre>"},{"location":"chap9/chap9_artifact2/#4","title":"4\u3001\u5236\u54c1\u664b\u7ea7","text":"<ul> <li>\u5b89\u88c5<code>Maven Artifact ChoiceList Provider (Nexus)</code>\u63d2\u4ef6 </li> <li>\u7528\u6237\u9009\u62e9\u8981\u664b\u7ea7\u7684\u5236\u54c1 </li> <li>\u89e3\u6790\u751f\u6210\u5750\u6807 </li> <li>\u4e0a\u4f20\u5230\u53d1\u5e03\u4ed3\u5e93 </li> </ul>"},{"location":"chap9/chap9_artifact2/#4-1-nexusgroovy","title":"4-1 <code>nexus.groovy</code>","text":"<pre><code>pakcage org.devops\n\n\n//\u83b7\u53d6POM\u4e2d\u7684\u5750\u6807\ndef GetGav(){\n   //\u4e0a\u4f20\u5236\u54c1\n    def jarName = sh returnStdout: true, script: \"cd target;ls *.jar\"\n    env.jarName = jarName - \"\\n\"\n\n    def pom = readMavenPom file: 'pom.xml'\n    env.pomVersion = \"${pom.version}\"\n    env.pomArtifact = \"${pom.artifactId}\"\n    env.pomPackaging = \"${pom.packaging}\"\n    env.pomGroupId = \"${pom.groupId}\"\n\n    println(\"${pomGroupId}-${pomArtifact}-${pomVersion}-${pomPackaging}\")\n\n    return [\"${pomGroupId}\",\"${pomArtifact}\",\"${pomVersion}\",\"${pomPackaging}\"]\n}\n\n\n//Nexus plugin deploy\ndef NexusUpload(){\n    //use nexus plugin\n    nexusArtifactUploader artifacts: [[artifactId: \"${pomArtifact}\", \n                                        classifier: '', \n                                        file: \"${filePath}\", \n                                        type: \"${pomPackaging}\"]], \n                            credentialsId: 'nexus', \n                            groupId: \"${pomGroupId}\", \n                            nexusUrl: '192.168.33.1:32000', \n                            nexusVersion: 'nexus3', \n                            protocol: 'http', \n                            repository: \"${repoName}\", \n                            version: \"${pomVersion}\"\n}\n\n//mvn deploy\ndef MavenUpload(){          \n    def mvnHome = tool \"m2\"\n    sh  \"\"\" \n        cd target/\n        ${mvnHome}/bin/mvn deploy:deploy-file -Dmaven.test.skip=true  \\\n                                -Dfile=${jarName} -DgroupId=${pomGroupId} \\\n                                -DartifactId=${pomArtifact} -Dversion=${pomVersion}  \\\n                                -Dpackaging=${pomPackaging} -DrepositoryId=maven-hosted \\\n                                -Durl=http://192.168.33.1:32000/repository/maven-hosted \n        \"\"\"\n}\n\n//\u5236\u54c1\u664b\u7ea7\ndef ArtifactUpdate(updateType,artifactUrl){\n\n    //\u664b\u7ea7\u7b56\u7565\n    if (\"${updateType}\" == \"snapshot -&gt; release\"){\n        println(\"snapshot -&gt; release\")\n\n        //\u4e0b\u8f7d\u539f\u59cb\u5236\u54c1\n        sh \"  rm -fr updates &amp;&amp; mkdir updates &amp;&amp; cd updates &amp;&amp; wget ${artifactUrl} &amp;&amp; ls -l \"\n\n        //\u83b7\u53d6artifactID \n\n        artifactUrl = artifactUrl -  \"http://192.168.33.1:32000/repository/maven-hosted/\"\n        artifactUrl = artifactUrl.split(\"/\").toList()\n\n        println(artifactUrl.size())\n        env.jarName = artifactUrl[-1] \n        env.pomVersion = artifactUrl[-2].replace(\"SNAPSHOT\",\"RELEASE\")\n        env.pomArtifact = artifactUrl[-3]\n        pomPackaging = artifactUrl[-1]\n        pomPackaging = pomPackaging.split(\"\\\\.\").toList()[-1]\n        env.pomPackaging = pomPackaging[-1]\n        env.pomGroupId = artifactUrl[0..-4].join(\".\")\n        println(\"${pomGroupId}##${pomArtifact}##${pomVersion}##${pomPackaging}\")\n        env.newJarName = \"${pomArtifact}-${pomVersion}.${pomPackaging}\"\n\n        //\u66f4\u6539\u540d\u79f0\n        sh \" cd updates &amp;&amp; mv ${jarName} ${newJarName} \"\n\n        //\u4e0a\u4f20\u5236\u54c1\n        env.repoName = \"maven-releases\"\n        env.filePath = \"updates/${newJarName}\"\n        NexusUpload()\n    }\n}\n\n\ndef main(uploadType){\n    GetGav()\n    if (\"${uploadType}\" == \"maven\"){\n        MavenUpload()\n    } else if (\"${uploadType}\" == \"nexus\") {\n        env.repoName = \"maven-hosted\"\n        env.filePath = \"target/${jarName}\"\n        NexusUpload()\n    }\n}\n</code></pre> <ul> <li><code>def ArtifactUpdate(updateType,artifactUrl){}</code></li> </ul>"},{"location":"chap9/chap9_artifact2/#4-2-pipeline-script","title":"4-2 <code>Pipeline Script</code>","text":"<pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef nexus = new org.devops.nexus()\n\nString artifactUrl = \"${env.artifactUrl}\"\n\npipeline{\n    agent { node { label \"hostmachine\" }}\n    parameters {  \n        choice(name: 'updateType', choices: 'snapshot -&gt; release\\n', description: 'update type')\n    }\n\n    stages{\n        stage(\"UpdateArtifact\"){\n            steps{\n                script{\n                    println(artifactUrl)\n\n                    updateType = \"${env.updateType}\"\n                    println(updateType)\n\n                    nexus.ArtifactUpdate(updateType,artifactUrl)\n                }\n            }\n        }\n    }\n}\n</code></pre> <p>Console output</p> <pre><code>[Pipeline] echo\nhttp://192.168.33.1:32000/repository/maven-hosted/com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.192037-2.jar\n[Pipeline] echo\nsnapshot -&gt; release\n[Pipeline] echo\nsnapshot -&gt; release\n[Pipeline] sh\n+ rm -fr updates\n+ mkdir updates\n+ cd updates\n+ wget http://192.168.33.1:32000/repository/maven-hosted/com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.192037-2.jar\n--2020-08-13 20:30:46--  http://192.168.33.1:32000/repository/maven-hosted/com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.192037-2.jar\nConnecting to 192.168.33.1:32000... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 2626 (2.6K) [application/java-archive]\nSaving to: \u2018my-app-1.1-20200813.192037-2.jar\u2019\n\n     0K ..                                                    100%  277M=0s\n\n2020-08-13 20:30:46 (277 MB/s) - \u2018my-app-1.1-20200813.192037-2.jar\u2019 saved [2626/2626]\n\n+ ls -l\ntotal 4\n-rw-rw-r--. 1 vagrant vagrant 2626 Aug 14  2020 my-app-1.1-20200813.192037-2.jar\n[Pipeline] echo\n11\n[Pipeline] echo\nhttp:..192.168.33.1:32000.repository.maven-hosted.com.mycompany.app##my-app##1.1-RELEASE##jar\n[Pipeline] sh\n+ cd updates\n+ mv my-app-1.1-20200813.192037-2.jar my-app-1.1-RELEASE.jar\n[Pipeline] nexusArtifactUploader\n</code></pre> <p></p>"},{"location":"chap9/chap9_artifact2/#5-nexus-rest-api","title":"5\u3001\u5c01\u88c5 Nexus REST API","text":""},{"location":"chap9/chap9_artifact2/#5-1-nexus-rest-api","title":"5-1 Nexus REST API","text":"<pre><code>service/reset/v1/components/${id}\n</code></pre> <p>Example</p> <pre><code>http://192.168.33.1:32000/service/rest/v1/components?repository=maven-hosted\n</code></pre> <pre><code>{\n  \"items\" : [ {\n    \"id\" : \"bWF2ZW4taG9zdGVkOmM3NzAxNjljMGIyZTNlZDg1MGQ0M2ZlOGUzZTE0ZGY1\",\n    \"repository\" : \"maven-hosted\",\n    \"format\" : \"maven2\",\n    \"group\" : \"com.mycompany.app\",\n    \"name\" : \"my-app\",\n    \"version\" : \"1.1-20200813.190212-1\",\n    \"assets\" : [ {\n      \"downloadUrl\" : \"http://192.168.33.1:32000/repository/maven-hosted/com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.190212-1.jar\",\n      \"path\" : \"com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.190212-1.jar\",\n      \"id\" : \"bWF2ZW4taG9zdGVkOjM2ZTNkZWM4ZGU1MjhjOWI3MDkyYTJlYTJlYjAxYTlm\",\n      \"repository\" : \"maven-hosted\",\n      \"format\" : \"maven2\",\n      \"checksum\" : {\n        \"sha1\" : \"98b32769384f208997d0e6ce52157864e5af010d\",\n        \"md5\" : \"933ce8391a4224771a77f19dd21bd66f\"\n      }\n    }, {\n      \"downloadUrl\" : \"http://192.168.33.1:32000/repository/maven-hosted/com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.190212-1.jar.md5\",\n      \"path\" : \"com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.190212-1.jar.md5\",\n      \"id\" : \"bWF2ZW4taG9zdGVkOjM2ZTNkZWM4ZGU1MjhjOWIxOWY2NWRjZjU4MTdlOWEx\",\n      \"repository\" : \"maven-hosted\",\n      \"format\" : \"maven2\",\n      \"checksum\" : {\n        \"sha1\" : \"f949e7f01cda8178bb6c84c57ff9a21534217f36\",\n        \"md5\" : \"7c1adfe9d1980b88a09e5f384cf2952c\"\n      }\n    }, {\n      \"downloadUrl\" : \"http://192.168.33.1:32000/repository/maven-hosted/com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.190212-1.jar.sha1\",\n      \"path\" : \"com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.190212-1.jar.sha1\",\n      \"id\" : \"bWF2ZW4taG9zdGVkOjM2ZTNkZWM4ZGU1MjhjOWIwZGExY2M2OWIyZDhkNjZl\",\n      \"repository\" : \"maven-hosted\",\n      \"format\" : \"maven2\",\n      \"checksum\" : {\n        \"sha1\" : \"1f6f7277f9f5c966771756cf00db8b9cbeb1623b\",\n        \"md5\" : \"0d529b4a86c0f6066a015b9e5e484dcc\"\n      }\n    }, {\n      \"downloadUrl\" : \"http://192.168.33.1:32000/repository/maven-hosted/com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.190212-1.pom\",\n      \"path\" : \"com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.190212-1.pom\",\n      \"id\" : \"bWF2ZW4taG9zdGVkOjM2ZTNkZWM4ZGU1MjhjOWI3Y2M0ZTc0NGMxM2VmMDI5\",\n      \"repository\" : \"maven-hosted\",\n      \"format\" : \"maven2\",\n      \"checksum\" : {\n        \"sha1\" : \"511692613d6474109a227c282b79adb6bb6a282c\",\n        \"md5\" : \"1d2fd7c19cbd1bd2e4481b3b9b6d5a6c\"\n      }\n    }, {\n...\n</code></pre> <p></p> <p></p>"},{"location":"chap9/chap9_artifact2/#4-1-nexusapigroovy","title":"4-1 <code>nexusapi.groovy</code>","text":"<pre><code>package org.devops\n\n\n//\u5c01\u88c5HTTP\ndef HttpReq(reqType,reqUrl,reqBody){\n    def sonarServer = \"http://192.168.33.1:32000/service/rest\"\n\n    result = httpRequest authentication: 'nexus',\n            httpMode: reqType, \n            contentType: \"APPLICATION_JSON\",\n            consoleLogResponseBody: true,\n            ignoreSslErrors: true, \n            requestBody: reqBody,\n            url: \"${sonarServer}/${reqUrl}\",\n            quiet: true\n\n    return result\n}\n\n\n//\u83b7\u53d6\u4ed3\u5e93\u4e2d\u6240\u6709\u7ec4\u4ef6\n\ndef GetRepoComponents(repoName){\n    apiUrl = \"/v1/components?repository=${repoName}\"\n    response = HttpReq(\"GET\",apiUrl,'')\n\n    response = readJSON text: \"\"\"${response.content}\"\"\"\n    println(response[\"items\"].size())\n\n    return response[\"items\"]\n}\n\n\n//\u83b7\u53d6\u5355\u4ef6\u7ec4\u4ef6\n\ndef GetComponentsId(repoName,groupId,artifactId,version){\n    println(\"\u83b7\u53d6\u5355\u4ef6\u7ec4\u4ef6ID\")\n    result = GetRepoComponents(repoName) \n\n    for (component in result){\n\n        if (component[\"group\"] == groupId &amp;&amp; component[\"name\"] == artifactId &amp;&amp; component[\"version\"] == version  ){\n\n            componentId = component[\"id\"]\n\n            return componentId\n        }\n    }\n\n    println(componentId)\n}\n\n//\u83b7\u53d6\u7ec4\u4ef6\u4fe1\u606f\ndef GetSingleComponents(repoName,groupId,artifactId,version){\n    println(\"\u83b7\u53d6\u5355\u4ef6\u7ec4\u4ef6\u4fe1\u606f\")\n    componentId = GetComponentsId(repoName,groupId,artifactId,version)\n    apiUrl = \"/v1/components/${componentId}\"\n    response = HttpReq(\"GET\",apiUrl,'')\n\n    response = readJSON text: \"\"\"${response.content}\"\"\"\n    println(response[\"assets\"][\"downloadUrl\"])\n}\n</code></pre> <ul> <li>\u5c01\u88c5HTTP</li> <li>\u83b7\u53d6\u4ed3\u5e93\u4e2d\u6240\u6709\u7ec4\u4ef6</li> <li>\u83b7\u53d6\u5355\u4ef6\u7ec4\u4ef6</li> <li>\u83b7\u53d6\u7ec4\u4ef6\u4fe1\u606f</li> </ul>"},{"location":"chap9/chap9_artifact2/#4-2","title":"4-2  \u83b7\u53d6\u4ed3\u5e93\u4e2d\u6240\u6709\u7ec4\u4ef6","text":"<pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef nexus = new org.devops.nexus()\ndef nexusapi = new org.devops.nexusapi()\n\nString artifactUrl = \"${env.artifactUrl}\"\n\npipeline{\n    agent { node { label \"hostmachine\" }}\n\n    stages{\n        stage(\"UpdateArtifact\"){\n            steps{\n                script{\n                    nexusapi.GetRepoComponents(\"maven-hosted\")\n                }\n            }\n        }\n    }\n}\n</code></pre> <p>Console Output</p> <pre><code>[Pipeline] stage\n[Pipeline] { (GetRepoComponents)\n[Pipeline] script\n[Pipeline] {\n[Pipeline] httpRequest\n[Pipeline] readJSON\n[Pipeline] echo\n5\n[Pipeline] }\n[Pipeline] // script\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] }\n[Pipeline] // node\n[Pipeline] End of Pipeline\nFinished: SUCCESS\n</code></pre>"},{"location":"chap9/chap9_artifact2/#4-3","title":"4-3 \u7ec4\u4ef6\u4fe1\u606f","text":"<pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef nexus = new org.devops.nexus()\ndef nexusapi = new org.devops.nexusapi()\n\n\npipeline{\n    agent { node { label \"hostmachine\" }}\n    parameters {  \n         string(name: 'pkgVersion', defaultValue: \"1.1-20200813.190212-1\", description: '') \n    }\n\n    stages{\n        stage(\"GetSingleComponents\"){\n            steps{\n                script{\n                    pkgVersion = \"${env.pkgVersion}\"\n                    nexusapi.GetRepoComponents(\"maven-hosted\")\n                    nexusapi.GetSingleComponents(\"maven-hosted\",\"com.mycompany.app\",\"my-app\",pkgVersion)\n\n                }\n            }\n        }\n    }\n}\n</code></pre> <p>Console Output</p> <pre><code>[Pipeline] {\n[Pipeline] httpRequest\n[Pipeline] readJSON\n[Pipeline] echo\n5\n[Pipeline] echo\n\u83b7\u53d6\u5355\u4ef6\u7ec4\u4ef6\u4fe1\u606f\n[Pipeline] echo\n\u83b7\u53d6\u5355\u4ef6\u7ec4\u4ef6ID\n[Pipeline] httpRequest\n[Pipeline] readJSON\n[Pipeline] echo\n5\n[Pipeline] httpRequest\n[Pipeline] readJSON\n[Pipeline] echo\n[http://192.168.33.1:32000/repository/maven-hosted/com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.190212-1.jar, http://192.168.33.1:32000/repository/maven-hosted/com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.190212-1.jar.md5, http://192.168.33.1:32000/repository/maven-hosted/com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.190212-1.jar.sha1, http://192.168.33.1:32000/repository/maven-hosted/com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.190212-1.pom, http://192.168.33.1:32000/repository/maven-hosted/com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.190212-1.pom.md5, http://192.168.33.1:32000/repository/maven-hosted/com/mycompany/app/my-app/1.1-SNAPSHOT/my-app-1.1-20200813.190212-1.pom.sha1]\n[Pipeline] }\n[Pipeline] // script\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] }\n[Pipeline] // node\n[Pipeline] End of Pipeline\nFinished: SUCCESS\n</code></pre>"},{"location":"chap9/chap9_artifact3/","title":"\u7b2c\u56db\u8282 Jenkins &amp; Jfrog Artifactory","text":""},{"location":"chap9/chap9_artifact3/#1-k8s-jfrog-artifactory-factory","title":"1\u3001\u642d\u5efa K8S Jfrog Artifactory Factory","text":"<pre><code>$ kubectl create ns devops\nnamespace/devops created\n</code></pre> <pre><code>---\nkind: Deployment\napiVersion: apps/v1\nmetadata:\n  labels:\n    k8s-app: artifactory\n  name: artifactory\n  namespace: devops\nspec:\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      k8s-app: artifactory\n  template:\n    metadata:\n      labels:\n        k8s-app: artifactory\n      namespace: devops\n      name: artifactory\n    spec:\n      containers:\n        - name: artifactory\n          image: docker.bintray.io/jfrog/artifactory-oss:latest\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 8082\n              name: web\n              protocol: TCP\n          resources:\n            limits:\n              cpu: 1000m\n              memory: 2Gi\n            requests:\n              cpu: 1000m\n              memory: 2Gi\n          volumeMounts:\n            - name: arthome\n              mountPath: /var/opt/jfrog/artifactory\n      volumes:\n        - name: arthome\n          emptyDir: {}\n          # hostPath:\n          #   path: /data/devops/artifactory\n          #   type: Directory\n---\napiVersion: v1\nkind: Service\nmetadata:\n name: artifactory\n namespace: devops\n labels:\n   k8s-app: artifactory\nspec:\n selector:\n   k8s-app: artifactory\n type: NodePort\n ports:\n - name: web\n   port: 8082\n   targetPort: 8082\n   nodePort: 30082\n</code></pre> <pre><code>kubectl apply -f artifactory.yml \n</code></pre> <p>Login</p> <p>Artifactory comes with a pre-configured default \"admin\" account. Username: admin, Password: password.</p> <ul> <li>admin</li> <li>admin123</li> </ul> <p></p>"},{"location":"chap9/chap9_artifact3/#2-artifactory","title":"2\u3001\u4f7f\u7528 Artifactory \u6784\u5efa\u6536\u96c6\u6570\u636e","text":"<p>\u5b89\u88c5<code>Artifactory</code>\u63d2\u4ef6\uff1a https://plugins.jenkins.io/artifactory/</p>"},{"location":"chap9/chap9_artifact3/#2-1-jenkinsartifactory","title":"2-1 Jenkins\u5168\u5c40\u914d\u7f6e<code>artifactory</code>","text":"<ul> <li>Server ID:  artifactory</li> <li>URL: http://192.168.33.1:30082/artifactory</li> <li>Username  / password</li> </ul>"},{"location":"chap9/chap9_artifact3/#2-2-artifactorygroovy","title":"2-2 <code>artifactory.groovy</code>","text":"<pre><code>package org.devops\n\n\n//Maven\u6253\u5305\u6784\u5efa\ndef MavenBuild(buildShell){\n    def server = Artifactory.newServer url: \"http://192.168.33.1:30082/artifactory\"\n    def rtMaven = Artifactory.newMavenBuild()\n    def buildInfo\n    server.connection.timeout = 300\n    server.credentialsId = 'jfrog' \n    //maven\u6253\u5305\n    rtMaven.tool = 'm2' \n    buildInfo = Artifactory.newBuildInfo()\n\n    String newBuildShell = \"${buildShell}\".toString()\n    println(newBuildShell)\n    rtMaven.run pom: 'pom.xml', goals: newBuildShell, buildInfo: buildInfo\n    //\u4e0a\u4f20build\u4fe1\u606f\n    server.publishBuildInfo buildInfo\n}\n\n\n\n//\u4e0a\u4f20\u5236\u54c1\ndef PushArtifact(){\n\n\n    //\u91cd\u547d\u540d\u5236\u54c1\n    def jarName = sh returnStdout: true, script: \"cd target;ls *.jar\"\n    jarName = jarName - \"\\n\"\n    def pom = readMavenPom file: 'pom.xml'\n    env.pomVersion = \"${pom.version}\"\n    env.serviceName = \"${JOB_NAME}\".split(\"_\")[0]\n    env.buildTag = \"${BUILD_ID}\"\n    def newJarName = \"${serviceName}-${pomVersion}-${buildTag}.jar\"\n    println(\"${jarName}  -------&gt;&gt;&gt; ${newJarName}\")\n    sh \" mv target/${jarName}  target/${newJarName}\"\n\n    //\u4e0a\u4f20\u5236\u54c1\n    env.businessName = \"${env.JOB_NAME}\".split(\"-\")[0]\n    env.repoName = \"${businessName}-${JOB_NAME.split(\"_\")[-1].toLowerCase()}\"\n    println(\"\u672c\u6b21\u5236\u54c1\u5c06\u8981\u4e0a\u4f20\u5230${repoName}\u4ed3\u5e93\u4e2d!\")   \n    env.uploadDir = \"${repoName}/${businessName}/${serviceName}/${pomVersion}\"\n\n    println('\u4e0a\u4f20\u5236\u54c1')\n    rtUpload (\n        serverId: \"artifactory\",\n        spec:\n            \"\"\"{\n            \"files\": [\n                {\n                \"pattern\": \"target/${newJarName}\",\n                \"target\": \"${uploadDir}/\"\n                }\n            ]\n            }\"\"\"\n    )\n}\n\n\ndef main(buildType,buildShell){\n    if(buildType == \"mvn\"){\n        MavenBuild(buildShell)\n    }\n}\n</code></pre>"},{"location":"chap9/chap9_artifact3/#2-3-artifactorymaven","title":"2-3 \u4f7f\u7528<code>artifactory</code>\u548c<code>maven</code>\u6253\u5305\u6784\u5efa","text":"<pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\ndef sonar = new org.devops.sonarqube()\ndef artifactory = new org.devops.artifactory()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    artifactory.main(buildType,buildShell)\n                   // artifactory.PushArtifact()\n                } \n            }\n        }\n    }\n }\n</code></pre> <p>Console Output</p> <pre><code>[Pipeline] artifactoryMavenBuild\nJenkins Artifactory Plugin version: 3.7.3\nArtifactory integration is enabled\n[chap9_jfrog1] $ /usr/lib/jvm/jre-openjdk/bin/java -classpath /opt/maven/boot/* -Dmaven.home=/opt/maven -Dmaven.conf=/opt/maven/conf -DbuildInfoConfig.propertiesFile=/home/vagrant/workspace/workspace/chap9_jfrog1@tmp/artifactory/buildInfo507882051108967646.properties -Dm3plugin.lib=/home/vagrant/workspace/workspace/chap9_jfrog1@tmp/artifactory/cache/artifactory-plugin/3.7.3 -Dclassworlds.conf=/home/vagrant/workspace/workspace/chap9_jfrog1@tmp/artifactory/classworlds7067099799344911655conf -Dmaven.multiModuleProjectDirectory=/home/vagrant/workspace/workspace/chap9_jfrog1 org.codehaus.plexus.classworlds.launcher.Launcher -f pom.xml clean package -DskipTest\n[main] INFO org.apache.maven.cli.event.ExecutionEventLogger - Scanning for projects...\n[main] INFO org.jfrog.build.extractor.maven.BuildInfoRecorder - Initializing Artifactory Build-Info Recording\n...\nRecorder: publish build info set to false, build info will not be published...\n[main] INFO org.apache.maven.cli.event.ExecutionEventLogger - ------------------------------------------------------------------------\n[main] INFO org.apache.maven.cli.event.ExecutionEventLogger - BUILD SUCCESS\n[main] INFO org.apache.maven.cli.event.ExecutionEventLogger - ------------------------------------------------------------------------\n[main] INFO org.apache.maven.cli.event.ExecutionEventLogger - Total time:  8.003 s\n[main] INFO org.apache.maven.cli.event.ExecutionEventLogger - Finished at: 2020-08-14T01:34:50Z\n[main] INFO org.apache.maven.cli.event.ExecutionEventLogger - ------------------------------------------------------------------------\n[Pipeline] publishBuildInfo\nDeploying build info to: http://192.168.33.1:30082/artifactory/api/build\nDeploying build descriptor to: http://192.168.33.1:30082/artifactory/api/build\nBuild successfully deployed. Browse it in Artifactory under http://192.168.33.1:30082/artifactory/webapp/builds/chap9_jfrog1/4\n</code></pre> <p></p> <p></p>"},{"location":"chap9/chap9_artifact3/#3-rtupload","title":"3\u3001\u4f7f\u7528 rtUpload \u4e0a\u4f20\u5236\u54c1","text":""},{"location":"chap9/chap9_artifact3/#3-1","title":"3-1 \u547d\u540d\u89c4\u8303","text":"<p>\u4ed3\u5e93\u547d\u540d\u89c4\u8303</p> <ul> <li>\u4e1a\u52a1\uff0f\u9879\u76ee\u4e00\u73af\u5883\u7c7b\u578b\u4f8b\u5982\uff1a<code>demo-dev</code> </li> <li>\u5236\u54c1 </li> </ul> <p>\u547d\u540d\u89c4\u8303</p> <ul> <li>\u5e94\u7528\u540d\u79f0\u4e00\u7248\u672c\u53f7\u4e00\u6784\u5efa<code>ID.type</code> </li> <li>\u4f8b\u5982\uff1a<code>demo-myapp-service-1. jar</code> </li> </ul> <p>\u5236\u54c1 </p> <ul> <li>\u76ee\u5f55\u89c4\u8303 \u4e1a\u52a1\uff0f\u9879\u76ee <ul> <li>\u5e94\u7528\u540d\u79f0 <ul> <li>\u7248\u672c\u53f7 <ul> <li>\u5236\u54c1 </li> </ul> </li> </ul> </li> </ul> </li> </ul> <p><code>env.serviceName = \"${JOB_NAME}\".split(\"_\")[0]</code></p> <p>Pipeline Name: <code>demo-myapp1-service_DEV</code></p> <ul> <li>repoName:  <code>demo-dev</code></li> <li>businessName\uff1a demo</li> <li>serviceName: demo</li> <li>pomVersion: <code>1.1-SNAPSHOT</code></li> <li>buildTag: <code>1</code></li> </ul> <p></p>"},{"location":"chap9/chap9_artifact3/#3-2-artifactorygroovy","title":"3-2 <code>artifactory.groovy</code>","text":"<pre><code>//\u4e0a\u4f20\u5236\u54c1\ndef PushArtifact(){\n\n\n    //\u91cd\u547d\u540d\u5236\u54c1\n    def jarName = sh returnStdout: true, script: \"cd target;ls *.jar\"\n    jarName = jarName - \"\\n\"\n    def pom = readMavenPom file: 'pom.xml'\n    env.pomVersion = \"${pom.version}\"\n    env.serviceName = \"${JOB_NAME}\".split(\"_\")[0]\n    env.buildTag = \"${BUILD_ID}\"\n    def newJarName = \"${serviceName}-${pomVersion}-${buildTag}.jar\"\n    println(\"${jarName}  -------&gt;&gt;&gt; ${newJarName}\")\n    sh \" mv target/${jarName}  target/${newJarName}\"\n\n    //\u4e0a\u4f20\u5236\u54c1\n    env.businessName = \"${env.JOB_NAME}\".split(\"-\")[0]\n    env.repoName = \"${businessName}-${JOB_NAME.split(\"_\")[-1].toLowerCase()}\"\n    println(\"\u672c\u6b21\u5236\u54c1\u5c06\u8981\u4e0a\u4f20\u5230${repoName}\u4ed3\u5e93\u4e2d!\")   \n    env.uploadDir = \"${repoName}/${businessName}/${serviceName}/${pomVersion}\"\n\n    println('\u4e0a\u4f20\u5236\u54c1')\n    rtUpload (\n        serverId: \"artifactory\",\n        spec:\n            \"\"\"{\n            \"files\": [\n                {\n                \"pattern\": \"target/${newJarName}\",\n                \"target\": \"${uploadDir}/\"\n                }\n            ]\n            }\"\"\"\n    )\n}\n</code></pre>"},{"location":"chap9/chap9_artifact3/#3-3-pipeline-script-demo-myapp1-service_dev","title":"3-3 <code>Pipeline Script: demo-myapp1-service_DEV</code>","text":"<pre><code>#!groovy\n@Library('jenkinslib@master') _\n\ndef build = new org.devops.buildtools()\ndef sonar = new org.devops.sonarqube()\ndef artifactory = new org.devops.artifactory()\n\npipeline {\n    agent { node { label \"hostmachine\" }}\n    parameters {\n        string(name: 'srcUrl', defaultValue: 'http://192.168.33.1:30088/root/demo-maven-service.git', description: '') \n        choice(name: 'branchName', choices: 'master\\nstage\\ndev', description: 'Please chose your branch')\n        choice(name: 'buildType', choices: 'mvn', description: 'build tool')\n        choice(name: 'buildShell', choices: 'clean package -DskipTest\\n--version', description: 'build tool')\n    }\n    stages{\n        stage('Checkout') {\n            steps {\n                script {\n                    checkout([$class: 'GitSCM', branches: [[name: \"${branchName}\"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'gitlab-admin-user', url: \"${srcUrl}\"]]])\n                } \n            }\n        }\n\n        stage('Build') {\n            steps {\n                script {\n                    artifactory.main(buildType,buildShell)\n                    artifactory.PushArtifact()\n                } \n            }\n        }\n    }\n }\n</code></pre> <ul> <li><code>demo-myapp1-service_DEV</code></li> </ul> <p>Console Output</p> <pre><code>...\n+ cd target\n+ ls my-app-1.1-SNAPSHOT.jar\n[Pipeline] readMavenPom\n[Pipeline] echo\nmy-app-1.1-SNAPSHOT.jar  -------&gt;&gt;&gt; demo-myapp1-service-1.1-SNAPSHOT-2.jar\n[Pipeline] sh\n+ mv target/my-app-1.1-SNAPSHOT.jar target/demo-myapp1-service-1.1-SNAPSHOT-2.jar\n[Pipeline] echo\n\u672c\u6b21\u5236\u54c1\u5c06\u8981\u4e0a\u4f20\u5230demo-dev\u4ed3\u5e93\u4e2d!\n[Pipeline] echo\n\u4e0a\u4f20\u5236\u54c1\n[Pipeline] rtUpload\n[Pipeline] }\n[Pipeline] // script\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] }\n[Pipeline] // node\n[Pipeline] End of Pipeline\n...\n</code></pre> <p></p>"}]}